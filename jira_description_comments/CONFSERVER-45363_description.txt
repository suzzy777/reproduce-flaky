h2. Summary
The Workbox method {{setPingCompleted}} is susceptible to creating deadlock scenarios, which may lead to an instance running into OOME.

# Two threads run {{setPingCompleted}} at the exact same time
# One thread completes, while the other remains stuck with a database lock.
# The thread cannot be finalized, and other objects using the database will be unable to be finalized as well
# Eventually the instance will run out of database connections or generate an OOME

h2. Evidence in thread dumps
Example thread:
{code:borderStyle=solid}
"http-nio-8000-exec-15" #55708 daemon prio=5 tid=0x00007fca6801c800 nid=0x48e3 runnable [0x00007fc994e5c000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.DataInputStream.readFully(DataInputStream.java:195)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at net.sourceforge.jtds.jdbc.SharedSocket.readPacket(SharedSocket.java:841)
	at net.sourceforge.jtds.jdbc.SharedSocket.getNetPacket(SharedSocket.java:722)
	- locked <0x00000004056a3120> (a java.util.ArrayList)
	at net.sourceforge.jtds.jdbc.ResponseStream.getPacket(ResponseStream.java:466)
	at net.sourceforge.jtds.jdbc.ResponseStream.read(ResponseStream.java:103)
	at net.sourceforge.jtds.jdbc.ResponseStream.peek(ResponseStream.java:88)
	at net.sourceforge.jtds.jdbc.TdsCore.wait(TdsCore.java:3928)
	at net.sourceforge.jtds.jdbc.TdsCore.executeSQL(TdsCore.java:1045)
	- locked <0x00000004056a3138> (a net.sourceforge.jtds.jdbc.TdsCore)
	at net.sourceforge.jtds.jdbc.JtdsStatement.executeSQL(JtdsStatement.java:537)
	at net.sourceforge.jtds.jdbc.JtdsPreparedStatement.executeUpdate(JtdsPreparedStatement.java:505)
	- locked <0x00000004056a3198> (a net.sourceforge.jtds.jdbc.ConnectionJDBC3)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:97)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:97)
	at net.java.ao.DatabaseProvider.executeInsertReturningKey(DatabaseProvider.java:1955)
	at net.java.ao.db.SQLServerDatabaseProvider.insertReturningKey(SQLServerDatabaseProvider.java:358)
	- locked <0x000000035422b560> (a net.java.ao.db.SQLServerDatabaseProvider)
	at net.java.ao.EntityManager.create(EntityManager.java:366)
	at com.atlassian.activeobjects.internal.EntityManagedActiveObjects.create(EntityManagedActiveObjects.java:86)
	at com.atlassian.activeobjects.osgi.TenantAwareActiveObjects.create(TenantAwareActiveObjects.java:261)
	...
	at com.atlassian.mywork.host.dao.ao.AOUserApplicationLinkDao.setPingCompleted(AOUserApplicationLinkDao.java:29)
{code}

Key line to look for:
{code:borderStyle=solid}
	at com.atlassian.mywork.host.dao.ao.AOUserApplicationLinkDao.setPingCompleted(AOUserApplicationLinkDao.java:29)
{code}

h2. How to reproduce
# Install Confluence with MSSQL database
# Link Confluence and Jira (Confluence should manage its users)
# Create user "user1" in both systems
# Create Jira ticket and assign it to user1
# Create a page in Confluence and insert link to the Jira ticket
# Login to Confluence as user1 and go to the page with the Jira link
# Authorise access to Jira to view Jira ticket's info
# Insert a lot of records (millions) to AO_USER table and limit CPU and IO resources for database, so it should become slow
# Open Confluence in two browsers (logged as user1) and click to the "notifications" icon in both browsers (at the same time)
One thread will be waiting for DB answer (DB is trying to insert record to AO_USER), another thread will be trying to enter to synchronised block -> deadlock.

h2. Workaround
Disable the Workbox plugins:
# !https://confluence.atlassian.com/download/attachments/590259974/Cog.png! > *Add-ons*
# Change the dropdown from *User-installed* to *System*
# Locate and *Disable* these three plugins:
#* Workbox - Common Plugin
#* Workbox - Confluence Provider Plugin
#* Workbox - Host Plugin

h2. Resolution
SQLServerDatabaseProvider.insertReturningKey in AO library mustn't be synchronized because it produce deadlocks in MSSQL databases