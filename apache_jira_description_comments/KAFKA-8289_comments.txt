To what extend is this ticket different to KAFKA-7895? Can you elaborate? Could you also try out the fix for KAFKA-7895 to verify if it solves your problem?

Btw: 2.2.1 release should be release soon. Cf. [https://cwiki.apache.org/confluence/display/KAFKA/Release+Plan+2.2.1]

[~mjsax], Thank you for replying to me. In KAFKA-7895  John was using a TimeWindows, but the window I used was SessionWindow, I am not sure if it is because of this. I have tried the 2.2.1-SNAPSHOT and the trunk, no effect all. As log shows my SessionWindow's endMs is increasing, it should be, but I don't think it should be printed out, Is my understanding correct? A and B windows’s info seems to be printed at same time. I will try to see the source code.

[~vvcephei] Assigning this to you for visibility.

Hi [~xiaoxiaoliner],

Thanks for the bug report; I'm sorry to hear this is causing you trouble.

For the record, we do expect Suppress to work just as well for SessionWindows as for TimeWindows. Your understanding is correct, the suppression should be waiting until the session window is closed before emitting the results, which means you should see a unique start time per key.

I looked into the code, and suppression does appear to be misconfigured for session window aggregations. Currently, it is waiting until time `window.end + grace` before emitting, but session windows are special, since the window end is provisional... if more data arrives before the "inactivity gap" passes, the window end moves to the latest record's timestamp. Thus, suppression should be waiting until `window.end + inactivityGap + grace` before emitting, to be sure that it really does wait until the window is closed (i.e., until it can never emit more updates).

I looked into our tests, and we didn't detect this error because the session window tests unfortunately set the grace period equal to the inactivity gap. After setting the grace period to a smaller value, I was able to reproduce the reported case. I am preparing a PR to fix this bug. I've marked this ticket as a blocker for the next release, and also for the next 2.1 and 2.2 bugfix releases.

While debugging this issue, I noticed that the grace period calculation for session window aggregations is apparently off by one. Setting the grace period to 0ms results in all output from the aggregation being dropped. With the current code, if you want to implement a super-strict grace period, you need to use 1ms. Pending code review, I plan to include this fix in the same PR.

Within my theories above, you should be able to employ a workaround of using a grace period equal to (or greater than) the inactivity gap. This isn't precisely the same logic you encoded in your application above, and (in the presence of late-arriving data) you may observe that the "final results" stream differs from the "raw results" stream, but you *should* at least see unique results for your aggregations.

 

[~vvcephei] Thank you, thank you for your reply, according to your suggestion and my recording rate. I temporarily set my gap and grace to the same seconds. Imperfect but effective, got exactly one window final result.

vvcephei commented on pull request #6654: KAFKA-8289: Fix Session Expiration and Suppression
URL: https://github.com/apache/kafka/pull/6654
 
 
   Fix two problems in Streams:
   * Session windows expired prematurely (off-by-one error), since the window end is inclusive, unlike other windows
   * Suppress duration for sessions incorrectly waited only the grace period, but session windows aren't closed until `gracePeriod + sessionGap`
   
   Update the tests accordingly
   
   ### Committer Checklist (excluded from commit message)
   - [ ] Verify design and implementation 
   - [ ] Verify test coverage and CI build status
   - [ ] Verify documentation (including upgrade notes)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Ok, I've submitted a bugfix PR: https://github.com/apache/kafka/pull/6654

[~xiaoxiaoliner], if you have a chance, can you verify that that PR fixes the issue for you? Also, if you're available for a code review, I'd appreciate your feedback.

Thanks,
-John

guozhangwang commented on pull request #6654: KAFKA-8289: Fix Session Expiration and Suppression
URL: https://github.com/apache/kafka/pull/6654
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Removed Fix Version 2.2.1 as this issue is not blocking that release.

[~vahid], can you explain why this critical bug doesn't block the release?

[~vvcephei] Since, according to your earlier comment, there seems to be a workaround for the reported issue, I didn't think this was blocking the bug fix release, and thought it could be included in a follow-up release. In any case, it seems that the fix is merged to trunk. Is there a reason this ticket is not resolved yet?

Last I heard [~bbejeck] was working on merging to 2.2 and 2.1 . I think there was just some flaky test failure. 

Then, the ticket will be resolved.

The workaround was just to get the reporter unstuck. There is a larger correctness issue here, which affects any session aggregation, and for which there is no workaround.

I see the confusion. Thanks.

vvcephei commented on pull request #6670: KAFKA-8289: Fix Session Expiration and Suppression (#6654)
URL: https://github.com/apache/kafka/pull/6670
 
 
   Fix two problems in Streams:
   
   * Session windows expired prematurely (off-by-one error), since the window end is inclusive, unlike other windows
   * Suppress duration for sessions incorrectly waited only the grace period, but session windows aren't closed until gracePeriod + sessionGap
   
   Update the tests accordingly
   
   Reviewers: A. Sophie Blee-Goldman <sophie@confluent.io>, Boyang Chen <boyang@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>
   
   *More detailed description of your change,
   if necessary. The PR title and PR message become
   the squashed commit message, so use a separate
   comment to ping reviewers.*
   
   *Summary of testing strategy (including rationale)
   for the feature or bug fix. Unit and/or integration
   tests are expected for any behaviour change and
   system tests should be considered for larger changes.*
   
   ### Committer Checklist (excluded from commit message)
   - [ ] Verify design and implementation 
   - [ ] Verify test coverage and CI build status
   - [ ] Verify documentation (including upgrade notes)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


vvcephei commented on pull request #6671: KAFKA-8289: Fix Session Expiration and Suppression (#6654)
URL: https://github.com/apache/kafka/pull/6671
 
 
   Fix two problems in Streams:
   
   * Session windows expired prematurely (off-by-one error), since the window end is inclusive, unlike other windows
   * Suppress duration for sessions incorrectly waited only the grace period, but session windows aren't closed until gracePeriod + sessionGap
   
   Update the tests accordingly
   
   Reviewers: A. Sophie Blee-Goldman <sophie@confluent.io>, Boyang Chen <boyang@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>
   
   *More detailed description of your change,
   if necessary. The PR title and PR message become
   the squashed commit message, so use a separate
   comment to ping reviewers.*
   
   *Summary of testing strategy (including rationale)
   for the feature or bug fix. Unit and/or integration
   tests are expected for any behaviour change and
   system tests should be considered for larger changes.*
   
   ### Committer Checklist (excluded from commit message)
   - [ ] Verify design and implementation 
   - [ ] Verify test coverage and CI build status
   - [ ] Verify documentation (including upgrade notes)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


bbejeck commented on pull request #6670: KAFKA-8289: Fix Session Expiration and Suppression (#6654)
URL: https://github.com/apache/kafka/pull/6670
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Hi [~vahid], the fix has been merged to 2.2 . Sorry for the delay.

Thanks,
-John

bbejeck commented on pull request #6671: KAFKA-8289: Fix Session Expiration and Suppression (#6654)
URL: https://github.com/apache/kafka/pull/6671
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Just confirming this has now been merged to 2.1, 2.2, and trunk (2.3), and the fix versions listed in the ticket are accurate.

2.2.1 release is in progress (see the dev mailing list for details) https://cwiki.apache.org/confluence/display/KAFKA/Release+Plan+2.2.1

FYI, 2.2.1 RC0 vote is in progress. (https://lists.apache.org/thread.html/3486798e63ae666fc336ce9009f07c7fdf66a96badc1fed63bcbd2ed@%3Cdev.kafka.apache.org%3E)

Please feel free to test it out, and reply on the vote thread if you have some trouble with it.

