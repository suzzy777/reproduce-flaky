I suspect {{dclocal_read_repair_chance}} (default=0.1) was triggered, that's why node3 was repaired before repair was actually run, so I updated {{dtest.create_cf}} to also set {{dclocal_read_repair_chance}} when {{read_repair}} is specified (read_repair should be fully disabled for this test).

This test was also breaking on Windows (CASSANDRA-12046), because it was upgrading from 2.1.9 which is unsupported on Windows, so I updated it to upgrade from 2.2.4 instead.

I also took the chance to move this test to {{upgrade_tests}} so it's run together with the upgrade suite.

I submitted a [multiplexer run|https://cassci.datastax.com/view/Parameterized/job/parameterized_dtest_multiplexer/154/] to verify the changes indeed fixed the test flakiness.

In order to check the changes did not break existing tests, I also submitted a [full dtest run on trunk|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-trunkcopy-dtest/17/].

Will set to PA when CI and multiplexer results look good.

[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-trunkcopy-dtest/19/] and [multiplexer|https://cassci.datastax.com/view/Parameterized/job/parameterized_dtest_multiplexer/157/] runs look good. 

Submitted [dtest PR|https://github.com/riptano/cassandra-dtest/pull/1073] for review. No C* code change was necessary.

dtest pr merged. Closing.

