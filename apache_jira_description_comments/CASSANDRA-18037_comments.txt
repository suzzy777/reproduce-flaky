Here is the patch adopting the new naming conventions for native CQL functions:

||PR||CI||
|[trunk|https://github.com/apache/cassandra/pull/2236]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2722/workflows/e4fc72c4-ebd0-49e1-9425-1333b53849b8] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2722/workflows/91d86ea4-9ee5-4efa-8615-eac8fd9ff5e4]|
|[dtest|https://github.com/apache/cassandra-dtest/pull/217]||

The approach for compatibility with old function names consists on simply having two instances of each renamed function, one with the new name and another with the old name.

The reason for not simply having duplicated entries on [{{NativeFunctions.functions}}|https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/cql3/functions/NativeFunctions.java#L53] pointing to the same function instance is that the functions use their own names to produce the associated column names in query results, print error messages, etc.

The list of new function names is:

||Old name||New name||
|castAsAscii|cast_as_ascii|
|castAsBigint|cast_as_bigint|
|castAsDate|cast_as_date|
|castAsDecimal|cast_as_decimal|
|castAsDouble|cast_as_double|
|castAsFloat|cast_as_float|
|castAsInt|cast_as_int|
|castAsSmallint|cast_as_smallint|
|castAsText|cast_as_text|
|castAsTimestamp|cast_as_timestamp|
|castAsTinyint|cast_as_tinyint|
|castAsVarint|cast_as_varint|
|blobasascii|blob_as_ascii|
|blobasbigint|blob_as_bigint|
|blobasboolean|blob_as_boolean|
|blobascounter|blob_as_counter|
|blobasdate|blob_as_date|
|blobasdecimal|blob_as_decimal|
|blobasdouble|blob_as_double|
|blobasduration|blob_as_duration|
|blobasempty|blob_as_empty|
|blobasfloat|blob_as_float|
|blobasinet|blob_as_inet|
|blobasint|blob_as_int|
|blobassmallint|blob_as_smallint|
|blobastext|blob_as_text|
|blobastime|blob_as_time|
|blobastimestamp|blob_as_timestamp|
|blobastimeuuid|blob_as_timeuuid|
|blobastinyint|blob_as_tinyint|
|blobasuuid|blob_as_uuid|
|blobasvarchar|blob_as_varchar|
|blobasvarint|blob_as_varint|
|asciiasblob|ascii_as_blob|
|bigintasblob|bigint_as_blob|
|booleanasblob|boolean_as_blob|
|counterasblob|counter_as_blob|
|dateasblob|date_as_blob|
|decimalasblob|decimal_as_blob|
|doubleasblob|double_as_blob|
|durationasblob|duration_as_blob|
|emptyasblob|empty_as_blob|
|floatasblob|float_as_blob|
|inetasblob|inet_as_blob|
|intasblob|int_as_blob|
|smallintasblob|smallint_as_blob|
|textasblob|text_as_blob|
|timeasblob|time_as_blob|
|timestampasblob|timestamp_as_blob|
|timeuuidasblob|timeuuid_as_blob|
|tinyintasblob|tinyint_as_blob|
|uuidasblob|uuid_as_blob|
|varcharasblob|varchar_as_blob|
|varintasblob|varint_as_blob|
|countRows|count_rows|
|maxtimeuuid|max_timeuuid|
|mintimeuuid|min_timeuuid|
|currentdate|current_date|
|currenttime|current_time|
|currenttimestamp|current_timestamp|
|currenttimeuuid|current_timeuuid|
|todate|to_date|
|totimestamp|to_timestamp|
|tounixtimestamp|to_unix_timestamp|
|tojson|to_json|
|fromjson|from_json|


Should this be patch available?

It is patch available again, I had totally forgotten the json functions:

||PR||CI||
|[trunk|https://github.com/apache/cassandra/pull/2236]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2727/workflows/1c22ea8a-bd97-47d9-8c7a-9ea7ede84926] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2727/workflows/1be4eb86-899b-46d2-b06b-3bf08dc56abd]|
|[dtest|https://github.com/apache/cassandra-dtest/pull/217]||

New CI run after rebasing and applying the review feedback:

||PR||CI||
|[trunk|https://github.com/apache/cassandra/pull/2236]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2775/workflows/003b34bb-d5a8-448d-9684-1e853b020beb] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2775/workflows/99ea3720-7b63-4c97-9857-732ea11c6a6e]|
|[dtest|https://github.com/apache/cassandra-dtest/pull/217]||

All is green in the CI run except a failure on {{InsertUpdateIfConditionCollectionsTest}}. [This run|https://app.circleci.com/pipelines/github/adelapena/cassandra/2781/workflows/7a030663-5cbb-4f60-847b-6f6015a57448/jobs/35812/tests] shows that that class is flaky also on unpatched trunk. I'll open a separate ticket for that.

-I believe that one is CASSANDRA-18393.- nevermind, CASSANDRA-18393 is similar.

+1

Committed to {{trunk}} as [d3c55ed8f82c601d188fedbecb62a464171ea624|https://github.com/apache/cassandra/commit/d3c55ed8f82c601d188fedbecb62a464171ea624].

Dtests committed as [7d5c1ca42e92121b971f60ad875fb8f11d07f730|https://github.com/apache/cassandra-dtest/commit/7d5c1ca42e92121b971f60ad875fb8f11d07f730].

Thanks for the review and the tip about the flaky test.

[~adelapena] I'm seeing new errors in the pytest about missing blob_as_int, could this the related?Â 

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

*============================================ short test summary info ============================================*

ERROR cqlshlib/test/test_cqlsh_completion.py::{*}TestCqlshCompletion::test_complete_command_words{*} - cassandra.InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown function blob_as_int...

ERROR cqlshlib/test/test_cqlsh_completion.py::{*}TestCqlshCompletion::test_complete_in_alter_keyspace{*} - cassandra.InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown function blob_as_int...

ERROR cqlshlib/test/test_cqlsh_completion.py::{*}TestCqlshCompletion::test_complete_in_alter_role{*} - cassandra.InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown function blob_as_int...

ERROR cqlshlib/test/test_cqlsh_completion.py::{*}TestCqlshCompletion::test_complete_in_alter_table{*} - cassandra.InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown function blob_as_int...

ERROR cqlshlib/test/test_cqlsh_completion.py::{*}TestCqlshCompletion::test_complete_in_alter_type{*} - cassandra.InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown function blob_as_int...

Surely it looks related. But what versions and branches are you testing? is everything rebased? It's strange bc as you can see CI was green for this ticket.

