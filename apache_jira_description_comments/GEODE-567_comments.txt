Reoccurred in:

Geode_develop_DistributedTests
Private Build #1602
Revision: 781277f31f37388f7247cbdf05025c12de825d2a

Flaky: async actions, waitForCriterion, time sensitive, non-thread-safe test hook, eats exceptions (partially fixed)

Closing due to inactivity.  Please reopen if this test fails again.

This reoccurred in a recent CI run

https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/FlakyTest/builds/125
{noformat}
org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest > testBug43283 FAILED
	
    java.lang.AssertionError: exception thrown is not PartitionNotAvailableException
	
        at org.apache.geode.test.dunit.Assert.fail(Assert.java:66)
	
        at org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest.testBug43283(FixedPartitioningDUnitTest.java:497)
	

	
        Caused by:
	
        org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest$$Lambda$36/1378474319.run in VM 3 running on Host d87a7b5c-b782-4947-4b37-4f631d22f321 with 4 VMs
	
            at org.apache.geode.test.dunit.VM.invoke(VM.java:436)
	
            at org.apache.geode.test.dunit.VM.invoke(VM.java:405)
	
            at org.apache.geode.test.dunit.VM.invoke(VM.java:348)
	
            at org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest.testBug43283(FixedPartitioningDUnitTest.java:493)
	

	
            Caused by:
	
            org.apache.geode.cache.PartitionedRegionStorageException: Unable to find any members to host a bucket in the partitioned region. Advise you to start enough data store nodes.
	
            Partitioned Region name = /Quarter
	
               Redundancy level set to 0
	
            . Number of available data stores: 0
	
               . Number successfully allocated = 0
	
            . Data stores: []
	
            . Data stores successfully allocated: []
	
            . Equivalent members: [10.254.0.34(8467)<v6>:32772, 10.254.0.34(8490)<v9>:32773, 10.254.0.34(8455)<v2>:32770, 10.254.0.34(8460)<v4>:32771, 10.254.0.34(8359:locator)<ec><v0>:32769]
	
                at org.apache.geode.internal.cache.PRHARedundancyProvider.insufficientStores(PRHARedundancyProvider.java:306)
	
                at org.apache.geode.internal.cache.PRHARedundancyProvider.createBucketOnDataStore(PRHARedundancyProvider.java:478)
	
                at org.apache.geode.internal.cache.PartitionedRegion.createBucket(PartitionedRegion.java:3334)
	
                at org.apache.geode.internal.cache.PartitionedRegion.virtualPut(PartitionedRegion.java:2075)
	
                at org.apache.geode.internal.cache.LocalRegionDataView.putEntry(LocalRegionDataView.java:152)
	
                at org.apache.geode.internal.cache.LocalRegion.basicPut(LocalRegion.java:5086)
	
                at org.apache.geode.internal.cache.LocalRegion.validatedPut(LocalRegion.java:1618)
	
                at org.apache.geode.internal.cache.LocalRegion.put(LocalRegion.java:1605)
	
                at org.apache.geode.internal.cache.AbstractRegion.put(AbstractRegion.java:413)
	
                at org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningTestBase.putThorughAccessor_Immediate(FixedPartitioningTestBase.java:231)
	
                at org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest.lambda$testBug43283$bb17a952$10(FixedPartitioningDUnitTest.java:493)
	
{noformat}

From GEODE-5371, out of ~1,500 runs:
{{org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest.testBug43283:  97 failures (93.58889623265037% success rate)}}


Commit 4edacb13854c35e73dc1b8b27b39c9bf9bb24179 in geode's branch refs/heads/develop from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=4edacb1 ]

GEODE-567: Wait for async datastore creation to reach appropriate point (#2143)

GEODE-567: Wait for async datastore creation to reach appropriate point

This test appears like it was trying to test what happens if a put
happens when data store creation is at a particular point.

Unfortunately, it failed to do so correctly because it just spun off the
data store creation in separate threads and then did the put. The wait
criterion used was also completely wrong, so the test would always wait
for 1 minute.

Finally, there were some race conditions caused by passing the same
array list to multiple async tasks.

Changed the code to wait until the data stores are at the given point in
region creation and then do the put.

Commit 4edacb13854c35e73dc1b8b27b39c9bf9bb24179 in geode's branch refs/heads/develop from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=4edacb1 ]

GEODE-567: Wait for async datastore creation to reach appropriate point (#2143)

GEODE-567: Wait for async datastore creation to reach appropriate point

This test appears like it was trying to test what happens if a put
happens when data store creation is at a particular point.

Unfortunately, it failed to do so correctly because it just spun off the
data store creation in separate threads and then did the put. The wait
criterion used was also completely wrong, so the test would always wait
for 1 minute.

Finally, there were some race conditions caused by passing the same
array list to multiple async tasks.

Changed the code to wait until the data stores are at the given point in
region creation and then do the put.

