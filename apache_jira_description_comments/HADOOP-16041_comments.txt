what is it today? 

I'd propose: something to say hadoop, hadoop version ( from {{org.apache.hadoop.util.VersionInfo}}), plus anything user configurable.

As/when a successor to htrace is added, making it an option to dynamically add trace info would be nice, though as that is per-request it gets a bit more complex, especially with a thread pool to service requests.

As of today it is: "Azure Blob FS/1.0 (JavaJRE 1.8.0_172; MacOSX 10.13.6) Partner Service" 

yes, the plan is to replace "Azure Blob FS/1.0" with VersionInfo.getVersion() as per discussion with [~mackrorysd]. 

{quote}Partner Service{quote}

To be clear, that's not part of the user agent string. I suspect you're getting that from verifyUserAgent, where it sets the configurable prefix to "Partner Service", but any Hadoop installation could set that to whatever they wanted. The Hadoop distribution in usage can actually be inferred from VersionInfo, which is how it's done in other cloud connectors already (and is actually what's motivating this change).

We should coordinate with [~tmarquardt] and [~DanielZhou] to make sure there isn't any intended future use of Azure Blob FS/1.0, if that's supposed to map to some API version or something. Since we don't have a distinct SDK, Hadoop *is* the client, so the Hadoop version makes sense to me. But we can preserve Azure Blob FS/1.0 if that carries any special meaning for Microsoft.

{quote}As/when a successor to htrace is added, making it an option to dynamically add trace info would be nice, though as that is per-request it gets a bit more complex, especially with a thread pool to service requests.{quote}

Yeah I'd suggest we tackle that as a separate feature when we have a clear idea of what that trace info would look like. Do you have like a compressed stack trace in mind, or more just a unique ID for each request or something?

What are your goals for this change?

There were two things we wanted to accomplish with our current User-Agent implementation:

1) Ability to identity the client as ABFS.  That is, as opposed to some other client outside Hadoop.

2) Ability to identify the service or partner that build and distributed the client.  E.g., Cloudera, Hortonworks, HDInsight, Databricks, etc.

Looking at the implementation of VersionInfo.getVersion, it appears to be returning a version number like "3.1".  That would make it difficult to do 1), as we would not be searching for a static string but rather a dynamic string which is perhaps nothing but a version number.

Perhaps we can leave the static part "Azure Blob FS" or shorten it to "ABFS" and append the Hadoop version or hadoop-azure jar version, so the format is something like "ABFS/%s" where %s is the version string?

In the case of CDH (and I believe Hortonworks / HDInsight) the version number includes an identification of the vendor and the vendor release. For example "3.0.0-cdh6.0.0". That's how the vendor has been identified in the other connectors as far as I'm aware - that's definitely all we did for ADLS Gen1 and I know the required information was still collected. In these Hadoop distros the user-configurable prefix is also modifiable by the user, and has been used (not on Azure specifically in the cases I'm thinking of) to identify workloads from a particular large user or something like that. It's not as good a fit for identifying the vendor. With the Databricks model where it's more of a service, then it does make sense to identify themselves using the configured prefix (which is actually a suffix right now) unless their version string embeds enough information.

+1 to ABFS/<version string>, if that allows you to identify Hadoop vendors sufficiently well.

yes currently the so called "configured prefix" is actually a suffix, the current userAgent string is:
{noformat}
Azure Blob FS/1.0 (JavaJRE JAVA_VERSION; OS_VERSION) {optional : CONFIGURED_SUFFIX}
{noformat}

+1 for the proposal:
{noformat}
Azure Blob FS/{HADOOP_VENDOR_VERSION} (JavaJRE JAVA_VERSION; OS_VERSION) {optional : CONFIGURED_SUFFIX}
{noformat}

For 2), I did not mention that the design is such that the service or partner can set "fs.azure.user.agent.prefix" to a value like "3.0.0-cdh6.0.0", and then it will be appended to the User-Agent string in a format similar to "Azure Blob FS/1.0 (JavaJRE 1.8.0_172; MacOSX 10.13.6) %s", where %s is "3.0.0-cdh6.0.0" in this example.  I realize this is a suffix and not a prefix, but I did not come up with the name for the configuration property. :)

 

With that said, your proposal improves the situation by making it automatic, so there is less of a need for the service or partner to further customize the User-Agent with our config setting.  Specifically, replacing "Azure Blob FS/1.0" with "ABFS/<version string>" sounds great to me.

+1 for picking up the version info, as that avoids everyone having to know that they need to configure every object store connector to get this info our.

Sean, for some htrace-ish issue tracking, I'd just imagine some unique request/jobId coming through

Thanks for the discussions [~stevel@apache.org], [~mackrorysd], [~tmarquardt] and [~DanielZhou]. 
Patch001 contains the change to reflect the VersionInfo in User Agent String. Please review. Thanks.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 24m 38s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 35s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 37s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 14m 15s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 47s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 14m 51s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  1m 12s{color} | {color:red} hadoop-azure in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 34s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 61m 56s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.fs.azure.TestClientThrottlingAnalyzer |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8f97d6f |
| JIRA Issue | HADOOP-16041 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12956409/HADOOP-16041.001.patch |
| Optional Tests |  dupname  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 5193fafcc536 4.4.0-138-generic #164~14.04.1-Ubuntu SMP Fri Oct 5 08:56:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / fb69519 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_191 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/15848/artifact/out/patch-unit-hadoop-tools_hadoop-azure.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/15848/testReport/ |
| Max. process+thread count | 305 (vs. ulimit of 10000) |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15848/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.



Looks pretty good to me. Test failure is unrelated and probably just flaky given it's fuzzy logic to begin with. We probably want it to be "ABFS/" + VersionInfo..., though, as [~tmarquardt] suggested. I'm fairly certain that the term ABFS uniquely refers to the Hadoop driver, right? So that would be a nice clean way to distinguish Hadoop / ABFS from other ADLS Gen2 clients since the specific formatting of the Hadoop version can vary. I'd also be fine with "Azure Blob FS/" so that we simply replace the 1.0 with the actual Hadoop version (unless 1.0 referred to an API version or something?)
 

Thanks [~mackrorysd] for pointing out the change suggestion by [~tmarquardt]. I have updated the patch to reflect the User Agent string to have the Hadoop version preceeded by "Azure Blob FS/" .

Please review. Thank you.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 20m 30s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 11s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 34s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 12s{color} | {color:green} hadoop-azure in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 54m 27s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8f97d6f |
| JIRA Issue | HADOOP-16041 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12956610/HADOOP-16041.002.patch |
| Optional Tests |  dupname  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 8e184708c4b9 4.4.0-138-generic #164~14.04.1-Ubuntu SMP Fri Oct 5 08:56:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 8326450 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_191 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/15858/testReport/ |
| Max. process+thread count | 347 (vs. ulimit of 10000) |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15858/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.



+1 looks good to me

+1. Will commit. (edit: as briefly discussed offline - there is now a space after the slash that appears to be unintentional)

Thanks [~mackrorysd] for the find. Uploaded new patch to reflect change.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  7m 33s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 21m 49s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 24s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 54s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 27s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 17s{color} | {color:green} hadoop-azure in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 28s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 62m 55s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8f97d6f |
| JIRA Issue | HADOOP-16041 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12956803/HADOOP-16041.003.patch |
| Optional Tests |  dupname  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 87877dc67e0a 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 04105bb |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_191 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/15871/testReport/ |
| Max. process+thread count | 306 (vs. ulimit of 10000) |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15871/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.



Committed. Confirmed, for everyone's reference, that the User-Agent now looks like this for me:
{code}Azure Blob FS/3.3.0-SNAPSHOT (JavaJRE 1.8.0_191; Linux 4.15.0-43-generic){code}

All tests pass, except for this one that's always being weird (although I thought it was just WASB compat tests that were being weird and this is different):
{code}ITestGetNameSpaceEnabled.testNonXNSAccount:57->Assert.assertFalse:64->Assert.assertTrue:41->Assert.fail:88 Expecting getIsNamespaceEnabled() return false{code}

SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #15849 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/15849/])
HADOOP-16041. Include Hadoop version in User-Agent string for ABFS. (mackrorysd: rev 02eb91856e7e8477c62e0f8bf1bac6de3e00a8a4)
* (edit) hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/constants/AbfsHttpConstants.java
* (edit) hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/services/TestAbfsClient.java


Thanks for making the change!  Mark as resolved.

backported to branch-3.2; reran the modified test first

