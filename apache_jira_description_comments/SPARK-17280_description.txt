https://spark-tests.appspot.com/builds/spark-master-test-maven-hadoop-2.2/1793

https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-maven-hadoop-2.2/1793/

{code}
org.apache.spark.streaming.kafka010.JavaDirectKafkaStreamSuite.testKafkaStream

Error Message

assertion failed: Partition [topic1, 0] metadata not propagated after timeout
Stacktrace

java.util.concurrent.TimeoutException: assertion failed: Partition [topic1, 0] metadata not propagated after timeout
	at org.apache.spark.streaming.kafka010.JavaDirectKafkaStreamSuite.createTopicAndSendData(JavaDirectKafkaStreamSuite.java:176)
	at org.apache.spark.streaming.kafka010.JavaDirectKafkaStreamSuite.testKafkaStream(JavaDirectKafkaStreamSuite.java:74)
{code}

{code}
org.apache.spark.streaming.kafka010.JavaKafkaRDDSuite.testKafkaRDD

Error Message

Job aborted due to stage failure: Task 1 in stage 0.0 failed 1 times, most recent failure: Lost task 1.0 in stage 0.0 (TID 1, localhost): java.lang.AssertionError: assertion failed: Failed to get records for spark-executor-java-test-consumer--363965267-1472280538438 topic2 0 0 after polling for 512
 at scala.Predef$.assert(Predef.scala:170)
 at org.apache.spark.streaming.kafka010.CachedKafkaConsumer.get(CachedKafkaConsumer.scala:74)
 at org.apache.spark.streaming.kafka010.KafkaRDD$KafkaRDDIterator.next(KafkaRDD.scala:227)
 at org.apache.spark.streaming.kafka010.KafkaRDD$KafkaRDDIterator.next(KafkaRDD.scala:193)
 at scala.collection.Iterator$$anon$11.next(Iterator.scala:409)
 at org.apache.spark.util.Utils$.getIteratorSize(Utils.scala:1684)
 at org.apache.spark.rdd.RDD$$anonfun$count$1.apply(RDD.scala:1134)
 at org.apache.spark.rdd.RDD$$anonfun$count$1.apply(RDD.scala:1134)
 at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1910)
 at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1910)
 at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)
 at org.apache.spark.scheduler.Task.run(Task.scala:86)
 at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 at java.lang.Thread.run(Thread.java:745)

Driver stacktrace:
Stacktrace

org.apache.spark.SparkException: 
Job aborted due to stage failure: Task 1 in stage 0.0 failed 1 times, most recent failure: Lost task 1.0 in stage 0.0 (TID 1, localhost): java.lang.AssertionError: assertion failed: Failed to get records for spark-executor-java-test-consumer--363965267-1472280538438 topic2 0 0 after polling for 512
	at scala.Predef$.assert(Predef.scala:170)
	at org.apache.spark.streaming.kafka010.CachedKafkaConsumer.get(CachedKafkaConsumer.scala:74)
	at org.apache.spark.streaming.kafka010.KafkaRDD$KafkaRDDIterator.next(KafkaRDD.scala:227)
	at org.apache.spark.streaming.kafka010.KafkaRDD$KafkaRDDIterator.next(KafkaRDD.scala:193)
	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409)
	at org.apache.spark.util.Utils$.getIteratorSize(Utils.scala:1684)
	at org.apache.spark.rdd.RDD$$anonfun$count$1.apply(RDD.scala:1134)
	at org.apache.spark.rdd.RDD$$anonfun$count$1.apply(RDD.scala:1134)
	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1910)
	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1910)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)
	at org.apache.spark.scheduler.Task.run(Task.scala:86)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

Driver stacktrace:
	at org.apache.spark.streaming.kafka010.JavaKafkaRDDSuite.testKafkaRDD(JavaKafkaRDDSuite.java:115)
Caused by: java.lang.AssertionError: assertion failed: Failed to get records for spark-executor-java-test-consumer--363965267-1472280538438 topic2 0 0 after polling for 512
{code}
