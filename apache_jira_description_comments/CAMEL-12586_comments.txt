I see [~pascalschumacher] already did upgrade the version, I'd like to just see about that {{jaxb-core}} issue and where 2.19.1 version is defined.

Sorry for updating without mentioning the issue. I was not aware of it existence. 

Looks like camel uses a lot of different surefire versions:

camel-test-karaf uses surefire 2.18.1
camel-itest-karaf and camel-itest-osgi use surefire 2.16

According to git grep some examples use 2.19.1:
examples/camel-example-cassandra-kubernetes/pom.xml:    <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
examples/camel-example-cdi-xml/pom.xml:        <version>2.19.1</version>
examples/camel-example-hazelcast-kubernetes/pom.xml:    <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>

Just the results of a quick search, there may be more.

Oh not an issue [~pascalschumacher] I think I even created the issue after you did the upgrade. I found a series of issues with Surefire from 2.19 onwards, and probably the cause for using 2.18.1 or 2.16 (SUREFIRE-1302, SUREFIRE-1374). And I've experimented with {{camel-example-cdi-xml}} and upgrading to 2.22 works but it's flaky in very low percentages, I had to run {{mvn test}} for a while to find any issue. Let me experiment just a bit more to see if I can make all versions of Surefire be 2.22.

We're now consistently using 2.22.0 across all Maven modules and JAXB version 2.3.0.1.

There is no jaxb-api versioned 2.3.0.1 so we need to use version 2.3.0 for javax.xml.bind:jaxb-api and for com.sun.xml.bind:jaxb-impl. I can't find significant changes in that would make us use 2.3.0.1.

Do we need to cut 2.22 again?

[~ancosen] no I see no reason to, this only affects running tests on Java 9+.

