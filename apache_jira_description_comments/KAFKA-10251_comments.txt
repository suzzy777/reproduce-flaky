cc [~bchen225242] – [https://builds.apache.org/job/kafka-pr-jdk8-scala2.12/3318/testReport/junit/kafka.api/TransactionsBounceTest/testWithGroupMetadata/]

investigating

Different test method:
{quote}org.opentest4j.AssertionFailedError: Consumed 0 records before timeout instead of the expected 200 records at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39) at org.junit.jupiter.api.Assertions.fail(Assertions.java:117) at kafka.utils.TestUtils$.pollUntilAtLeastNumRecords(TestUtils.scala:852) at kafka.api.TransactionsBounceTest.testWithGroupId(TransactionsBounceTest.scala:109){quote}
STDOUT is full with
{quote}[2021-02-26 22:24:12,274] ERROR Error when sending message to topic output-topic with key: 923, value: 923 with error: (org.apache.kafka.clients.producer.internals.ErrorLoggingCallback:52) org.apache.kafka.common.errors.TransactionAbortedException: Failing batch since transaction was aborted [2021-02-26 22:24:12,274] ERROR Error when sending message to topic output-topic with key: 926, value: 926 with error: (org.apache.kafka.clients.producer.internals.ErrorLoggingCallback:52) org.apache.kafka.common.errors.TransactionAbortedException: Failing batch since transaction was aborted
...{quote}

This flaky test also points to the same root cause.

kafka.api.TransactionsBounceTest.testWithGroupId()


org.opentest4j.AssertionFailedError: Consumed 0 records before timeout instead of the expected 200 records
 at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)
 at org.junit.jupiter.api.Assertions.fail(Assertions.java:117)
 at kafka.utils.TestUtils$.pollUntilAtLeastNumRecords(TestUtils.scala:852)
 at kafka.api.TransactionsBounceTest.testWithGroupId(TransactionsBounceTest.scala:109)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Failed again.

Two more.

Merged [https://github.com/apache/kafka/pull/10228,] please reopen this ticket if failures are seen on builds kicked off after 11:47am PST (March 2nd)

Looks like it's still failing – saw at least one test failure on a build which was kicked off since merging this PR. [https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-10215/5/testReport/junit/kafka.api/TransactionsBounceTest/Build___JDK_8___testWithGroupId__/?cloudbees-analytics-link=scm-reporting%2Ftests%2Ffailed]

 

Reopening the ticket for further investigation

Interesting. Let me check it. Thanks.

Found the root cause, which is we are bouncing broker during the test to verify the transnational data is still as expected. However, the broker down and on, will fail the rebalance due to {{error when storing group assignment during SyncGroup}}. To fix it, we can make the rebalance happened earlier before broker bouncing, so that we can make sure when test starts, we can start the records consuming, instead of rebalancing. PR:[https://github.com/apache/kafka/pull/10338]

Thanks.

Failed again:

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-10943/5/testReport/junit/kafka.api/TransactionsBounceTest/Build___JDK_8_and_Scala_2_12___testWithGroupId___2/

{code:java}
org.opentest4j.AssertionFailedError: Consumed 0 records before timeout instead of the expected 200 records
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:117)
	at kafka.utils.TestUtils$.pollUntilAtLeastNumRecords(TestUtils.scala:833)
	at kafka.api.TransactionsBounceTest.testWithGroupId(TransactionsBounceTest.scala:112)
{code}

https://github.com/apache/kafka/pull/11106/checks?check_run_id=3146651514

