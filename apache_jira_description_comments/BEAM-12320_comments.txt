https://github.com/apache/beam/pull/14761 is the only SQL relevant PR that went in around the first breakage.

[https://github.com/apache/beam/pull/14761]  doesn't seem to be the cause. FWIW when I ran locally (on commit 7a348292ef4c5a54cc710617c15ad7f08d3297ed) I hit the following errors:

testSQLLimit[0], testSQLLimit[1], testSQLLimit[2] - java.lang.AssertionError: Timed out before subscription created ...

testSQLSelectsArrayAttributes[0], testSQLSelectsArrayAttributes[1] (but not 2 for some reason) - java.lang.AssertionError: Did not receive signal ...

Kyle can you investigate?

re-opening since this is still happening.

Seeing lots of log messages like:

May 26, 2021 6:05:08 PM org.apache.kafka.clients.NetworkClient processDisconnection WARNING: [Consumer clientId=consumer-11, groupId=null] Connection to node 1 (localhost/127.0.0.1:44951) could not be established. Broker may not be available. May 26, 2021 6:05:08 PM org.apache.kafka.clients.FetchSessionHandler handleError INFO: [Consumer clientId=consumer-11, groupId=null] Error sending fetch request (sessionId=1716012934, epoch=INITIAL) to node 1: {}. org.apache.kafka.common.errors.DisconnectException

The failing test is a pubsub test [1], so I'm not sure why the output is full of Kafka errors.

[1] org.apache.beam.sdk.extensions.sql.meta.provider.pubsub.PubsubTableProviderIT.testSQLSelectsArrayAttributes[0]

The Kafka thing is actually a problem, because it's covering up the log messages I want to look at.

I was able to get the full log and I found this:

May 26, 2021 6:05:27 PM org.apache.beam.sdk.extensions.sql.meta.provider.pubsub.PubsubTableProviderIT lambda$testSQLSelectsArrayAttributes$43268ee4$1
INFO: Entries: \{3=foo}
May 26, 2021 6:05:27 PM org.apache.beam.sdk.extensions.sql.meta.provider.pubsub.PubsubTableProviderIT lambda$testSQLSelectsArrayAttributes$43268ee4$1
INFO: Entries: \{3=foo, 5=bar}

Which does not include the 7="baz" required to pass the test.

Another run only has \{3=foo}; another run only has \{5=bar, 7=baz}. Evidently not all messages are received as expected.

I was able to repro this on commit 4565a3139554849d6d55680e13827bdb19321476, the first commit for this test. So it has been flaky from the beginning.

With the original 60s timeout on resultSignal.waitForSuccess, the test sometimes flaked because the SUCCESS signal was sent, but it didn't have enough time to be processed. With the timeout raised to 600s, that should be fixed. But the test still flaked because only 2 out of the 3 expected messages were received by the predicate, so the predicate was not fulfilled and the SUCCESS signal was never sent. (To be precise, here is the patch I tested on: [https://github.com/apache/beam/commit/efb2cbdf9473af2988b0641725c1112c31fd8979])

The flake seems to happen for every payload format – we've seen failures for all of JSON, Avro, and Proto.

This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

[~ibzib] is there a next step to deflake it further?

Still happening ([https://ci-beam.apache.org/job/beam_PostCommit_SQL/6551/)] - I'm going to assign to Kyle again for next steps/reassigning. 

Another issue might have made flaky behavior more likely, as a few failures in the same test in a row: [https://ci-beam.apache.org/job/beam_PostCommit_SQL/6552/,] [https://ci-beam.apache.org/job/beam_PostCommit_SQL/6553/,] but there was no seemingly related PR. 

Still happening in https://ci-beam.apache.org/job/beam_PostCommit_SQL/6668/

 I've sickbayed the test.

This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

[~dpcollins-google] any chance you could take a lookt at this? It seems the test has been flaky since you added it.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

This Jira ticket has a pull request attached to it, but is still open. Did the pull request resolve the issue? If so, could you please mark it resolved? This will help the project have a clear view of its open issues.

This issue is P2 but has been unassigned without any comment for 60 days so it has been labeled "stale-P2". If this issue is still affecting you, we care! Please comment and remove the label. Otherwise, in 14 days the issue will be moved to P3.

Please see https://beam.apache.org/contribute/jira-priorities/ for a detailed explanation of what these priorities mean.


This issue was marked "stale-P2" and has not received a public comment in 14 days. It is now automatically moved to P3. If you are still affected by it, you can comment and move it back to P2.

This issue has been migrated to https://github.com/apache/beam/issues/20937

