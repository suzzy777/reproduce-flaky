I fixed here what I could: [https://github.com/apache/cassandra/pull/1994]

One test is still failing, not sure what to do with it.

cc: [~benedict] 

I fixed all tests.

The most surprising fix consists of adding "PaxosState.startAutoRepairs()" to CassandraDaemon (and Instance), that oneliner just fixes "paxosAutoRepair' test.

PaxosState.startAutoRepairs() is not called anywhere in the codebase. How are we actually starting autorepairs then?

I run them 500x  and one test method is flaky:

https://app.circleci.com/pipelines/github/instaclustr/cassandra/1561/workflows/62aecce3-7f29-4550-ab77-2c79922d80f4/jobs/7161/tests#failed-test-0

https://github.com/apache/cassandra/pull/1994

I added fixed version as 4.1-rc. It seems to me we are not starting auto repairs anywhere if I am not missing something here.

Why are you signalling this for review with a broken test?

[~benedict] , this was the one we discussed in the Slack channel last week. Do you mind to review it, please? 

For reference - https://the-asf.slack.com/archives/CK23JSY2K/p1667504971163019?thread_ts=1667504727.263969&cid=CK23JSY2K

{quote}Why are you signalling this for review with a broken test?
{quote}
Didn't he actually fix it in the last commit? I might have misunderstood

You know what, lets just move it to open :) I dont feel like I should fix a flaky test of a feature I am not familiar with at all.

The changes look fine, and I don't see why it shouldn't be merged since it fixes things, even if it exposes a failing test?

Thanks [~benedict] , I suggest this ticket should be renamed to "fix starting Paxos auto repair" where we ship renamed tests supporting that feature, even one of them happens to be flaky. Not sure I have spare cycles to get into internals of this to come up with a fix.

Good suggestion, the title was indeed misleading, I've updated it.

fyi this is j8 pre-commit [https://app.circleci.com/pipelines/github/instaclustr/cassandra/1561/workflows/c8fae944-d876-4c2a-a8fd-05bb0b8a693b]

so there are two flakies

1) [paxosRepairHistoryIsntUpdatedInForcedRepair|https://app.circleci.com/pipelines/github/instaclustr/cassandra/1561/workflows/c8fae944-d876-4c2a-a8fd-05bb0b8a693b/jobs/7173/tests#failed-test-0]
2) [legacyPurgeRepairLoop|https://app.circleci.com/pipelines/github/instaclustr/cassandra/1561/workflows/c8fae944-d876-4c2a-a8fd-05bb0b8a693b/jobs/7173/tests#failed-test-1]
 

Please let me know if you want me to proceed to merge this and I ll be back on track. We will create tickets for these flakes. I am not familiar with Paxos and I am not able to evaluate if we can just accept that or it has some more serious consequences. Especially 2) is quite interesting.

[~benedict] could you please explicitly confirm here that adding starting of Paxos repairs in CassandraDemon here (1) is really the change which should be included in 4.1 and trunk? Just to be super clear here. I am wondering how was that test passing before when repairs were not starting. 

(1) https://github.com/apache/cassandra/blob/c323949c55d02d952121d5611975e075a049ec32/src/java/org/apache/cassandra/service/CassandraDaemon.java#L494

Yes, that should be started, however it is not necessary for correctness. It simply keeps the backlog of uncommitted command state to a minimum.

Users switching to {{paxos_stage_purging: repaired}} rely on running regular/incremental/paxos repair for clearing {{system.paxos}} which is the more important job, this auto repair just means that the coordinated paxos repairs should finish a bit quicker.


Given the explanation above I do not think this ticket should be an rc blocker, given we have no progress on how to fix the two flaky tests. (We should still try and get it in, there's only one or two other tickets we are currently waiting on…)

This ticket isn't about fixing the tests, just starting paxos auto repair, which is done and I think is ready to commit now?  That should go into rc, but we can create tickets for the flaky tests that do not.

Even if this ticket included running the tests that had been erroneously not running, some of which are flaky, it would be entirely weird to refuse its merge for some view on flaky tests. The tests _should be running_, and they are failing either way. The failing test metric is not there to be gamed, it's there to encourage good practices.

I don't disagree, we should fix the naming of the test so it runs.  I don't think we should block rc on them though unless you have time to fix them.

No, I agree we shouldn't block rc.

What I got from this is that this should go in as is, with that extra line in CassandraDeamon, with renamed test class, fixed tests even some of them are flaky and we will not block rc and just create new tickets to make them stable. I will assign this to myself again and run the builds for trunk as well.

4.1 j11 pre-commit [https://app.circleci.com/pipelines/github/instaclustr/cassandra/1573/workflows/84394d1a-13a7-4de3-955c-a0d7cfed2681]
4.1 j8 pre-commit [https://app.circleci.com/pipelines/github/instaclustr/cassandra/1561/workflows/c8fae944-d876-4c2a-a8fd-05bb0b8a693b]
trunk j11 pre-commit [https://app.circleci.com/pipelines/github/instaclustr/cassandra/1572/workflows/e5b6b663-68c7-46dc-82df-206d907da949]
trunk j8 pre-commit [https://app.circleci.com/pipelines/github/instaclustr/cassandra/1572/workflows/c324f4ef-c9d1-4456-9f0d-9d4b4e2524c6]

trunk pr https://github.com/apache/cassandra/pull/2007
4.1 pr https://github.com/apache/cassandra/pull/1994


I am moving this to "needs commiter", AFAIK this just needs to go to 4.1 and trunk. There is nothing in 4.0 like this. Two tests are flaky as expected.

I think [~benedict] may be +1 here already?

Yep, LGTM +1

