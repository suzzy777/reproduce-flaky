testDuplicateDeleteCommands fails occasionally with following error

{code}
Tests run: 28, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 51.226 sec <<< FAILURE! - in org.apache.falcon.resource.EntityManagerJerseyIT
testDuplicateDeleteCommands(org.apache.falcon.resource.EntityManagerJerseyIT)  Time elapsed: 0.643 sec  <<< FAILURE!
java.lang.AssertionError: expected:<400> but was:<200>
at org.testng.Assert.fail(Assert.java:89)
at org.testng.Assert.failNotEquals(Assert.java:489)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:365)
at org.testng.Assert.assertEquals(Assert.java:375)
at org.apache.falcon.resource.TestContext.assertFailure(TestContext.java:439)
at org.apache.falcon.resource.EntityManagerJerseyIT.testDuplicateCommandsResponse(EntityManagerJerseyIT.java:629)
at org.apache.falcon.resource.EntityManagerJerseyIT.testDuplicateDeleteCommands(EntityManagerJerseyIT.java:622)
{code}

Looking at the code, I found that the test expects one of the two delete commands to fail when attempting to delete same cluster. I think the premise of the test is incorrect. If one of the two commands are expected to fail, isnt that breaking Falcon's idempotent behavior?