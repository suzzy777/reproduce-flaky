Failed again: [https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/2827/testReport/junit/org.apache.kafka.streams.state.internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest/shouldForwardAllDbOptionsCalls/]

Different stack trace:
{quote}java.lang.AssertionError: Expected: a string matching the pattern 'Unexpected method call DBOptions\.setBaseBackgroundCompactions((.* *)*):' but: was "Unexpected method call DBOptions.setBaseBackgroundCompactions(0 (int)):\n DBOptions.close(): expected: 2, actual: 0" at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18) at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6) at org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.verifyDBOptionsMethodCall(RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.java:121) at org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.shouldForwardAllDbOptionsCalls(RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.java:101){quote}
 

https://github.com/apache/kafka/pull/6370

Failed again: [https://builds.apache.org/blue/organizations/jenkins/kafka-trunk-jdk8/detail/kafka-trunk-jdk8/3446/tests]

bbejeck commented on pull request #6370: KAFKA-8025: Update regex to allow any chars after ":"
URL: https://github.com/apache/kafka/pull/6370
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


[https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/7098/testReport/junit/org.apache.kafka.streams.state.internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest/shouldForwardAllDbOptionsCalls/]

Failed locally for me with 
{code:java}
java.lang.AssertionError: 
Expected: a string matching the pattern 'Unexpected method call DBOptions\.walBytesPerSync((.**)*):'
     but: was "Unexpected method call DBOptions.walBytesPerSync():\n    DBOptions.close(): expected: 2, actual: 0"
{code}

[https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/8633/testReport/junit/org.apache.kafka.streams.state.internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest/shouldForwardAllDbOptionsCalls/]

{code}
Stacktrace
java.lang.AssertionError: 
Expected: a string matching the pattern 'Unexpected method call DBOptions\.setEnableThreadTracking((.*
*)*):'
     but: was "Unexpected method call DBOptions.setEnableThreadTracking(true):\n    DBOptions.close(): expected: 1, actual: 0"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.verifyDBOptionsMethodCall(RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.java:126)
	at org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.shouldForwardAllDbOptionsCalls(RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:365)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:330)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:78)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:328)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:65)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:292)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:412)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy5.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:834)
{code}

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/25869/testReport/junit/org.apache.kafka.streams.state.internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest/shouldForwardAllDbOptionsCalls/]
{quote}java.lang.AssertionError: Expected: an instance of java.lang.AssertionError but: <java.lang.NullPointerException> is a java.lang.NullPointerException at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18) at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6) at org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.verifyDBOptionsMethodCall(RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.java:160) at org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.shouldForwardAllDbOptionsCalls(RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.java:109){quote}

I ran this test locally 10K times and I was not able to get a repeat failure.

Failed again on Jenkins (I am really puzzled what the problem could be...)

[https://builds.apache.org/job/kafka-pr-jdk11-scala2.13/4743/testReport/junit/org.apache.kafka.streams.state.internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest/shouldForwardAllDbOptionsCalls/]

mjsax commented on pull request #8126: KAFKA-8025: Fix flaky RocksDB test
URL: https://github.com/apache/kafka/pull/8126
 
 
   Reading the stack trace on the Jira, I think the issue might be related to the shared mock object we use.
   
   The test testup is a little bit upside down to allow the usage of reflection. The test verifies that a method is called, by _not_ registering an expected call, and catching the corresponding exception from `verify()` (because we use reflections, we cannot easily register an expected call and let `verify()` throw if the call was not made).
   
   Thus, the expected message from `verify()` is something like:
   ```
   Unexpected method call DBOptions.setEnableThreadTracking(true):
   ```
   
   When the test fails the stack trace says:
   ```
   Unexpected method call DBOptions.setEnableThreadTracking(true):\n    DBOptions.close(): expected: 1, actual: 0
   ```
   
   It indicates that an expected call was registered, however, the test actually never does this. Thus, I suspect that the mocked object is not isolated and as the tests are executed in parallel some race-condition applies (eg, one thread calls a method in the actual test to eventually trigger the exception in verify, while the other thread is just calling `replay()` accidentally register the call of the other thread as expected method call). 
   
   This fix tries to address the issue, by moving the mocked objects as local variables into the test methods.
   
   Call for review @vvcephei @bbejeck @cadonna 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mjsax commented on pull request #8126: KAFKA-8025: Fix flaky RocksDB test
URL: https://github.com/apache/kafka/pull/8126
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


