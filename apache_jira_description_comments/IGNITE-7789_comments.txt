GitHub user Mmuzaf opened a pull request:

    https://github.com/apache/ignite/pull/3588

    IGNITE-7789: fix IgniteClientReconnectApiExceptionTest, success rate 47.9%

    Add backups value for CollectionConfiguration

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Mmuzaf/ignite ignite-7789

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3588.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3588
    
----
commit 5fc300913d3f56a44faf1996c71285261cf1759a
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-02-28T14:22:09Z

    IGNITE-7789: set backups value for CollectionConfiguration

commit c047db72c929c9834a12584618149f87e1b0370a
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-02-28T14:28:07Z

    IGNITE-7789: use DFLT_BACKUPS constant for CollectionConfiguration

----


Generally this test fails because of method:
{quote}doTestIgniteOperationOnDisconnect(Ignite client, final List<T2<Callable, C1<Object, Boolean>>> ops)
{quote}
executes operations in this List<> not in that order in which they are put in. So, for the first case:

1) Assertion error in test-case: 
 Here we try to invoke operation here [return dfltCache.invoke(10000, new CacheEntryProcessor<Object, Object, Object>()|https://github.com/apache/ignite/blob/master/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectApiExceptionTest.java#L341] and expect that key 10_000 already exists in cache (added in previous opertation in List), but in some cases it not because of execution order.

2) IgniteCheckedException from CacheProcessor on dynamic cache start
 Same situation. For method [public void dataStructureOperationsTest() throws Exception |https://github.com/apache/ignite/blob/master/modules/core/src/test/java/org/apache/ignite/internal/IgniteClientReconnectApiExceptionTest.java#L97] we have execution plan:
{quote}OK - test case
 [2018-02-27 15:51:05,065][INFO ][async-callable-runner-1][root] Queue creation
 [2018-02-27 15:51:05,065][INFO ][async-callable-runner-1][root] Set creation
 [2018-02-27 15:51:05,065][INFO ][async-callable-runner-1][root] Atomic creation

FAIL - test case
 [2018-02-27 15:52:23,304][INFO ][async-callable-runner-1][root] Atomic creation
 [2018-02-27 15:52:23,304][INFO ][async-callable-runner-1][root] Queue creation
 [2018-02-27 15:52:23,303][INFO ][async-callable-runner-1][root] Set creation
{quote}
 and also number of default backups for [AtomicConfiguration |https://github.com/apache/ignite/blob/master/modules/core/src/main/java/org/apache/ignite/configuration/AtomicConfiguration.java#L32] and [CollectionConfiguration |https://github.com/apache/ignite/blob/master/modules/core/src/main/java/org/apache/ignite/configuration/CollectionConfiguration.java#L47] are different:
{quote}CollectionConfiguration we have default backup = 0;
AtomicConfiguration we have DFLT_BACKUPS = 1;
{quote}
 

I suggest to rewrite hole test in the correct way, but I think this is for another task.

Thanks, Maxim, merged your changes to master

Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3588


