This issue is P2 but has been unassigned without any comment for 60 days so it has been labeled "stale-P2". If this issue is still affecting you, we care! Please comment and remove the label. Otherwise, in 14 days the issue will be moved to P3.

Please see https://beam.apache.org/contribute/jira-priorities/ for a detailed explanation of what these priorities mean.


This issue was marked "stale-P2" and has not received a public comment in 14 days. It is now automatically moved to P3. If you are still affected by it, you can comment and move it back to P2.

https://ci-beam.apache.org/job/beam_PreCommit_Java_Phrase/2470/testReport/junit/org.apache.beam.runners.fnexecution.control/DefaultJobBundleFactoryTest/loadBalancesBundles/

https://ci-beam.apache.org/job/beam_PreCommit_Java_Commit/12361/

[~goenka] would you be able to look into this or recommend someone to look into it?

I think that BEAM-10678 is a dupe of this (at least it references the same test, not sure if the error mode is the same as there's no logs here). I can reproduce this pretty reliably on a low-memory machine, which could indicate that something is getting GC'd. Maybe we're only holding on to a weak reference somewhere?

Note that after the assertion was split in https://github.com/apache/beam/pull/12828, {{Assert.assertThat(closed.get(), is(true));}} is the one that's failing. It also seems notable that the log contains this message repeatedly:
{code}
[Test worker] INFO org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory - Closing environment null
[Test worker] INFO org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory - Closing environment null
[Test worker] INFO org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory - Closing environment null
[Test worker] INFO org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory - Closing environment null
[Test worker] INFO org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory - Closing environment null
[Test worker] INFO org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory - Closing environment null
[Test worker] INFO org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory - Closing environment null
{code}


I'm able to reproduce this pretty reliably on an n1-standard-1 GCP VM (I happened to be testing on one for a completely different purpose). I have to run the full {{:runners:java-fn-execution:test}} task for it to happen. I haven't seen it fail when running loadBalancesBundles alone.

It seems that, in the error case, what's happening is as soon as the forked thread releases the semaphore [here|https://github.com/apache/beam/blob/5e9237cd425da92a98536ba598a6217c21b31286/runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactory.java#L560], the main thread continues, [creating the bundle|https://github.com/apache/beam/blob/5e9237cd425da92a98536ba598a6217c21b31286/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactoryTest.java#L478], and then making the assertions. However since we left the forked thread, it never got out of the b2.close() call and [set the boolean|https://github.com/apache/beam/blob/5e9237cd425da92a98536ba598a6217c21b31286/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactoryTest.java#L470].


This is hopefully resolved by https://github.com/apache/beam/pull/13448, please re-open if it occurs again

