First off, sorry for the large patch. I created this tool as a personal side project. It eventually became quite useful as an internal tool. 

I would like to contribute the hive parallel unit testing framework to hive proper. Currently it's on github: https://github.com/brockn/hive-ptest/ but I'd love to generate a patch for hive and upload it here if it's of interest. It was the following features:

-Does not require an NFS filer
-Utilizes multiple disks and multiple cpus on a slave host
-Entire source directory for any test failure is saved
-Highly configurable. A properties file is used for base configuration and many items can be overridden at runtime
-Patch builds can take a URL meaning the patch can be pulled directly from JIRA
-Reliable. We are using this to test all patches internally
-Tests can be easily isolated or ignored
-The framework itself is tested via unit tests

Utilizing 8 hosts internally we have been able to get the trunk unit tests down to 60 minutes. 

+1 to the proposal.

Does it use the existing ptest framework or is it a complete rewrite ? Looks like its a complete rewrite, since its in java and earlier one was in python. If so, than shall we remove the earlier framework at the same time we adopt this? Having two frameworks doing same thing will be confusing. Thoughts?

Hi,

Yes it's a re-write. I am in favor of your proposal. I'll generate a patch which does the swap.

Brock

Hold on to generating the patch. Lets see if others agree or disagree with the proposal.

Sounds good! FWIW, I figured we'd let the patch sit for a while.

This sounds great. Not requiring python is a positive. 

Thank you for the feedback!!

[~kevinwilfong] [~gangtimliu] [~pamelavagata] Are you guys still using python based ptest framework? This new framework looks promising.

[~brocknoland] I think you should go ahead and create the patch. Lets not rip-off python ptest yet. Lets keep it around while we familiarize ourself with the new framework.

Sounds good, will do!

https://reviews.facebook.net/D11427

To summarize, here is where we are at:

-HIVE-4675 (this jira) contains ptest2 which works on a fixed number of dedicated hosts
-HIVE-4815 updates ptest2 to work with ec2 spot instances
-An Apache Jenkins build has been executing over the holiday weekend 

What are you thoughts on committing HIVE-4675 and HIVE-4815 [~ashutoshc]?

I have been using ptest2 to execute Hive trunk builds on the Apache jenkins: https://builds.apache.org/job/Hive-trunk-hadoop1-ptest/. The tests have been running on ec2 spot instances. Things have been going very well. It takes about 2 hours via 8 XL ec2 spot instances. Since build 27 I have only been making minor changes.

Summary of Builds since stabilization
* Passed [28, 29, 33, 34, 35, 36, 38, 39, 40]
* Failed due a flaky test [27, 30, 37]
* Failed due to my mistake [31, 32] (compilation error) [41] (restarted the webserver hosting the service)

Awesome work, Brock! I saw ptest builds on apache jenkins machines, really cool stuff. I havent looked at patches yet, but will start taking a look soon. cc: [~appodictic] He might be interested in this work as well.

Sounds good! FWIW, the other builds are waiting on an INFRA issue: INFRA-6525

I used this framework to run tests on hive on a single node. It took about half the time that it normally takes which is great. However, I am unable to figure out the failing tests. I got a message that goes:

TestOrcHCatLoader has one or more failing tests... Also, it doesn't seem like the output is integrated with the ant testreport target. It would be great to see a summary of failing tests. Could you please elaborate on how to get an idea of the failing tests.

Thanks!

Hi,

Great to hear! The TEST-*.xml file should be in the "logs" directory in the working dir. Typically we run this via jenkins and then in the jenkins build script copy the TEST-*.xml files into a directory for jenkins to parse.

I think we could generate some kind of report as well, did you want to create an enhancement request describing what you'd like?

Brock

[~brocknoland] I have raised HIVE-4842 for the same. 

Thanks!

Hi,

Just curious if anyone has started reviewing this yet?  

The reason I ask is HIVE-4815 did a lot of refactoring of this code so that patch by itself is quite large.  If no one has started reviewing this then I am inclined to merge this patch and HIVE-4815 because the total size of the combined patch is actually smaller than the current patch on this JIRA.

TLDR: If I merge this jira with HIVE-4815 the result is a smaller patch.

Brock

I for one hasn't gotten around to look at this one. Quite a big patch, so need to allocate continuous amount of time for it : ) I am fine with combining two patches.

Sounds good, will do! I said it earlier but I'll say it again, sorry for the large patch!

Other than Ashutosh I haven't heard of interest in reviewing this change therefore I am assuming no else has started reviewing it. Therefore I'll go ahead and consolidate patches as previously discussed.

Linked to Review item: https://reviews.facebook.net/D11427?large=true#toc

Minor changes: Remove whitespace, fix xml dependency version, and allow configuring the number of log dirs per test "profile"

Latest patch support pre-commit testing. Since this patch is so damn large already I won't be making anymore changes to this other than critical/blocker bug fixes.

OK the latest patch is up and [running pre-commit tests|https://builds.apache.org/job/PreCommit-HIVE-Build/].  The only issue I've seen is that pre-commit build has a lot of patches to test! :) I know of ways we can increase throughput but I think we should wait until this mega-patch is committed to avoid making it even larger.

+1 it is already working well. Will commit in 24 hours.

I noticed the patch had some junk files in there like : 

rig
A       testutils/ptest2/src/test/resources/test-outputs/skewjoin.q-ab8536a7-1b5c-45ed-ba29-14450f27db8b-hive.log
!       testutils/ptest2/src/test/resources/test-outputs/skewjoin.q-ab8536a7-1b5c-45ed-ba29-14450f27db8b-hive.log.orig

Can you please regenerate?

Hi,

I have the \*-hive.log files in there as part of the output parsing tests to ensure that we don't accidentally try and parse the hive.log logs. I have stripped them down to only a few lines. Not sure where the .orig file came from as it's not in the patch?

Brock

I understand. It is all good then. The .orig files were generated by my patch program.

Nice work Brock. Big data does not need shared NFS file systems for unit tests.

Thanks!! I have a couple small fixes which I'll submit tomorrow and then we can move the ptest build infrastructure to the official source tree!

This issue has been fixed and released as part of 0.12 release. If you find further issues, please create a new jira and link it to this one.

