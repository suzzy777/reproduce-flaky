Not sure what the root cause here is exacly, but for some reason {{CoordActionInputCheckXCommand}} runs for a very long time. This time it was 2 minutes and it was holding the lock of the coordinator action. Therefore the rest of the {{XCommand}} calls did not achieve anything.

{noformat}
07:14:51,788 [CallableQueue-1] DEBUG CoordActionInputCheckXCommand:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] Execute command [coord_action_input] key [0000000-180529071448012-oozie-root-C]
07:14:51,788 [CallableQueue-1] DEBUG CoordActionInputCheckXCommand:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] [0000000-180529071448012-oozie-root-C@1]::ActionInputCheck:: Action is in WAITING state.
07:14:51,790 [CallableQueue-1]  INFO CoordActionInputCheckXCommand:520 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] [0000000-180529071448012-oozie-root-C@1]::CoordActionInputCheck:: Missing deps: ${coord:latestRange(-5,0)}#${coord:latestRange(-5,0)}#${coord:latestRange(-5,0)}#${coord:latestRange(-5,0)}#${coord:latestRange(-5,0)}#${coord:latestRange(-5,0)}
07:14:51,792 [CallableQueue-1] DEBUG CoordInputLogicEvaluatorPhaseOne:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] Data set [A] is unresolved set, will get resolved in phase two
07:14:51,792 [CallableQueue-1] DEBUG CoordInputLogicEvaluatorPhaseOne:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] Data set [B] is unresolved set, will get resolved in phase two
07:14:51,792 [CallableQueue-1] DEBUG CoordInputLogicEvaluatorUtil:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] Input logic expression for [(dependencyBuilder.input("A").build() && dependencyBuilder.input("B").build())] and evaluate result is [PHASE_TWO_EVALUATION]
07:14:51,793 [CallableQueue-1] DEBUG CoordActionInputCheckXCommand:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] [0000000-180529071448012-oozie-root-C@1]::ActionInputCheck:: Checking Latest/future
...  (absolutely nothing is logged from this thread for 2 minutes)
07:16:57,191 [CallableQueue-1] DEBUG CoordInputLogicEvaluatorPhaseTwo:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] Resolved status of Data set A with min -1 and wait -1  =  false
07:16:57,191 [CallableQueue-1] DEBUG CoordInputLogicEvaluatorUtil:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] Input logic expression for [(dependencyBuilder.input("A").build() && dependencyBuilder.input("B").build())] and evaluate result is [FALSE]
...
07:16:57,195 [CallableQueue-1] DEBUG CoordActionInputCheckXCommand:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-180529071448012-oozie-root-C] ACTION[0000000-180529071448012-oozie-root-C@1] Released lock for [0000000-180529071448012-oozie-root-C] in [coord_action_input]
{noformat}

I was able to reproduce this locally. It was running on DEBUG level and the root cause seems to be an excessive amount of calls to log4j. There's a synchronized method somewhere (or probably more than one) which slows down everything if multiple threads are logging extensively. Although I remember seeing these tests fail on INFO level, too. 

