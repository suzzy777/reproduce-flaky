Thanks for taking this up!
Let me know if you have any questions about HA.

patch is available on RB. 
- Current design
SLAService(SLACalculatorMemory) has memory structure (slaMap) to keep track of SLA status of job/action.   When oozie server starts up,  it loads from DB(SLASummary and SLARegistration tables) and populates slaMap, then validates each SLA status, updates DB.   Afterwards,  whenever job status change occurs,  slaMap is updated.   SLAService also regularly iterate through slaMap.

- HA approach
initial loading at start-up will be distributed among multiple oozie instances using ZKJobsConcurrencyService. issue is that slaMap of each oozie instance becomes a partial set.  No guarantee that slaMap of a certain oozie contains entry for job running on the instance. (mod split of ZKJobsConcurrencyService is nothing to do with where job runs, could result in cache miss). in such case, slaMap adds new entry for the job, (involve extra DB calls) upon receiving job status change. 
since a job could run across multiple instances,  slaMap could be out of sync, might include obsolete entry of job not running on the instance any more. regular iteration could still pick up the obsolete entry, but always validate against DB, so consistency is kept (although inefficient).   to keep slaMap synced, oozie intance can broadcast the update to other instances, but i thought it's a bit overkill, thus not implemented. 



one change from initial design mentioned above,  Initial loading at start-up, each oozie server loads whole set from DB into SlaMap (instead of loading partial set).   otherwise some SlaMap entries will not be loaded and missed. (e.g., 1st server A starts, all entries loaded to A,   then Server B starts,  suppose a half set loaded to B (since 2 servers running), if server A is down,  the remaining half will be lost, and not checked after that).  
other than that, the approach is as mentioned above. when iterating over Slamap, ZK lock prevents multiple servers from updating the same entry.

patch is on RB.   [~rkanter]   if any feedback/suggestion on the patch, appreciated it.



Testing JIRA OOZIE-1678

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 4 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 15 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1473
.    Tests failed: 3
.    Tests errors: 2

.    The patch failed the following testcases:

.      testMemoryUsageAndSpeed(org.apache.oozie.service.TestPartitionDependencyManagerEhcache)
.      testActionInputCheckLatestActionCreationTime(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommandNonUTC)
.      testBundleId(org.apache.oozie.servlet.TestBulkMonitorWebServiceAPI)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/1313/

Testing JIRA OOZIE-1678

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 4 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 16 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1480
.    Tests failed: 5
.    Tests errors: 1

.    The patch failed the following testcases:

.      testActionInputCheckLatestActionCreationTime(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommand)
.      testCoordStatusTransitServiceSuspendedBottomUp(org.apache.oozie.service.TestStatusTransitService)
.      testConcurrencyReachedAndChooseNextEligible(org.apache.oozie.service.TestCallableQueueService)
.      testTimeOutWithUnresolvedMissingDependencies(org.apache.oozie.command.coord.TestCoordPushDependencyCheckXCommand)
.      testActionInputCheckLatestActionCreationTime(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommandNonUTC)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/1324/

to fix flaky tests with NPE from JPAService , added QueryExecutor reset logic in JPAService.destroy in v13 patch, but it seems it doesn't help much, so removing the logic.   

Testing JIRA OOZIE-1678

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 4 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 15 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1482
.    Tests failed: 4
.    Tests errors: 1

.    The patch failed the following testcases:

.      testBundleEngineChange(org.apache.oozie.servlet.TestV1JobServletBundleEngine)
.      testBundleEngineSuspend(org.apache.oozie.servlet.TestV1JobServletBundleEngine)
.      testBundleEngineReRun(org.apache.oozie.servlet.TestV1JobServletBundleEngine)
.      testTimeOutWithUnresolvedMissingDependencies(org.apache.oozie.command.coord.TestCoordPushDependencyCheckXCommand)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/1327/

attached final version

committed to trunk. thank you for all review comments!

