Some server side errors have deeply nested _suppressed_ or _caused by_ errors which contains informative messages for further problem recognition. Possible such mechanism need to be disabled on production environment. Example of non informative error on client side:
{noformat}
org.apache.ignite.internal.client.thin.ClientServerError: Ignite failed to process request [1]: Failed to update keys (retry update if possible).: [1] (server status code [1])
{noformat}
but full stack holds the root case:

{noformat}
Caused by: class org.apache.ignite.internal.processors.cache.CachePartialUpdateCheckedException: Failed to update keys (retry update if possible).: [1]
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.onPrimaryError(GridNearAtomicAbstractUpdateFuture.java:397)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2567)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2544)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.put(IgniteCacheProxyImpl.java:1316)
	... 13 more
	Suppressed: class org.apache.ignite.IgniteCheckedException: Failed to update keys.
		... 23 more
		Suppressed: class org.apache.ignite.IgniteCheckedException: Runtime failure on search row: SearchRow
			... 25 more
		Caused by: class org.apache.ignite.IgniteCheckedException: org.apache.ignite.internal.binary.BinaryObjectImpl cannot be cast to org.apache.ignite.client.IgniteBinaryTest$ThinBinaryValue <-- here !!!
			at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$AtomicCacheUpdateClosure.update(GridCacheMapEntry.java:6379)
			... 30 more
{noformat}

looks like it would be useful to have additional setting in ThinClientConfiguration#showFullStackOnClientSide configured both as direct setting and through JMX (ClientProcessorMXBean#showFullStackOnClientSide).
