In deed, it comes from fb's l2 cache by [~avf]'s nice work,  i just did a simple backport here. It could improve a linear-time search through the whole cache map into a log-access-time map search.
I did a small bench, showed it brings a bit gc overhead, but considering the evict on close triggered by frequent compaction activity, seems reasonable?

and i thought bring a "evictOnClose" config  into BucketCache ctor and only put/remove the new index map while evictOnClose is true, seems this value could be set by each family schema, but BucketCache is a global instance not per each family, so just ignore it rightnow...