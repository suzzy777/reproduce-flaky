Commit 114be74012f3bfc4738eba8132c68d0e313e4e4f in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=114be74 ]

GEODE-5547: cleanup RegionManagementDUnitTest

Convert test to use DistributedTestRule and lay the groundwork
to make it easier to eventually remove ManagementTestRule.


Commit 6c2bc150be9819068441921425f58acbf8166453 in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6c2bc15 ]

GEODE-5547: increase Await timeout

This should also hopefully fix any new occurrences of GEODE-3335.


Failed again in CI with stack trace:
{noformat}
org.apache.geode.management.RegionManagementDUnitTest > testPartitionedRegion FAILED
    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.management.RegionManagementDUnitTest$$Lambda$50/171704829.run in VM 0 running on Host af42c91afcb4 with 4 VMs
        at org.apache.geode.test.dunit.VM.invoke(VM.java:433)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:402)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:361)
        at org.apache.geode.management.RegionManagementDUnitTest.testPartitionedRegion(RegionManagementDUnitTest.java:215)
	
        Caused by:
        org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a lambda expression in org.apache.geode.management.RegionManagementDUnitTest that uses int 
        Expected size:<6> but was:<5> in:
        <[javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
            javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
            javax.management.Notification[source=172.17.0.4(299)<v19>-41003][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
            javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
            javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion]]> within 300 seconds.
            at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:145)
            at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:122)
            at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:32)
            at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:890)
            at org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:711)
            at org.apache.geode.management.RegionManagementDUnitTest.verifyMemberNotifications(RegionManagementDUnitTest.java:652)
            at org.apache.geode.management.RegionManagementDUnitTest.lambda$testPartitionedRegion$bb17a952$5(RegionManagementDUnitTest.java:215)	

            Caused by:
            java.lang.AssertionError: 
            Expected size:<6> but was:<5> in:
            <[javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
                javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
                javax.management.Notification[source=172.17.0.4(299)<v19>-41003][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
                javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
                javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion]]>
                at org.apache.geode.management.RegionManagementDUnitTest.lambda$verifyMemberNotifications$8(RegionManagementDUnitTest.java:652)
{noformat}

The test is expecting 3 members to generate create and destroy notifications for the Region, but one of the members fails to ever generate a destroy notification for the region.


I suspect this is a product bug in the management code (maybe in the resource listener mechanism). 5 minutes should be more than enough time to wait for the region close notification.

The region closed notification would go through InternalDistributedSystem.notifyResourceEventListeners which has a catch block that logs a warning if something prevented the ResourceEvent from going through. The stdout doesn't show any warnings or other problems. It shows vm1, vm2, and vm3 all closing the Region at about the same time. Then vm0 awaits for all the notifications but never receives a closed region event for vm3. It only received closed region events for vm1 and vm2.
{noformat}
[vm1] [info 2018/11/17 01:06:43.395 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Received method: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1430016560.run with 0 args on obje
ct: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1430016560@6d3bccff

[vm1] [info 2018/11/17 01:06:43.396 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Partitioned Region /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion with prId=2 closing.

[vm1] [info 2018/11/17 01:06:43.407 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Partitioned Region /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion with prId=2 closed.

[vm1] [info 2018/11/17 01:06:43.412 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Got result: null
[vm1]  from org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1430016560.run with 0 args on object: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1430016560@6d3bccff 
(took 16 ms)

[vm2] [info 2018/11/17 01:06:43.415 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Received method: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1578039571.run with 0 args on obje
ct: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1578039571@5dee51b0

[vm2] [info 2018/11/17 01:06:43.418 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Partitioned Region /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion with prId=2 closing.

[vm2] [info 2018/11/17 01:06:43.427 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Partitioned Region /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion with prId=2 closed.

[vm2] [info 2018/11/17 01:06:43.432 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Got result: null
[vm2]  from org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1578039571.run with 0 args on object: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$110/1578039571@5dee51b0 (took 15 ms)

[vm3] [info 2018/11/17 01:06:43.435 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Received method: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$111/895653050.run with 0 args on object: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$111/895653050@220a40ad

[vm3] [info 2018/11/17 01:06:43.438 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Partitioned Region /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion with prId=2 closing.

[vm3] [info 2018/11/17 01:06:43.445 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Partitioned Region /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion with prId=2 closed.

[vm3] [info 2018/11/17 01:06:43.449 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Got result: null
[vm3]  from org.apache.geode.management.RegionManagementDUnitTest$$Lambda$111/895653050.run with 0 args on object: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$111/895653050@220a40ad (took 13 ms)

[vm0] [info 2018/11/17 01:06:43.495 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Received method: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$121/1140731619.run with 0 args on object: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$121/1140731619@260aa94e

[vm0] [info 2018/11/17 01:11:43.568 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Got result: EXCEPTION_OCCURRED
[vm0] org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a lambda expression in org.apache.geode.management.RegionManagementDUnitTest that uses int 
[vm0] Expected size:<6> but was:<5> in:
[vm0] <[javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(299)<v19>-41003][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion]]> within 300 seconds.
[vm0]   at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:145)
[vm0]   at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:122)
[vm0]   at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:32)
[vm0]   at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:890)
[vm0]   at org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:711)
[vm0]   at org.apache.geode.management.RegionManagementDUnitTest.verifyMemberNotifications(RegionManagementDUnitTest.java:652)
[vm0]   at org.apache.geode.management.RegionManagementDUnitTest.lambda$testPartitionedRegion$bb17a952$5(RegionManagementDUnitTest.java:215)
[vm0]   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[vm0]   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[vm0]   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[vm0]   at java.lang.reflect.Method.invoke(Method.java:498)
[vm0]   at hydra.MethExecutor.executeObject(MethExecutor.java:244)
[vm0]   at org.apache.geode.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:70)
[vm0]   at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
[vm0]   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[vm0]   at java.lang.reflect.Method.invoke(Method.java:498)
[vm0]   at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
[vm0]   at sun.rmi.transport.Transport$1.run(Transport.java:200)
[vm0]   at sun.rmi.transport.Transport$1.run(Transport.java:197)
[vm0]   at java.security.AccessController.doPrivileged(Native Method)
[vm0]   at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
[vm0]   at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)
[vm0]   at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
[vm0]   at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
[vm0]   at java.security.AccessController.doPrivileged(Native Method)
[vm0]   at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
[vm0]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
[vm0]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
[vm0]   at java.lang.Thread.run(Thread.java:748)
[vm0] Caused by: java.lang.AssertionError: 
[vm0] Expected size:<6> but was:<5> in:
[vm0] <[javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(299)<v19>-41003][type=gemfire.distributedsystem.cache.region.created][message=Region Created With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(290)<v17>-41001][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion],
[vm0]     javax.management.Notification[source=172.17.0.4(294)<v18>-41002][type=gemfire.distributedsystem.cache.region.closed][message=Region Destroyed/Closed With Name /RegionManagementDUnitTest_testPartitionedRegion_partitionedRegion]]>
[vm0]   at org.apache.geode.management.RegionManagementDUnitTest.lambda$verifyMemberNotifications$8(RegionManagementDUnitTest.java:652)
[vm0]   at org.awaitility.core.AssertionCondition$1.eval(AssertionCondition.java:55)
[vm0]   at org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:192)
[vm0]   at org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:179)
[vm0]   at java.util.concurrent.FutureTask.run(FutureTask.java:266)
[vm0]   ... 3 more
[vm0]  from org.apache.geode.management.RegionManagementDUnitTest$$Lambda$121/1140731619.run with 0 args on object: org.apache.geode.management.RegionManagementDUnitTest$$Lambda$121/1140731619@260aa94e (took 300072 ms)

[vm0] [info 2018/11/17 01:11:43.582 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Received method: org.apache.geode.test.dunit.NamedRunnable.run with 0 args on object: runnable(disconnectFromDS)

[vm0] [info 2018/11/17 01:11:43.643 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] GemFireCache[id = 396569269; isClosing = true; isShutDownAll = false; created = Sat Nov 17 01:06:39 UTC 2018; server = false; copyOnRead = false; lockLease = 120; lockTimeout = 60]: Now closing.

[vm0] [info 2018/11/17 01:11:43.653 UTC <RMI TCP Connection(1)-172.17.0.4> tid=0x20] Shutting down DistributionManager 172.17.0.4(285)<v20>:41004. 
{noformat}

In the middle of the method LocalRegion.basicDestroyRegion is the invocation of InternalDistributedSystem.handleResourceEvent:
{noformat}
          if (!isInternalRegion()) {
            InternalDistributedSystem system = this.cache.getInternalDistributedSystem();
            system.handleResourceEvent(ResourceEvent.REGION_REMOVE, this);
          }
{noformat}
I think something would have to prevent this block from being reached or executed when closing the region or maybe even an early return from system.handleResourceEvent without doing anything:
{noformat}
  public void handleResourceEvent(ResourceEvent event, Object resource) {
    if (disableManagement) {
      return;
    }
    if (resourceListeners.size() == 0) {
      return;
    }
    notifyResourceEventListeners(event, resource);
  }
{noformat}
disableManagement is final and should be false for this test (it's a management test). resourceListeners is not final but it is a CopyOnWriteArrayList, so unless checking the size() found a null value this should be ok. Since the manager received a create region notification, I'm going to say this was not null.

Beyond that InternalDistributedSystem.notifyResourceEventListeners would have thrown or logged a warning unless ManagementListener threw CancelException which it shouldn't do based on the info level logs from stdout. 

That leaves the small chance of some subtle bug (probably a race condition or concurrency bug) in ManagementListener.java. The first line of ManagementListener.shouldProceed is:
{noformat}
    InternalDistributedSystem.getConnectedInstance();
{noformat}
...looks weird but the point of this line is to check for cancelation. It will either return (and do nothing) or if the cache is being closed for any reason then it'll throw a CancelException. Again, based on the lines of the test and the info level logs from stdout, it really doesn't look like it would have a thread invoking Cache.close or DistributedSystem.disconnect -- but if it did then that would explain the failure.

So far, I can't reproduce the failure and it's not obvious what changes to the test would help prevent this since there's no action that would be closing the Cache or DistributedSystem in vm3 while vm0 awaits the JMX notifications.

Commit a9fe65dd390a9b74e304f32a825f11dbafd28aed in geode's branch refs/heads/GEODE-5547-RegionManagementDUnitTest from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=a9fe65d ]

GEODE-5547: Log info message when canceling ManagementListener


Commit 35e612bac5e75044449586faabbd357034fe485d in geode's branch refs/heads/GEODE-5547-RegionManagementDUnitTest from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=35e612b ]

GEODE-5547: Log info message when canceling ManagementListener


Commit 0c63ace61ef3f57099af45a8c9f1c9389679e634 in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=0c63ace ]

GEODE-5547: Log info message when canceling ManagementListener


