Let's follow [~apurtell]'s suggestion to see if it could fix the flaky tests.

https://ci-hbase.apache.org/job/HBase-Run-Specific-Test/

I set up a jenkins job to only run TestReplicationValueCompressedWAL, and it seems just like what [~apurtell] said, after I changed the code to read all bytes at once before submitting to the decompressor, the test never failed...

Let's keep an eye on it. The test will be executed every 30 minutes. If tomorrow morning it still keeps passing, I think we can confirm this is the root cause then.

[~haxiaolin] FYI.

https://github.com/apache/hbase/commit/1417faeb952c97421ac5b150f2c16b9a8122cec1

readFully() is exactly what I had in the initial implementation. This buffering is an “extra” copy. A colleague working with me at the time convinced me to try relying on the stream implementations of the codecs to avoid the extra copy. However it seems that is not always reliable. 

+1 for putting readFully back in the decompression code path. It provides reliability, which is the most important thing. For performance, if it is really a measured problem here for someone in the future, we can come back to this. 

I reverted the code back to master and soon it faild. See this build:

https://ci-hbase.apache.org/job/HBase-Run-Specific-Test/15/

I will push a new commit to HBASE-28028 before sleeping to see if we can solve the failure.

https://github.com/Apache9/hbase/commit/5e5c210bf8553b9a9e09adc7aedf6a10fb5953cc

I found a very trick way to always read enough data without introducing an extra buffer.

Thanks.

Ah, welcome back [~apurtell].

Please see this commit, I think I found a possible way to use readFully without introducing an extra buffer.

https://github.com/Apache9/hbase/commit/5e5c210bf8553b9a9e09adc7aedf6a10fb5953cc

Thanks.

bq. I found a very trick way to always read enough data without introducing an extra buffer.

Nice. Sure, that input stream is our private class and can be used for tricks like this. Looks good to me. 

All the recent runs for the jenkins job are succeeded.

Let me open a PR.

{quote}
Nice. Sure, that input stream is our private class and can be used for tricks like this. Looks good to me.
{quote}

Thanks [~apurtell]!

Pushed to branch-2.5+.

Thanks all for helping!

Results for branch branch-2.5
	[build #393 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/393/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/393/General_20Nightly_20Build_20Report/]


(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/393/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/393/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/393/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-3
	[build #37 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-3/37/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-3/37/General_20Nightly_20Build_20Report/]




(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-3/37/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-3/37/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch master
	[build #896 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/896/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/896/General_20Nightly_20Build_20Report/]




(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/896/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/896/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2
	[build #871 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/871/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/871/General_20Nightly_20Build_20Report/]


(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/871/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/871/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/871/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


(y) It brings hope of an end to the impressively unstable WAL compression + replication. I'll try it on our clusters. Thanks.

