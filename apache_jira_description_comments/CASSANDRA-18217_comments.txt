It seems CASSANDRA-16092 have not check into trunk?

Here is a patch removing the need of using {{ALLOW FILTERING}} when all the filtering expressions are supported by a single index group:
||PR||CI||
|[16052|https://github.com/maedhroz/cassandra/pull/11]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2872/workflows/6b028cb0-214d-49a3-867a-cb9485155f09] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2872/workflows/1d9f147c-e387-43ea-80a9-2a493f0cb655]|

The approach consists on delegating most of the {{ALLOW FILTERING}} checks to a series of {{needsFiltering}} methods on the restrictions, so they can find out if is an index group able to process them.

Additionally to the number of queried columns, I have found that there is also a requirement to use AF when there query has multiple contains expressions, even if they are for the same column. For example:
{code:java}
CREATE TABLE %s (pk int primary key, value map<int, text>);
CREATE CUSTOM INDEX ON %s(ENTRIES(value)) USING 'StorageAttachedIndex';
SELECT * FROM %s WHERE value[1] = 'v1' AND value[2] = 'v2' ALLOW FILTERING;
{code}
I think that makes sense for legacy indexes, where we can only efficiently query a single value. However, SAI doesn't seem to perform filtering in that case, so IUC it shouldn't require {{{}ALLOW FILTERING{}}}. So I have added a new {{Index#filtersMultipleContains}} method to define whether the index implementation is able to process multiple contains without filtering.

I have also eliminated all the now unneeded uses of {{ALLOW FILTERING}} that I have found on the tests. In order to reduce the risk of missing something, I have extended {{IndexQuerySupport.BaseQuerySet#validate}} to verify that any query supplied with AF really needs it.

Regarding the test failures on the CI results above, I think none of them are introduced by the patch. Some of them are flakies that we introduced when merging CASSANDRA-18062 into the feature branch:
 * {{o.a.c.distributed.test.VirtualTableFromInternodeTest}}: Can be consistently reproduced on the feature branch.
 * {{o.a.c.tools.TopPartitionsTest.testStartAndStopScheduledSampling}}: Can be hit on trunk, it's CASSANDRA-18065
 * {{o.a.c.index.CustomIndexTest.indexBuildingPagesLargePartitions}}: [Can be hit on the feature branch|https://app.circleci.com/pipelines/github/adelapena/cassandra/2874/workflows/464a134d-70cb-4992-9c72-3ba3e729d3b5/jobs/41653/tests]
 * {{o.a.c.index.sai.disk.SelectiveIntersectionTest.tracingIsCorrectlyReported}}: [Can be hit on the feature branch|https://app.circleci.com/pipelines/github/adelapena/cassandra/2875/workflows/7882e9ad-6f42-4801-b00e-2a4db6541552/jobs/41835/tests]
 * {{o.a.c.index.sai.cql.CompositePartitionKeyIndexTest.queryFromMemtable}}: [Can be hit on the feature branch|https://app.circleci.com/pipelines/github/adelapena/cassandra/2874/workflows/464a134d-70cb-4992-9c72-3ba3e729d3b5/jobs/41656/tests]. It's due to not waiting for the index build. It can easily be fixed here.

Done a first pass, left a few comments but I can only go as far as the PR. Lacking SAI knowledge I can't comment on how it fits the big picture, hope it helps though.

LGTM +1

Thanks for the review. I have squashed the two commits. No rebase is needed. 

[~maedhroz] I think this is ready to be merged into the feature branch in your repo?

[~maedhroz] perhaps this is a good moment to move the feature branch to the ASF repo, like in the [cep-15-accord|https://github.com/apache/cassandra/tree/cep-15-accord] and [cep-21-tcm|https://github.com/apache/cassandra/tree/cep-21-tcm] branches, so everyone can push patches when they are ready to commit?

[~adelapena] Indeed, that is long overdue. I'm going to start on that shortly...

I've created a new {{cep-7-sai}} [branch|https://github.com/apache/cassandra/tree/cep-7-sai] in the ASF repo. You should be able to switch your target branch w/o any issues, as it should be identical to my {{CASSANDRA-16052}} branch. A trunk rebase will be necessary soon, but that can proceed after the trie-indexed SSTables stuff merges to trunk.

Thanks for creating the branch.

Committed to theÂ new branch as [fa85a191c5e0bd508da584412648308888769cb9|https://github.com/apache/cassandra/commit/fa85a191c5e0bd508da584412648308888769cb9].

