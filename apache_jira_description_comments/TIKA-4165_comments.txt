lxb007981 opened a new pull request, #1436:
URL: https://github.com/apache/tika/pull/1436

   ### Description
   
   - Type of change :
     - [ ] New feature
     - [ ] Bug fix for existing feature
     - [ ] Code quality improvement
     - [X] Addition or Improvement of tests
     - [ ] Addition or Improvement of documentation
   
   Fix a flaky test, caused by nondeterministic iteration order of HashMap
   
   ### Related Test
   [org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest.testVarious](https://github.com/lxb007981/tika/blob/971f0cbd9b46c1d7fb96b0a3732c3fc870920aba/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSParserTest.java#L59)
   
   ### Root Cause
   https://github.com/lxb007981/tika/blob/d466492e0a01c8ee28c108bc3022f1a03ff530de/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java#L119
   
   When recursively extracting metadata from an XPS file, a simple `HashMap` is used and iterated. However, note that `HashMap` does not gurantee the order of iteration, the extracted metadata have no guaranteed order in the resulting metadata list. And later in the test `org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest.testVarious`, the test assumes the order of metadata in the list is the same as the `HashMap` insertion order, thus renders the test flaky.
   
   ### Fix
   We sort the metadata list before doing comparison.
   
   ### How to reproduce the test
   **Java version**: 11.0.20.1
   **Maven version**: 3.6.3
   
   1. Build the module
   `mvn clean install -DskipTests -pl tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module -am`
   2. Test without shuffling
   `mvn -pl tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module test -Dtest=org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest#testVarious`
   This test passed.
   
   3. Test with shuffling using [NonDex](https://github.com/TestingResearchIllinois/NonDex)
   `mvn -pl tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module edu.illinois:nondex-maven-plugin:2.1.1:nondex -Dtest=org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest#testVarious`
   
   This test passed with the proposed fix but failed without it.




Thank you for opening this. What do you think about changing the implementation in the parser to use a LinkedHashMap to guarantee insertion order?

Thank you for the comment. Yes I did considered changing HashMap to LinkedHashMap, but I am not sure if here the order of extracted metadata is intended to be fixed? If so, using LinkedHashMap should be a better solution.

Let's go with LinkedHashMap. Thank you!

lxb007981 closed pull request #1436: [TIKA-4165] fix a flaky test.
URL: https://github.com/apache/tika/pull/1436




lxb007981 opened a new pull request, #1436:
URL: https://github.com/apache/tika/pull/1436

   ### Description
   
   - Type of change :
     - [ ] New feature
     - [ ] Bug fix for existing feature
     - [ ] Code quality improvement
     - [X] Addition or Improvement of tests
     - [ ] Addition or Improvement of documentation
   
   Fix a flaky test, caused by nondeterministic iteration order of HashMap
   
   ### Related Test
   [org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest.testVarious](https://github.com/lxb007981/tika/blob/971f0cbd9b46c1d7fb96b0a3732c3fc870920aba/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSParserTest.java#L59)
   
   ### Root Cause
   https://github.com/lxb007981/tika/blob/d466492e0a01c8ee28c108bc3022f1a03ff530de/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java#L119
   
   When recursively extracting metadata from an XPS file, a simple `HashMap` is used and iterated. However, note that `HashMap` does not gurantee the order of iteration, the extracted metadata have no guaranteed order in the resulting metadata list. And later in the test `org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest.testVarious`, the test assumes the order of metadata in the list is the same as the `HashMap` insertion order, thus renders the test flaky.
   
   ### Fix
   We sort the metadata list before doing comparison.
   
   ### How to reproduce the test
   **Java version**: 11.0.20.1
   **Maven version**: 3.6.3
   
   1. Build the module
   `mvn clean install -DskipTests -pl tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module -am`
   2. Test without shuffling
   `mvn -pl tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module test -Dtest=org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest#testVarious`
   This test passed.
   
   3. Test with shuffling using [NonDex](https://github.com/TestingResearchIllinois/NonDex)
   `mvn -pl tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module edu.illinois:nondex-maven-plugin:2.1.1:nondex -Dtest=org.apache.tika.parser.microsoft.ooxml.xps.XPSParserTest#testVarious`
   
   This test passed with the proposed fix but failed without it.




Thank you for the suggestion. Now the fix is using `LinkedHashMap`.

tballison merged PR #1436:
URL: https://github.com/apache/tika/pull/1436




SUCCESS: Integrated in Jenkins build Tika Â» tika-main-jdk11 #1369 (See [https://ci-builds.apache.org/job/Tika/job/tika-main-jdk11/1369/])
[TIKA-4165] fix a flaky test by replacing HashMap with LinkedHashMap (#1436) (github: [https://github.com/apache/tika/commit/81d8bd0e2b112f6a95ce06c7995f47804f1c3d28])
* (edit) tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/ooxml/xps/XPSExtractorDecorator.java


