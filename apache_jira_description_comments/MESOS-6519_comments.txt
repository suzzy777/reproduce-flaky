This is due to the fact that we don't properly wait for both the agents to finish re-registration before querying the state endpoint.  If one of the agents re-tries the re-registration (e.g., auth timeout) master sends 2 `SlaveReregisteredMessage` messages the following test code finishes which is incorrect.

{code}
  Future<SlaveReregisteredMessage> slaveReregisteredMessage1 =
    FUTURE_PROTOBUF(SlaveReregisteredMessage(), _, _);

  Future<SlaveReregisteredMessage> slaveReregisteredMessage2 =
    FUTURE_PROTOBUF(SlaveReregisteredMessage(), _, _);

  // Failover the master.
  master->reset();
  master = StartMaster();
  ASSERT_SOME(master);

  // Simulate a new master detected event to the slaves (but not the scheduler).
  slavesDetector.appoint(master.get()->pid);

  AWAIT_READY(slaveReregisteredMessage1);
  AWAIT_READY(slaveReregisteredMessage2);
{code}

Fix is to include the correct PID in the `FUTURE_PROTOBUF` calls.

https://reviews.apache.org/r/53318/

commit 81b3eef354f0cc013e9c21dfab2b2d7b3a77d9a4
Author: Vinod Kone <vinodkone@gmail.com>
Date:   Mon Oct 31 14:24:35 2016 -0700

    Fixed flaky MasterTest.OrphanTasksMultipleAgents test.
    
    See the attached bug for details.
    
    Review: https://reviews.apache.org/r/53318



