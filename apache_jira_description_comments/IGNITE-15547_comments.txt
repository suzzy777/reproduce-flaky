Thanks for your work.
1. No additional tests found, plz append them.
2. run TC and obtain green visa (After tests were added rerun https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-SubmittingforReview and check as mentioned in doc : "Validate that all tests have passed using TeamCity bot")

Hi, [~andrian.boscanean] !

*UPD* Sorry, I reproduced this issue. It fails in moment of insertion.

-Could you please provide a test or detailed clarification of an issue you found with interfaces. Actually I failed to reproduce described behavior. I succeed to create an index for enum field that implements an interface, as you wrote in description.- 

 

 

{panel:title=Branch: [pull/9427/head] Base: [master] : Possible Blockers (16)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}SPI{color} [[tests 10|https://ci.ignite.apache.org/viewLog.html?buildId=6204746]]
* IgniteSpiTestSuite: TcpDiscoveryWithWrongServerTest.testDisconnectOnRequest - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithWrongServerTest.testWrongHandshakeResponse - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithWrongServerTest.testEarlyDisconnect - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithWrongServerTest.testNoHandshakeResponse - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithAddressFilterTest.testWrongHandshakeResponse - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithAddressFilterTest.testEarlyDisconnect - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithAddressFilterTest.testBasic - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithAddressFilterTest.testDisconnectOnRequest - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryWithAddressFilterTest.testNoHandshakeResponse - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryPendingMessageDeliveryTest.testDeliveryAllFailedMessagesInCorrectOrder - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}RDD{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=6204741]]

{color:#d04437}Basic 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6204756]]
* IgniteBasicTestSuite: GridVersionSelfTest.testVersions - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Platform .NET (Core Linux){color} [[tests 0 TIMEOUT |https://ci.ignite.apache.org/viewLog.html?buildId=6204792]]

{color:#d04437}PDS (Indexing){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6204785]]
* IgnitePdsWithIndexingTestSuite: IgniteTwoRegionsRebuildIndexTest.testRebuildIndexes - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Cache (Failover) 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6204765]]
* IgniteCacheFailoverTestSuite2: GridCacheColocatedFailoverSelfTest.testOptimisticSerializableTxTopologyChange - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Platform .NET (Integrations){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6204793]]
* dll: IgniteSessionStateStoreProviderTest.TestCaching - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
{panel:title=Branch: [pull/9427/head] Base: [master] : New Tests (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Cache 5{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=6204776]]
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertTableVarColumns - PASSED{color}
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertValueVarColumns - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=6204818&amp;buildTypeId=IgniteTests24Java8_RunAll]

{panel:title=Branch: [pull/9427/head] Base: [master] : Possible Blockers (3)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}SPI{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6205530]]
* IgniteSpiTestSuite: TcpClientDiscoverySpiSelfTest.testDisconnectAfterNetworkTimeout - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Cache 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6205458]]
* IgniteCacheTestSuite2: IgniteClientCacheStartFailoverTest.testRebalanceStateConcurrentStart - Test has low fail rate in base branch 1,4% and is not flaky

{color:#d04437}PDS 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6205473]]
* IgnitePdsTestSuite2: ClientAffinityAssignmentWithBaselineTest.testPartitionedTxCache - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
{panel:title=Branch: [pull/9427/head] Base: [master] : New Tests (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Cache 5{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=6205461]]
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertTableVarColumns - PASSED{color}
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertValueVarColumns - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=6205503&amp;buildTypeId=IgniteTests24Java8_RunAll]

{panel:title=Branch: [pull/9427/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
{panel:title=Branch: [pull/9427/head] Base: [master] : New Tests (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Cache 5{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=6205461]]
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertTableVarColumns - PASSED{color}
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertValueVarColumns - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=6205503&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~zstan] Please review my changes. 

[~andrian.boscanean] hi! This patch looks good to me, I've put some minor comments on the PR page, please have a look.

 

[~andrian.boscanean] I do have concerns about performance of using enums in indexes. Using POJO (enum will be considered as POJO) in indexes is possible, but there are tread offs, and the main one is speed of comparison of equal elements (yes, comparison of non-equal elements is pretty fast, but in case of equality of POJO items in index there are additional checks and they aren't optimal). As I understand there are a lot of equal elements in your case, as you want use enum. So, I'd suggest you to test performance of your case. If results won't be OK, it may be faster to use INT instead of ENUM.

{panel:title=Branch: [pull/9427/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
{panel:title=Branch: [pull/9427/head] Base: [master] : New Tests (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Cache 5{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=6211753]]
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertTableVarColumns - PASSED{color}
* {color:#013220}IgniteCacheWithIndexingTestSuite: EnumClassImplementingIndexedInterfaceTest.testInsertValueVarColumns - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=6211795&amp;buildTypeId=IgniteTests24Java8_RunAll]

Hi [~timonin.maksim]. I fixed comments on PR. Could you take a look.

Regarding performance, in our case there is no big amount of data that will use the enums. 

[~andrian.boscanean] i check your fix, 
1. fill issue comment correctly, i.e. : "IGNITE-15547 Accept Classes/Enums extending an Interface which is used as cache indexed field"
2. replace redundant :
https://github.com/apache/ignite/pull/9427/files#diff-53acab6205b01405f8cb887ffa59ff4dd8c831b38ff61e4aa3e9418cdb19cf7cR44
https://github.com/apache/ignite/pull/9427/files#diff-53acab6205b01405f8cb887ffa59ff4dd8c831b38ff61e4aa3e9418cdb19cf7cR85 new line no need
https://github.com/apache/ignite/pull/9427/files#diff-53acab6205b01405f8cb887ffa59ff4dd8c831b38ff61e4aa3e9418cdb19cf7cR111 and so on
3. If i rewrite your fix without boxing tests still be ok, thus - or append additional tests, or remove boxing.

[~zstan] Thank you for fast review. I am sorry for formatting misses. I fixed what you pointed and removed boxing. Do I need to run all tests on CI?

[~andrian.boscanean], the patch is OK with me.


[~andrian.boscanean] thanks for your effort ! merged under sha: c7450412ab12b7b972529a70 with a little bit code style fixes. Plz fill Release notes for this issue, a little bit description of the fix would be very useful.

