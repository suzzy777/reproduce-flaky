In some places we are using the spring version of this class.  It would be nice to remove {{org.apache.geode.internal.lang.StringUtils}} entirely and just use ONE version.


In GEODE-2704, the custom StringUtil in Pulse was dropped in favor of Apache Common's StringUtils.

GitHub user PurelyApplied opened a pull request:

    https://github.com/apache/geode/pull/521

    GEODE-1994: Overhaul of internal.lang.StringUtils to extend and heavily use commons.lang.StringUtils

    *   geode.internal.lang.StringUtils has been deprecated.  In the interim, it has been heavily refactored and extends commons.lang.StringUtils.
    *
    *   Renamed:
    *   --  EMPTY_STRING -> EMPTY (inherited)
    *   --  toUpperCase  -> upperCase (inherited)
    *   --  toLowerCase  -> lowerCase (inherited)
    *   --  padEnding    -> rightPad (inherited)
    *
    *   Removed:
    *   --  EMPTY_STRING_ARRAY; usage replaced with commons.lang.ArrayUtils.EMPTY_STRING_ARRAY
    *   --  SPACES
    *   --  UTF_8; rare usage replaced with raw string
    *   --  concat; usage replaced with commons.lang.join, refactoring as necessary.
    *   --  getLettersOnly
    *   --  getSpaces
    *   --  truncate
    *   --  valueOf; usage refactored to use defaultString
    *
    *   Refactored
    *   --  defaultIfBlank: previously relied on varargs and could return null.  Usage refactored to allow inheritance from commons.
    *   --  defaultString(s, EMPTY) refactored to use standard signature defaultString(s) for consistency throughout codebase.
    *   --  isBlank: usage refactored to resolve discrepancies with commons.lang.isBlank, which is now inherited.
    *   --  isEmpty: usage refactored to resolve discrepancies with commons.lang.isEmpty, which is now inherited.
    *
    *   Code Cleanup:
    *   --  Many uses of !isBlank -> isNotBlank
    *   --  Changes suggested by Inspections on most touched files.
    *   --     Explicit <T> -> <> when type is inferable
    *   --     while loops operating on iterators converted to for each loops
    *   --     for loops operating on array indices converted to for each loops
    *   --  Various string typos corrected.
    *   --  isEmpty(s.trim()) -> isBlank(s)
    *   --  s.trim().isEmpty() -> isEmpty(s)
    *   --  Removed some instances of 'dead' code
    *   --  Optimized imports in every touched file
    *
    *   Qualitative Changes:
    *   --  The following functions now throw an error when called with a null string input:
    *   --  *  LocatorLauncher.Builder.setMemberName
    *   --  *  ServerLauncher.Builder.setMemberName
    *   --  *  ServerLauncher.Builder.setHostnameForClients
    *   --  (Unit tests added to capture these changes)
    *
    *   Notes:
    *   --  StringUtils.wraps may be inherited from Apache Commons when the dependency is updated.
    *   --  AbstractLauncher.getMember has the documented behavior of returning null when both MemberName and ID are blank.  Is this the best behavior for this method?


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PurelyApplied/geode geode-1994

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/geode/pull/521.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #521
    
----
commit 327e1ae4b7b6e3503b0e295e6c883c387fa03b47
Author: Patrick Rhomberg <prhomberg@pivotal.io>
Date:   2017-05-17T23:57:07Z

    GEODE-1994: Overhaul of internal.lang.StringUtils to extend and heavily use commons.lang.StringUtils
    
    *   geode.internal.lang.StringUtils has been deprecated.  In the interim, it has been heavily refactored and extends commons.lang.StringUtils.
    *
    *   Renamed:
    *   --  EMPTY_STRING -> EMPTY (inherited)
    *   --  toUpperCase  -> upperCase (inherited)
    *   --  toLowerCase  -> lowerCase (inherited)
    *   --  padEnding    -> rightPad (inherited)
    *
    *   Removed:
    *   --  EMPTY_STRING_ARRAY; usage replaced with commons.lang.ArrayUtils.EMPTY_STRING_ARRAY
    *   --  SPACES
    *   --  UTF_8; rare usage replaced with raw string
    *   --  concat; usage replaced with commons.lang.join, refactoring as necessary.
    *   --  getLettersOnly
    *   --  getSpaces
    *   --  truncate
    *   --  valueOf; usage refactored to use defaultString
    *
    *   Refactored
    *   --  defaultIfBlank: previously relied on varargs and could return null.  Usage refactored to allow inheritance from commons.
    *   --  defaultString(s, EMPTY) refactored to use standard signature defaultString(s) for consistency throughout codebase.
    *   --  isBlank: usage refactored to resolve discrepancies with commons.lang.isBlank, which is now inherited.
    *   --  isEmpty: usage refactored to resolve discrepancies with commons.lang.isEmpty, which is now inherited.
    *
    *   Code Cleanup:
    *   --  Many uses of !isBlank -> isNotBlank
    *   --  Changes suggested by Inspections on most touched files.
    *   --     Explicit <T> -> <> when type is inferable
    *   --     while loops operating on iterators converted to for each loops
    *   --     for loops operating on array indices converted to for each loops
    *   --  Various string typos corrected.
    *   --  isEmpty(s.trim()) -> isBlank(s)
    *   --  s.trim().isEmpty() -> isEmpty(s)
    *   --  Removed some instances of 'dead' code
    *   --  Optimized imports in every touched file
    *
    *   Qualitative Changes:
    *   --  The following functions now throw an error when called with a null string input:
    *   --  *  LocatorLauncher.Builder.setMemberName
    *   --  *  ServerLauncher.Builder.setMemberName
    *   --  *  ServerLauncher.Builder.setHostnameForClients
    *   --  (Unit tests added to capture these changes)
    *
    *   Notes:
    *   --  StringUtils.wraps may be inherited from Apache Commons when the dependency is updated.
    *   --  AbstractLauncher.getMember has the documented behavior of returning null when both MemberName and ID are blank.  Is this the best behavior for this method?

----


Github user PurelyApplied commented on the issue:

    https://github.com/apache/geode/pull/521
  
    precheckin has cleared most tests.  Waiting on DistributedTest to finish.  :geode-core cleared, currently waiting on :geode-wan.  I've seen some :geode-wan failures on a fresh develop (a lot of Connection Refused), but will reply to this thread tomorrow with the DUnit results.


Github user PurelyApplied commented on the issue:

    https://github.com/apache/geode/pull/521
  
    Green across the board, excepting the flaky test `testRegionAggregate` which is becoming increasingly less flaky and more consistently red.


Commit d16d192b22f2932ac95780f18e92f0aece730240 in geode's branch refs/heads/develop from [~prhomberg]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=d16d192 ]

GEODE-1994: Overhaul of internal.lang.StringUtils to extend and heavily use commons.lang.StringUtils

*   geode.internal.lang.StringUtils has been deprecated.  In the interim, it has been heavily refactored and extends commons.lang.StringUtils.
*
*   Renamed:
*   --  EMPTY_STRING -> EMPTY (inherited)
*   --  toUpperCase  -> upperCase (inherited)
*   --  toLowerCase  -> lowerCase (inherited)
*   --  padEnding    -> rightPad (inherited)
*
*   Removed:
*   --  EMPTY_STRING_ARRAY; usage replaced with commons.lang.ArrayUtils.EMPTY_STRING_ARRAY
*   --  SPACES
*   --  UTF_8; rare usage replaced with raw string
*   --  concat; usage replaced with commons.lang.join, refactoring as necessary.
*   --  getLettersOnly
*   --  getSpaces
*   --  truncate
*   --  valueOf; usage refactored to use defaultString
*
*   Refactored
*   --  defaultIfBlank: previously relied on varargs and could return null.  Usage refactored to allow inheritance from commons.
*   --  defaultString(s, EMPTY) refactored to use standard signature defaultString(s) for consistency throughout codebase.
*   --  isBlank: usage refactored to resolve discrepancies with commons.lang.isBlank, which is now inherited.
*   --  isEmpty: usage refactored to resolve discrepancies with commons.lang.isEmpty, which is now inherited.
*
*   Code Cleanup:
*   --  Many uses of !isBlank -> isNotBlank
*   --  Changes suggested by Inspections on most touched files.
*   --     Explicit <T> -> <> when type is inferable
*   --     while loops operating on iterators converted to for each loops
*   --     for loops operating on array indices converted to for each loops
*   --  Various string typos corrected.
*   --  isEmpty(s.trim()) -> isBlank(s)
*   --  s.trim().isEmpty() -> isEmpty(s)
*   --  Removed some instances of 'dead' code
*   --  Optimized imports in every touched file
*
*   Qualitative Changes:
*   --  The following functions now throw an error when called with a null string input:
*   --  *  LocatorLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setHostnameForClients
*   --  (Unit tests added to capture these changes)
*
*   Notes:
*   --  StringUtils.wraps may be inherited from Apache Commons when the dependency is updated.
*   --  AbstractLauncher.getMember has the documented behavior of returning null when both MemberName and ID are blank.  Is this the best behavior for this method?

* this closes #521


Github user asfgit closed the pull request at:

    https://github.com/apache/geode/pull/521


Commit d16d192b22f2932ac95780f18e92f0aece730240 in geode's branch refs/heads/feature/GEODE-2929-1 from [~prhomberg]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=d16d192 ]

GEODE-1994: Overhaul of internal.lang.StringUtils to extend and heavily use commons.lang.StringUtils

*   geode.internal.lang.StringUtils has been deprecated.  In the interim, it has been heavily refactored and extends commons.lang.StringUtils.
*
*   Renamed:
*   --  EMPTY_STRING -> EMPTY (inherited)
*   --  toUpperCase  -> upperCase (inherited)
*   --  toLowerCase  -> lowerCase (inherited)
*   --  padEnding    -> rightPad (inherited)
*
*   Removed:
*   --  EMPTY_STRING_ARRAY; usage replaced with commons.lang.ArrayUtils.EMPTY_STRING_ARRAY
*   --  SPACES
*   --  UTF_8; rare usage replaced with raw string
*   --  concat; usage replaced with commons.lang.join, refactoring as necessary.
*   --  getLettersOnly
*   --  getSpaces
*   --  truncate
*   --  valueOf; usage refactored to use defaultString
*
*   Refactored
*   --  defaultIfBlank: previously relied on varargs and could return null.  Usage refactored to allow inheritance from commons.
*   --  defaultString(s, EMPTY) refactored to use standard signature defaultString(s) for consistency throughout codebase.
*   --  isBlank: usage refactored to resolve discrepancies with commons.lang.isBlank, which is now inherited.
*   --  isEmpty: usage refactored to resolve discrepancies with commons.lang.isEmpty, which is now inherited.
*
*   Code Cleanup:
*   --  Many uses of !isBlank -> isNotBlank
*   --  Changes suggested by Inspections on most touched files.
*   --     Explicit <T> -> <> when type is inferable
*   --     while loops operating on iterators converted to for each loops
*   --     for loops operating on array indices converted to for each loops
*   --  Various string typos corrected.
*   --  isEmpty(s.trim()) -> isBlank(s)
*   --  s.trim().isEmpty() -> isEmpty(s)
*   --  Removed some instances of 'dead' code
*   --  Optimized imports in every touched file
*
*   Qualitative Changes:
*   --  The following functions now throw an error when called with a null string input:
*   --  *  LocatorLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setHostnameForClients
*   --  (Unit tests added to capture these changes)
*
*   Notes:
*   --  StringUtils.wraps may be inherited from Apache Commons when the dependency is updated.
*   --  AbstractLauncher.getMember has the documented behavior of returning null when both MemberName and ID are blank.  Is this the best behavior for this method?

* this closes #521


Commit d16d192b22f2932ac95780f18e92f0aece730240 in geode's branch refs/heads/feature/GEODE-2632-16 from [~prhomberg]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=d16d192 ]

GEODE-1994: Overhaul of internal.lang.StringUtils to extend and heavily use commons.lang.StringUtils

*   geode.internal.lang.StringUtils has been deprecated.  In the interim, it has been heavily refactored and extends commons.lang.StringUtils.
*
*   Renamed:
*   --  EMPTY_STRING -> EMPTY (inherited)
*   --  toUpperCase  -> upperCase (inherited)
*   --  toLowerCase  -> lowerCase (inherited)
*   --  padEnding    -> rightPad (inherited)
*
*   Removed:
*   --  EMPTY_STRING_ARRAY; usage replaced with commons.lang.ArrayUtils.EMPTY_STRING_ARRAY
*   --  SPACES
*   --  UTF_8; rare usage replaced with raw string
*   --  concat; usage replaced with commons.lang.join, refactoring as necessary.
*   --  getLettersOnly
*   --  getSpaces
*   --  truncate
*   --  valueOf; usage refactored to use defaultString
*
*   Refactored
*   --  defaultIfBlank: previously relied on varargs and could return null.  Usage refactored to allow inheritance from commons.
*   --  defaultString(s, EMPTY) refactored to use standard signature defaultString(s) for consistency throughout codebase.
*   --  isBlank: usage refactored to resolve discrepancies with commons.lang.isBlank, which is now inherited.
*   --  isEmpty: usage refactored to resolve discrepancies with commons.lang.isEmpty, which is now inherited.
*
*   Code Cleanup:
*   --  Many uses of !isBlank -> isNotBlank
*   --  Changes suggested by Inspections on most touched files.
*   --     Explicit <T> -> <> when type is inferable
*   --     while loops operating on iterators converted to for each loops
*   --     for loops operating on array indices converted to for each loops
*   --  Various string typos corrected.
*   --  isEmpty(s.trim()) -> isBlank(s)
*   --  s.trim().isEmpty() -> isEmpty(s)
*   --  Removed some instances of 'dead' code
*   --  Optimized imports in every touched file
*
*   Qualitative Changes:
*   --  The following functions now throw an error when called with a null string input:
*   --  *  LocatorLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setHostnameForClients
*   --  (Unit tests added to capture these changes)
*
*   Notes:
*   --  StringUtils.wraps may be inherited from Apache Commons when the dependency is updated.
*   --  AbstractLauncher.getMember has the documented behavior of returning null when both MemberName and ID are blank.  Is this the best behavior for this method?

* this closes #521


Commit d16d192b22f2932ac95780f18e92f0aece730240 in geode's branch refs/heads/feature/GEODE-2580 from [~prhomberg]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=d16d192 ]

GEODE-1994: Overhaul of internal.lang.StringUtils to extend and heavily use commons.lang.StringUtils

*   geode.internal.lang.StringUtils has been deprecated.  In the interim, it has been heavily refactored and extends commons.lang.StringUtils.
*
*   Renamed:
*   --  EMPTY_STRING -> EMPTY (inherited)
*   --  toUpperCase  -> upperCase (inherited)
*   --  toLowerCase  -> lowerCase (inherited)
*   --  padEnding    -> rightPad (inherited)
*
*   Removed:
*   --  EMPTY_STRING_ARRAY; usage replaced with commons.lang.ArrayUtils.EMPTY_STRING_ARRAY
*   --  SPACES
*   --  UTF_8; rare usage replaced with raw string
*   --  concat; usage replaced with commons.lang.join, refactoring as necessary.
*   --  getLettersOnly
*   --  getSpaces
*   --  truncate
*   --  valueOf; usage refactored to use defaultString
*
*   Refactored
*   --  defaultIfBlank: previously relied on varargs and could return null.  Usage refactored to allow inheritance from commons.
*   --  defaultString(s, EMPTY) refactored to use standard signature defaultString(s) for consistency throughout codebase.
*   --  isBlank: usage refactored to resolve discrepancies with commons.lang.isBlank, which is now inherited.
*   --  isEmpty: usage refactored to resolve discrepancies with commons.lang.isEmpty, which is now inherited.
*
*   Code Cleanup:
*   --  Many uses of !isBlank -> isNotBlank
*   --  Changes suggested by Inspections on most touched files.
*   --     Explicit <T> -> <> when type is inferable
*   --     while loops operating on iterators converted to for each loops
*   --     for loops operating on array indices converted to for each loops
*   --  Various string typos corrected.
*   --  isEmpty(s.trim()) -> isBlank(s)
*   --  s.trim().isEmpty() -> isEmpty(s)
*   --  Removed some instances of 'dead' code
*   --  Optimized imports in every touched file
*
*   Qualitative Changes:
*   --  The following functions now throw an error when called with a null string input:
*   --  *  LocatorLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setMemberName
*   --  *  ServerLauncher.Builder.setHostnameForClients
*   --  (Unit tests added to capture these changes)
*
*   Notes:
*   --  StringUtils.wraps may be inherited from Apache Commons when the dependency is updated.
*   --  AbstractLauncher.getMember has the documented behavior of returning null when both MemberName and ID are blank.  Is this the best behavior for this method?

* this closes #521


GitHub user PurelyApplied opened a pull request:

    https://github.com/apache/geode/pull/528

    GEODE-1994, revisited: Removed guaranteed failures.

    Removed two uses of ServerLauncher.Builder.setMemberName that are guaranteed to throw under the changes introduced by GEODE-1994.
    
    With the previous update to StringUtils, ServerLauncher.Builder.setMemberName throws when its input is blank.  These two uses are behind conditionals and only occur when the member name is blank, guaranteeing failure.  This results in the `status server` and `stop server` commands functioning only when `--name` is used, but failing with `--dir` and `--pid`.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PurelyApplied/geode geode-1994.revised

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/geode/pull/528.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #528
    
----
commit 071780ed1aa2b12068f12291d032c30a930320ac
Author: Patrick Rhomberg <prhomberg@pivotal.io>
Date:   2017-05-23T22:07:11Z

    GEODE-1994, revisited: Removed two references to ServerLauncher.setMemberName that are guaranteed to throw under the changes introduced by GEODE-1994.

----


Github user jaredjstewart commented on the issue:

    https://github.com/apache/geode/pull/528
  
    LGTM (pending green precheckin)


Github user PurelyApplied commented on the issue:

    https://github.com/apache/geode/pull/528
  
    Precheckin running...


Github user PurelyApplied commented on the issue:

    https://github.com/apache/geode/pull/528
  
    Green across the board.


Commit dff937f32b1cb1cce6269226dc17263484685bf1 in geode's branch refs/heads/develop from [~prhomberg]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=dff937f ]

GEODE-1994: Removed two references to ServerLauncher.setMemberName that are guaranteed to throw under the changes introduced by d16d192.


Github user jaredjstewart commented on the issue:

    https://github.com/apache/geode/pull/528
  
    Merged as dff937f


Github user PurelyApplied closed the pull request at:

    https://github.com/apache/geode/pull/528


