As per my understanding , a test class can be annotated with single runner and in case of Junit4 tests, we need to annotate TestClass with *@RunWith(Categories.class),* so I feel that we need to refactor all such test classes having "Disabled" and "Ignore" annotated tests and move out of new Test class. Kindly advise if we see any other better way.

bq. we need to annotate TestClass with {{@RunWith(Categories.class)}}

That's not needed, Surefire supports [running JUnit4 categories|https://github.com/junit-team/junit4/wiki/Categories#using-categories-with-maven] directly.

We need to define an interface for the category:

{code:title=hadoop-hdds/test-utils/src/main/java/org/apache/ozone/test/UnhealthyTest.java}
package org.apache.ozone.test;

/**
 * Interface to mark test classes or methods that are unhealthy which
 * means either they are unstable or inconsistent to run.
 */
public interface UnhealthyTest {
  // category marker
}
{code}

which can be used as a "group" for exclusion:

{code:title=pom.xml}
<excludedGroups>flaky | slow | unhealthy | org.apache.ozone.test.UnhealthyTest</excludedGroups>
{code}

({{unhealthy}} is the tag for JUnit5 from your PR).

Test can be categorized as e.g.:

{code}
  @Override
  @Test
  @Category(UnhealthyTest.class) @Unhealthy("HDDS-4360")
  public void testListStatusRootAndVolumeRecursive() throws IOException {
  }
{code}

Note:
 * added {{@Unhealthy}}, too, to be able to include the issue ID
 * for overridden tests, {{@Test}} needs to be present

