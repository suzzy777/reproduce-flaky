Looks like this commit brought on this NPE:

commit c5f86f2ce42eafc5d4b4f83f4471cacd372abae3
Author: Rajeshbabu Chintaguntla <rajeshbabu@apache.org>
Date:   Mon Feb 5 23:35:32 2018 +0800

    HBASE-19703 Functionality added as part of HBASE-12583 is not working after moving the split code to master

    Co-authored-by: Michael Stack <stack@apache.org>

    Signed-off-by: Chia-Ping Tsai <chia7712@gmail.com>

Undestandable when changes in same area arriving at about same time.

Thanks [~uagashe] ...

The flakey-finder fingered the above commit as breaking the split test.

Here is when the split test went bad...



Unstable Build #1372 (Feb 5, 2018 3:53:40 PM)
add description
	Build Artifacts
	Changes
HBASE-19703 Functionality added as part of HBASE-12583 is not working (detail)
	
Started by timer

	
This run spent:

3 min 39 sec waiting in the queue;
27 min building on an executor;
31 min total from scheduled to completion.
	Revision: f0a5f12d97784f609ccd15e1228d424bcab59c41
refs/remotes/origin/branch-2
	Test Result (6 failures / +3)
org.apache.hadoop.hbase.client.TestAvoidCellReferencesIntoShippedBlocks.org.apache.hadoop.hbase.client.TestAvoidCellReferencesIntoShippedBlocks
org.apache.hadoop.hbase.client.TestAvoidCellReferencesIntoShippedBlocks.org.apache.hadoop.hbase.client.TestAvoidCellReferencesIntoShippedBlocks
org.apache.hadoop.hbase.client.TestMetaWithReplicas.org.apache.hadoop.hbase.client.TestMetaWithReplicas
org.apache.hadoop.hbase.client.TestMetaWithReplicas.org.apache.hadoop.hbase.client.TestMetaWithReplicas
org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure.testSplitWithoutPONR
org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure.testRecoveryAndDoubleExecution




See how the commit is "HBASE-19703 Functionality added as part of HBASE-12583 is not working (detail)"



Thanks... [~uagashe]. Nice finding. patch LGTM

-TestSplitTableRegionProcedure is already in flaky list so the QA didn't run it for HBASE-19703.-

-Ok, It is TestSplitTableRegion rather than TestSplitTableRegionProcedure-

I misunderstood the test name due to the topic...Let me correct the test name for the topic. The correct test name is TestSplitTableRegionProcedure rather than TestSplitTableRegion.

{quote}The flakey-finder fingered the above commit as breaking the split test.
{quote}
The latest QA in HBASE-19703 is shown below. The TestSplitTableRegionProcedure is already in flaky. [~uagashe] Do you intent to fix the test totally? I'm +1 to your patch even if the TestSplitTableRegionProcedure is still flaky. 
{code:java}
00:48:26 cd /testptch/hbase/hbase-server
00:48:26 /usr/share/maven/bin/mvn -Dmaven.repo.local=/home/jenkins/yetus-m2/hbase-branch-2-patch-0 -DHBasePatchProcess -PrunAllTests -Dtest.exclude.pattern=**/master.assignment.TestMergeTableRegionsProcedure.java,**/security.visibility.TestVisibilityLabelsOnNewVersionBehaviorTable.java,**/master.TestTableStateManager.java,**/client.TestAsyncAdminBuilder.java,**/procedure.TestZKProcedure.java,**/master.locking.TestLockManager.java,**/master.TestAssignmentManagerMetrics.java,**/client.TestAsyncNonMetaRegionLocator.java,**/security.token.TestTokenAuthentication.java,**/master.assignment.TestAssignmentManager.java,**/client.TestConnectionImplementation.java,**/master.balancer.TestStochasticLoadBalancer2.java,**/client.TestReplicaWithCluster.java,**/client.TestSnapshotWithAcl.java,**/regionserver.TestHRegionOnCluster.java,**/regionserver.TestRegionServerReportForDuty.java,**/master.TestHMasterRPCException.java,**/client.TestMetaWithReplicas.java,**/master.assignment.TestSplitTableRegionProcedure.java,**/master.balancer.TestStochasticLoadBalancer.java,**/ipc.TestSimpleRpcScheduler.java,**/master.TestMetaShutdownHandler.java,**/quotas.TestQuotaStatusRPCs.java,**/client.TestRestoreSnapshotFromClient.java,**/client.replication.TestReplicationAdminWithClusters.java,**/client.TestFromClientSide.java,**/TestRegionRebalancing.java,**/security.visibility.TestVisibilityLabelsWithDeletes.java,**/master.procedure.TestCreateTableProcedure.java,**/client.TestMobSnapshotFromClient.java,**/master.snapshot.TestSnapshotFileCache.java,**/security.visibility.TestVisibilityLabelsWithCustomVisLabService.java,**/client.TestAsyncRegionAdminApi.java,**/master.TestWarmupRegion.java clean test -fae > /testptch/patchprocess/patch-unit-hbase-server.txt 2>&1{code}

Thanks for correcting the name [~chia7712]! Let me fix the commit description as well and resubmit the patch. After this fix if the test is still flaky then I will take another look at it.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  9s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 37s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  6s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 49s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  6m  0s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 21m 39s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}105m 24s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}148m  3s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19939 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12909269/hbase-19939.master.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 8ce453524bdb 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 9f2149f171 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11393/testReport/ |
| Max. process+thread count | 5364 (vs. ulimit of 10000) |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11393/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  9s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m  3s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 54s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 10s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 18s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 16m 39s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}107m 37s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}141m 18s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19939 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12909293/hbase-19939.master.002.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 2ce9291e0856 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 6307689a6e |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11399/testReport/ |
| Max. process+thread count | 5232 (vs. ulimit of 10000) |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11399/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



Pushed to branch-2 and master. Thanks [~uagashe]


FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4535 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4535/])
HBASE-19939 Fixed NPE in tests (stack: rev 3bb8daa60565ec2f7955352e52c2f6379176d8c6)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/SplitTableRegionProcedure.java


