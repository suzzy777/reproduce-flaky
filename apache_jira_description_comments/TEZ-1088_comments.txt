[~tassapola] Can you please take a look.

https://builds.apache.org/job/Tez-Build/418 should have all the details.

[~hitesh] I will investigate where node blacklisting config set in TestFaultTolerance.java is effective or not.

For more explanations, depends on timing, AM could blacklist a node after failures. Once blacklisting happens, the attempts on that node will be discarded. Those attempts will be relaunched on other nodes. In that case attempt number will go up and cause expected output to be mismatched.
{code}
Expected output: 4 got: 5
{code}


[~hitesh] Is there any way I can get full yarn application logs?

[~tassapola] Regardless of blacklisting, I think the code  ( in probably the input that handles the events ) could be changed to discard/ignore events/data from outputs that were marked as obsolete by the AM due to node failure.

https://builds.apache.org/job/Tez-Build/ws/tez-tests/target/org.apache.tez.test.TestFaultTolerance/ - this will likely get wiped by the next run so you should create a copy using the "all files in zip" link.

The reason of flaky test is race condition of events seen by a task. In this test, v2-task0 has input failure. v2-task1 has *no* input failure. However, v2-task1 can see events of rerun upstream attempt caused by v2-task0 input failure. Once that happens, TestInput has code path to set input version to be largest value seen in available events.
{code:title=TestInput line 301}
synchronized (inputReady) {
        inputReady.set(maxInputVersionSeen);
        LOG.info("Notifying done with " + maxInputVersionSeen);
        inputReady.notifyAll();
      }
{code}
In this case, v2-task1 picks the event with higher input version hence fail the test.

One workaround fix is to let v2-task1 to accept a value one version higher. In this test case, we don't exercise limit on max failed attempt. Even if v2-task1 sees only attempt with no rerun, test will still pass once v2-task1 itself does rerun (which bumps actual output by 1 to reach expected output).

Set patch state to be available. Ran the test 8 times with patched version. All did pass.

Should we just disable validation in v2-task1 by removing the following?
{code}    testConf.setInt(TestProcessor.getVertexConfName(
            TestProcessor.TEZ_FAILING_PROCESSOR_VERIFY_VALUE, "v2", 1), 4);{code}

The patch's approach seems to be if v2-task-1 sees the rerun then it passed after validating 5. If it does not see the rerun then it first fails because it could not validate 5 and then reruns itself and validates 5. If thats true then its not a good approach because we want to fix this bug of an unexpected rerun causing the failure count to increase and match the expected failure count (TEZ-877).

Uploaded TEZ-1088.2.patch. Disabling the check will work. I keep old expected output because it is more correct when timing is right. My patch now disables only this line.
{code}
//testConf.setInt(TestProcessor.getVertexConfName(
//            TestProcessor.TEZ_FAILING_PROCESSOR_VERIFY_VALUE, "v2", 1), 4);
{code}
Better long term fix is tracked with TEZ-877.

I am seeing similar flakiness for TestFaultTolerance.testMultipleInputFailureWithoutExit. Can you please check if its the same issue?

I ran TestFaultTolerance.testMultipleInputFailureWithoutExit but unfortunately I could not reproduce random failure. It should be different issue. In that test, all tasks of v2 do fail (code shown below). The error won't be due to a task with no input failures getting inputs of more than one version like testInputFailureCausesRerunAttemptWithinMaxAttemptSuccess we are fixing in current patch.
{code:title=code snippet of testMultipleInputFailureWithoutExit}
    testConf.set(TestInput.getVertexConfName(
        TestInput.TEZ_FAILING_INPUT_FAILING_TASK_INDEX, "v2"), "0,1");
    testConf.set(TestInput.getVertexConfName(
        TestInput.TEZ_FAILING_INPUT_FAILING_TASK_ATTEMPT, "v2"), "0");
    testConf.set(TestInput.getVertexConfName(
        TestInput.TEZ_FAILING_INPUT_FAILING_INPUT_INDEX, "v2"), "-1");
{code}

Can you please open a new jira for this and provide the above analysis in that jira. I will commit this patch and close this jira.

TEZ-1115 is created for testMultipleInputFailureWithoutExit.

commit ab3c4c3468d665c9a1144452dab0ba5e580667a1
Author: Bikas Saha <bikas@apache.org>
Date:   Tue May 13 11:09:17 2014 -0700

    TEZ-1088. Flaky Test: TestFaultTolerance.testInputFailureCausesRerunAttemptWithinMaxAttemptSuccess (Tassapol Athiapinya


Bulk close for jiras fixed in 0.5.0.

