[~vihangk1] assigning to you because the latest commit (IMPALA-9857: Batching of consecutive partition events) is yours and seems to be related. Feel free to reassign if not.

Saw this issue in a verification job: https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/5268/
Stacktrace

metadata/test_event_processing.py:47: in test_insert_events
    self.run_test_insert_events(unique_database)
metadata/test_event_processing.py:106: in run_test_insert_events
    EventProcessorUtils.wait_for_event_processing(self)
util/event_processor_utils.py:70: in wait_for_event_processing
    allow_greater=True)
common/impala_service.py:143: in wait_for_metric_value
    self.__metric_timeout_assert(metric_name, expected_value, timeout)
common/impala_service.py:210: in __metric_timeout_assert
    assert 0, assert_string
E   AssertionError: Metric catalog.curr-version did not reach value 7650 in 10s.
E   Dumping debug webpages in JSON format...
E   Dumped memz JSON to $IMPALA_HOME/logs/metric_timeout_diags_20220212_11:31:52/json/memz.json
E   Dumped metrics JSON to $IMPALA_HOME/logs/metric_timeout_diags_20220212_11:31:52/json/metrics.json
E   Dumped queries JSON to $IMPALA_HOME/logs/metric_timeout_diags_20220212_11:31:52/json/queries.json
E   Dumped sessions JSON to $IMPALA_HOME/logs/metric_timeout_diags_20220212_11:31:52/json/sessions.json
E   Dumped threadz JSON to $IMPALA_HOME/logs/metric_timeout_diags_20220212_11:31:52/json/threadz.json
E   Dumped rpcz JSON to $IMPALA_HOME/logs/metric_timeout_diags_20220212_11:31:52/json/rpcz.json
E   Dumping minidumps for impalads/catalogds...
E   Dumped minidump for Impalad PID 107592
E   Dumped minidump for Impalad PID 107927
E   Dumped minidump for Impalad PID 108254
E   Dumped minidump for Catalogd PID 107254
E   Dumped minidump for Catalogd PID 107592
E   Dumped minidump for Catalogd PID 107927
E   Dumped minidump for Catalogd PID 108254

This is now breaking precommit runs often enough to become a nuisance.
[~csringhofer], could you perhaps take a look and decide if this is serious enough to keep hammering on it, or could we perhaps {{xfail}} it until it can be fixed/revamped to work correctly?
Thanks a lot!

https://gerrit.cloudera.org/#/c/19614/

Commit a6333aed6b0fe2cf355aeaa1952735b9208b2f43 in impala's branch refs/heads/master from Csaba Ringhofer
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=a6333aed6 ]

IMPALA-10983: Wait more in wait_for_event_processing if there is progress

There are some flaky tests where wait_for_event_processing timeouts,
e.g. TestEventProcessing.test_insert_events. My theory is that this
is caused by parallel tests with DDL/DML statements that can also
fire HMS events that have to be processed by catalogd.

The change bumps (default: 10 sec->100 sec) the timeout in case
there is some progress in event processing. If still the same
event is processed then the old timeout is used.

An alternative approach would be to mark the related test as serial,
but I would prefer to avoid this as it would make test jobs slower.

The event processor status is also checked to timeout earlier if
the event processor is without hope of recovery.

Change-Id: I676854f7df9aea5fa10fb6ecf6381195bc8fa4b8
Reviewed-on: http://gerrit.cloudera.org:8080/19614
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


[~csringhofer] unfortunately it seems the problem is not solved, the same builds now fail with
{code:java}
metadata/test_event_processing.py:43: in test_insert_events
    self.run_test_insert_events(unique_database)
metadata/test_event_processing.py:115: in run_test_insert_events
    EventProcessorUtils.wait_for_event_processing(self)
util/event_processor_utils.py:91: in wait_for_event_processing
    EventProcessorUtils.wait_for_synced_event_id(timeout, current_event_id)
util/event_processor_utils.py:63: in wait_for_synced_event_id
    raise Exception("Event processor is not working. Status: {0}".format(status))
E   Exception: Event processor is not working. Status: ERROR{code}
The same error also occurs in {*}metadata.test_event_processing.TestEventProcessing.test_event_based_replication{*}. This error message was introduced in the commit for this issue.

 

This is a general error meaning the event-processor is in ERROR state. We should check catalogd logs to get the detailed failure. The recent failures are due to IMPALA-12002. Please rebase your patch to have the fix.

BTW, I filed IMPALA-12053 to expose the actual failure that event-processor hits, which might help to improve the test output.

