[Here|https://github.com/apache/cassandra/compare/trunk...adelapena:13963-trunk] is a patch solving the problem.

It seems that the call to [{{TestingIndex.shouldFailCreate = false;}}|https://github.com/apache/cassandra/blob/trunk/test/unit/org/apache/cassandra/index/SecondaryIndexManagerTest.java#L466] is done right after creating the index configured to fail, without waiting for the finalization of the build task. If we are not lucky the index initalization task can start after disabling the configured fail. In such case, the two calls to {{assertFalse(cfs.indexManager.isIndexQueryable(index))}} can either succeed because the index build task hasn't started yet (not because it has failed), or fail because the task has successfully finished without the configured initialization task failure.

The unit tests usually use [{{CQLTester.waitForIndex}}|https://github.com/apache/cassandra/blob/trunk/test/unit/org/apache/cassandra/cql3/CQLTester.java#L709-L737] method to wait for the finalization of index builds. In that case, since we are making the initialization to fail, we can't rely on this method, so the patch adds a new [{{CQLTester.waitForIndexBuilds}}|https://github.com/apache/cassandra/blob/trunk/test/unit/org/apache/cassandra/cql3/CQLTester.java#L709-L737] method to wait for the finalization of index build tasks independently of their results and the marking procedure. This method is in {{CQLTester}} instead of {{SecondaryIndexManagerTest}} because I think it's suitable to be used by other tests. 

+1 on the patch

Your evaluation is correct and checking the number of builds is fine as the {{CREATE INDEX}} doesn't return before the index build is triggered.
Thanks for the patch!

Thank for the review :)

Committed to master as [5792b667ecf461a40cc391bc1496287547179c91|https://github.com/apache/cassandra/commit/5792b667ecf461a40cc391bc1496287547179c91]

