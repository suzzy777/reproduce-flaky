I will have a look into this.

[~mjsax] I tried to replicate the flakiness of the test and I was unable to do so (I had my laptop running the test until failure overnight and with over 20k runs I didn't get a single failure).


I also noticed that the method/test is named slightly differently (i.e. currently its called shouldAllowRemovingAndAddingNamedTopologyToRunningApplicationWithMultipleNodesAndResetsOffsets) and has been modified since this ticket was created so maybe changes made it not flaky anymore?

Could be. We usually also report if we say more failures by leaving a comment on the ticket. I am ok with just closing this a "cannot reproduce" for now. Re-opening the ticket or creating a new one if necessary is easy to do. Not worth to invest too much time into it.

Thanks for looking into it! Highly appreciated!

Seen again while verifying the 3.5.0 release artifacts (this was the only test failure):

Gradle Test Run :streams:test > Gradle Test Executor 554 > NamedTopologyIntegrationTest > shouldRemoveOneNamedTopologyWhileAnotherContinuesProcessing() FAILED
    java.lang.AssertionError: Did not receive all 3 records from topic output-stream-1 within 60000 ms,  currently accumulated data is []
    Expected: is a value equal to or greater than <3>
         but: <0> was less than <3>
        at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
        at org.apache.kafka.streams.integration.utils.IntegrationTestUtils.lambda$waitUntilMinKeyValueRecordsReceived$1(IntegrationTestUtils.java:730)
        at org.apache.kafka.test.TestUtils.retryOnExceptionWithTimeout(TestUtils.java:385)
        at org.apache.kafka.test.TestUtils.retryOnExceptionWithTimeout(TestUtils.java:353)
        at org.apache.kafka.streams.integration.utils.IntegrationTestUtils.waitUntilMinKeyValueRecordsReceived(IntegrationTestUtils.java:726)
        at org.apache.kafka.streams.integration.utils.IntegrationTestUtils.waitUntilMinKeyValueRecordsReceived(IntegrationTestUtils.java:699)
        at org.apache.kafka.streams.integration.NamedTopologyIntegrationTest.shouldRemoveOneNamedTopologyWhileAnotherContinuesProcessing(NamedTopologyIntegrationTest.java:563)

 

logs: [^org.apache.kafka.streams.integration.NamedTopologyIntegrationTest.shouldRemoveOneNamedTopologyWhileAnotherContinuesProcessing().test.stdout]

I've seen this on a recent build: https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-14458/3/testReport/junit/org.apache.kafka.streams.integration/NamedTopologyIntegrationTest/Build___JDK_8_and_Scala_2_12___shouldRemoveOneNamedTopologyWhileAnotherContinuesProcessing__/

Test disabled in https://github.com/apache/kafka/pull/14830 since feature will be removed.

