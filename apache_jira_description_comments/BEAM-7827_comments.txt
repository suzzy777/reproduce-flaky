PR [https://github.com/apache/beam/pull/9166] manifests the failure consistently locally with

{{./gradlew runners:direct-java:validatesRunner --tests 'MetricsTest$AttemptedMetricTests.testAllAttemptedMetrics'}}

but seems to pass on Jenkins. It might be related to parallelism (e.g. number of cores of machine running the test).

This looks strange. The test seems to pass on other environments but consistently fails on my local machine. Will try to reproduce the failure on other system to confirm it.

Unable to reproduce this anywhere else my local environment. Although locally fails absolutely consitently. Closing this, though.

Re-opening since this just happened again. [https://ci-beam.apache.org/job/beam_PreCommit_Java_Commit/13122/]

java.lang.AssertionError: Expected: a collection containing MetricResult\{inNamespace="org.apache.beam.sdk.metrics.MetricsTest", name="bundle", step="MyStep1", attemptedMin=<10L>, attemptedMax=<40L>} but: mismatches were: [MetricResult\\{inKey: <MyStep1:org.apache.beam.sdk.metrics.MetricsTest:bundle> != <MyStep1/ParMultiDo(Anonymous):org.apache.beam.sdk.metrics.MetricsTest:input>attemptedMin: <10L> != <5L>attemptedMax: <40L> != <13L>}, MetricResult\\{inKey: <MyStep1:org.apache.beam.sdk.metrics.MetricsTest:bundle> != <MyStep2:org.apache.beam.sdk.metrics.MetricsTest:input>attemptedMin: <10L> != <5L>attemptedMax: <40L> != <13L>}, MetricResult\\{inKey: <MyStep1:org.apache.beam.sdk.metrics.MetricsTest:bundle> != <MyStep1/ParMultiDo(Anonymous):org.apache.beam.sdk.metrics.MetricsTest:bundle>attemptedMax: <40L> != <10L>}]

Raising priority to P1 per https://beam.apache.org/contribute/jira-priorities/

Saw this happen again in https://ci-beam.apache.org/job/beam_PreCommit_Java_Commit/13147

This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

There's a link to BEAM-1169 in this test which seems related: https://github.com/apache/beam/blob/9ebdc8afcfd316333299c6929ad67ead8cf1ae4e/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricsTest.java#L348

Still happening in [https://ci-beam.apache.org/job/beam_PreCommit_Java_Commit/17627/]

 

This Jira ticket has a pull request attached to it, but is still open. Did the pull request resolve the issue? If so, could you please mark it resolved? This will help the project have a clear view of its open issues.

No, the PR did not resolve the issue. The test is still flaky, the purpose of the PR was to create a reproducible test case. We might want to invest some time to resolve this properly.

This issue has been migrated to https://github.com/apache/beam/issues/19816

