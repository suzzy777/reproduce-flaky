{noformat}
self = <test_admission_controller.TestAdmissionController object at 0x4185450>

    def add_session(self):
      open_session_req = TCLIService.TOpenSessionReq()
      open_session_req.username = getuser()
      open_session_req.configuration = dict()
      if conf_overlay is not None:
        open_session_req.configuration = conf_overlay
      open_session_req.client_protocol = protocol_version
      resp = self.hs2_client.OpenSession(open_session_req)
      HS2TestSuite.check_response(resp)
      self.session_handle = resp.sessionHandle
      assert protocol_version <= resp.serverProtocolVersion
      try:
>       fn(self)

hs2/hs2_test_suite.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
custom_cluster/test_admission_controller.py:241: in test_set_request_pool
    [queueA_mem_limit, 'QUERY_TIMEOUT_S=5', 'REQUEST_POOL=root.queueA', batch_size])
custom_cluster/test_admission_controller.py:146: in __check_hs2_query_opts
    HS2TestSuite.check_response(execute_statement_resp)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

response = TExecuteStatementResp(status=TStatus(errorCode=None, errorMessage='Admission for query exceeded timeout 50ms. Queued r...mber of running queries 1 is over limit 1\n', sqlState='HY000', infoMessages=None, statusCode=3), operationHandle=None)
expected_status_code = 0, expected_error_prefix = None

    @staticmethod
    def check_response(response,
                       expected_status_code = TCLIService.TStatusCode.SUCCESS_STATUS,
                       expected_error_prefix = None):
>     assert response.status.statusCode == expected_status_code
E     assert 3 == 0
E      +  where 3 = 3
E      +    where 3 = TStatus(errorCode=None, errorMessage='Admission for query exceeded timeout 50ms. Queued reason: number of running queries 1 is over limit 1\n', sqlState='HY000', infoMessages=None, statusCode=3).statusCode
E      +      where TStatus(errorCode=None, errorMessage='Admission for query exceeded timeout 50ms. Queued reason: number of running queries 1 is over limit 1\n', sqlState='HY000', infoMessages=None, statusCode=3) = TStatus(errorCode=None, errorMessage='Admission for query exceeded timeout 50ms. Queued reason: number of running queries 1 is over limit 1\n', sqlState='HY000', infoMessages=None, statusCode=3)
E      +        where TStatus(errorCode=None, errorMessage='Admission for query exceeded timeout 50ms. Queued reason: number of running queries 1 is over limit 1\n', sqlState='HY000', infoMessages=None, statusCode=3) = TExecuteStatementResp(status=TStatus(errorCode=None, errorMessage='Admission for query exceeded timeout 50ms. Queued r...mber of running queries 1 is over limit 1\n', sqlState='HY000', infoMessages=None, statusCode=3), operationHandle=None).status

hs2/hs2_test_suite.py:84: AssertionError
{noformat}

http://sandbox.jenkins.cloudera.com/job/impala-cdh5-2.6.0_5.8.0-exhaustive/59/