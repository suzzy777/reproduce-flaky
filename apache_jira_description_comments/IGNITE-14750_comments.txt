Basically, [this code|https://github.com/apache/ignite/blob/22af51e366acb4721122fec4249fac215234dd42/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/filename/PdsConsistentIdProcessor.java#L246] assumes that a path is a directory based on the result of a predicate... but it turns out to be a file. I'm not clear how this could happen – and the files have now been deleted – but the cause is clear

[~sdarlington]

Hello, I don't think this patch helps to solve the issue. According to the JavaDoc the File.isDirectory() returns true if and only if the file denoted by this abstract pathname *exists* and is a directory; false otherwise. 
So, the problem may be related to the concurrent directory removal by multiple nodes on the same path and probably that's why some of the directories in the file array become null.

[~mmuzaf], there was only one node running on this machine so I don't think that's likely. Also it repeatedly only failed on this one node. I think the pattern you suggest would be a bit more random.

Having said that, what you suggest does sound possible. There's always going to be a race condition between finding the folder and getting the list of files/folders in it. Maybe it would make sense just to catch the null pointer exception.

{panel:title=Branch: [pull/9114/head] Base: [master] : Possible Blockers (4)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Control Utility (Zookeeper){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=6015630]]

{color:#d04437}Queries 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6015616]]
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerCoordinatorBasicSelfTest.testCreateIndexWithParallelismPartitionedTransactional - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Cache (Failover) 1{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=6015583]]

{color:#d04437}Hibernate 5.3{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6015620]]
* IgniteHibernate53TestSuite: HibernateL2CacheSelfTest.testQueryCache - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
{panel:title=Branch: [pull/9114/head] Base: [master] : No new tests found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=6015637&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~sdarlington] hello ! you said : "but it turns out to be a file" do you have ideas how this could happen ? Does file permissions are the same on whole nodes ?

[~zstan], no, I don't know how it happened is the short version. They deleted the files before I was able to see the directory structure. A Null Pointer Exception here could be caused by it being a file rather than a directory. Maxim suggests it could be a concurrency issue, which is also plausible. As far as I can tell, File#listFiles() throws a SecurityException if it doesn't have permission. "I don't know" isn't terribly satisfying, but that's why I improved the error handling.

