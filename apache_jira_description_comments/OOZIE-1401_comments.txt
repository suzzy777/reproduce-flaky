[~chitnis],
I saw the code snippet for this. It first fetch all eligible workflows for deletion and than start removing one by one.
The way current code is written for purging work flow might not create issues when you have less count of workflow, But when you have more than a million work flow it will run very slow and create extra load on DB. I think all eligible workflows should be deleted by single query. 
Although I have small patch ready for this bug, Still I feel we should think other prospects as well. 

The query can be like 
{code}
delete from WorkflowJobBean w where w.endTimestamp < :endTime or w.endTimestamp is null;
{code}

bq. But when you have more than a million work flow it will run very slow and create extra load on DB.
   Yes. PurgeService is very inefficient and should be rewritten. Please feel free to take up that work if you are interested. At Y! we use custom optimized PL/SQL scripts using Oracle cursors run as cron jobs to perform bulk deletion and have the PurgeService turned off. So have not focused on the PurgeService. With lot of 1 min jobs, you must be facing problems with this at Inmobi. You can even probably enhance it to clean up more frequently based on the frequency of the coordinator. i.e Something like keep only 10 days worth if frequency is 1 min, 15 days worth if frequency is 5 min, 30 days worth if frequency is 1 days, etc. Remember [~sriksun] talking about such a feature.

Yes, I would like to work on PurgeService. Should we create separate jira for it?


[~jaydeepvishwakarma] how about this JIRA, do you plan to work on this? If not, do you have a PoC code snippet already?

[~jaydeepvishwakarma] taking this issue over, I have to fix that.

[~andras.piros] can I take this over from you? Please take a look at the attached patch. It is a very simple changeset with a new purge test case where end_time is null.

Testing JIRA OOZIE-1401

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
.    {color:red}WARNING{color}: the current HEAD has 77 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2049
.    Tests failed: 1
.    Tests errors: 0

.    The patch failed the following testcases:

.      testMaterizationLookup(org.apache.oozie.command.coord.TestCoordMaterializeTransitionXCommand)

.    Tests failing with errors:
.      

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/172/

Thanks [~asasvari] working on this! Assigned to you.

+1 
Test is failing due OOZIE-2726.

{{TestCoordMaterializeTransitionXCommand.testMaterizationLookup}} is known to be flaky - [OOZIE-2726 |https://issues.apache.org/jira/browse/OOZIE-2726]

[~gezapeti] thanks for the review. Committed to master.

This patch doesn't work because lastModificationTime always NULL. Need add lastModificationTime to GET_WORKFLOWS_BASIC_INFO_BY_PARENT_ID and GET_WORKFLOWS_BASIC_INFO_BY_COORD_PARENT_ID queries. I can create new patch for this ticket or open new issue.

[~vaifer] thanks for spotting and reporting this issue. You are right that the mentioned queries do not return lastModificationTime, and if end_time is null, then those workflows can't be purged as there is no information when they have finished (but at least the purge service does not throw an NPE). An amendment patch should be fine I believe.


[~vaifer] do you have some free capacity to work on and upload the amendment patch? If not, I can do that.

[~asasvari] I'll work on it

We agreed offline with Sergey that I would upload an amendment patch. 

Changes:
- Included lastModificationTime in the following named queries:{{GET_WORKFLOWS_BASIC_INFO_BY_PARENT_ID}},{{GET_WORKFLOWS_BASIC_INFO_BY_COORD_PARENT_ID}}
- Created a base class that is extended by {{WorkflowJobsBasicInfoFromCoordParentIdJPAExecutor}}
 and {{WorkflowJobsBasicInfoFromWorkflowParentIdJPAExecutor}}. Moved the {{getBeanFromArray(List resultList)}} method to the base class and changed it so that returned {{WorkflowJobBean}} object(s) include {{lastModifiedTime}} too if it is present.
- Added 2 test cases:
## testPurgeCoordWithWFChildWithSubWFNullEndTimeValidLastModifiedTime
## testPurgeWFWithEndedSubWFWithNullEndTimeValidLastModifiedTime
- Removed previous test case in previous patch as it did not do the right thing.

I agree with others who commented earlier that PurgeService should be completely rewritten, it is very inefficient in its current state.

Testing JIRA OOZIE-1401

Cleaning local git workspace

triggering build with the amendment patch

Testing JIRA OOZIE-1401

Cleaning local git workspace

----------------------------

{color:red}-1{color} Patch failed to apply to head of branch

----------------------------

Testing JIRA OOZIE-1401

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 2 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2080
.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestCoordMaterializeTriggerService#testCoordMaterializeTriggerService3
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/312/

[~gezapeti], [~andras.piros] can you have a look at the second amendment patch? Thanks in advance.

Thanks for the amendment patch [~asasvari]! I believe the overall direction is OK. Can you please upload it also to ReviewBoard?

[~andras.piros] uploaded it to https://reviews.apache.org/r/65041/

[~asasvari] taking over the finishing touches based on the last amendment patch, if you don't mind.

[~asasvari] please review amendment patch 003. Thanks!

Thanks [~andras.piros] +1 (depending on jenkins - I manually kicked off a precommit build job)

https://builds.apache.org/job/PreCommit-OOZIE-Build/323/console
{code:java}
+1 PATCH_APPLIES
+1 CLEAN
-1 RAW_PATCH_ANALYSIS
    +1 the patch does not introduce any @author tags
    +1 the patch does not introduce any tabs
    +1 the patch does not introduce any trailing spaces
    -1 the patch contains 2 line(s) longer than 132 characters
    +1 the patch adds/modifies 1 testcase(s)
+1 RAT
    +1 the patch does not seem to introduce new RAT warnings
+1 JAVADOC
    +1 the patch does not seem to introduce new Javadoc warnings
+1 COMPILE
    +1 HEAD compiles
    +1 patch compiles
    +1 the patch does not seem to introduce new javac warnings
+1 There are no new bugs found in total.
 +1 There are no new bugs found in [docs].
 +1 There are no new bugs found in [sharelib/distcp].
 +1 There are no new bugs found in [sharelib/hive].
 +1 There are no new bugs found in [sharelib/spark].
 +1 There are no new bugs found in [sharelib/hive2].
 +1 There are no new bugs found in [sharelib/hcatalog].
 +1 There are no new bugs found in [sharelib/streaming].
 +1 There are no new bugs found in [sharelib/pig].
 +1 There are no new bugs found in [sharelib/sqoop].
 +1 There are no new bugs found in [sharelib/oozie].
 +1 There are no new bugs found in [examples].
 +1 There are no new bugs found in [client].
 +1 There are no new bugs found in [core].
 +1 There are no new bugs found in [tools].
 +1 There are no new bugs found in [server].
+1 BACKWARDS_COMPATIBILITY
    +1 the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
    +1 the patch does not modify JPA files
+1 TESTS
    Tests run: 2087
    Tests failed at first run:
TestJavaActionExecutor#testCredentialsSkip
    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
+1 DISTRO
    +1 distro tarball builds with the patch {code}

committed to master

Closing issue; Oozie 5.0.0-beta1 is released

