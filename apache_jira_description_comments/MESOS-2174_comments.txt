I appreciate the sentiment, but I don't think an epic is the right way to track this. We know we want to prioritise flaky test fixes, which is why we have a label for them. Adding them to this epic is just going to mean we have an epic that sits around forever or individual bugs that get forgotten because they're not in the epic.

By all means lead the charge on flaky tests, but please don't try to track them all in one place.

There isn't currently a label for them that I can find. Some are attached to the component 'tests'. I was planning to go through the backlog and attach them into the epic. Although doing that in JIRA seems to be hard (it wants an epic to only contain accepted things) maybe a label would be better. The main goal is we want them attached to every sprint so when devs have spare cycles waiting for reviews or something similar they can just take the task and start working on it.

We've been using a policy of adding one or two to every sprint here at Twitter, so if you do the same we'll rocket through them :)

I'm surprised the epic only wants accepted things. I haven't seen that before. Maybe your view is filtering out 'Open' or something? [~benjaminhindman] would know how it's been set up for you.

I prefer to keep epics for things we know we're going to close out at some point. Flaky tests fit much better as a component or label. I think we should go through and make sure every flaky test issue has component "test" and label "flaky" so we can easily search for them.

You don't expect that we'll ever get to 0 flaky tests in mesos? :P

Every issue I know of should be flagged now.

Intermittently, yes. ;)

Closing this Epic in favor of tracky flaky tests with component `test`, label `flaky` as described above.

"Closing" it for real now (following [~adam-mesos] comments: just "resolving" it does not make it go away from our boards).

Apologies for the spam-some more Jira nonsense... (apparently, it has to be marked "done" to make it go away from boards, but it won't let you do if it's "closed"... whatever).

