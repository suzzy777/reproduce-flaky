I just so happen to have an implementation of something like this and will work to get a patch up for review in the next week.

This provides the Git action and a functional test pulling the Oozie code from GitHub.COM. I will work on more unit-style tests which mock out the actual JGit clone and some negative tests

Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 3 line(s) with trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 2 new RAT warning(s)
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [1] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:red}-1{color} There are [1] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 218]: Comparison of String objects using == or != in org.apache.oozie.action.hadoop.GitMain.cloneRepo(Path, URI, SshSessionFactory)
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [tools].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1938
.    Tests failed: 1
.    Tests errors: 2

.    The patch failed the following testcases:

.      testUpdateConfForTimeLineServiceEnabled(org.apache.oozie.action.hadoop.TestJavaActionExecutor)

.    Tests failing with errors:
.      testNewUsingACLs(org.apache.oozie.util.TestZKUtilsWithSecurity)
.      testCheckAndSetACLs(org.apache.oozie.util.TestZKUtilsWithSecurity)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/oozie-trunk-precommit-build/3825/

[~clayb] thanks for the contribution!

Can you please address the {{RAW_PATCH_ANALYSIS}}, {{RAT}}, and {{FINDBUGS_DIFF}} issues? While doing so, for ease of review, can you please post the next diff also to ReviewBoard, and link the RB URL to this JIRA?

Thanks [~andras.piros]! I've never used the Apache Review Board but I have tried setting up a review at https://reviews.apache.org/r/59620/; please let me know if I need to do anything to make this more useful.

I've gotten `RAT` happy I am re-submiting for Jenkins to run to see what findbugs thinks and the `RAW_PATCH_ANALYSIS` issues.

Now the code should be a little cleaner and there is a documentation stub now. I have added the option for cloning a branch but I can not quite get JGit to [cooperate|https://dev.eclipse.org/mhonarc/lists/jgit-dev/msg03343.html]. Also I have provided a few tests:
* {{TestIntegrationGitActionExecutor}} - Which is disabled by default as it reaches out to Github.COM to download Oozie
* {{TestGitActionExecutor}} - This verifies the XML parsing for the Git action
* {{TestGitMain}} - This implements a unit test case for {{GitMain.gitKeys()}}

This patch provides new test cases:
* TestGitActionExecutor
* TestGitMain
* TestIntegrationGitActionExecutor

The action now has support for cloning a branch -- but the JGit code seems to fail.

There is a stub for documentation on the action now.

Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 1 line(s) with tabs
.    {color:red}-1{color} the patch contains 3 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
.    {color:red}WARNING{color}: the current HEAD has 6 Javadoc warning(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [48] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [42] new bugs found below threshold in [core] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): core/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At OozieDBCLI.java:[line 548]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.convertClobToBlobInMysql(String, Connection): new java.io.FileWriter(String, boolean)
. At OozieDBCLI.java:[line 577]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.convertClobToBlobInPostgres(String, Connection, String): new java.io.FileWriter(String, boolean)
. At OozieDBCLI.java:[line 983]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.createOozieSysTable(String, boolean, String): new java.io.FileWriter(String, boolean)
. At OozieDBCLI.java:[line 759]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.ddlTweaks(String, boolean): new java.io.FileWriter(String, boolean)
. At OozieDBCLI.java:[line 712]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.ddlTweaksFor50(String, boolean, String): new java.io.FileWriter(String, boolean)
. {color:red}-1{color} There are [6] new bugs found below threshold in [tools] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): tools/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At DateList.java:[line 55]: Nullcheck of date at line 55 of value previously dereferenced in org.apache.oozie.example.DateList.main(String[])
. Private method org.apache.oozie.example.DateList.formatDateUTC(Calendar) is never called: Redundant null check at DateList.java:[line 62]
. org.apache.oozie.example.LocalOozieExample.execute(String[]) may fail to clean up java.io.InputStream: At DateList.java:[line 97]
. Path continues at LocalOozieExample.java:[line 76]: Obligation to clean up resource created at LocalOozieExample.java:[line 72] is not discharged
. Path continues at LocalOozieExample.java:[line 78]: Path continues at LocalOozieExample.java:[line 77]
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/oozie-trunk-precommit-build/3840/

Oozie-On-YARN has been merged to master.

You have to rewrite this part:

{code}
        final RunningJob launcherJob = submitAction(context);
        String launcherId = context.getAction().getExternalId();
        waitFor(300 * 1000, new Predicate() {
            public boolean evaluate() throws Exception {
                return launcherJob.isComplete();
            }
        });
{code}

This should be done like:

{code}
        final String runningJob = submitAction(context);
        waitUntilYarnAppDoneAndAssertSuccess(runningJob);
{code}

Check {{TestJavaActionExecutor}} for examples.

Please don't make the changes now to the patch (unnecessarily) - we have some concerns regarding this improvement which we'll discuss soon.

[~clayb] is it always pulling source from git before materializing? Does an hourly scheduled job downloads spark jar or full oozie configurations 24 times a day? 

This has the review board comments published. Still need to write documentation and get some clarification on review board comments.

[~goun] At this time, it simply does clone operations and will not update in place yet. I would think updates, branches and shallow copies would all be good improvements.

Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 5 line(s) with tabs
.    {color:red}-1{color} the patch contains 28 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
.    {color:red}WARNING{color}: the current HEAD has 1 Javadoc warning(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/oozie-trunk-precommit-build/3925/

[~clayb] can you please address also following:
* -1 RAW_PATCH_ANALYSIS
** -1 the patch contains 5 line(s) with tabs
** -1 the patch contains 28 line(s) with trailing spaces
** -1 the patch contains 5 line(s) longer than 132 characters
* -1 COMPILE
** +1 HEAD compiles
** -1 patch does not compile

and [*update diff*|https://www.reviewboard.org/docs/manual/1.5/users/review-requests/updating/#uploading-diffs] within your review request at ReviewBoard? Thanks!

I want to get a closer to working patch up. However, this seems to break the following tests rather inexplicably to me:
* {{testActionDataUploadToHdfsSucceeds(org.apache.oozie.action.hadoop.TestHdfsOperations)}}
* {{testActionDataUploadToHdfsFailsWhenAppendingToWriter(org.apache.oozie.action.hadoop.TestHdfsOperations): Unexpected exception, expected<java.io.IOException> but was<java.lang.NullPointerException>}}
* {{testActionDataUploadToHdfsFailsWhenWriterIsNull(org.apache.oozie.action.hadoop.TestHdfsOperations): Unexpected exception, expected<java.io.IOException> but was<java.lang.NullPointerException>}}

I still need to correct the Twiki documentation and will work to get this on Review Board.

Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green} 1 PATCH_APPLIES{color}
{color:green} 1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green} 1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 1 line(s) with tabs
.    {color:green} 1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green} 1{color} the patch does adds/modifies 3 testcase(s)
{color:green} 1 RAT{color}
.    {color:green} 1{color} the patch does not seem to introduce new RAT warnings
{color:green} 1 JAVADOC{color}
.    {color:green} 1{color} the patch does not seem to introduce new Javadoc warnings
.    {color:red}WARNING{color}: the current HEAD has 1 Javadoc warning(s)
{color:green} 1 COMPILE{color}
.    {color:green} 1{color} HEAD compiles
.    {color:green} 1{color} patch compiles
.    {color:green} 1{color} the patch does not seem to introduce new javac warnings
{color:green} 1{color} There are no new bugs found in total.
{color:green} 1 BACKWARDS_COMPATIBILITY{color}
.    {color:green} 1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green} 1{color} the patch does not modify JPA files
{color:green} 1 TESTS{color}
.    Tests run: 1967
.    Tests rerun: 79
.    Tests failed at first run: org.apache.oozie.action.hadoop.TestJavaActionExecutor,org.apache.oozie.jms.TestJMSJobEventListener,org.apache.oozie.action.hadoop.TestLauncherAM,
{color:green} 1 DISTRO{color}
.    {color:green} 1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/oozie-trunk-precommit-build/3958/

Thanks [~clayb], waiting on your new ReviewBoard request!

[~clayb] added you as a contributor to Oozie and assigned the issue to you. Do you feel like continuing the works? Thanks!

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:red}-1{color} Patch failed to apply to head of branch

----------------------------


[~clayb] can you please rebase on top of current {{master}}? Thanks!

GitHub user cbaenziger opened a pull request:

    https://github.com/apache/oozie/pull/37

    OOZIE-2877 Oozie Git Action

    This is for code review of [OOZIE-2877](https://issues.apache.org/jira/browse/OOZIE-2877).

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cbaenziger/oozie git_action_master_Apr_18_2018

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/oozie/pull/37.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #37
    
----
commit 824cfb855a3d970df0d0c194266ac6a6dfe29ccf
Author: Clay Baenziger <cbaenziger@...>
Date:   2017-05-02T01:37:20Z

    OOZIE-2877 Oozie Git Action

----


PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 5 line(s) with tabs
.    {color:red}-1{color} the patch contains 22 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/489/



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 5 line(s) with tabs
.    {color:red}-1{color} the patch contains 22 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/490/



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 1 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [6] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:red}-1{color} There are [6] new bugs found below threshold in [sharelib/git] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At GitMain.java:[line 190]: Comparison of String objects using == or != in org.apache.oozie.action.hadoop.GitMain.cloneRepo(URI, String, File, File)
. Dereferenced at GitMain.java:[line 250]: Possible null pointer dereference in org.apache.oozie.action.hadoop.GitMain.cloneRepoToFS(Path, URI, String, File) due to return value of called method
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: Known null at GitMain.java:[line 250]
. At GitMain.java:[line 229]: At GitMain.java:[line 235]
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At GitMain.java:[line 235]
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2114
.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestJMSJobEventListener#testConnectionDrop
TestHiveActionExecutor#testHiveAction
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/491/



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 1 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [6] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:red}-1{color} There are [6] new bugs found below threshold in [sharelib/git] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At GitMain.java:[line 190]: Comparison of String objects using == or != in org.apache.oozie.action.hadoop.GitMain.cloneRepo(URI, String, File, File)
. Dereferenced at GitMain.java:[line 250]: Possible null pointer dereference in org.apache.oozie.action.hadoop.GitMain.cloneRepoToFS(Path, URI, String, File) due to return value of called method
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: Known null at GitMain.java:[line 250]
. At GitMain.java:[line 229]: At GitMain.java:[line 235]
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At GitMain.java:[line 235]
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2114
.    Tests failed: 1
.    Tests errors: 0

.    The patch failed the following testcases:

testHiveAction(org.apache.oozie.action.hadoop.TestHiveActionExecutor)

.    Tests failing with errors:


.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestCoordActionsKillXCommand#testActionKillCommandActionNumbers
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/492/



PreCommit-OOZIE-Build started


[~andras.piros] I still do not have a full cluster to try this on for finishing the documentation callouts marked with {{XXX TODO XXX}} these can be removed but these came from seeing what looked relevant from other actions. I can leave the patch as is for now blocking on me getting an Oozie 5 cluster, leave the documentation for someone with an Oozie 5 cluster handy or I can remove the documentation I do not have answers for; which would you prefer?

If you have any code comments we can use the [GitHub PR|https://github.com/apache/oozie/pull/37] otherwise.


Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [5] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [5] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. Dereferenced at GitMain.java:[line 250]: Possible null pointer dereference in org.apache.oozie.action.hadoop.GitMain.cloneRepoToFS(Path, URI, String, File) due to return value of called method
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: Known null at GitMain.java:[line 250]
. At GitMain.java:[line 229]: At GitMain.java:[line 235]
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At GitMain.java:[line 235]
. At GitMain.java:[line 248]: At GitMain.java:[line 248]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2114
.    Tests failed: 1
.    Tests errors: 1

.    The patch failed the following testcases:

testCoordActionRecoveryServiceForWaitingRegisterPartition(org.apache.oozie.service.TestRecoveryService)

.    Tests failing with errors:
testConnectionRetry(org.apache.oozie.service.TestJMSAccessorService)

.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestBundleChangeXCommand#testBundlePauseExtendMaterializesCoordinator
TestCoordMaterializeTriggerService#testCoordMaterializeTriggerService3
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/493/



[~clayb] thanks for the contribution! Testing your latest patch on an Oozie 5 cluster, as well as reworking some of the documentation etc. Will upload the reworked patch soon. Please stay tuned.

[~clayb] here we go w/ [*the updated patch*|https://issues.apache.org/jira/secure/attachment/12921251/OOZIE-2877.010.patch]. Can you please upload to your [*ReviewBoard review request*|https://reviews.apache.org/r/59620/]? Thanks!

Changes:
* slight refactor
* all test cases are running by default
* an example workflow w/ a simple Git action is provided
* tested on {{5.1.0-SNAPSHOT}}

[~gezapeti] could you please also review? Thanks!

PreCommit-OOZIE-Build started


I've left some comments on RB. 
It looks like there are some unused variables and I've also left some security-related comments.
We should also decide if we want to support the tag <job-tracker> for new acton types.


Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 4 line(s) with trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [5] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:red}-1{color} There are [5] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. Dereferenced at GitMain.java:[line 243]: Possible null pointer dereference in org.apache.oozie.action.hadoop.GitMain.cloneRepoToFS(Path, URI, String, File) due to return value of called method
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: Known null at GitMain.java:[line 243]
. At GitMain.java:[line 223]: At GitMain.java:[line 229]
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At GitMain.java:[line 229]
. At GitMain.java:[line 241]: At GitMain.java:[line 241]
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [webapp].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2115
.    Tests failed: 18
.    Tests errors: 12

.    The patch failed the following testcases:

testPartitionDependency(org.apache.oozie.service.TestPartitionDependencyManagerEhcache)
testCoordActionRecoveryServiceForWaitingRegisterPartition(org.apache.oozie.service.TestRecoveryService)
testCoordinatorActionSelectors(org.apache.oozie.jms.TestJMSJobEventListener)
testCoordinatorActionSelectorsNegative(org.apache.oozie.jms.TestJMSJobEventListener)
testWorkflowJobSelectors(org.apache.oozie.jms.TestJMSJobEventListener)
testOnCoordinatorJobSuccessEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testOnWorkflowJobSuspendEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testWorkflowJobSelectorsAnd(org.apache.oozie.jms.TestJMSJobEventListener)
testOnCoordinatorJobFailureEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testConnectionDrop(org.apache.oozie.jms.TestJMSJobEventListener)
testWorkflowJobSelectorsNegative(org.apache.oozie.jms.TestJMSJobEventListener)
testWorkflowJobSelectorsOr(org.apache.oozie.jms.TestJMSJobEventListener)
testOnWorkflowJobSuccessEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testOnCoordinatorActionWaitingEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testOnWorkflowJobFailureEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testOnCoordinatorActionStartEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testOnWorkflowJobStartedEvent(org.apache.oozie.jms.TestJMSJobEventListener)
testValid(org.apache.oozie.cli.TestValidation)

.    Tests failing with errors:
testDropEventTypeMessage(org.apache.oozie.jms.TestHCatMessageHandler)
testCacheUpdateByMessage(org.apache.oozie.jms.TestHCatMessageHandler)
testOnSLADurationMetEvent(org.apache.oozie.jms.TestJMSSLAEventListener)
testOnSLAStartMetEvent(org.apache.oozie.jms.TestJMSSLAEventListener)
testSLAJobSelectorsNegative(org.apache.oozie.jms.TestJMSSLAEventListener)
testOnSLAEndMetEvent(org.apache.oozie.jms.TestJMSSLAEventListener)
testOnSLAStartMissEvent(org.apache.oozie.jms.TestJMSSLAEventListener)
testSLAJobSelectors(org.apache.oozie.jms.TestJMSSLAEventListener)
testOnSLAEndMissEvent(org.apache.oozie.jms.TestJMSSLAEventListener)
testOnSLADurationMissEvent(org.apache.oozie.jms.TestJMSSLAEventListener)
testConnectionRetry(org.apache.oozie.service.TestJMSAccessorService)
testThreadLocalSession(org.apache.oozie.jms.TestDefaultConnectionContext)

.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestCoordActionInputCheckXCommandNonUTC>TestCoordActionInputCheckXCommand#testNone
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/497/



[~gezapeti] [*OOZIE-2877.011.patch*|https://issues.apache.org/jira/secure/attachment/12921392/OOZIE-2877.011.patch] targets already some of your comments.

[~clayb] you can take the latest patch as a base. I've tested on {{5.1.0-SNAPSHOT}} as follows:
{noformat}
bin/oozie job -oozie http://localhost:11000/oozie -config $OOZIE_DIR/oozie/examples/src/main/apps/git/job.properties -run -DnameNode=hdfs://localhost:9000 -DjobTracker=localhost:8032
{noformat}

YARN logs:
{noformat}
>>> Invoking Main class now >>>

Launcher class: class org.apache.oozie.action.hadoop.GitMain
INFO: loading log4j config file log4j.properties.
INFO: log4j config file log4j.properties loaded successfully.
{"properties":[{"key":"oozie.launcher.job.id","value":"0000006-180430151425398-oozie-fors-W","isFinal":false,"resource":"programatically"},{"key":"oozie.job.id","value":"0000006-180430151425398-oozie-fors-W","isFinal":false,"resource":"programatically"},{"key":"oozie.action.id","value":"0000006-180430151425398-oozie-fors-W@git-node","isFinal":false,"resource":"programatically"},{"key":"mapreduce.job.tags","value":"oozie-ea3672d1be92e54dc781eca1b88666a6","isFinal":false,"resource":"programatically"}]}
Oozie Git Action Configuration
=============================================
Local mkdir called creating temp. dir at: /private/tmp/hadoop-forsage/nm-local-dir/usercache/forsage/appcache/application_1525160126433_0002/container_1525160126433_0002_01_000001/./git_20081494081518844967816698870085523
Finished cloning to local
Finished the copy to hdfs://localhost:9000/user/forsage/examples/output-data/git/scoozie!

<<< Invocation of Main class completed <<<
{noformat}

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 4 line(s) with trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [5] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [5] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. Dereferenced at GitMain.java:[line 243]: Possible null pointer dereference in org.apache.oozie.action.hadoop.GitMain.cloneRepoToFS(Path, URI, String, File) due to return value of called method
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: Known null at GitMain.java:[line 243]
. At GitMain.java:[line 223]: At GitMain.java:[line 229]
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At GitMain.java:[line 229]
. At GitMain.java:[line 241]: At GitMain.java:[line 241]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2115
.    Tests failed: 2
.    Tests errors: 1

.    The patch failed the following testcases:

testCoordActionRecoveryServiceForWaitingRegisterPartition(org.apache.oozie.service.TestRecoveryService)
testValid(org.apache.oozie.cli.TestValidation)

.    Tests failing with errors:
testConnectionRetry(org.apache.oozie.service.TestJMSAccessorService)

.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/498/



Thanks everyone for your patience while I figured out review board better. I have updated RB with my rebased patch and both of Andras' patches. All the changes look very good to me! Thank you [~andras.piros] for the Oozie 5 clean-ups that I had not grokked.

[~clayb] thanks for contributing! I've closed some old JIRA comments, and updated the rest. Best is to always update both RB and JIRA w/ the same patch - the Hadoop QA has then a chance to run pre-commit Jenkins job.

[~gezapeti] would you mind making another review turn? Thanks!

I've taken an other quick look. I'm extremely pleased that a working example is part of the patch!

[~clayb], please respond on RB to my comments. :)

Some of them are nitpicks, but there are three bigger open questions:
 * credential files on  HDFS and how strict we should handle them
 * is estination-uri validated against the whitelisted namenodes? 
 * should we support job-tracker on new action types?

 

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 10 line(s) with tabs
.    {color:red}-1{color} the patch contains 10 line(s) with trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [4] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [4] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 151]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitMain.java:[line 151]: At GitMain.java:[line 145]
. At GitMain.java:[line 134]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method: At GitMain.java:[line 134]
. Known null at GitOperations.java:[line 151]: Dereferenced at GitOperations.java:[line 151]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2135
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/599/



[~gezapeti] answering some of your comments:
* credential files are stored on the HDFS path potentially only readable by the executing user of the Git action. It's stored in a temporary subfolder of the current working directory (YARN NodeManager container folder) also only readable by that user, and will possibly be deleted by YARN NodeManager after the action has been run. So I think we're clean here
* {{destination-uri}} is checked via calls to *{{FileSystem#get()}}* and [*{{FileSystem#makeQualified()}}*|https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java#L587-L590]
* {{job-tracker}} appearances substituted by {{resource-manager}} in latest patch

[~clayb] many thanks for your extended efforts on the feature! The only remaining thingies I see at the moment are:
* addressing remaining pre-commit issues:
{noformat}
-1 RAW_PATCH_ANALYSIS
. -1 the patch contains 10 line(s) with tabs
. -1 the patch contains 10 line(s) with trailing spaces
-1 There are [4] new bugs found below threshold in total that must be fixed.
. -1 There are [4] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 151]: java/io/File.<init>(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitMain.java:[line 151]: At GitMain.java:[line 145]
. At GitMain.java:[line 134]: java/io/File.<init>(Ljava/lang/String;)V reads a file whose location might be specified by user input
. Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method: At GitMain.java:[line 134]
. Known null at GitOperations.java:[line 151]: Dereferenced at GitOperations.java:[line 151]
{noformat}
* substituting {{examples/src/main/apps/git/workflow.xml}}'s {{git-uri}} value with {{https://github.com/apache/oozie}}
* substituting {{TestGitActionExecutor}}'s {{git-uri}} value with {{https://github.com/klout/scoozie}} so that integration / JUnit test will not timeout on a machine that has mediocre internet connection

Let me know whether you need my help while finishing.

I haven't been able to find time to look at the patch, but I saw mention of "credential files" and just wanted to suggest something (I could be completely off base here because I haven't looked at the code, so feel free to ignore me if this doesn't make sense :)).  Now that Oozie's directly on YARN, we have access to the {{Credentials}} object in the {{ApplicationSubmissionContext}}.  You can add arbitrary secrets into a hashmap ({{<string,byte[]>}}) in the {{Credentials}}.  YARN will securely provide that to the Container (IIRC you can retrieve it via {{Configuration}}).  That might be a better alternative to putting the credential file in HDFS.

[~rkanter] what an interesting idea! I didn't think of that YARN feature :)

However, in this case, since the customer has to upload the Git credential file to HDFS in any case, I don't think we can leverage more security not using {{DistributedCache}} but {{ApplicationSubmissionContext}}. We could, though, if the user wouldn't upload Git credential file to HDFS, but would only put to the local filesystem only visible to Oozie on the Oozie server host.

[~clayb] [~gezapeti] what do you think, in how much of an extent do we want to protect the users' Git credentials?

My understanding was [~gezapeti]'s original request was to ensure the credential as stored on HDFS were secure; and if it was not, then we should warn (or error) to the user – the same as SSH does for your private SSH key (e.g. see [Stack Overflow #9270734|[https://stackoverflow.com/questions/9270734/ssh-permissions-are-too-open-error]]).

In the case of YARN Credentials, how would one provide that to the Oozie job for on-going use? Does the Oozie REST API support some notion of the YARN credentials or is this only at job launch and {{git clone}} time? I would expect if the later, then it could be useful but I do not expect more security unless run on an insecure cluster where all jobs are run as the same user (e.g. {{yarn}} instead of the user submitting the job) or where local-filesystem permissions are otherwise non-standard for a secure deployment?

[~clayb] I see. It's a good idea to stick to the original request / solution and not use YARN's {{ApplicationSubmissionContext}}.

I'd choose {{GitActionExecutor}} to perform the private SSH key permission check, and in case permission is too vague, {{LOG.error()}} and not event start the Git action. The user can then restrict the permission and re-run the workflow containing the SSH action.

I just have a question regarding this change:

{noformat}
+        final String repoUrl = "https://github.com/apache/oozie";
+        final String keyUrl = "this_would_be_an_HDFS_path";
+        final String destDir = "repoDir";
+        final String branch = "myBranch";
+        Element actionXml = XmlUtils.parseXml("<git>" +
+                "<resource-manager>" + getJobTrackerUri() + "</resource-manager>" +
+                "<name-node>" + getNameNodeUri() + "</name-node>" +
+                "<git-uri>" + repoUrl + "</git-uri>"+
+                "<branch>" + branch + "</branch>"+
+                "<key-path>" + keyUrl + "</key-path>"+
+                "<destination-uri>" + destDir + "</destination-uri>" +
+                "</git>");
{noformat}

Do I understand correctly that this would fetch a repository during the integration test? If so, I'm really not sure that this is a good idea. Can't we do it differently? I have two ideas:

1. Separately test {{GitMain}} with unit tests and somehow mock it during {{TestGitActionExecutor}}
2. Start our own SSH server and simulate the execution of Git command

#1 seems to be easier. 


Makes sense to me then.  Let's stick with the original credential handling.

[~pbacsko] makes a good point.  We shouldn't be fetching a remote repo during a unit test.  Perhaps JGit has some easy way of mocking this or doing it locally?

I also took a quick look at the patch and left a few minor comments on ReviewBoard.

Overall, though; this is really good!

This provides an SSH-style key permissions checker for both standard POSIX style permissions and ACL's allowing others to read. It however does need to enable ACL support for the namenode in all tests extending {{XTestCase}}.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 8 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 4 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:red}-1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:red}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
.    {color:red}-1{color} the patch seems to introduce 10 new Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [4] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [4] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 151]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitMain.java:[line 151]: At GitMain.java:[line 145]
. At GitMain.java:[line 134]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method: At GitMain.java:[line 134]
. Known null at GitOperations.java:[line 151]: Dereferenced at GitOperations.java:[line 151]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2903
.    {color:orange}Tests failed at first run:{color}
TestCoordActionInputCheckXCommandNonUTC>TestCoordActionInputCheckXCommand#testNone
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/641/



[~clayb] could you please update Reviewboard with the latest patch? Thanks.

Correct tabs to spaces

[~pbacsko] Thanks for the pointer my RB update was not submitted. I have uploaded a version with the tabs corrected. Here the 13-1 patch.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 15 line(s) with trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 4 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:red}-1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:red}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
.    {color:red}-1{color} the patch seems to introduce 10 new Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [4] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [4] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 151]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitMain.java:[line 151]: At GitMain.java:[line 145]
. At GitMain.java:[line 134]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method: At GitMain.java:[line 134]
. Known null at GitOperations.java:[line 151]: Dereferenced at GitOperations.java:[line 151]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2903
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/642/



PreCommit-OOZIE-Build started


Shoot! Jenkins was faster than me. Will submit a corrected patch as {{OOZIE-2877.014.patch}} (removed) was not off the correct repo.


Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 21 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 5 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 1 new RAT warning(s)
{color:green}+1 JAVADOC{color}
{color:red}-1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:red}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
.    {color:red}-1{color} the patch seems to introduce 10 new Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [4] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [4] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 147]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitMain.java:[line 147]: At GitMain.java:[line 141]
. At GitMain.java:[line 130]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method: At GitMain.java:[line 130]
. Known null at GitOperations.java:[line 151]: Dereferenced at GitOperations.java:[line 151]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2915
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/695/



PreCommit-OOZIE-Build started


Uploaded {{OOZIE-2877.014-2.patch}} which has fluent API support, hopefully no tabs/space issues and an additional test using the fluent API to check {{isValidUri()}} and show that it correctly fails for a schema-less Git URI.

Ooh; {{OOZIE-2877.014-2.patch}} also provides an integration-test Git server which is run in JVM, to avoid the need for external connectivity.


Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 3 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 5 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 1 new RAT warning(s)
{color:green}+1 JAVADOC{color}
{color:red}-1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:red}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
.    {color:red}-1{color} the patch seems to introduce 10 new Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [4] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [4] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 147]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitMain.java:[line 147]: At GitMain.java:[line 141]
. At GitMain.java:[line 130]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method: At GitMain.java:[line 130]
. Known null at GitOperations.java:[line 151]: Dereferenced at GitOperations.java:[line 151]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2919
.    {color:orange}Tests failed at first run:{color}
TestWorkflowRetries>TestWorkflow#testWorkflowWithStartAndEndCompletesSuccessfully
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/721/



Latest {{OOZIE-2877.014-3.patch}} addresses JavaDoc complaints (except a number of {{@throws}}). Is it best to explicitly document uncaught exceptions? 

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 1 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 2 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 5 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:red}-1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:red}-1{color} the patch seems to introduce 4 new Javadoc warning(s)
.    {color:red}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [4] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [4] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitMain.java:[line 146]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitMain.java:[line 146]: At GitMain.java:[line 140]
. At GitMain.java:[line 130]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method: At GitMain.java:[line 130]
. Known null at GitOperations.java:[line 151]: Dereferenced at GitOperations.java:[line 151]
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2919
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/722/



Thanks for the updated patches [~clayb]! Would love to see Git action as part of {{5.1.0}}.

If you don't mind I can address the remaining few issues like pre-commit, clean code, etc. to have a smooth and rapid way towards {{master}}, based on [*patch 14-3*|https://issues.apache.org/jira/secure/attachment/12934336/OOZIE-2877.014-3.patch].

I added some comments to patch 14.3. Now it looks much better and more readable. So good job [~clayb].

Thank you guys for all the help and reviews! Indeed, I am happy to hand off the code for the remaining necessary steps to see this go out as part of 5.1.0.

Thanks [~clayb]! I'll provide a patch soon that covers the very few steps remaining based on the review comments of [~pbacsko].

[~clayb] thanks for the contribution! I'm addressing some of the original review comments, as well as outstanding pre-commit build errors.

[~pbacsko] [~gezapeti] [*please review*|https://reviews.apache.org/r/68505/].

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 1 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 6 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:red}-1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:red}-1{color} the patch seems to introduce 1 new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [2] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:red}-1{color} There are [2] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. Dereferenced at GitOperations.java:[line 138]: Possible null pointer dereference in org.apache.oozie.action.hadoop.GitOperations.cloneRepoToFS(Path) due to return value of called method
. java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: Known null at GitOperations.java:[line 138]
. At GitOperations.java:[line 136]: At GitOperations.java:[line 136]
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [core].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2934
.    {color:orange}Tests failed at first run:{color}
TestCoordActionInputCheckXCommand#testNone
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/790/



Addressing review comments.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 6 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:red}-1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:red}-1{color} the patch seems to introduce 1 new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [1] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:red}-1{color} There are [1] new bugs found below threshold in [sharelib/git] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): sharelib/git/findbugs-new.html
. The most important FindBugs errors are:
. At GitOperations.java:[line 133]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GitOperations.java:[line 133]
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [webapp].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2939
.    {color:orange}Tests failed at first run:{color}
TestCoordActionInputCheckXCommandNonUTC>TestCoordActionInputCheckXCommand#testNone
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/796/



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2877

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 6 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:orange}0{color} There are [2] new bugs found in total that would be nice to have fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:orange}0{color} There are [2] new bugs found in [sharelib/git] that would be nice to have fixed.
. You can find the FindBugs diff here: sharelib/git/findbugs-new.html
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2939
.    {color:orange}Tests failed at first run:{color}
TestCoordActionInputCheckXCommand#testNone
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:green}*+1 Overall result, good!, no -1s*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/801/



+1 for the latest patch. 

 

I think in the current state it can be committed to master.

Thanks for the contribution [~clayb] and for the review rounds [~pbacsko] and [~gezapeti]!

Committed to {{master}}.

Closing issue; Oozie 5.1.0 is released.

