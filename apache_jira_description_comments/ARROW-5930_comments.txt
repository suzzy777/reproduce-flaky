I managed to get a gdb traceback: https://travis-ci.org/pitrou/arrow/builds/559516492#L3018

The explanation is: one thread is calling {{FlightServerBase::Shutdown}} while the {{FlightServerBase::Init}} call in the other thread hasn't finished, so {{impl_->server_}} is NULL.

The way we're calling {{server_instance.shutdown()}} in the {{flight_server()}} function in {{test_flight.py}} isn't safe.

[~pitrou] I had just come to the same conclusion. I have a change so that Shutdown doesn't use a DCHECK, but instead does an actual check, so at least it won't segfault. I can add additional synchronization on the Python side.

Perhaps Python needs to distinguish the setup phase and the serve phase of the Flight server. Then test_flight.py can run the setup phase in the main thread.

Issue resolved by pull request 4891
[https://github.com/apache/arrow/pull/4891]

This issue has been migrated to [issue #22339|https://github.com/apache/arrow/issues/22339] on GitHub. Please see the [migration documentation|https://github.com/apache/arrow/issues/14542] for further details.

