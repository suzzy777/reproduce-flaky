I've made some progress on this in SOLR-12804, but I have created this issue to specifically beast and address all the autoscaling tests specifically.

Commit 75b183196798232aa6f2dcaaaab117f309119053 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=75b1831 ]

SOLR-12801: Make massive improvements to the tests.

SOLR-12804: Remove static modifier from Overseer queue access.

SOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)

SOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)

SOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)

SOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)

SOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)

SOLR-12933: Fix SolrCloud distributed commit.


Commit eb652b84edf441d8369f5188cdd5e3ae2b151434 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb652b8 ]

SOLR-12801: Make massive improvements to the tests.

SOLR-12804: Remove static modifier from Overseer queue access.

SOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)

SOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)

SOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)

SOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)

SOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)

SOLR-12933: Fix SolrCloud distributed commit.


Commit 0aef56124529f866da56eec2cc3ade2bf702fbaf in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0aef561 ]

SOLR-12923: Harden TestSimNodeLostTrigger#testTrigger.


Commit 4133ce4cc167a80ed20f7763de4b4a8ab5d0316f in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4133ce4 ]

SOLR-12923: Harden TestSimTriggerIntegration.testNodeMarkersRegistration.


Commit 990ab5b8fc480d7341f77b05d2b4cca08f79706b in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=990ab5b ]

SOLR-12923: Harden TestSimNodeLostTrigger#testTrigger.


Commit 89b6a960fe681919608ea4d06113f3d922bd2675 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=89b6a96 ]

SOLR-12923: Harden TestSimTriggerIntegration.testNodeMarkersRegistration.


Commit 18356de83738d64e619898016d873993ec474d17 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=18356de ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit b62a9a0a3b8dc816230fb36a8b65b9c8bb160c00 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b62a9a0 ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit a1657616bb596702aee8c8bac582ef1f86f55d7d in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a165761 ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit 202dad8c88ec29c45cabfe1e24f045b858637618 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=202dad8 ]

SOLR-12923: Harden TestSimLargeCluster.


Commit a76fa865e6ecc4700e7a4b0754881f6b1d97b941 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a76fa86 ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit f8a8977998e2bf1aee71e6ed851ecdb05a380580 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f8a8977 ]

SOLR-12923: Harden TestSimLargeCluster.


Commit 3205491bebe3b6d3e22404889ed4110051cd4232 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3205491 ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit 44ffa9be667bf7a7876f296a6f59783ef6a9110c in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=44ffa9b ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit ee39449f69b34077d9117cdfce2432eaaf37ba4c in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ee39449 ]

SOLR-12923: Harden TestSimLargeCluster.


Commit fdadaebf4e6cf1ffb2ef4235d98e8f8926c99035 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fdadaeb ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit eb1735ece90e0a4d04b21b5908a409c6e929b935 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb1735e ]

SOLR-12923: Harden TestSimLargeCluster.


Commit b9278d7c99d172b0f197946490dc95958551fa78 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b9278d7 ]

SOLR-12923: Harden TestSimTriggerIntegration.


Commit 39d4dd6294f650777a872f0b33f6f17958bb167b in lucene-solr's branch refs/heads/branch_7x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=39d4dd6 ]

SOLR-12923: add a latch to TestTriggerListener to harden test that use it so they can deterministically know when all events have been proceeded

This hardens several flakey tests, and allows the removal of a several arbitrary sleep calls

(cherry picked from commit d970375cd2f2357b88886a8da5ac67ef994f8d43)


Commit 62e9ff436a40183d1683e61e0b464e3faf0bd5db in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=62e9ff4 ]

SOLR-12923: add a latch to TestTriggerListener to harden test that use it so they can deterministically know when all events have been proceeded

This hardens several flakey tests, and allows the removal of a several arbitrary sleep calls

(cherry picked from commit d970375cd2f2357b88886a8da5ac67ef994f8d43)


Commit d970375cd2f2357b88886a8da5ac67ef994f8d43 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=d970375 ]

SOLR-12923: add a latch to TestTriggerListener to harden test that use it so they can deterministically know when all events have been proceeded

This hardens several flakey tests, and allows the removal of a several arbitrary sleep calls


Commit 76aae1cc1b6c69e7adbd65d39e8e9d0db2ace7f6 in lucene-solr's branch refs/heads/branch_7x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=76aae1c ]

SOLR-12923: increase all await() times in TestSimTriggerIntegration

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit fed80599a6f3c237ac61782a42196f6355b8cda6)


Commit 0376bc0052a53480ecb2edea7dfe58298bda5deb in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=0376bc0 ]

SOLR-12923: increase all await() times in TestSimTriggerIntegration

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit fed80599a6f3c237ac61782a42196f6355b8cda6)


Commit 677a97edc7ba07a35f644792c98fa5ebf5667bb5 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=677a97e ]

SOLR-12923: increase all await() times in TestSimTriggerIntegration

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit fed80599a6f3c237ac61782a42196f6355b8cda6)


Commit fed80599a6f3c237ac61782a42196f6355b8cda6 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=fed8059 ]

SOLR-12923: increase all await() times in TestSimTriggerIntegration

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines


Commit 235b15acfc97a97cdf03ce73939bc5daf052b6cf in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=235b15a ]

SOLR-12923: increase all await() times in TriggerIntegrationTest

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines


Commit 7f7357696f9efe63147bacc3e1ed3d800d389d28 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=7f73576 ]

SOLR-12923: harden testEventQueue by replacing the arbitrary sleep call with a countdown latch


Commit e83d6f14812ec21f5b41dc7b3405df9fa6df86dd in lucene-solr's branch refs/heads/branch_7x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=e83d6f1 ]

SOLR-12923: increase all await() times in TriggerIntegrationTest

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit 235b15acfc97a97cdf03ce73939bc5daf052b6cf)


Commit 26b498d0a9d25626a15e25b0cf97c8339114263a in lucene-solr's branch refs/heads/branch_7x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=26b498d ]

SOLR-12923: harden testEventQueue by replacing the arbitrary sleep call with a countdown latch

(cherry picked from commit 7f7357696f9efe63147bacc3e1ed3d800d389d28)


Commit b3330b0a11741996d6dd2ab0513bf96bd77e4377 in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=b3330b0 ]

SOLR-12923: increase all await() times in TriggerIntegrationTest

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit 235b15acfc97a97cdf03ce73939bc5daf052b6cf)


Commit 44dff11eca6b6969445bd0d84a66e1a5d5bae9d9 in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=44dff11 ]

SOLR-12923: harden testEventQueue by replacing the arbitrary sleep call with a countdown latch

(cherry picked from commit 7f7357696f9efe63147bacc3e1ed3d800d389d28)


Commit 666e83d84a5f33af30eb5599567598a3b97f1e73 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=666e83d ]

SOLR-12923: increase all await() times in TriggerIntegrationTest

This means that 'real' failures (which should be rare and hopefully reproducile) will be 'slow', but the trade off will be less hard to reproduce 'false failures' due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit 235b15acfc97a97cdf03ce73939bc5daf052b6cf)


Commit b8b51389ae7737b3594e3409138513cdd4817d1c in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=b8b5138 ]

SOLR-12923: harden testEventQueue by replacing the arbitrary sleep call with a countdown latch

(cherry picked from commit 7f7357696f9efe63147bacc3e1ed3d800d389d28)


Commit 20de3d2ee0d234d04bbcf7c2cddc18ff67a09f8b in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=20de3d2 ]

SOLR-12923: harden TestSimLargeCluster

- added logging
- ensure start/finish trigger action counters are incremented before latches are released
- replace arbitrary sleep calls with a trigger listener countdown latch
- increase all await() times: This means that 'real' failures (which should be rare and hopefully
  reproducible) will be 'slow', but the trade off will be less hard to reproduce 'false failures'
  due to thread contention on slow or heavily loaded (ie: jenkins) machines


Commit 6b606b787f70451edeb5acc13818802e5e41b0a4 in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=6b606b7 ]

SOLR-12923: harden TestSimLargeCluster

- added logging
- ensure start/finish trigger action counters are incremented before latches are released
- replace arbitrary sleep calls with a trigger listener countdown latch
- increase all await() times: This means that 'real' failures (which should be rare and hopefully
  reproducible) will be 'slow', but the trade off will be less hard to reproduce 'false failures'
  due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit 20de3d2ee0d234d04bbcf7c2cddc18ff67a09f8b)

Conflicts:
	solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster.java


Commit 27aeb11a37e258c9dae7c4c71361cb005026a746 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=27aeb11 ]

SOLR-12923: harden TestSimLargeCluster

- added logging
- ensure start/finish trigger action counters are incremented before latches are released
- replace arbitrary sleep calls with a trigger listener countdown latch
- increase all await() times: This means that 'real' failures (which should be rare and hopefully
  reproducible) will be 'slow', but the trade off will be less hard to reproduce 'false failures'
  due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit 20de3d2ee0d234d04bbcf7c2cddc18ff67a09f8b)


Commit 5abc75460753a301087ef80dd8d8dc9301f7aeba in lucene-solr's branch refs/heads/branch_7x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=5abc754 ]

SOLR-12923: harden TestSimLargeCluster

- added logging
- ensure start/finish trigger action counters are incremented before latches are released
- replace arbitrary sleep calls with a trigger listener countdown latch
- increase all await() times: This means that 'real' failures (which should be rare and hopefully
  reproducible) will be 'slow', but the trade off will be less hard to reproduce 'false failures'
  due to thread contention on slow or heavily loaded (ie: jenkins) machines

(cherry picked from commit 20de3d2ee0d234d04bbcf7c2cddc18ff67a09f8b)

Conflicts:
	solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster.java


Commit 76babf876a49f82959cc36a1d7ef922a9c2dddff in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=76babf8 ]

SOLR-12923: Fix some issues w/concurrency and exception swallowing in SimClusterStateProvider/SimCloudManager

There are 3 tightly related bug fixes in these changes:

1) ConcurrentModificationExceptions were being thrown by some SimClusterStateProvider methods when
   creating collections/replicas due to the use of ArrayLists nodeReplicaMap. These ArrayLists were changed
   to use synchronizedList wrappers.
2) The Exceptions from #1 were being swallowed/hidden by code using SimCloudManager.submit() w/o checking
   the result of the resulting Future object. (As a result, tests waiting for a particular ClusterShape
   would timeout regardless of how long they waited.)   To protect against "silent" failures like this,
   this SimCloudManager.submit() has been updated to wrap all input Callables such that any uncaught errors
   will be logged and "counted."  SimSolrCloudTestCase will ensure a suite level failure if any such failures
   are counted.
3) The changes in #2 exposed additional concurrency problems with the Callables involved in leader election:
   These would frequently throw IllegalStateExceptions due to assumptions about the state/existence of
   replicas when the Callables were created vs when they were later run -- notably a Callable may have been
   created that held a reference to a Slice, but by the time that Callable was run the collection (or a
   node, etc...) refered to by that Slice may have been deleted.  While fixing this, the leader election
   logic was also cleaned up such that adding a replica only triggers leader election for that shard, not
   every shard in the collection.

While auditing this code, cleanup was also done to ensure all usage of SimClusterStateProvider.lock was
also cleaned up to remove all risky points where an exception may have been possible after aquiring the
lock but before the try/finally that ensured it would be unlocked.


Commit c79aeee5f9a013c280a76a8d6b04bea63f212909 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=c79aeee ]

SOLR-12923: tweak the randomization in testCreateLargeSimCollections to reduce the max possible totalCores

also decrease the number of iters while increase the cluster shape wait time to reduce the risk of spurious failures on machines under heavy contention w/o making the the test any slower on average


Commit 1a54c6b19db9dcb1081e43614bf479e0ac7bf177 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=1a54c6b ]

SOLR-12923: fix SimClusterStateProvider to use lock.lockInterruptibly() exclusively, and make SimCloudManager's Callable checks tollerant of Callables that may have failed related to interrupts w/o explicitly throwing InterruptedException


Commit 5c143022e7abcdf14a570786afec4ff099fd581c in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=5c14302 ]

SOLR-12923: Mea culpa: Remove useless import of java.lang... that breaks precommit


Commit 653ba8d245a10c311eeb48321e89e1027cb3472d in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=653ba8d ]

SOLR-12923: Fix some issues w/concurrency and exception swallowing in SimClusterStateProvider/SimCloudManager

There are 3 tightly related bug fixes in these changes:

1) ConcurrentModificationExceptions were being thrown by some SimClusterStateProvider methods when
   creating collections/replicas due to the use of ArrayLists nodeReplicaMap. These ArrayLists were changed
   to use synchronizedList wrappers.
2) The Exceptions from #1 were being swallowed/hidden by code using SimCloudManager.submit() w/o checking
   the result of the resulting Future object. (As a result, tests waiting for a particular ClusterShape
   would timeout regardless of how long they waited.)   To protect against "silent" failures like this,
   this SimCloudManager.submit() has been updated to wrap all input Callables such that any uncaught errors
   will be logged and "counted."  SimSolrCloudTestCase will ensure a suite level failure if any such failures
   are counted.
3) The changes in #2 exposed additional concurrency problems with the Callables involved in leader election:
   These would frequently throw IllegalStateExceptions due to assumptions about the state/existence of
   replicas when the Callables were created vs when they were later run -- notably a Callable may have been
   created that held a reference to a Slice, but by the time that Callable was run the collection (or a
   node, etc...) refered to by that Slice may have been deleted.  While fixing this, the leader election
   logic was also cleaned up such that adding a replica only triggers leader election for that shard, not
   every shard in the collection.

While auditing this code, cleanup was also done to ensure all usage of SimClusterStateProvider.lock was
also cleaned up to remove all risky points where an exception may have been possible after aquiring the
lock but before the try/finally that ensured it would be unlocked.

(cherry picked from commit 76babf876a49f82959cc36a1d7ef922a9c2dddff)


Commit 0ac45c1668111150040091d043310efef9700179 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=0ac45c1 ]

SOLR-12923: tweak the randomization in testCreateLargeSimCollections to reduce the max possible totalCores

also decrease the number of iters while increase the cluster shape wait time to reduce the risk of spurious failures on machines under heavy contention w/o making the the test any slower on average

(cherry picked from commit c79aeee5f9a013c280a76a8d6b04bea63f212909)


Commit 87ec0c3600982215701829e0ebf687a3b76436b4 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=87ec0c3 ]

SOLR-12923: fix SimClusterStateProvider to use lock.lockInterruptibly() exclusively, and make SimCloudManager's Callable checks tollerant of Callables that may have failed related to interrupts w/o explicitly throwing InterruptedException

(cherry picked from commit 1a54c6b19db9dcb1081e43614bf479e0ac7bf177)


Commit 695bfa3c908e36d771ca7275e465d0f26f4cae11 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=695bfa3 ]

SOLR-12923: Mea culpa: Remove useless import of java.lang... that breaks precommit

(cherry picked from commit 5c143022e7abcdf14a570786afec4ff099fd581c)


Commit f1e37f44175e10db7abfc88590e695374af59ff3 in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=f1e37f4 ]

SOLR-12923: Fix some issues w/concurrency and exception swallowing in SimClusterStateProvider/SimCloudManager

There are 3 tightly related bug fixes in these changes:

1) ConcurrentModificationExceptions were being thrown by some SimClusterStateProvider methods when
   creating collections/replicas due to the use of ArrayLists nodeReplicaMap. These ArrayLists were changed
   to use synchronizedList wrappers.
2) The Exceptions from #1 were being swallowed/hidden by code using SimCloudManager.submit() w/o checking
   the result of the resulting Future object. (As a result, tests waiting for a particular ClusterShape
   would timeout regardless of how long they waited.)   To protect against "silent" failures like this,
   this SimCloudManager.submit() has been updated to wrap all input Callables such that any uncaught errors
   will be logged and "counted."  SimSolrCloudTestCase will ensure a suite level failure if any such failures
   are counted.
3) The changes in #2 exposed additional concurrency problems with the Callables involved in leader election:
   These would frequently throw IllegalStateExceptions due to assumptions about the state/existence of
   replicas when the Callables were created vs when they were later run -- notably a Callable may have been
   created that held a reference to a Slice, but by the time that Callable was run the collection (or a
   node, etc...) refered to by that Slice may have been deleted.  While fixing this, the leader election
   logic was also cleaned up such that adding a replica only triggers leader election for that shard, not
   every shard in the collection.

While auditing this code, cleanup was also done to ensure all usage of SimClusterStateProvider.lock was
also cleaned up to remove all risky points where an exception may have been possible after aquiring the
lock but before the try/finally that ensured it would be unlocked.

(cherry picked from commit 76babf876a49f82959cc36a1d7ef922a9c2dddff)


Commit b7546fd19ba29cc2046ee73bf4e145667f5252b6 in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=b7546fd ]

SOLR-12923: tweak the randomization in testCreateLargeSimCollections to reduce the max possible totalCores

also decrease the number of iters while increase the cluster shape wait time to reduce the risk of spurious failures on machines under heavy contention w/o making the the test any slower on average

(cherry picked from commit c79aeee5f9a013c280a76a8d6b04bea63f212909)


Commit 4552eeddc613a5e143c97963b504102c6f41af46 in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=4552eed ]

SOLR-12923: fix SimClusterStateProvider to use lock.lockInterruptibly() exclusively, and make SimCloudManager's Callable checks tollerant of Callables that may have failed related to interrupts w/o explicitly throwing InterruptedException

(cherry picked from commit 1a54c6b19db9dcb1081e43614bf479e0ac7bf177)


Commit 209d71c08c9af8f32e47e29704d0bc7db4899f3f in lucene-solr's branch refs/heads/branch_8_0 from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=209d71c ]

SOLR-12923: Mea culpa: Remove useless import of java.lang... that breaks precommit

(cherry picked from commit 5c143022e7abcdf14a570786afec4ff099fd581c)


I think this can be resolved as Won't Fix even though a significant amount of work was done - the autoscaling framework is gone so whatever remaining issues there might have been with the tests for it, they're solved now.

