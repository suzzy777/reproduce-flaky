Well, beasting 1,000 times on my mac pro and another 1,000 times on the server and zero failures. I may have to put some debugging code in master to make progress.

Commit 37fb60d0f1188c3399232fe0240f53d2f4743bb0 in lucene-solr's branch refs/heads/master from [~erickerickson]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=37fb60d ]

SOLR-11426: TestLazyCores fails too often. Adding debugging code MASTER ONLY since I can't get it to fail locally


Well, rats. I was thinking that the issue might be related to SOLR-11035, but apparently not so. The code I put in the method that's failing (check10) tries to add another document to the core if it doesn't find the 10 it should the first time. If it had come back with finding 11 documents I could (possibly) point to SOLR-11035 and the like.

But the single doc that I added is the only one found, proving that the core is OK. That is I'm able to see the new doc added to the core, but the 10 added before closing the core aren't there. Have to try something else...

Commit f0a4b2dafe13e2b372e33ce13d552f169187a44e in lucene-solr's branch refs/heads/master from [~erickerickson]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f0a4b2d ]

Revert "SOLR-11426: TestLazyCores fails too often. Adding debugging code MASTER ONLY since I can't get it to fail locally"

This reverts commit 37fb60d


OK, no failures on master since this latest info-gathering code was committed to master, which is kind of scary as this isn't a proper fix at all.

All the latest test does is fire a commit whenever a transient core is aged out. I expected that just the normal core closing would issue a commit, and it seems to, just not all the time apparently Which means there's some circumstance where a core could lose documents that haven't been committed when it is closed.

So the underlying issue is (apparently) there is some condition where uncommitted changes are not committed on a core close. I'll be looking some more, but would certainly welcome any ideas/help.

Meanwhile I'll leave the code in for a bit just to see if I'm getting (un)lucky with this test and happening to succeed for a few days. If it continues to succeed through tonight I'll revert tomorrow and insure it comes back.

Since changing this there haven't been any failures on master, and only two on 7x. My guess is that "something changed" in master to make this more frequent, but so far this seems to be on the right track.

This isn't the proper fix, but I want to let it bake a bit more to be certain we're not just getting lucky with not having failures on master.


Now I'm even more baffled. The current code running on Master and 7x is identical. Both have the @BadApple annotation removed for testNoCommit. 7x fails fairly regularly, master hasn't failed in a couple of months.

Not quite sure what to try next.

Gathering more information, trunk only

Commit ab5fbad3d70f19e47ff71e0680dd7f6d6bc4f654 in lucene-solr's branch refs/heads/master from Erick
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ab5fbad ]

SOLR-11426: TestLazyCores fails too often, debugging


I believe the problem here is that {{testNoCommit()}} expects {{DirectUpdateHandler2.commitOnClose}} to be {{true}} (which it is by default), but some other test may be changing this property and not setting it back, and since it's static. That would explain why you can't reproduce the failure by beasting (just) it.
The test fails 100% of the times if you add 
{code:java}
DirectUpdateHandler2.commitOnClose = false;
{code}
at the beginning. I'll add
{code:java}
DirectUpdateHandler2.commitOnClose = true;
{code}
at the beginning of the test and see if it fixes it.

Commit ba2ef4a894ca857ffe4a5ecb310363d315eef05f in lucene-solr's branch refs/heads/master from [~tflobbe]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba2ef4a ]

SOLR-11426: Make sure commitOnClose is enabled before running testNoCommit


Commit 994f3295ec0be144d3e7fff7a651e818614c1cd0 in lucene-solr's branch refs/heads/branch_7x from [~tflobbe]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=994f329 ]

SOLR-11426: Make sure commitOnClose is enabled before running testNoCommit


And here I've been thinking I could _finally_ get to this after this week, thanks!

Two things:
1> please don't close this ticket. We have to keep it open for a while anyway 'cause this doesn't happen all that frequently. But second, I still have infostream in master that I need to clean up before closing, I'll handle that.

2> I do wonder if this is responsible for other test failures. I'll have something to check for some of these flaky tests. If this is some sort of test interaction I wonder if we could find a way to insure it's in know state.

Thanks again!

bq. 1> please don't close this ticket. 
Sure, lets also wait to make sure there are no more failures
bq. 2> I do wonder if this is responsible for other test failures. I'll have something to check for some of these flaky tests. If this is some sort of test interaction I wonder if we could find a way to insure it's in know state.
It could certainly be the case. There is a TODO in DirectUpdateHandler2.commitOnClose:
{code:java}
// TODO: make this a real config option or move it to TestInjection
{code}
We probably want to do that (TestInjection I mean, it sounds too low level for a config option, and nobody has asked for this, so...)

Commit 6b368c04846fbb7ae769da6bee4506dcbf26c278 in lucene-solr's branch refs/heads/master from [~erickerickson]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b368c0 ]

SOLR-11426: removed infostream debug logging from master


Since Tomás' change we haven't seen any failures, so I took out the infostream logging (was there on master only). So we can close this whenever we want to, maybe sometime in early January?

No failures since Tomás' fix, we can open a new ticket if it comes back.

Thanks Tomás! I'll check some of the other tests I see failing due to what may be similar issues.

