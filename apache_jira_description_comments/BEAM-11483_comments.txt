To find the most often failing tests from within the Jenkins build history, use the "Test Results Analyzer" plugin. From the page *Jenkins > Masters > Beam > ci-beam.apache.org > beam_PostCommit_Java_PVR_Spark_Streaming* page on the left navbar is where you'll find the *Test Results Analyzer* link which resolves to: [https://ci-beam.apache.org/job/beam_PostCommit_Java_PVR_Spark_Streaming/test_results_analyzer/]

 

The subtasks above are the top 10 failing tests.

I notice this is a "P1 Improvement"

I have been thinking that separating test flakes from other P1s might be useful, but also potentially counterproductive. I'm not sure.

Ultimately when it is a P1 "Bug" and you land on it, you are likely enough to push it to the future. So we may as well acknowledge that and have a way to quickly distinguish them.

We can also search for P1 issues of any issue type and exclude the "flake" label.

Was just again looking over test failures, and beam_PostCommit_Java_PVR_Spark_Streaming has been perma-red for 6 months. Probably should be disabled or have the tests sickbayed. Clearly whatever it is testing does not actually work. Perhaps it should not be released?

CC [~ibzib] and [~iemejia] who may have some context on what is supposed to be tested and what is supposed to work.

Taking a look at this and so far I haven't been able to reproduce the error on my local env. I'm most certainly doing something wrong, but would like to know if, as Ken mentioned, [~ibzib] or [~iemejia] have more info about this... sorry for the "@" guys 

Thanks!

[~thiscensustaker] For more clarity, these test failures are in the Spark portable streaming runner, which is tested by the Jenkins job beam_PostCommit_Java_PVR_Spark_Streaming [0]. The Spark portable streaming runner has been basically neglected for a while, which is why these regressions snuck in. This runner is known to have important missing functionality, but ideally the tests should at least make it clear what functionality is really missing (as opposed to just failing due to test setup issues, etc.). It looks like the test suite last passed Sep 10, 2020 and has been failing ever since [1].

I tried running the tests locally. The commands are "./gradlew :runners:spark:2:job-server:validatesPortableRunnerStreaming" and "./gradlew :runners:spark:3:job-server:validatesPortableRunnerStreaming" for Spark versions 2 and 3, respectively. The only tests that failed for me were GroupByKeyTest$WindowTests. I wrote a PR to exclude those [2].

So why are so many tests flaking on Jenkins then? I’m not sure, but previously we had a problem with running Spark 2 and 3 together in a different test suite [3], so there may be a similar problem here. The simplest workaround would be to separate Spark 2 and 3 into separate test suites and see if they pass. The job is defined in [4].

[0] https://ci-beam.apache.org/job/beam_PostCommit_Java_PVR_Spark_Streaming

[1] https://ci-beam.apache.org/job/beam_PostCommit_Java_PVR_Spark_Streaming/75/

[2] [https://github.com/apache/beam/pull/14405]

[3] BEAM-11992

[4] https://github.com/apache/beam/blob/44b7a87c5009315570864036baba27a303ca5eff/.test-infra/jenkins/job_PostCommit_Java_PortableValidatesRunner_Spark_Streaming.groovy#L39-L40

Thanks for breaking down the issue [~ibzib]!
 I see that the separation of the Spark2 and Spark3 tests is already checked-in in master branch but I still see failures besides the GroupByKeyTest$WindowTests ones (which I assume won't be executed once the PR to exclude them makes it to master).

Should I keep looking for another possible solution?

Thanks again for the help!

Spark 2 and 3 are separate Gradle tasks (:runners:spark:2:job-server:validatesPortableRunnerStreaming and :runners:spark:3:job-server:validatesPortableRunnerStreaming), but they are executed within the same Jenkins job (beam_PostCommit_Java_PVR_Spark_Streaming). I suggest we separate the Jenkins job so that the two Gradle tasks each have their own Jenkins job.

oh, understood! Sorry for the misunderstanding.
Will take a look into that.
Thanks Kyle.

Now that Spark 2 and 3 are separate test suites, it looks like Spark 3 passed its first few runs and now is failing only a couple tests because of BEAM-12155. However Spark 2 is still failing. 

https://ci-beam.apache.org/job/beam_PostCommit_Java_PVR_Spark2_Streaming/

https://ci-beam.apache.org/job/beam_PostCommit_Java_PVR_Spark3_Streaming/

Hi [~ibzib] !



Sorry, I haven't had the chance to look closely into this.
It seems the Spark2 tests succeed on and off starting with build 41. Latest successful one was [47|https://ci-beam.apache.org/job/beam_PostCommit_Java_PVR_Spark2_Streaming/47/]

Also, the tests failing from one build to another are different. Is it safe to assume those are flaky tests?

Since there seems to be a lot of variation in which tests fail from one build to another, and because it doesn't seem to happen at all in the Spark 3 suite, I'm guessing that it is not some specific list of tests that is flaky. Rather, there is probably something wrong with the test environment that is causing random tests to fail.

Thanks [~ibzib]

I'm of the idea of opening a new issue for the triage of whatever is affecting the test environment. What are your thoughts?

Close this one and start "fresh": new title, description and all, in a new issue.

Would you say that is a better approach?

Thanks again!

Sounds good to me.

The errors mentioned in this WI were resolved once PR [https://github.com/apache/beam/pull/14483|http://example.com/] was pushed to master.



Some builds have been successful, but there are still random errors being thrown now and then. Will open another WI to take a look at the Jenkins configs and determine the cause of that erratic behavior.

