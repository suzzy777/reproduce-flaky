Looks like there is a force disconnect happening in the middle of this test.

The server (vm_1)  that was kicked out failed the final health check

[locator][info 2016/03/29 22:30:52.630 PDT <Geode Failure Detection thread 1> tid=0x45] Performing final check for suspect member latvia(17424)<ec><v149>:1026 reason=Member isn't responding to heartbeat requests

[locator][info 2016/03/29 22:30:57.637 PDT <Geode Failure Detection thread 1> tid=0x45] Final check failed - requesting removal of suspect member latvia(17424)<ec><v149>:1026

This was one of two cache servers in the test.  The other server initiated suspect processing when it did not receive responses to heartbeat requests.

If bugs like this don't reproduce, maybe the standard course should be to: 1) convert test to junit4 syntax, 2) replace thread sleeps with await calls, 3) make sure there are no AsyncInvocation orphans (this test does leave some possible AsyncInvocations orphaned without completing), 4) eliminate any uses of random AvailablePort with zero port wildcard (#4 needs some changes to product code at the time of this comment).

Flaky: time senstiive, thread sleeps, uses zero port for servers (good!), async actions, AsyncInvocation orphans

Commit 7e1656b0847ddc1f1f5f7fdba60513ba7e814d43 in incubator-geode's branch refs/heads/develop from [~ukohlmeyer]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=7e1656b ]

GEODE-1146: Test cleanup, converting many VM invoke statements to lambda expressions


this issue can be reproduced by running the test often. GC then kicks in and causes the issue.
This flaky behaviour should be fixed once the VMs are bounced. 

In a test I ran the test 80 times which caused a GC and then test failure. When I introduced the capability to bounce the VM every 30 tests, the GC problem disappeared and this test ran over 3hrs (over 3500 iterations) without failure until I stopped it. 

This failure is most likely caused by a GC that happens to be running at that time. I was able to replicate this GC issue. The bouncing of the VM's need to be revisited. As most likely the bouncing/cleaning up of the VMs would be the best way to solve this issue.

The fixing of this test is dependent on GEODE-1305 being completed.

{noformat}
build# 2318

Error Message

java.lang.AssertionError: Suspicious strings were written to the log during this run.
Fix the strings or use IgnoredException.addIgnoredException to ignore.
-----------------------------------------------------------------------
Found suspect string in log4j at line 988118

[fatal 2016/04/19 03:46:39.131 PDT <unicast receiver,cc3-rh6-54933> tid=0x430] Membership service failure: Member isn't responding to heartbeat requests
com.gemstone.gemfire.ForcedDisconnectException: Member isn't responding to heartbeat requests
	at com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager.forceDisconnect(GMSMembershipManager.java:2586)
	at com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.forceDisconnect(GMSJoinLeave.java:885)
	at com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.processRemoveRequest(GMSJoinLeave.java:578)
	at com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.processMessage(GMSJoinLeave.java:1540)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1095)
	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
	at org.jgroups.JChannel.up(JChannel.java:741)
	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
	at org.jgroups.protocols.FlowControl.up(FlowControl.java:392)
	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1064)
	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:779)
	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:75)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:75)
	at org.jgroups.protocols.TP.passMessageUp(TP.java:1567)
	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1783)
	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1695)
	at org.jgroups.protocols.TP.receive(TP.java:1620)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
	at java.lang.Thread.run(Thread.java:745)

Stacktrace

java.lang.AssertionError: Suspicious strings were written to the log during this run.
Fix the strings or use IgnoredException.addIgnoredException to ignore.
-----------------------------------------------------------------------
Found suspect string in log4j at line 988118

[fatal 2016/04/19 03:46:39.131 PDT <unicast receiver,cc3-rh6-54933> tid=0x430] Membership service failure: Member isn't responding to heartbeat requests
com.gemstone.gemfire.ForcedDisconnectException: Member isn't responding to heartbeat requests
	at com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager.forceDisconnect(GMSMembershipManager.java:2586)
	at com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.forceDisconnect(GMSJoinLeave.java:885)
	at com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.processRemoveRequest(GMSJoinLeave.java:578)
	at com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.processMessage(GMSJoinLeave.java:1540)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1095)
	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
	at org.jgroups.JChannel.up(JChannel.java:741)
	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
	at org.jgroups.protocols.FlowControl.up(FlowControl.java:392)
	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1064)
	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:779)
	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:75)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:75)
	at org.jgroups.protocols.TP.passMessageUp(TP.java:1567)
	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1783)
	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1695)
	at org.jgroups.protocols.TP.receive(TP.java:1620)
	at com.gemstone.gemfire.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
	at java.lang.Thread.run(Thread.java:745)


	at org.junit.Assert.fail(Assert.java:88)
	at com.gemstone.gemfire.test.dunit.standalone.DUnitLauncher.closeAndCheckForSuspects(DUnitLauncher.java:352)
	at com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.cleanupAllVms(JUnit4DistributedTestCase.java:542)
	at com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.tearDownDistributedTestCase(JUnit4DistributedTestCase.java:491)
	at com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.tearDown(JUnit4DistributedTestCase.java:480)
	at com.gemstone.gemfire.test.dunit.internal.JUnit3DistributedTestCase.tearDown(JUnit3DistributedTestCase.java:206)
	at junit.framework.TestCase.runBare(TestCase.java:146)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:252)
	at junit.framework.TestSuite.run(TestSuite.java:247)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50)
	at sun.reflect.GeneratedMethodAccessor369.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106)
	at sun.reflect.GeneratedMethodAccessor368.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


{noformat}

Commit 2c2caae9db8d687107d5d15af44a5f0d14465b35 in incubator-geode's branch refs/heads/develop from [~ukohlmeyer]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=2c2caae ]

GEODE-1146: Amending Testcase to use proper client caches rather than peer servers. Also amending JUnit4CacheTestCase.java to set "locators" and "mcast-port" to correct settings for clients.


Refactored test code. Removed time sensitive waits and used Awaitility. Also converted client VMs to start ClientCaches, not normal Peer caches. Hopefully code a little less flaky now.

Commit 7051c7ad61ef1c41db192c62277ff2dc0f332842 in incubator-geode's branch refs/heads/develop from [~bschuchardt]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=7051c7a ]

Revert "GEODE-1146: Amending Testcase to use proper client caches rather than peer servers. Also amending JUnit4CacheTestCase.java to set "locators" and "mcast-port" to correct settings for clients."

This reverts commit 2c2caae9db8d687107d5d15af44a5f0d14465b35, which caused
a number of tests to fail.


Commit 7051c7ad61ef1c41db192c62277ff2dc0f332842 in incubator-geode's branch refs/heads/feature/GEODE-1376 from [~bschuchardt]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=7051c7a ]

Revert "GEODE-1146: Amending Testcase to use proper client caches rather than peer servers. Also amending JUnit4CacheTestCase.java to set "locators" and "mcast-port" to correct settings for clients."

This reverts commit 2c2caae9db8d687107d5d15af44a5f0d14465b35, which caused
a number of tests to fail.


Commit 2c2caae9db8d687107d5d15af44a5f0d14465b35 in incubator-geode's branch refs/heads/feature/GEODE-1372 from [~ukohlmeyer]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=2c2caae ]

GEODE-1146: Amending Testcase to use proper client caches rather than peer servers. Also amending JUnit4CacheTestCase.java to set "locators" and "mcast-port" to correct settings for clients.


Commit 617c9fd47e798c4cf0fdcae45697855760d39036 in incubator-geode's branch refs/heads/develop from [~ukohlmeyer]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=617c9fd ]

GEODE-1146: Cleaned up QueryUsingPoolDUnitTest.java to use proper client caches.
Added client specific properties for JUnit4CacheTestCase.java


