Without this fix, when running Storm UI with Java 17 runtime, we have this kind of exceptions in ui.log whenever there is a topology consuming Kafka topics:

 

2023-11-15 10:54:27.473 o.e.j.s.AbstractConnector main [INFO] Started
ServerConnector@e3c9c02f\{HTTP/1.1, (http/1.1)}{[0.0.0.0:8070|http://0.0.0.0:8070/]}
2023-11-15 10:54:27.474 o.e.j.s.Server main [INFO] Started @4256ms
2023-11-15 10:55:02.781 o.a.s.u.NimbusClient qtp-1075191296-25 [INFO]
Found leader nimbus :
[ec23-1-251-0-65.eu-west-1.compute.amazonaws.com:6627|http://ec23-1-251-0-65.eu-west-1.compute.amazonaws.com:6627/]
2023-11-15 10:59:31.128 o.a.s.u.ShellUtils qtp-1075191296-24 [INFO]
Failed running command
[/usr/local/Storm/storm-stable/bin/storm-kafka-monitor, -t, audit, -g,
StormAuditPublisherTopology_SbxRealTimeSupervisionAVEEEZZeuw1, -b,
[ec23-1-251-0-66.eu-west-1.compute.amazonaws.com|http://ec23-1-251-0-66.eu-west-1.compute.amazonaws.com/],[ec23-1-251-0-65.eu-west-1.compute.amazonaws.com|http://ec23-1-251-0-65.eu-west-1.compute.amazonaws.com/],ec2-52-18-172-77,
-s, SASL_SSL, -c, /tmp/kafka-consumer-extra6421423768198678110props]
org.apache.storm.utils.ShellUtils$ExitCodeException: SLF4J: Failed to
load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See [http://www.slf4j.org/codes.html#StaticLoggerBinder] for
further details.
Exception in thread "main" java.lang.NoClassDefFoundError:
javax.xml.bind.DatatypeConverter
 at org.apache.kafka.common.security.scram.ScramMessages$ServerFirstMessage.<init>(ScramMessages.java:143)
 at org.apache.kafka.common.security.scram.ScramSaslClient.evaluateChallenge(ScramSaslClient.java:112)
 at org.apache.kafka.common.security.authenticator.SaslClientAuthenticator$2.run(SaslClientAuthenticator.java:280)
 at org.apache.kafka.common.security.authenticator.SaslClientAuthenticator$2.run(SaslClientAuthenticator.java:278)
 at java.base/java.security.AccessController.doPrivileged(AccessController.java:784)
 at java.base/javax.security.auth.Subject.doAs(Subject.java:439)
 at org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.createSaslToken(SaslClientAuthenticator.java:278)
 at org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.sendSaslToken(SaslClientAuthenticator.java:215)
 at org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.authenticate(SaslClientAuthenticator.java:189)
 at org.apache.kafka.common.network.KafkaChannel.prepare(KafkaChannel.java:76)
 at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:385)
 at org.apache.kafka.common.network.Selector.poll(Selector.java:334)
 at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:433)
 at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:232)
 at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:208)
 at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:184)
 at org.apache.kafka.clients.consumer.internals.Fetcher.getTopicMetadata(Fetcher.java:314)
 at org.apache.kafka.clients.consumer.KafkaConsumer.partitionsFor(KafkaConsumer.java:1386)
 at org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.getOffsetLags(KafkaOffsetLagUtil.java:165)
 at org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.main(KafkaOffsetLagUtil.java:74)
Caused by: java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter
 at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:827)
 at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
 at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:1095)
 ... 20 more

Plan to fix consists in making a change so that jakarta.xml.bind-api<version>.jar will be available in lib-tools/storm-kafka-monitor/ of the runtime-view.

 

 

