OSS CI doesn't do upgrade tests with java 11, so need to replicate by hand

{code}
ant testclasslist -Dtest.classlistfile=<( echo "org/apache/cassandra/distributed/upgrade/UpgradeTest.java" ) -Dtest.classlistprefix=distributed
...
[junit-timeout] Testcase: upgradeTest(org.apache.cassandra.distributed.upgrade.UpgradeTest):    Caused an ERROR
[junit-timeout] java.lang.RuntimeException: java.lang.AssertionError: network topology must be assigned before using snitch
[junit-timeout] java.lang.RuntimeException: java.lang.RuntimeException: java.lang.AssertionError: network topology must be assigned before using snitch
[junit-timeout]         at org.apache.cassandra.distributed.impl.IsolatedExecutor.waitOn(IsolatedExecutor.java:209)
[junit-timeout]         at org.apache.cassandra.distributed.impl.IsolatedExecutor.lambda$sync$7(IsolatedExecutor.java:112)
[junit-timeout]         at org.apache.cassandra.distributed.impl.Instance.startup(Instance.java:592)
[junit-timeout]         at org.apache.cassandra.distributed.impl.AbstractCluster$Wrapper.startup(AbstractCluster.java:209)
[junit-timeout]         at org.apache.cassandra.distributed.impl.AbstractCluster$Wrapper.startup(AbstractCluster.java:200)
[junit-timeout]         at org.apache.cassandra.distributed.upgrade.UpgradeTestBase$TestCase.run(UpgradeTestBase.java:179)
[junit-timeout]         at org.apache.cassandra.distributed.upgrade.UpgradeTest.upgradeTest(UpgradeTest.java:50)
[junit-timeout]         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[junit-timeout]         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[junit-timeout]         at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[junit-timeout] Caused by: java.lang.RuntimeException: java.lang.AssertionError: network topology must be assigned before using snitch
[junit-timeout]         at org.apache.cassandra.distributed.impl.Instance.lambda$startup$7(Instance.java:590)
[junit-timeout]         at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
[junit-timeout]         at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
[junit-timeout]         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
[junit-timeout]         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
[junit-timeout]         at org.apache.cassandra.concurrent.NamedThreadFactory.lambda$threadLocalDeallocator$0(NamedThreadFactory.java:83)
[junit-timeout]         at java.base/java.lang.Thread.run(Thread.java:834)
[junit-timeout] Caused by: java.lang.AssertionError: network topology must be assigned before using snitch
[junit-timeout]         at org.apache.cassandra.distributed.impl.DistributedTestSnitch.getDatacenter(DistributedTestSnitch.java:90)
[junit-timeout]         at org.apache.cassandra.distributed.impl.DistributedTestSnitch.getDatacenter(DistributedTestSnitch.java:85)
[junit-timeout]         at org.apache.cassandra.locator.DynamicEndpointSnitch.getDatacenter(DynamicEndpointSnitch.java:118)
[junit-timeout]         at org.apache.cassandra.config.DatabaseDescriptor.applyConfig(DatabaseDescriptor.java:488)
[junit-timeout]         at org.apache.cassandra.config.DatabaseDescriptor.<clinit>(DatabaseDescriptor.java:137)
[junit-timeout]         at org.apache.cassandra.utils.JVMStabilityInspector.inspectThrowable(JVMStabilityInspector.java:102)
[junit-timeout]         at org.apache.cassandra.utils.JVMStabilityInspector.inspectThrowable(JVMStabilityInspector.java:60)
[junit-timeout]         at org.apache.cassandra.io.util.FileUtils.<clinit>(FileUtils.java:79)
[junit-timeout]         at org.apache.cassandra.distributed.impl.Instance.lambda$startup$7(Instance.java:509)
[junit-timeout]
[junit-timeout]
[junit-timeout] Test org.apache.cassandra.distributed.upgrade.UpgradeTest FAILED
...
{code}

The underline exception is

{code}
ERROR [node1_isolatedExecutor:1] node1 2020-07-30 11:44:38,115 Cannot initialize un-mmaper.  (Are you using a non-Oracle JVM?)  Compacted data files will not be removed promptly.  Consider using an Oracle JVM or using standard disk access mode
java.lang.NoSuchMethodError: sun.nio.ch.DirectBuffer.cleaner()Lsun/misc/Cleaner;
  at org.apache.cassandra.io.util.FileUtils.<clinit>(FileUtils.java:73) ~[dtest-3.0.22.jar:na]
  at org.apache.cassandra.distributed.impl.Instance.lambda$startup$7(Instance.java:509) ~[dtest-3.0.22.jar:na]
  at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[na:na]
  at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
  at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na]
  at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na]
  at org.apache.cassandra.concurrent.NamedThreadFactory.lambda$threadLocalDeallocator$0(NamedThreadFactory.java:83) ~[dtest-3.0.22.jar:na]
  at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]
{code}

As of java 11, the cleaner is now jdk.internal.ref.Cleaner

With the patch I get the following

{code}
testclasslist:
[testparallelhelper] Warning: Nashorn engine is planned to be removed from a future JDK release
     [echo] Number of test runners: 1
    [mkdir] Created dir: /Users/davidcapwell/src/github/apache/cassandra-trunk/build/test/cassandra
    [mkdir] Created dir: /Users/davidcapwell/src/github/apache/cassandra-trunk/build/test/output
[junit-timeout] Picked up _JAVA_OPTIONS: -Djava.net.preferIPv4Stack=true
[junit-timeout] OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
[junit-timeout] Testsuite: org.apache.cassandra.distributed.upgrade.UpgradeTest
[junit-timeout] Testsuite: org.apache.cassandra.distributed.upgrade.UpgradeTest Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 49.363 sec
[junit-timeout]
[junitreport] Processing /Users/davidcapwell/src/github/apache/cassandra-trunk/build/test/TESTS-TestSuites.xml to /var/folders/cm/08cddl2s25j7fq3jdb76gh4r0000gn/T/null1381087585
[junitreport] Loading stylesheet jar:file:/usr/local/Cellar/ant/1.10.7/libexec/lib/ant-junit.jar!/org/apache/tools/ant/taskdefs/optional/junit/xsl/junit-frames.xsl
[junitreport] Transform time: 368ms
[junitreport] Deleting: /var/folders/cm/08cddl2s25j7fq3jdb76gh4r0000gn/T/null1381087585

BUILD SUCCESSFUL
Total time: 54 seconds
{code}

+1 LGTM. For 3.0/3.11 moving the logging line above the stability inspector call makes sense because the JVM can be killed before reaching the log line. For trunk, logging the exceptions for additional information also makes sense. So does registering the error handler after initializing {{DatabaseDescriptor}} in all cases.

Ran all upgrade tests on java 11 and they passed.  There were unit test failures but they are the same ones active on trunk right now.

To help with review, the following commands can be run locally

{code}
setjdk 8
unset CASSANDRA_USE_JDK11
for v in 2.2 3.0 3.11 trunk; do 
  cd ../cassandra-$v
  ant realclean 
  ant jar dtest-jar
  ant generate-idea-files
done
echo ../cassandra-{3.0,3.11,trunk}/build/ | xargs -n1 cp -v ../cassandra-2.2/build/dtest-2.2*.jar
echo ../cassandra-{3.11,trunk}/build/ | xargs -n1 cp -v ../cassandra-3.0/build/dtest-3.0*.jar
echo ../cassandra-trunk/build/ | xargs -n1 cp -v ../cassandra-3.11/build/dtest-3.11*.jar

cd  ../cassandra-trunk â€¨
setjdk 11

CASSANDRA_USE_JDK11=true ant testclasslist -Dtest.classlistfile=<( echo "org/apache/cassandra/distributed/upgrade/UpgradeTest.java" ) -Dtest.classlistprefix=distributed 
{code}

LGTM. Code changes make sense.  We should probably update the wording on the JVM selection, but that's unrelated to this ticket.

Locally ran the branches through the in-jvm Dtest upgrades and checked trunk passed on J8 and failed on J11 before the patch and all test pass afterwards.

CI having issues with CASSANDRA-16004, I am trying to work around it to get a working build.

CI results
3.0: https://app.circleci.com/pipelines/github/dcapwell/cassandra/395/workflows/8bd01d34-7280-4176-8b31-180d193e8125
3.11: https://app.circleci.com/pipelines/github/dcapwell/cassandra/396/workflows/cbba3a88-3371-47b6-9100-1e806efa6ce5
trunk: https://app.circleci.com/pipelines/github/dcapwell/cassandra/397/workflows/89e13b1f-6395-4a7e-a16c-0d33497dd7c4

there are failing tests, but they are known flaky.

