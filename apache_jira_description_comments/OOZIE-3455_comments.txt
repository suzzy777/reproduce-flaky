Fixing the {{Materializing coord job}} line was relatively simple, but the most important {{Acquired lock for}} part is more difficult, because we collect the data and initialize the log info in {{loadState()}} method, but we need to acquire the lock before that.

I checked a few other classes and initialize the log at the very beginning using the {{jobId}} variable. It does not gives us all the fields, but the most important fields are OK:

{noformat}12:39:36,394 DEBUG CoordMaterializeTransitionXCommand:526 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[0000000-190328123935627-oozie-andr-C] ACTION[] Acquired lock for [0000000-190328123935627-oozie-andr-C] in [coord_mater]
12:39:36,444 DEBUG CoordMaterializeTransitionXCommand:526 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190328123935627-oozie-andr-C] ACTION[] Materializing coord job id=0000000-190328123935627-oozie-andr-C, start=2019-03-28T11:39Z, end=2019-03-28T12:39Z, window=3600
12:39:36,444 DEBUG CoordMaterializeTransitionXCommand:526 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190328123935627-oozie-andr-C] ACTION[] Execute command [coord_mater] key [0000000-190328123935627-oozie-andr-C]
12:39:36,466  INFO CoordMaterializeTransitionXCommand:520 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190328123935627-oozie-andr-C] ACTION[] materialize actions for tz=Pacific Standard Time,
 start=Thu Mar 28 12:39:36 CET 2019, end=Thu Mar 28 13:39:36 CET 2019,
{noformat}

or

{noformat}12:57:37,360 DEBUG CoordMaterializeTransitionXCommand:526 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190328125736975-oozie-andr-C] ACTION[] Acquired lock for [0000000-190328125736975-oozie-andr-C] in [coord_mater]
12:57:37,378 DEBUG CoordMaterializeTransitionXCommand:526 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190328125736975-oozie-andr-C] ACTION[] Materializing coord job id=0000000-190328125736975-oozie-andr-C, start=2019-03-28T11:57Z, end=2019-03-28T12:57Z, window=3600
12:57:37,379 DEBUG CoordMaterializeTransitionXCommand:526 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190328125736975-oozie-andr-C] ACTION[] Execute command [coord_mater] key [0000000-190328125736975-oozie-andr-C]
12:57:37,383  INFO CoordMaterializeTransitionXCommand:520 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190328125736975-oozie-andr-C] ACTION[] materialize actions for tz=Pacific Standard Time,
 start=Thu Mar 28 12:57:37 CET 2019, end=Thu Mar 28 13:57:37 CET 2019,
{noformat}

So the log will not show different job ids in the {{Acquired lock for}} line.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3455

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [6] new bugs found below threshold in total that must be fixed.
.    {color:green}+1{color} There are no new bugs found in [webapp].
.    {color:red}-1{color} There are [6] new bugs found below threshold in [core] that must be fixed, listing only the first [5] ones.
.    You can find the SpotBugs diff here (look for the red and orange ones): core/findbugs-new.html
.    The top [5] most important SpotBugs errors are:
.    At BulkJPAExecutor.java:[line 207]: This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection
.    At BulkJPAExecutor.java:[line 177]: At BulkJPAExecutor.java:[line 176]
.    At BulkJPAExecutor.java:[line 206]: At BulkJPAExecutor.java:[line 200]
.    This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection: At BulkJPAExecutor.java:[line 207]
.    At BulkJPAExecutor.java:[line 112]: At BulkJPAExecutor.java:[line 128]
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/git].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run        : 3169
.    Tests failed     : 0
.    Tests in error   : 1
.    Tests timed out  : 0

{color:red}-1{color} [ERROR] There are [1] test errors in [core]. Listing only the first [5] ones
testJMXInstrumentation:org.apache.oozie.util.TestMetricsInstrumentation

Check console output for the full list of errors/failures
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/1066/



Thank you [~asalamon74] for reporting and fixing it. The test error is a known flaky test (OOZIE-3105)

Just a small note: it would be nice to add some cleanup when the Xcommand call ends. It is still better to have empty fields in the log header than to have some false information.

Thanks [~kmarton] it's a good idea to cleanup the log at the end, I'll check it.

I've started to implement the log cleanup at the end of the {{XCommand}}, the results look good, the {{Acquired lock for}} line no longer contains info about the previous job (like user, group, and token), and at the end of the unit test log line changes from
{noformat}
15:56:43,429  INFO Services:520 - USER[test] GROUP[testg] TOKEN[] APP[COORD-TEST] JOB[0000000-190411155642913-oozie-andr-C] ACTION[] Shutdown{noformat}
to
{noformat}
16:32:11,464  INFO Services:520 - USER[-] GROUP[-] TOKEN[-] APP[-] JOB[-] ACTION[-] Shutdown
{noformat}
which is more logical because the service shutdown is not connected to a job.

I've added the log cleanup to the end of the {{XCommand}} class so it affects all the commands not only CoordMaterializeTransitionXCommand. I don't think that this jira is the correct place to address this issue. I'd rather modify only {{CoordMaterializeTransitionXCommand}} problems in this jira, and a separate jira should modify {{XCommand}}. What do you think [~kmarton]?

I've created a separate jira for the XCommand cleanup: OOZIE-3493

Thank you [~asalamon74]! +1, committed to master.

Closing issue; Oozie 5.2.0 is released

