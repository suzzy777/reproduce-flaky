In some rare cases a spurious ConflictingPersistentDataException can happen with persistent partitioned regions. That is what is happening in this particular test. Unfortunately it could probably happen, intermittently, in any distributed test that recovers these types of regions.

So nothing is wrong with this particular test and we do not want all of the tests that recover from persistent partitioned regions to be marked as flaky. If we see I high incidence of this type of failure on a particular test then that test should be excluded until the spurious ConflictingPersistentDataException problem is solved.

Commit 35d3a97edd5c6e8b3f4dd73af51771b0c4728cf6 in geode's branch refs/heads/develop from [~agingade]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=35d3a97 ]

GEODE-3047 Atomic creation flag is not set if the region is recoverd from the disk.

While creating bucket region, to satisfy the redudndancy copies the bucket regions
are created on all vailable nodes. The initialization (setting persistentIDs) of
these buckets are done after creating buckets on all the nodes. This introduced
a race condition for the bucket region which are recovered from the disk to
exchange thier old id with the peer node resulting in ConflictingPersistentData
Exception.

The changes are done so that the regions persistent ids are set as soon as they
are created/initialized.


Commit 35d3a97edd5c6e8b3f4dd73af51771b0c4728cf6 in geode's branch refs/heads/feature/GEODE-3447 from [~agingade]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=35d3a97 ]

GEODE-3047 Atomic creation flag is not set if the region is recoverd from the disk.

While creating bucket region, to satisfy the redudndancy copies the bucket regions
are created on all vailable nodes. The initialization (setting persistentIDs) of
these buckets are done after creating buckets on all the nodes. This introduced
a race condition for the bucket region which are recovered from the disk to
exchange thier old id with the peer node resulting in ConflictingPersistentData
Exception.

The changes are done so that the regions persistent ids are set as soon as they
are created/initialized.


