can you show more details on the error ? like the stack message or some thing else.

The error is
{code:java}
j.lang.IllegalStateException: null at o.a.c.s.DefaultFSErrorHandler.handleFSError(DefaultFSErrorHandler.java:88) at o.a.c.io.util.FileUtils.handleFSError(FileUtils.java:499) at o.a.c.u.JVMStabilityInspector.inspectDiskError(JVMStabilityInspector.java:73) at o.a.c.u.JVMStabilityInspector.inspectThrowable(JVMStabilityInspector.java:111) at o.a.c.u.JVMStabilityInspector.inspectThrowable(JVMStabilityInspector.java:60) at o.a.c.d.ColumnFamilyStore$Flush.run(ColumnFamilyStore.java:1104) at j.u.c.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at j.u.c.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at o.a.c.c.NamedThreadFactory.lambda$threadLocalDeallocator$0(NamedThreadFactory.java:83) at i.n.u.c.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.lang.Thread.run(Thread.java:748)  {code}
We are running Cassandra with policy die but the Cassandra java process is not shutting down after this error.

What is the version of your cassandra ?

I think this is the commit which breaks it: [https://github.com/apache/cassandra/commit/db034609554a3185c0808cc67e9f0c148cc912c4]

Previously, there is no error handler call in JVMStabilityInspector::inspectThrowable.

The above commit introduces the error handler before shutting down JVM. With "die" disk failure policy, the error handler will throw exception so the jvm shutdown code won't be reached.

Cassandra version is 3.0.27.

Creating a pull request here: [https://github.com/apache/cassandra/pull/2189]

 

I think this is affecting all the fix versions listed here: https://issues.apache.org/jira/browse/CASSANDRA-15191

I just run your ut, and it seems the bug exist.
I think you should add some more jvm-dtest as CASSANDRA-15191 's JVMStabilityInspectorCorruptSSTableExceptionTest .
For your ut can just cover gossip is stopped, also I left some comments on this pr.
[~smiklosovic] [~brandon.williams] can you take a look at this ?


Thanks [~curlylrt] for reporting this. I am trying to figure out why this has slipped. For example, we do not have "die" policy in handleCorruptSSTable method in DefaultFSErrorHandler either. If there is not some not-so-obvious reason behind that, I think we should add it as well. The documentation in cassandra.yaml says that jvm will be killed with "die" policy on "single-sstable errors" which seems to be the case when CorruptSSTableException is thrown.

[~curlylrt] could you please prepare patches for 3.11, 4.0, 4.1 and trunk as well?

[~smiklosovic] sure, once people think the pull request looks good. I think I can prepare pull request for 3.11, 4.0, 4.1 and trunk. Thanks!

The PR looks fine to me, but

bq. I am trying to figure out why this has slipped.

Did you figure this out, [~smiklosovic]?

[~brandon.williams] as [~maxwellguo] mentioned here (1) it seems we are OK already?

added "die" is there so we would not throw IllegalStateException as it would reach "default" in these switches which this ticket solves.

(1) https://github.com/apache/cassandra/pull/2189/files#r1122779198

I see, and think it makes sense to be explicit with 'die' too.  I think we're ready for PRs for the other branches.

3.0 PR: https://github.com/apache/cassandra/pull/2189

3.11 PR: [https://github.com/apache/cassandra/pull/2200]

4.0 PR: [https://github.com/apache/cassandra/pull/2201]

4.1 PR: https://github.com/apache/cassandra/pull/2202

trunk PR: https://github.com/apache/cassandra/pull/2203

||Branch||CI||
|[3.0|https://github.com/driftx/cassandra/tree/CASSANDRA-18294-3.0]|[j8|https://app.circleci.com/pipelines/github/driftx/cassandra/894/workflows/2afa7943-477d-426c-9f0f-48a861845e0d]|
|[3.11|https://github.com/driftx/cassandra/tree/CASSANDRA-18294-3.11]|[j8|https://app.circleci.com/pipelines/github/driftx/cassandra/896/workflows/51b2f936-6b00-4d89-a284-b21b250e2ef1]|
|[4.0|https://github.com/driftx/cassandra/tree/CASSANDRA-18294-4.0]|[j8|https://app.circleci.com/pipelines/github/driftx/cassandra/892/workflows/e8e34bbb-e2e0-4074-9eb4-6a24e7c43b79], [j11|https://app.circleci.com/pipelines/github/driftx/cassandra/892/workflows/73210bd7-1a92-43ca-bf83-548716ecc90a]|
|[4.1|https://github.com/driftx/cassandra/tree/CASSANDRA-18294-4.1]|[j8|https://app.circleci.com/pipelines/github/driftx/cassandra/895/workflows/89afae54-8308-41f0-b45f-5464d61486fe], [j11|https://app.circleci.com/pipelines/github/driftx/cassandra/895/workflows/801d5316-5b14-4522-8b91-b6189493827b]|
|[trunk|https://github.com/driftx/cassandra/tree/CASSANDRA-18294-trunk]|[j8|https://app.circleci.com/pipelines/github/driftx/cassandra/893/workflows/f04714f6-746f-4065-a9e3-4804c1722f21], [j11|https://app.circleci.com/pipelines/github/driftx/cassandra/893/workflows/0d8342e2-390b-40d0-8274-2e04846659e7]|


I am + 1 on this patch , but there are some very small problems about code format.
such as : some constructor should start a new line with '{', I have already pointed out , [~curlylrt]can you help to take a look at them ? thanks.

Updated the format.

there is one left 

which one?

"private FSError throwFSError(){ " [~curlylrt]

updated

[~smiklosovic]can you help to take a look agagin ?

I believe that can be addressed upon merge.

builds in Circle looks fine, "test_sstableverify" which fails on 4.0 and 4.1 is fixed already 

I am +1, nits can be handled on commit.

+1 too, would you mind to merge, [~brandon.williams]? 

I can get to it a bit later.

Committed, thanks everyone!

[~curlylrt],  [~brandon.williams] , [~smiklosovic] I think this patch broke one simulator test. I can see it also failing in the published CI run here. [https://app.circleci.com/pipelines/github/driftx/cassandra/893/workflows/f04714f6-746f-4065-a9e3-4804c1722f21/jobs/12882/tests]

The previous trunk commit does not have it broken in its final CI run and I do see the test failing consistently now in my CI runs. 

Please check.

Nothing we can not fix! I ll take a look next week. Thanks.

Worse news, it's just flaky now.

Thank you guys, I will open a ticket

It says that it can not recursively remove a directory because it was not empty. This is happening after Cluster (as in dtest jvm api) is being closed.

I wonder how that is related to what we did here. There are two ways of removing stuff, "Java way" (whatever that means) and calling "rm" command in *nix by means of CASSANDRA-17427 which adds this CassandraRelevantProperty:

{code}
    /** When enabled, recursive directory deletion will be executed using a unix command `rm -rf` instead of traversing
     * and removing individual files. This is now used only tests, but eventually we will make it true by default.*/
    USE_NIX_RECURSIVE_DELETE("cassandra.use_nix_recursive_delete"),
{code}

When I set this to true before that cleanup logic in simulator kicks in, it will just remove it without any error.

https://app.circleci.com/pipelines/github/instaclustr/cassandra/1980/workflows/9cbd06eb-4333-485c-ad38-5986cd4870c6
https://github.com/instaclustr/cassandra/commit/d7c44651d63a75ca017414b172538bd9246e4b98

This property is set only in IDEA test run config but you see that there is the intention to set it by default to true in tests without setting any flag.

https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/io/util/PathUtils.java#L391

{quote}I wonder how that is related to what we did here.
{quote}
I haven't checked in details your patch or the test failing, I just noticed it started failing in all runs I saw after this ticket. Maybe it just got more flaky from all latest changes? We can and I guess we should spin the multiplexer jobs for the win.

I opened a ticket CASSANDRA-18320 for this to be checked properly. Thank you and I hope you have a great weekend :) 

[~smiklosovic] should we move your findings and runs to the other ticket?

[~brandon.williams] said it is flaky so I guess we need also to spin it in a loop

Also, thank you for taking the time to look into it!

