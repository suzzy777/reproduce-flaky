[~zhangduo] would you be able to look at this issue? I'm happy to assist with anything you would need.

[~zhangduo] I hope you don't mind me reaching out directly. I was wondering if I could get some info on how https://ci-hbase.apache.org/job/HBase-Nightly-ARM/ is configured. I don't see a Jenkinsfile that I think matches it but let me know if I'm missing something. I would like to use it as a starting point for a nightly build and test Jenkins job on the existing apache s390x Jenkins build nodes if possible.

Just contact the INFRA team to link the s390x build nodes to the ci-hhbase jenkins, and then I could help setting up the job. It does not use a jenkins file, just a simple script.

Thanks [~zhangduo], I have opened https://issues.apache.org/jira/browse/INFRA-23791

[~zhangduo], there is a reply on https://issues.apache.org/jira/browse/INFRA-23791 that the s390x nodes should be available on all controllers by just using the 's390x' label. I don't know how to check that though.

For the nightly build script, I've been looking at the build logs for arm64 there are two things on s390x that I think will be different based on my local testing:

OpenJDK 8 on s390x doesn't have a JIT compiler so the build (especially tests) runs very slowly and there are time outs. Could the s390x nightly build use JDK 11 instead?

The recent brotli4j and aircompressor dependencies don't have s390x support yet. Even though aircompressor is pure java, it only supports little-endian right now. The tests run successfully if those modules are excluded, ie.:
{{mvn test -pl '\!hbase-compression-aircompressor,\!:hbase-compression-brotli'}} 
Could the nightly build exclude those modules on s390x?

Let me have a try.

This is the script for running HBase-Nightly-ARM

{noformat}
#!/bin/bash
#Manually installed JAVA and MAVEN in ARM machine.
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-arm64
export MAVEN_HOME=/home/jenkins/tools/maven/latest3/
export PATH=${MAVEN_HOME}/bin:${JAVA_HOME}/bin:${PATH}
export LD_LIBRARY_PATH=/home/jenkins/test-deps/protobuf/2.5.0/build-bin/lib/  
export MAVEN_OPTS="-Dstyle.color=never"

${MAVEN_HOME}/bin/mvn -Paarch64 clean install -DskipTests

exclude_tests=$(wget https://builds.apache.org/job/HBASE-Find-Flaky-Tests/job/master/lastSuccessfulBuild/artifact/excludes -q -O -)
${MAVEN_HOME}/bin/mvn clean test -P runAllTests -Dmaven.javadoc.skip=true \
-Dcheckstyle.skip=true -Dfindbugs.skip=true -Dspotbugs.skip=true \
-Dtest.exclude.pattern=$exclude_tests -fn
{noformat}

So where is the jdk11 and maven install path on the s390x machine? Thanks.

And on the unsupported compression algos, I suggest you guys submit PRs to fix them in code, instead of doing some magics in the build scripts :)

Oh, let me be more specific. I do not mean you should fix the compression algorithm, just use Assert.assume, or checking the arch to determine the compression algos list.

Thanks.

{quote}So where is the jdk11 and maven install path on the s390x machine? Thanks.
{quote}
I'm asking the person who originally set up the s390x nodes for the path info. I'll post back here when I get the info.
{quote}Oh, let me be more specific. I do not mean you should fix the compression algorithm, just use Assert.assume, or checking the arch to determine the compression algos list.
{quote}
Thanks, I'll look at how to do this and submit a PR.

I submitted [https://github.com/apache/hbase/pull/4852] to detect building on s390x and skip the aircompressor and brotli tests. Let me know if that approach makes sense.

Changed the title and pushed to branch-2.5+.

Thanks [~jonathan.albrecht] for contributing.

Let's use the sub task for tracking the ci job.

Results for branch master
	[build #708 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/708/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/708/General_20Nightly_20Build_20Report/]




(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/708/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/708/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2.5
	[build #233 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/233/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/233/General_20Nightly_20Build_20Report/]


(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/233/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/233/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/233/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2
	[build #670 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/670/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/670/General_20Nightly_20Build_20Report/]


(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/670/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/670/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/670/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


