I simplified LEThread, and created a method that allows me to run multiple rounds. In every round but the last, the leader shuts down and a new leader is elected in the following round.

I have rewritten the testLE case. With this patch, I have a new, simpler version of LEThread and have made it in such a way that it enables us to shutdown a number of leaders, forcing a new election. The different test cases refer to the number of leaders we shut down. 



I have also let it run for about 4 hours continuously, and I have manually inspected the logs. It would be good if someone else could check as well.

Btw, I have marked for 3.5.0 because I thought 3.4.0 would be out by now, but we could try to have it for 3.4.0 if anyone is interested.

+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12503081/ZOOKEEPER-1292.patch
  against trunk revision 1198053.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/783//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/783//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/783//console

This message is automatically generated.

can you a comment to the LEThread class to explain more how it works, especially how the rounds work?

also i think we should lower the wait() times 2 secs seem a bit pessimistic. is there a way to make the Thread.sleep(1000) smaller and actually check a condition to avoid any race?

I have added more comments and changed the timeouts:

* I have reduced the 2s timeout to 0.2s. I have made this timeout long because I wanted to make sure that if it hangs, then the chance of a false positive is low. Given that the test implemented here is supposed to be more reliable, it should never happen unless we run into a bug.
* I have reduced the 1s sleep to 0.1s. The idea of that sleep time is to represent the time a follower takes to declare the leader dead. Removing that sleep altogether means that a follower declares a leader dead right after having elected it. I have run several times without it, though, and it still works.


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/3208/
-----------------------------------------------------------

(Updated 2011-12-15 14:21:47.413394)


Review request for zookeeper and Benjamin Reed.


Summary
-------

Improved test for FLE.


This addresses bug ZOOKEEPER-1292.
    https://issues.apache.org/jira/browse/ZOOKEEPER-1292


Diffs
-----

  /src/java/test/org/apache/zookeeper/test/FLETest.java 1214749 

Diff: https://reviews.apache.org/r/3208/diff


Testing
-------


Thanks,

fpj



-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507524/ZOOKEEPER-1292.patch
  against trunk revision 1214571.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/833//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/833//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/833//console

This message is automatically generated.

The test that failed is org.apache.zookeeper.test.LETest.testLE, not FLETest, the one being changed in this patch.

+1 looks good

Committed revision 1222816.

Integrated in ZooKeeper-trunk #1406 (See [https://builds.apache.org/job/ZooKeeper-trunk/1406/])
    ZOOKEEPER-1292. FLETest is flaky

breed : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1222816
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/FLETest.java


