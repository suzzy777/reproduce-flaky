I saw something like this before and it was caused by the jar being modified by a task while it was being consumed by another task.

This caused some internal corruption during reading if the process doing the reading didn't maintain an open file handle the entire time.

 

My specific failure was being caused by the main jar being overwritten by the shadow jar when we had the -Prelease enabled. You can validate that this is the same class of failure by using [inotifywatch|https://linux.die.net/man/1/inotifywatch] (assuming you can reproduce this failure locally).

I observed this, or a very similar error, quite frequently in our postsbumit runs last week in beam-examples-java:compileTestJava and a few times in beam-runners-apex:compileTestJava. Unlike the first message on this thread, I did not see any meaningful description for an error in the Gradle scan besides a generic "compliation failed, see compiler output for details". I was not able to find specific error, but I think they may share the rootcause with the failure tracked in this issue. 

[~Ardagan] Were you able to repro this locally? If not, I wonder if it would it help if we add --debug to Java postcommit Jenkins builds to have more information?

Several builds that I saw this failure on:

:beam-examples-java:compileTestJava FAILED, https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1286/
:beam-examples-java:compileTestJava FAILED, https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1281/
:beam-examples-java:compileTestJava FAILED, https://builds.apache.org/job/beam_PreCommit_Java_Cron/238/ 
Execution failed for task ':beam-runners-apex:compileTestJava'. https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1279


Another example:

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1301]

 
 bad class file: /home/jenkins/jenkins-slave/workspace/beam_PostCommit_Java_GradleBuild/src/runners/core-java/build/libs/beam-runners-core-java-2.7.0-SNAPSHOT-tests.jar(/org/apache/beam/runners/core/StateInternalsTest.class)
 unable to access file: java.util.zip.ZipException: invalid distance too far back
 Please remove or make sure it appears in the correct subdirectory of the classpath.

https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1326

 
*05:09:00* > Task :beam-examples-java:compileTestJava FAILED*05:09:00* /home/jenkins/jenkins-slave/workspace/beam_PostCommit_Java_GradleBuild/src/examples/java/src/test/java/org/apache/beam/examples/cookbook/BigQueryTornadoesIT.java:22: error: cannot access BigqueryMatcher*05:09:00* import org.apache.beam.sdk.io.gcp.testing.BigqueryMatcher;*05:09:00*                                          ^*05:09:00*   bad class file: /home/jenkins/jenkins-slave/workspace/beam_PostCommit_Java_GradleBuild/src/sdks/java/io/google-cloud-platform/build/libs/beam-sdks-java-io-google-cloud-platform-2.7.0-SNAPSHOT-tests.jar(/org/apache/beam/sdk/io/gcp/testing/BigqueryMatcher.class)*05:09:00*     unable to access file: java.util.zip.ZipException: invalid stored block lengths*05:09:00*     Please remove or make sure it appears in the correct subdirectory of the classpath.

https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1319

https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1316/

https://builds.apache.org/job/beam_PreCommit_Java_Cron/261/

https://builds.apache.org/job/beam_PreCommit_Java_Cron/260/

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1331/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1335/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1337/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1338/]

 

https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1341/

https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1344/

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1346/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1347/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1348/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1349/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1351/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1354/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1356/]

[https://builds.apache.org/job/beam_PostCommit_Java_GradleBuild/1357/]

 

[https://builds.apache.org/job/beam_PreCommit_Java_Cron/270/]

[https://builds.apache.org/job/beam_PreCommit_Java_Cron/272/]

[https://builds.apache.org/job/beam_PreCommit_Java_Cron/273/]

[https://builds.apache.org/job/beam_PreCommit_Java_Cron/275/]

 

Fixed by disabling parallel runs.

Notably, {{shadowTest}} is something that we made up, not part of the shadow plugin automatically. Both bugs here are tests depending on other test jars. In the ApexRunner case it is sensible (for ValidatesRunner suite) but in this case GCPIO should not have its test jar used as a dependency. So we could isolate this to the ApexRunner very quickly by fixing the examples / GCPIO relationship.

