This would also be useful with the new RecordBatchReader::Close, cc [~vibhatha] / [~westonpace] 

So would the usage look something like this?

{noformat}
~RecordBatchReader() {
  Status st = Close();
  if (!st.ok()) {
    st.Warn();
  }
}
{noformat}

Would we maybe want a macro similar to {{ABORT_NOT_OK}}?

{noformat}
~RecordBatchReader() {
  ARROW_WARN_NOT_OK(Close());
}
{noformat}

Yes, something like this.

[~apitrou] [~lidavidm] , I could use some advice.

 

I made the change for `~RecordBatchReader` as Weston mentioned above: [634a894|https://github.com/apache/arrow/commit/6e4a894c2c5ee35a4adfe5b04cec94b7b49b245e].

Then, when adding `ARROW_WARN_NOT_OK`, I could only find `ABORT_NOT_OK` in ([github search|https://github.com/apache/arrow/search?q=%22define+ABORT_NOT_OK%22]):
 * [gtest_util.h|https://github.com/apache/arrow/blob/1de30af020ebcfd006b4b5cd56dadf07635286ab/cpp/src/arrow/testing/gtest_util.h#L105]
 * [hiveserver2/sample_usage.cc|https://github.com/apache/arrow/blob/8e43f23dcc6a9e630516228f110c48b64d13cec6/cpp/src/arrow/dbi/hiveserver2/sample_usage.cc#L33]

But, I also noticed that `ARROW_WARN_NOT_OK` exists ([github search|https://github.com/apache/arrow/search?q=%22define+ARROW_WARN_NOT_OK%22]) in [logging.h|https://github.com/apache/arrow/blob/c4ef0486b16112813857e587dab84b3461b90542/cpp/src/arrow/util/logging.h#L89].

 

So, my questions are:
 * should I redefine ARROW_WARN_NOT_OK to use Status::Warn()
 ** I imagine this would mostly just replace the usage of ARROW_CHECK_OR_LOG
 * should ABORT_NOT_OK be moved into status.h so that it is accessible even when gtest is not used (I think gtest is optional?)

 

thanks!

{{ABORT_NOT_OK}} is only being referenced as an example, and is not something we want to expose more broadly.

{{ARROW_WARN_NOT_OK}} would be a new macro, except I suppose it already exists, and does basically what is described here. So making it use the new {{Status::Warn}} instead seems reasonable to me. The mechanics are different: the current macro also stringifies the condition being checked, but in practice this doesn't really do anything much in the places it's used.

awesome, thanks!

We could add a test case to support the `RecordBatchReader::Close` and elaborate how this feature works. 

cc [~westonpace] 

Issue resolved by pull request 13383
[https://github.com/apache/arrow/pull/13383]

This issue has been migrated to [issue #20280|https://github.com/apache/arrow/issues/20280] on GitHub. Please see the [migration documentation|https://github.com/apache/arrow/issues/14542] for further details.

