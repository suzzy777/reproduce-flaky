GitHub user TimBarham opened a pull request:

    https://github.com/apache/cordova-lib/pull/194

    CB-8754 Auto-restoring a plugin fails when adding a platform.

    Start with a blank Cordova app, then enter the following:
    
        cordova plugin add org.apache.cordova.camera --save
        cordova plugin remove org.apache.cordova.camera
        cordova platform add browser
    
    The final step should restore the camera plugin, but it fails with the following exception:
    
        TypeError: Cannot read property 'latest' of undefined
            at next (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\lib\cache.js:694:35)
            at D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\lib\cache.js:682:5
            at RegClient.get_ (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\npm-registry-client\lib\get.js:105:14)
            at RegClient.<anonymous> (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\npm-registry-client\lib\get.js:41:12)
            at fs.js:336:14
            at D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\graceful-fs\graceful-fs.js:103:5
            at FSReqWrap.oncomplete (fs.js:99:15)
    
    The core problem here is an issue with how we work with npm. Every time we are going to use npm (when dealing with plugins), we call `npm.load()` passing it our settings. But `npm.load()` can only be called once per session - subsequent calls are ignored. The correct approach is to call `npm.load()` without any settings (to make sure npm is loaded), then call `npm.config.set()` for each setting. This change had been made for platforms, but not plugins.
    
    I also wanted to make sure each time we worked with npm we had a clean config (for example, if we get an npm package from the Cordova Plugin Respository, then later from the npm repository, it would try to get the second package from the CPR because that setting would still be around and not get overridden). So now any code that wants to load and init npm I pass through a central "load and restore" method. You pass this method your npm settings and the chain of promises you want to execute with those settings applied. It loads and initializes npm, executes the promises, then restores npm's configuration to what it was before we started.
    
    Finally, once that problem was fixed there was an additional problem - we were adding plugins too early and the platform wasn't fully initialized, so we'd get an error about not being able to find the platform's `config.xml` file.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/MSOpenTech/cordova-lib CB-8754

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/cordova-lib/pull/194.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #194
    
----
commit 0df6b800c6013bcf53045040ade81345fd9b47ec
Author: Tim Barham <tim.barham@microsoft.com>
Date:   2015-03-26T11:54:37Z

    CB-8754 Auto-restoring a plugin fails when adding a platform.
    
    Start with a blank Cordova app, then enter the following:
    
    cordova plugin add org.apache.cordova.camera --save
    cordova plugin remove org.apache.cordova.camera
    cordova platform add browser
    
    The final step should restore the camera plugin, but it fails with the following exception:
    
    TypeError: Cannot read property 'latest' of undefined
        at next (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\lib\cache.js:694:35)
        at D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\lib\cache.js:682:5
        at RegClient.get_ (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\npm-registry-client\lib\get.js:105:14)
        at RegClient.<anonymous> (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\npm-registry-client\lib\get.js:41:12)
        at fs.js:336:14
        at D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\graceful-fs\graceful-fs.js:103:5
        at FSReqWrap.oncomplete (fs.js:99:15)
    
    The core problem here is an issue with how we work with npm. Every time we are going to use npm (when dealing with plugins), we call npm.load() passing it our settings. But npm.load() can only be called once per session - subsequent calls are ignored. The correct approach is to call npm.load() without any settings (to make sure npm is loaded), then call npm.config.set() for each setting.
    
    This change had been made for platforms, but not plugins. I also wanted to make sure each time we worked with npm we had a clean config (for example, if we get an npm package from the Cordova plugin respository, then later from the npm repository, it would try to get the second package from the CPR because that setting would still be around and not get overridden). So now any code that wants to load and init npm I pass through a central "load and restore" method. You pass this method your npm settings and the chain of promises you want to execute with those settings applied. It loads and initializes npm, executes the promises, then restores npm's configuration to what it was before we started.
    
    Finally, once that problem was fixed there was an additional problem - we were adding plugins too early and the platform wasn't fully initialized, so we'd get an error about not being able to find the platform's config.xml file.

----


Github user TimBarham commented on the pull request:

    https://github.com/apache/cordova-lib/pull/194#issuecomment-86940734
  
    AppVeyor failed because it couldn't connect to github (a problem I was having today too) - is there a way to kickstart it going again?


Github user agrieve commented on a diff in the pull request:

    https://github.com/apache/cordova-lib/pull/194#discussion_r27298069
  
    --- Diff: cordova-lib/src/util/npm-helper.js ---
    @@ -0,0 +1,76 @@
    +/**
    + Licensed to the Apache Software Foundation (ASF) under one
    + or more contributor license agreements.  See the NOTICE file
    + distributed with this work for additional information
    + regarding copyright ownership.  The ASF licenses this file
    + to you under the Apache License, Version 2.0 (the
    + "License"); you may not use this file except in compliance
    + with the License.  You may obtain a copy of the License at
    +
    + http://www.apache.org/licenses/LICENSE-2.0
    +
    + Unless required by applicable law or agreed to in writing,
    + software distributed under the License is distributed on an
    + "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    + KIND, either express or implied.  See the License for the
    + specific language governing permissions and limitations
    + under the License.
    + */
    +
    +// Helper methods to help keep npm operations separated.
    +
    +var npm = require('npm'),
    +    Q = require('q'),
    +    cachedSettings = null,
    +    cachedSettingsValues = null;
    +
    +/**
    + * @description Calls npm.load, then initializes npm.config with the specified settings. Then executes a chain of
    + * promises that rely on those npm settings, then restores npm settings back to their previous value. Use this rather
    + * than passing settings to npm.load, since that only works the first time you try to load npm.
    + * @param {Object} settings
    + * @param {Function} promiseChain
    + */
    +function loadWithSettingsThenRestore(settings, promiseChain) {
    +    return loadWithSettings(settings).then(promiseChain).then(restoreSettings);
    --- End diff --
    
    nit: should restoreSettings be within a .finally() rather than a .then()?


Github user agrieve commented on a diff in the pull request:

    https://github.com/apache/cordova-lib/pull/194#discussion_r27298165
  
    --- Diff: cordova-lib/src/plugman/registry/registry.js ---
    @@ -223,11 +211,13 @@ module.exports = {
      * @param {Boolean} determines if we are using the npm registry
      * @return {Promise.<Object>} Promised settings.
      */
    -function initSettings() {
    +function initSettings(returnEmptySettings) {
         var settings = module.exports.settings;
     
         // check if settings already set
    -    if(settings !== null) return Q(settings);
    +    if(settings !== null) {
    --- End diff --
    
    This returns settings even when returnEmptySettings is true. should it?


Github user agrieve commented on the pull request:

    https://github.com/apache/cordova-lib/pull/194#issuecomment-86956650
  
    Nice clean-up! Let me know when comments are addressed and I'll merge it in.


Github user TimBarham commented on a diff in the pull request:

    https://github.com/apache/cordova-lib/pull/194#discussion_r27298469
  
    --- Diff: cordova-lib/src/plugman/registry/registry.js ---
    @@ -223,11 +211,13 @@ module.exports = {
      * @param {Boolean} determines if we are using the npm registry
      * @return {Promise.<Object>} Promised settings.
      */
    -function initSettings() {
    +function initSettings(returnEmptySettings) {
         var settings = module.exports.settings;
     
         // check if settings already set
    -    if(settings !== null) return Q(settings);
    +    if(settings !== null) {
    --- End diff --
    
    No it should not. Good catch, thanks!


Github user TimBarham commented on a diff in the pull request:

    https://github.com/apache/cordova-lib/pull/194#discussion_r27299568
  
    --- Diff: cordova-lib/src/util/npm-helper.js ---
    @@ -0,0 +1,76 @@
    +/**
    + Licensed to the Apache Software Foundation (ASF) under one
    + or more contributor license agreements.  See the NOTICE file
    + distributed with this work for additional information
    + regarding copyright ownership.  The ASF licenses this file
    + to you under the Apache License, Version 2.0 (the
    + "License"); you may not use this file except in compliance
    + with the License.  You may obtain a copy of the License at
    +
    + http://www.apache.org/licenses/LICENSE-2.0
    +
    + Unless required by applicable law or agreed to in writing,
    + software distributed under the License is distributed on an
    + "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    + KIND, either express or implied.  See the License for the
    + specific language governing permissions and limitations
    + under the License.
    + */
    +
    +// Helper methods to help keep npm operations separated.
    +
    +var npm = require('npm'),
    +    Q = require('q'),
    +    cachedSettings = null,
    +    cachedSettingsValues = null;
    +
    +/**
    + * @description Calls npm.load, then initializes npm.config with the specified settings. Then executes a chain of
    + * promises that rely on those npm settings, then restores npm settings back to their previous value. Use this rather
    + * than passing settings to npm.load, since that only works the first time you try to load npm.
    + * @param {Object} settings
    + * @param {Function} promiseChain
    + */
    +function loadWithSettingsThenRestore(settings, promiseChain) {
    +    return loadWithSettings(settings).then(promiseChain).then(restoreSettings);
    --- End diff --
    
    Yes, indeed it should ... good point :)


Github user TimBarham commented on the pull request:

    https://github.com/apache/cordova-lib/pull/194#issuecomment-86962408
  
    Thanks Andrew. Changes made!


Github user kamrik commented on the pull request:

    https://github.com/apache/cordova-lib/pull/194#issuecomment-86971194
  
    Thanks, merging.
    Tests pass ok. Appveyor or GitHub were flaky for the last couple of days.


Commit 4ad1b3d8226df68db8ee26451554996b77399314 in cordova-lib's branch refs/heads/master from [~TimBarham]
[ https://git-wip-us.apache.org/repos/asf?p=cordova-lib.git;h=4ad1b3d ]

CB-8754 Auto-restoring a plugin fails when adding a platform.

Start with a blank Cordova app, then enter the following:

cordova plugin add org.apache.cordova.camera --save
cordova plugin remove org.apache.cordova.camera
cordova platform add browser

The final step should restore the camera plugin, but it fails with the following exception:

TypeError: Cannot read property 'latest' of undefined
    at next (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\lib\cache.js:694:35)
    at D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\lib\cache.js:682:5
    at RegClient.get_ (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\npm-registry-client\lib\get.js:105:14)
    at RegClient.<anonymous> (D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\npm-registry-client\lib\get.js:41:12)
    at fs.js:336:14
    at D:\GIT\Cordova\cordova-lib\cordova-lib\node_modules\npm\node_modules\graceful-fs\graceful-fs.js:103:5
    at FSReqWrap.oncomplete (fs.js:99:15)

The core problem here is an issue with how we work with npm. Every time we are going to use npm (when dealing with plugins), we call npm.load() passing it our settings. But npm.load() can only be called once per session - subsequent calls are ignored. The correct approach is to call npm.load() without any settings (to make sure npm is loaded), then call npm.config.set() for each setting.

This change had been made for platforms, but not plugins. I also wanted to make sure each time we worked with npm we had a clean config (for example, if we get an npm package from the Cordova plugin respository, then later from the npm repository, it would try to get the second package from the CPR because that setting would still be around and not get overridden). So now any code that wants to load and init npm I pass through a central "load and restore" method. You pass this method your npm settings and the chain of promises you want to execute with those settings applied. It loads and initializes npm, executes the promises, then restores npm's configuration to what it was before we started.

Finally, once that problem was fixed there was an additional problem - we were adding plugins too early and the platform wasn't fully initialized, so we'd get an error about not being able to find the platform's config.xml file.


Commit 979f499b1bd8eb9cc51d3dd23cd128b14a9f9d08 in cordova-lib's branch refs/heads/master from [~TimBarham]
[ https://git-wip-us.apache.org/repos/asf?p=cordova-lib.git;h=979f499 ]

CB-8754 Addressed comments:

* npm-helper.restoreSettings() should be called in a finally() rather than a
  then().

* Ensure immediate return from registry.initSettings() honors
  returnEmptySettings arg.

GitHub: close #194


Github user asfgit closed the pull request at:

    https://github.com/apache/cordova-lib/pull/194


