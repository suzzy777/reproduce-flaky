The test is failing because in some situation the KRaftClient.scheduleAppend() for a message of type `bootstrapMetadata` is being called from  a node which is either not the current leader/controller OR from a leader with wrong epoch because the test is creating a file with LONG_MAX offset at [https://github.com/apache/kafka/blob/trunk/metadata/src/test/java/org/apache/kafka/metalog/LocalLogManager.java#L229-L237]

Perhaps [~mumrah] may know about the situation where this scenario can occur?

I have fixed the bug which was causing a snapshot with LONG_MAX at [https://github.com/apache/kafka/pull/12224] 

Also note that there are other tests such as QuorumControllerTest.testSnapshotOnlyAfterConfiguredMinBytes failing due to same bug


{noformat}
Error Messagejava.util.concurrent.ExecutionException: org.apache.kafka.common.errors.UnknownServerException: java.lang.RuntimeException: Can't create a new snapshot at epoch 1 because there is already a snapshot with epoch 9223372036854775807Stacktracejava.util.concurrent.ExecutionException: org.apache.kafka.common.errors.UnknownServerException: java.lang.RuntimeException: Can't create a new snapshot at epoch 1 because there is already a snapshot with epoch 9223372036854775807
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1999)
	at org.apache.kafka.controller.QuorumControllerTest.testSnapshotOnlyAfterConfiguredMinBytes(QuorumControllerTest.java:691)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutInvocation.proceed(TimeoutInvocation.java:46)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke({noformat}

