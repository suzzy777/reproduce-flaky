[https://github.com/apache/kafka/pull/10207/checks?check_run_id=1978143578] 

{{org.opentest4j.AssertionFailedError: Rebalance did not complete in time ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at kafka.api.ConsumerBounceTest.waitForRebalance$1(ConsumerBounceTest.scala:400)
	at kafka.api.ConsumerBounceTest.checkCloseDuringRebalance(ConsumerBounceTest.scala:414)
	at kafka.api.ConsumerBounceTest.testCloseDuringRebalance(ConsumerBounceTest.scala:381)}}

{code:java}
org.opentest4j.AssertionFailedError: Rebalance did not complete in time ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at kafka.api.ConsumerBounceTest.waitForRebalance$1(ConsumerBounceTest.scala:400)
	at kafka.api.ConsumerBounceTest.checkCloseDuringRebalance(ConsumerBounceTest.scala:414)
	at kafka.api.ConsumerBounceTest.testCloseDuringRebalance(ConsumerBounceTest.scala:381)
{code}


Failed again: 

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-10943/5/testReport/junit/kafka.api/ConsumerBounceTest/Build___JDK_16_and_Scala_2_13___testCloseDuringRebalance___2/

{code:java}
org.opentest4j.AssertionFailedError: Rebalance did not complete in time ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at kafka.api.ConsumerBounceTest.waitForRebalance$1(ConsumerBounceTest.scala:400)
	at kafka.api.ConsumerBounceTest.checkCloseDuringRebalance(ConsumerBounceTest.scala:414)
	at kafka.api.ConsumerBounceTest.testCloseDuringRebalance(ConsumerBounceTest.scala:381)
{code}

This has been failing _very_ frequently as of late, for example [https://ci-builds.apache.org/blue/organizations/jenkins/Kafka%2Fkafka-pr/detail/PR-11009/4/tests].

I took a brief looks at the logs and it appears to be an issue with the connection, or possibly something to do with the incremental fetch (not sure if the *FetchSessionTopicIdException* is a red herring or not):
{code:java}
[2021-07-13 12:31:46,774] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error in response for fetch request (type=FetchRequest, replicaId=1, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={closetest-1=PartitionData(fetchOffset=0, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0], lastFetchedEpoch=Optional.empty), closetest-7=PartitionData(fetchOffset=0, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0], lastFetchedEpoch=Optional.empty), closetest-4=PartitionData(fetchOffset=0, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0], lastFetchedEpoch=Optional.empty)}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1829936913, epoch=1), rackId=) (kafka.server.ReplicaFetcherThread:72)org.apache.kafka.common.errors.FetchSessionTopicIdException: The fetch session encountered inconsistent topic ID usage[2021-07-13 12:31:47,002] WARN [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error in response for fetch request (type=FetchRequest, replicaId=1, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=2081224068, epoch=1), rackId=) (kafka.server.ReplicaFetcherThread:72)org.apache.kafka.common.errors.FetchSessionTopicIdException: The fetch session encountered inconsistent topic ID usage[2021-07-13 12:31:48,545] WARN [Consumer clientId=ConsumerTestConsumer, groupId=group1] Close timed out with 3 pending requests to coordinator, terminating client connections (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator:1024)[2021-07-13 12:31:48,549] WARN [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error in response for fetch request (type=FetchRequest, replicaId=0, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={closetest-1=PartitionData(fetchOffset=0, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0], lastFetchedEpoch=Optional.empty), closetest-7=PartitionData(fetchOffset=0, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0], lastFetchedEpoch=Optional.empty), topic-1=PartitionData(fetchOffset=0, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0], lastFetchedEpoch=Optional.empty), closetest-4=PartitionData(fetchOffset=0, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0], lastFetchedEpoch=Optional.empty)}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1532743228, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread:72)java.io.IOException: Connection to 2 was disconnected before the response was read 
    at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
    at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:109)
    at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:219)
    at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:313)
    at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:137)
    at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3$adapted(AbstractFetcherThread.scala:136)
    at scala.Option.foreach(Option.scala:437) at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:136)
    at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:119)
    at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
{code}
 Wondering if we should bump this the priority on this? Can someone more familiar with this test maybe take a few minutes to glance over these logs and chime in on whether this is potentially concerning or not? cc [~hachikuji] [~cmccabe]

Hi *FetchSessionTopicIdException* is likely related to a known bug in my change. I've filed a ticket and will be working on the fix. It may be related to this issue. https://issues.apache.org/jira/browse/KAFKA-13079

While investigating I think I found the issue. Ticket here: https://issues.apache.org/jira/browse/KAFKA-13102

Failed again:

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-11090/2/testReport/junit/

{code:java}
org.opentest4j.AssertionFailedError: Rebalance did not complete in time ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at kafka.api.ConsumerBounceTest.waitForRebalance$1(ConsumerBounceTest.scala:400)
	at kafka.api.ConsumerBounceTest.checkCloseDuringRebalance(ConsumerBounceTest.scala:414)
	at kafka.api.ConsumerBounceTest.testCloseDuringRebalance(ConsumerBounceTest.scala:381)
{code}

Failed again:

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-11093/4/testReport/kafka.api/ConsumerBounceTest/Build___JDK_11_and_Scala_2_13___testCloseDuringRebalance___2/

{code:java}
org.opentest4j.AssertionFailedError: Rebalance did not complete in time ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at kafka.api.ConsumerBounceTest.waitForRebalance$1(ConsumerBounceTest.scala:400)
	at kafka.api.ConsumerBounceTest.checkCloseDuringRebalance(ConsumerBounceTest.scala:414)
	at kafka.api.ConsumerBounceTest.testCloseDuringRebalance(ConsumerBounceTest.scala:381)
{code}

FYI: I just merged a PR that should cut down on flakiness while I work on some of the other issues related to my fetch change. https://github.com/apache/kafka/pull/11097

I'll reopen this issue as it happened again on a fresh PR:

https://github.com/apache/kafka/pull/11228

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-11228/2/testReport/junit/kafka.api/ConsumerBounceTest/Build___JDK_8_and_Scala_2_12___testCloseDuringRebalance__/

