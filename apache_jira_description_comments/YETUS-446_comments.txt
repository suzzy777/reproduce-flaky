Issue with the error message is that during an error we just print the reason and not the response returned by the server. I will take a look as why we are generating the wrong version.

h5. Preliminary Analysis:
When giving range, the endpoints of the range are not validated to be valid fixVersions(release version) and are always added to the list of fixVersions for which JIRA issues will be queried. 

For example, if we assume that Falcon project has 1.4 and 1.5 only as valid fixVersions the following command
{code}
releasedocmaker --project FALCON --outputdir FALCON --projecttitle 'Apache Falcon' --version 1 --version 2 --range --index --license
{code}

will look for JIRA issues for versions : {{\[1, 1.4, 1.5, 2 \]}} Though as per our assumption, 1 and 2 are not valid fixVersions, when querying for issues with 1/2 as fixVersion([query url for issues with fixVersion 1 | https://issues.apache.org/jira/rest/api/2/search?jql=project+in+%28%27FALCON%27%29+and++++++++++++++++fixVersion+in+%28%271%27%29+and++++++++++++++++resolution+%3D+Fixed&startAt=0&maxResults=100 ], [query url for issues with fixVersion 2 | https://issues.apache.org/jira/rest/api/2/search?jql=project+in+%28%27FALCON%27%29+and++++++++++++++++fixVersion+in+%28%272%27%29+and++++++++++++++++resolution+%3D+Fixed&startAt=0&maxResults=100]) JIRA api doesn't throw a bad request and returns a response as below:
{code}
{"startAt":0,"maxResults":100,"total":0,"issues":[]}
{code}

This is handled by [this fragment | https://github.com/apache/yetus/blob/master/release-doc-maker/releasedocmaker.py#L726] of the code where it prints a message and moves on to next fixVersion. 

However, interestingly if we [query for fixVersion "0" |https://issues.apache.org/jira/rest/api/2/search?jql=project+in+%28%27FALCON%27%29+and++++++++++++++++fixVersion+in+%28%270.0%27%29+and++++++++++++++++resolution+%3D+Fixed&startAt=0&maxResults=100], JIRA api returns an error code of 400(Bad Request) with following response:
{code}
{"errorMessages":["The value '0.0' does not exist for the field 'fixVersion'."],"errors":{}}
{code}








Whoa! Crazy.  So JIRA throws a special error for version 0. That's hilarious. I wonder if they are using 0 as "null" in the back end. For the end points on ranges, being able to pass bogus ones is a feature, but we should obviously verify them and not ask specifically about them if they aren't actually real versions.

I don't think they are using 0 as "null" in the back end :) I suspect that there are metadata tables for various fields(project/fixVersion etc.) per instance of JIRA which contains values for that particular field. If the value for a certain field is found to be missing then it throws this kind of error. 

For example if a certain version doesn't exist for *any* project in JIRA then it will throw the same error. In the command below I have given a valid project name but a high version which I guessed will be missing in any project. 

NOTE: I modified the script locally to also include the response from server, so your output will have less information.

{code}
releasedocmaker --project FALCON --outputdir FALCON --projecttitle 'Apache Falcon' --version 56 --index --license
JIRA returns HTTP error 400: Bad Request. Aborting.
Response from the server is:
{"errorMessages":["The value '56' does not exist for the field 'fixVersion'."],"errors":{}}
Please make sure the specified projects are correct.
{code}

If we give a valid version but a bad project name, we get a similar response( and hence the original error message I believe). e.g.
{code}
releasedocmaker --project yahoooo --outputdir FALCON --projecttitle 'Apache Falcon' --version 0.3 --index --license
Response from the server is:
{"errorMessages":["The value 'yahoooo' does not exist for the field 'project'."],"errors":{}}
Please make sure the specified projects are correct.
{code}

and to my delight if you give multiple invalid options, the response mentions all invalid values e.g.
{code}
releasedocmaker --project yahoooo --outputdir FALCON --projecttitle 'Apache Falcon' --version 56 --index --license
JIRA returns HTTP error 400: Bad Request. Aborting.
Response from the server is:
{"errorMessages":["The value 'yahoooo' does not exist for the field 'project'.","The value '56' does not exist for the field 'fixVersion'."],"errors":{}}
Please make sure the specified projects are correct.
{code}

I think the response from server is self-explanatory and we can delete the last line (the original help message).




While testing the patch I found one more issue:

An invalid project name along with a range of versions triggers stacktrace to be printed instead of a helpful message. e.g.

{code}
releasedocmaker --project yahoo --outputdir FALCON --projecttitle 'Apache Falcon' --version 0 --version 2 --range  --index --license
Looking for 0 through 2
Traceback (most recent call last):
  File "release-doc-maker/releasedocmaker.py", line 883, in <module>
    main()
  File "release-doc-maker/releasedocmaker.py", line 700, in main
    for v in GetVersions(options.versions, projects).getlist()]
  File "release-doc-maker/releasedocmaker.py", line 119, in __init__
    resp = urllib2.urlopen(url)
  File "/usr/lib/python2.7/urllib2.py", line 127, in urlopen
    return _opener.open(url, data, timeout)
  File "/usr/lib/python2.7/urllib2.py", line 410, in open
    response = meth(req, response)
  File "/usr/lib/python2.7/urllib2.py", line 523, in http_response
    'http', request, response, code, msg, hdrs)
  File "/usr/lib/python2.7/urllib2.py", line 448, in error
    return self._call_chain(*args)
  File "/usr/lib/python2.7/urllib2.py", line 382, in _call_chain
    result = func(*args)
  File "/usr/lib/python2.7/urllib2.py", line 531, in http_error_default
    raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)
urllib2.HTTPError: HTTP Error 404: Not Found
{code}

I will fix this as well as part of this JIRA.

h5. Changes in -00.patch
1. Fixed the handling of non-existent versions in range
2. Fixed the issue where stacktrace gets printed if an invalid project name is given along with a range of versions
3. Made changes to show response from server in case of error.

h5. Sample commands and their outputs after the change

{code}
releasedocmaker --project yahoo --outputdir FALCON --projecttitle 'Apache Falcon' --version 0 --version 2 --range  --index --license
Looking for 0 through 2
JIRA returns HTTP error 404: Not Found. Aborting.
Response from the server is:
{"errorMessages":["No project could be found with key 'YAHOO'."],"errors":{}}
{code}

{code}
releasedocmaker --project yahoo --outputdir FALCON --projecttitle 'Apache Falcon' --version 56 --range  --index --license
Looking for 56 through 56
JIRA returns HTTP error 404: Not Found. Aborting.
Response from the server is:
{"errorMessages":["No project could be found with key 'YAHOO'."],"errors":{}}
{code}

{code}
releasedocmaker --project yahoo --outputdir FALCON --projecttitle 'Apache Falcon' --version 56   --index --license
JIRA returns HTTP error 400: Bad Request. Aborting.
Response from the server is:
{"errorMessages":["The value 'yahoo' does not exist for the field 'project'.","The value '56' does not exist for the field 'fixVersion'."],"errors":{}}
{code}

{code}
releasedocmaker --project falcon --outputdir FALCON --projecttitle 'Apache Falcon' --version 0 --version 2 --index --license
JIRA returns HTTP error 400: Bad Request. Aborting.
Response from the server is:
{"errorMessages":["The value '0' does not exist for the field 'fixVersion'."],"errors":{}}
{code}

{code}
releasedocmaker --project falcon --outputdir FALCON --projecttitle 'Apache Falcon' --version 0 --version 2 --range --index --license
Looking for 0 through 2
Adding 0.3 to the list
Adding 0.4 to the list
Adding 0.5 to the list
Adding 0.6 to the list
Adding 0.6.1 to the list
Adding 0.7 to the list
Adding 0.8 to the list
Adding 0.9 to the list
Adding 0.10 to the list
Adding 0.81 to the list
Adding 1.0 to the list
There is no issue which has the specified version: 0.81
{code}

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 16m 22s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} pylint {color} | {color:green}  0m  6s{color} | {color:green} There were no new pylint issues. {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  0s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 16m 33s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/yetus:e4e4903 |
| JIRA Issue | YETUS-446 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12826572/YETUS-446.00.patch |
| Optional Tests |  pylint  |
| uname | Linux 1bd6edd63c7d 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | nobuild |
| git revision | master / 0223ebf |
| pylint | v1.6.4 |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-YETUS-Build/486/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



Rather than print the JSON, can we pull the message out and just print that instead rather than all the JSON formatting?

Sorry, that was something which I wanted to discuss but I forgot. 

One option is to just take all error messages and show them one per line. However,
1. I was not sure if the format is consistent under different scenarios and installations(server/cloud). I looked at : [these docs | https://docs.atlassian.com/jira/REST/cloud/ ] and format looks different.  
2. What to do with the "errors"? It is empty in the cases that I tested but might give some useful clues in other cases.

Another conservative option could be to  just format the response to make it more readable.

Thoughts?




I think when errorMessages actually context text we should provide that as output perhaps in addition to our own.  e.g.,

{code}
JIRA returns HTTP error 400: Bad Request. Aborting.
- Please make sure the specified projects are correct.
- The value 'yahoo' does not exist for the field 'project'.
- The value '56' does not exist for the field 'fixVersion'.
{code}

Or something like that perhaps?

h5. Changes in -01.patch

- Parsed the error messages from server

h5. Testing Done
Tested with following commands

{code}
releasedocmaker --project yahoo --outputdir FALCON --projecttitle 'Apache Falcon' --version 0 --version 2 --range  --index --license
Looking for 0 through 2
JIRA returns HTTP error 404: Not Found. Aborting.
- Please ensure that specified projects are correct.
- No project could be found with key 'YAHOO'.
{code}

{code}
releasedocmaker --project yahoo --outputdir FALCON --projecttitle 'Apache Falcon' --version 56 --range  --index --license
Looking for 56 through 56
JIRA returns HTTP error 404: Not Found. Aborting.
- Please ensure that specified projects are correct.
- No project could be found with key 'YAHOO'.
{code}

{code}
releasedocmaker  --project yahoo --outputdir FALCON --projecttitle 'Apache Falcon' --version 56   --index --license
JIRA returns HTTP error 400: Bad Request. Aborting.
- Please ensure that specified projects, fixVersions etc. are correct
- The value 'yahoo' does not exist for the field 'project'.
- The value '56' does not exist for the field 'fixVersion'.
{code}


{code}
releasedocmaker --project falcon  --outputdir FALCON --projecttitle 'Apache Falcon' --version 0 --version 2 --index --license
JIRA returns HTTP error 400: Bad Request. Aborting.
- Please ensure that specified projects, fixVersions etc. are correct
- The value '0' does not exist for the field 'fixVersion'.
{code}


{code}
releasedocmaker --project falcon --outputdir FALCON --projecttitle 'Apache Falcon' --version 0 --version 2 --range --index --license
Looking for 0 through 2
Adding 0.3 to the list
Adding 0.4 to the list
Adding 0.5 to the list
Adding 0.6 to the list
Adding 0.6.1 to the list
Adding 0.7 to the list
Adding 0.8 to the list
Adding 0.9 to the list
Adding 0.10 to the list
Adding 0.81 to the list
Adding 1.0 to the list
There is no issue which has the specified version: 0.81
{code}

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 15s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} pylint {color} | {color:red}  0m  6s{color} | {color:red} The patch generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  0s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}  0m 25s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/yetus:e4e4903 |
| JIRA Issue | YETUS-446 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12827424/YETUS-446.01.patch |
| Optional Tests |  pylint  |
| uname | Linux 49f84769c40a 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | nobuild |
| git revision | master / 4779af3 |
| pylint | v1.6.4 |
| pylint | https://builds.apache.org/job/PreCommit-YETUS-Build/492/artifact/patchprocess/diff-patch-pylint.txt |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-YETUS-Build/492/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



h5. Changes in the -02.patch

- Fixed the pylint issues

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 14m 18s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} pylint {color} | {color:green}  0m  6s{color} | {color:green} There were no new pylint issues. {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  0s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 14m 29s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/yetus:e4e4903 |
| JIRA Issue | YETUS-446 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12827496/YETUS-446.02.patch |
| Optional Tests |  pylint  |
| uname | Linux 1f27af23a2b9 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | nobuild |
| git revision | master / 4779af3 |
| pylint | v1.6.4 |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-YETUS-Build/493/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



I don't know what triggered it because I can't duplicate it, but I just hit a weird error output:

{code}
Adding 0.2.0 to the list
Adding 0.2.1 to the list
Adding 0.3.0 to the list
Adding 0.4.0 to the list
JIRA returns HTTP error 400: Bad Request. Aborting.
- Please ensure that specified projects, fixVersions etc. are correct
Couldn't parse server response :

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>400 Bad Request</title>
</head><body>
<h1>Bad Request</h1>
<p>Your browser sent a request that this server could not understand.<br />
</p>
</body></html>
{code}



Also looks like we're duplicating versions?

{code}
Looking for 2.7.3 through 3.1.0
Adding 2.7.3 to the list
Adding 2.7.3 to the list
Adding 2.7.3 to the list
Adding 2.7.3 to the list
Adding 2.7.4 to the list
Adding 2.7.4 to the list
Adding 2.7.4 to the list
Adding 2.7.4 to the list
Adding 2.8.0 to the list
Adding 2.8.0 to the list
Adding 2.8.0 to the list
Adding 2.8.0 to the list
Adding 2.8.1 to the list
Adding 2.8.1 to the list
Adding 2.9.0 to the list
Adding 2.9.0 to the list
Adding 2.9.0 to the list
Adding 2.9.0 to the list
{code}

Hello [~aw],

Can you please share the command that you used? I am not able to replicate it.

I am not sure what caused it either, but I don't think it is because of changes in the patch. We can probably clean up the response and avoid printing response when we are not able to parse. 

Yeah, I think we need to catch those and do something differently with them.  

FWIW, I switched over to something new for Internet at home and there are times where it is a bit flaky.  I suspect the error is related to that.  On the plus side, it means a bit more interesting test conditions. haha.

You can duplicate it with multiple projects very easily:

releasedocmaker --project HADOOP --project HDFS --project YARN --project MAPREDUCE --projecttitle Apache Hadoop --version 2.6.4 --version 2.6.10 --license --range --outputdir HADOOP

Without this patch, it only prints each version once.

Yup.. that's why I put that extra try-except.. haha :P

h5. Changes in -03.patch
- Removed ugly server responses
- Fixed the duplicate version issue while using multiple projects


*P.S.* I will be shifting to the opposite side of the planet in a few days, so it might take me a while to respond to issues. 

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}124m 45s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} pylint {color} | {color:green}  0m 17s{color} | {color:green} There were no new pylint issues. {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  0s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}125m 18s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/yetus:e4e4903 |
| JIRA Issue | YETUS-446 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12827881/YETUS-446.03.patch |
| Optional Tests |  pylint  |
| uname | Linux a5f1c261f24c 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | nobuild |
| git revision | master / 4779af3 |
| pylint | v1.6.4 |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-YETUS-Build/494/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



OK, this seems to be working.  I did blow an error, but we've always blown connection reset errors so no big deal.

+1 committing ot master.

Thanks!

