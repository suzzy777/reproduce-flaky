I started working making the requisite changes for the REPLICAPROP related APIs and ran into a bit of a snag.

Historically, V2HttpCall has determined whether a given API is an "admin" request or a "core" request based on its path.  Paths containing a core/collection name are "core" requests, all others are considered "admin" requests.  V2HttpCall figures out what request-type its dealing with, and then knows which PluginBag to look for an Api in.  This works because the original v2 API was designed with this heuristic in mind: it's one of the main reasons that some paths (e.g. {{/collections}}) have so many sub-commands.

Unfortunately, this heuristic somewhat prevents the use of any more REST-ful paths.  Example: rewriting AddReplicaPropertyAPI to have the more REST-ful path {{/collections/collName/shards/shardName/replicas/replicaName/properties/propName}} leads to a 404 at runtime, as V2HttpCall sees the collection name and tries to run the request using the core-level Jersey application. (AddReplicaPropertyAPI is associated with CollectionsHandler and as such is registered with the container-level Jersey app.)

If we're going to change these endpoints to be more intuitive and user-friendly, we'll need to first rework V2HttpCall a bit to lookup endpoints more intelligently.  One barrier in this regard is that Jersey/JAX-RS doesn't provide an easy way to check whether a given application has a match for a particular incoming request, without actually submitting the request to Jersey and executing it.  The best we might be able to do here is a sort of "guess and check", where we first try to serve a request from the core-container Jersey app and then try on a core-specific Jersey app if Jersey spat out a NotFoundException on our first attempt.  It's a bit messy, but with the interface that JAX-RS gives us, it might be our best option.  Eager for other suggestions though.

I've opened up a tentative PR [here|https://github.com/apache/solr/pull/1035] that demos this approach.

Commit 087fe79dd1fbd75944f6467827b01a5ab9a12956 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=087fe79dd1f ]

SOLR-16392: Support REST-ful path lookup in V2HttpCall (#1035)

Prior to this commit, V2HttpCall uses a rather crude heuristic to
determine whether a given API is a "container-level" or "core-level"
API.  Namely, any path that a core/collection name can be parsed out of
is a "core" API that should live in the core-level PluginBag.
Conversely, anything else is a container-level API that should live in
the container-level PluginBag.

This happened to work for V2 because we initially chose our API paths
with this heuristic in mind.  But the result is an API that's neither intuitive
nor user-friendly.

This PR takes a sort of "guess and check" approach, where we try
serving ambiguous requests from multiple Jersey apps in series, stopping
at the first one that doesn't spit out a quick NotFoundException.

Commit a1ee7c1d0de32779109cb8b66a4319a0f8c85037 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=a1ee7c1d0de ]

SOLR-16392:  Refactor and update v2 ADDREPLICAPROP API  (#1049)

This commit modifies the existing AddReplicaPropertyAPI definition to be
more REST-ful, and use the new JAX-RS framework. Specifically, this
commit changes the API from:

POST /collections/collName
    {"add-replica-property" : {...}}

to

PUT /collections/<coll>/shards/<shard>/replicas/<replica>/properties/<prop>
    {"value": <val>}

This is a breaking change for users of the v2 API, but one that is
allowed because of v2's "experimental" designation.

In support of this, this commit also refactors AddReplicaPropertyAPI to
use the new JAX-RS framework.  It also introduces the new class,
"InjectionFactories" to allow Jersey to inject common "context"
values/objects as ctor args for resource classes such as
AddReplicaPropertyAPI.

Commit e0a72e28f60e5d7eb60bf7532c45a101239e0048 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=e0a72e28f60 ]

SOLR-16392: Minor CollectionsHandler cleanup (#1065)

This commit removes the switch-case in
CollectionsHandler.handleRequestBody, in favor of just putting the case
logic in the CollectionsOperation enum where needed.

(Credit to Bruno R for the suggestion.)

Commit 9eab083b64b84f0a1158525fab70323c51d5c869 in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=9eab083b64b ]

SOLR-16392: Support REST-ful path lookup in V2HttpCall

Prior to this commit, V2HttpCall uses a rather crude heuristic to
determine whether a given API is a "container-level" or "core-level"
API.  Namely, any path that a core/collection name can be parsed out of
is a "core" API that should live in the core-level PluginBag.
Conversely, anything else is a container-level API that should live in
the container-level PluginBag.

This happened to work for V2 because we initially chose our API paths
with this heuristic in mind.  But the result is an API that's neither intuitive
nor user-friendly.

This PR takes a sort of "guess and check" approach, where we try
serving ambiguous requests from multiple Jersey apps in series, stopping
at the first one that doesn't spit out a quick NotFoundException.


To be a little more explicit about the APIs we want this ticket to cover, I found 3 APIs that need work related to replica/shard/replicaprop CRUD:
 
* Create Shard
** Current Form: POST /api/collections/collName/shards \{'create": \{...\}\}
** Desired Form: POST /api/collections/collName/shards \{...\}
** Spreadsheet Ref: Tab 1, Line 27
* Create Replica
** Current Form: POST /api/collections/collName/shards \{'add-replica": \{...\}\}
** Desired Form: POST /api/collections/collName/shards/shardName/replicas \{...\}
** Spreadsheet Ref: Tab 1, Line 32
* Delete Replica Property
** Current Form: POST /api/collections/collName \{"delete-replica-property": \{...\}\}
** Desired Form: DELETE /api/collections/collName/shards/shardName/replicas/replicaName/properties/propName
** Spreadsheet Ref: Tab 1, Line 44

IMO it makes sense to split these up across different PRs, doing some small number (i.e. 1 or 2) of APIs per-PR, though maybe they could all be tackled in a single larger PR as well.  If anyone wants to help chip away at this, just call out which APIs from this list you intend to work on and we can parallelize them.

In terms of the steps required, the JIRA comments [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17617806&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17617806] and [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17617923&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17617923] give some good background and step-by-step instructions for switching APIs over to the new JAX-RS framework, which is usually helpful or even required as the traditional v2 framework doesn't lend itself very readily to RESTful APIs.  (Those comments describe creating a new API "from scratch", but the steps are still applicable to modifying an existing API.)  The PR [here|https://github.com/apache/solr/pull/1053] also serves as a helpful example to work from.

Not all API modifications require the new JAX-RS framework, though it is preferred going forward.  Instructions for updating APIs using the older, traditional v2 framework can be found [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17565076&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17565076], and an example PR can be found [here|https://github.com/apache/solr/pull/1061].

Commit 936329923e1282303fdbffa1c435f123a2e58fa5 in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=936329923e1 ]

SOLR-16392:  Refactor and update v2 ADDREPLICAPROP API

This commit modifies the existing AddReplicaPropertyAPI definition to be
more REST-ful, and use the new JAX-RS framework. Specifically, this
commit changes the API from:

POST /collections/collName
    {"add-replica-property" : {...}}

to

PUT /collections/<coll>/shards/<shard>/replicas/<replica>/properties/<prop>
    {"value": <val>}

This is a breaking change for users of the v2 API, but one that is
allowed because of v2's "experimental" designation.

In support of this, this commit also refactors AddReplicaPropertyAPI to
use the new JAX-RS framework.  It also introduces the new class,
"InjectionFactories" to allow Jersey to inject common "context"
values/objects as ctor args for resource classes such as
AddReplicaPropertyAPI.


Commit ff68d4627601038d8ea7a88270f7995573d1a3f4 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=ff68d462760 ]

SOLR-16392: Refactor and update v2 DELETEREPLICAPROP API  (#1053)

This commit modifies the existing DeleteReplicaPropertyAPI definition to
be more REST-ful, and use the new JAX-RS framework. Specifically, this
commit changes the API from:

POST /collections/collName
    {"delete-replica-property" : {...}}

to

DELETE /collections/<coll>/shards/<shard>/replicas/<replica>/properties/<prop>

This is a breaking change for users of the v2 API, but one that is
allowed because of v2's "experimental" designation.

In support of this, this commit also refactors DeleteReplicaPropertyAPI
to use the new JAX-RS framework.

Commit b8ed5504f2ea5838cc6aee2074e508ec86cd4fde in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=b8ed5504f2e ]

SOLR-16392: Refactor and update v2 DELETEREPLICAPROP API  (#1053)

This commit modifies the existing DeleteReplicaPropertyAPI definition to
be more REST-ful, and use the new JAX-RS framework. Specifically, this
commit changes the API from:

POST /collections/collName
    {"delete-replica-property" : {...}}

to

DELETE /collections/<coll>/shards/<shard>/replicas/<replica>/properties/<prop>

This is a breaking change for users of the v2 API, but one that is
allowed because of v2's "experimental" designation.

In support of this, this commit also refactors DeleteReplicaPropertyAPI
to use the new JAX-RS framework.

I started looking a little more closely at the v1 DELETEREPLICA functionality this morning in preparation to convert it to JAX-RS, and found that it actually does more than I thought.  Not only can it delete a single replica by name, but it's also capable of deleting a specified number of replicas (whose names aren't explicitly provided - presumably Solr chooses which replicas in the shard to delete).

I think the most intuitive way to represent these two chunks of functionality in v2, is probably to split them into two separate endpoints.  {{DELETE /collections/collName/shards/shardName/replicas/replicaName}} can still be used to delete a single named replica. (This v2 API already exists today).  But we could also add a related endpoint to cover the multiple-replica-deletion case: {{DELETE /collections/collName/shards/shardName/replicas?count=123}}.

What do folks think of that idea?  If there's no objections I'll mock it up in a PR shortly.

DELETEREPLICA does even more than I thought yesterday!  As best as I can tell now, it covers three distinct use-cases:

# Delete a single named replica ({{DELETE /api/collections/cN/shards/sN/replicas/rN}})
# Delete a number of replicas from a single shard ({{DELETE /api/collections/cN/shards/sN/replicas?count=123}})
# Delete a number of replicas from all shards (???)

(1) and (2) are covered by the APIs mentioned inline, but I'm not sure what a good v2 API would be for (3).

Anyone have any ideas?

Commit a93a25b94fb6520da040b1d3ef0ccd2d1534ce78 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=a93a25b94fb ]

SOLR-16392: Tweak v2 deletereplica to be more REST-ful (#1594)

This commit tweaks the v2 binding for our "delete replica" API to be more
intuitive for users.  Delete replica functionality now lives at:
  - `DELETE /api/collections/cName/shards/sName/replicas/rName`
  - `DELETE /api/collections/cName/shards/sName/replicas?count=3`
  - `PUT /api/collections/cName/scale {"count": 3"}

depending on whether users want to delete a single replica by name,
multiple replicas from a single shard, or multiple replicas from all shards
respectively.  These v2 APIs are experimental and currently subject to
change.

This commit also switches them (and a similar deleteshard API) over to
using JAX-RS.

Commit aaa718da892129c708b35b90ff6007b9d86d5a8b in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=aaa718da892 ]

SOLR-16392: Tweak v2 deletereplica to be more REST-ful (#1594)

This commit tweaks the v2 binding for our "delete replica" API to be more
intuitive for users.  Delete replica functionality now lives at:
  - `DELETE /api/collections/cName/shards/sName/replicas/rName`
  - `DELETE /api/collections/cName/shards/sName/replicas?count=3`
  - `PUT /api/collections/cName/scale {"count": 3"}

depending on whether users want to delete a single replica by name,
multiple replicas from a single shard, or multiple replicas from all shards
respectively.  These v2 APIs are experimental and currently subject to
change.

This commit also switches them (and a similar deleteshard API) over to
using JAX-RS.


Commit 66d6a55895fa51074e325d260bbdc14f8beb560a in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=66d6a55895f ]

SOLR-16392: Tweak v2 CREATESHARD to be more REST-ful (#1671)

The "create" command-specifier has been removed, but the API otherwise
remains unchanged.

This commit also converts the API over to the JAX-RS framework.

Commit 656829eb2cdb379e731951fd8ef4325076a34468 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=656829eb2cd ]

SOLR-16392: Tweak v2 ADDREPLICA to be more REST-ful (#1679)

Following these changes, the v2 API now appears as:

  `POST /api/collections/cName/shards/sName/replicas {...}`

Although not shown above, the request body has no 'add-replica' command
specifier.  These changes bring v2 ADDREPLICA more into line with the
REST-ful design we are aiming for going forward.

This commit also converts the API to the new JAX-RS framework.

Commit a0cd45394f3c99e4c3918d007e7b963819019c7b in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=a0cd45394f3 ]

SOLR-16392: Tweak v2 CREATESHARD to be more REST-ful (#1671)

The "create" command-specifier has been removed, but the API otherwise
remains unchanged.

This commit also converts the API over to the JAX-RS framework.


Commit 2307ee9feef70c733597be639be522f976d41bbf in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=2307ee9feef ]

SOLR-16392: Correct v2 deleteshard path

I made a copy/paste mistake when converting DELETESHARD to the JAX-RS
framework and didn't catch it.  This commit corrects that.


Commit 669c411b00e1212a2fb498d5a5e02871497882d5 in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=669c411b00e ]

SOLR-16392: Correct v2 deleteshard path

I made a copy/paste mistake when converting DELETESHARD to the JAX-RS
framework and didn't catch it.  This commit corrects that.


Commit 324731e08698c6b0a0d1ec0a94fded7e666ab1f3 in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=324731e0869 ]

SOLR-16392: Tweak v2 ADDREPLICA to be more REST-ful

Following these changes, the v2 API now appears as:

  `POST /api/collections/cName/shards/sName/replicas {...}`

Although not shown above, the request body has no 'add-replica' command
specifier.  These changes bring v2 ADDREPLICA more into line with the
REST-ful design we are aiming for going forward.

This commit also converts the API to the new JAX-RS framework.


Backported the last API this morning.  Thanks for the reviews, all!

Closing after the 9.3.0 release

