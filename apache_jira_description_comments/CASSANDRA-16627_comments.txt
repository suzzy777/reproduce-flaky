Didn't manage to repro either introducing sleeps or on a slow env. The test plays with a single parent folder so the timestamps should match. I can only think sthg is modifying the folder in the background but there are no background tasks either. I don't see any applicable JDK bugs to this scenario.

I have no way of repro'ing and following the code doesn't reveal to me any reasonable paths. The parent folder is updated after the idx folder creation somehow and I don't see any obvious background tasks...

I want to give it another go with some {{Rule}} to repeat the whole class programmatically. It didn't work at shell level but maybe it will doing so...

I didn't manage to repro. But the only reasonable path I can think of is there has to be some cross test talk at the file system level. I have pushed a version which is not final but:
- Has further isolation across test methods
- Provides a runner to run the test class N times

I would propose we review the improved isolated test. If we like it then remove the repeatability and commit along the repeatable runner which may come in handy some other time.


{noformat}
Testsuite: org.apache.cassandra.db.DirectoriesTest Tests run: 15000, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.579 sec
{noformat}


If sbdy has better ideas I am all ears :-)

Annotated the test as flaky.

After thinking about it, I believe that we should simply remove the timestamp comparison. I do not believe that this check bring anything. I also do not understand the {{parentSnapshotDirectory.mkdirs();}} in line 211. The code should create the directory not the test.

I agree with your assessment. But what irks me is _why_ the parent folder had a modification time later than the child folder? :confused: But I don't think investigating this further makes sense. 2 options:
A. Current PR but remove repeatability
B. Current PR but remove the extra snapshot comparison, folder creation and flaky annotation.

I don't have a strong preference as long as we leave the extra test isolation and the repeatable runner which imo bring value.

An addition of a directory/file to the parent folder will change its timestamp but not the one of the child folder for example.

I am not convinced that the reapatable runner is a good thing. It might end up hiding another flakiness which is a real problem. Removing the assertion check will remove the flakiness for good without compromissing the test quality.

I am referring to leaving the repeatable runner class code, just as a generic utility class there for future convenience, not to leave the running of the test with the repeatable runner. If we go for the removal of extra checks then check the PR again with the latest changes.

In case it's of any help, it seems that the CircleCi-based test multiplexer proposed in CASSANDRA-16625 has managed to reproduce the failure 3 times in [this run|https://app.circleci.com/pipelines/github/adelapena/cassandra/375/workflows/1d48154f-b6eb-4d0b-bb88-fe40a8d40f27/jobs/3271] with 10000 iterations of the full suite.

That is good info [~adelapena]. Maybe circle env is much more constrained and we can repro there easily. I am trying to run 10K more runs with your circle config but on my PR to see if it doesn't repro anymore.

EDIT: it [worked|https://app.circleci.com/pipelines/github/bereng/cassandra/273/workflows/dba955eb-1cda-4dc5-a660-cedb5c0a2c19/jobs/2636] No more repro :-)

[~blerer] as per details discussed in Slack this is in final shape and CI attached to the PRs.

+1. Thanks for the patch :-)

