A couple of test cases in test_insert_behaviour.py are flaky
When running in parallel, the test could fail.
For example:
{code}
    self.execute_query_expect_success(self.client, "DROP TABLE IF EXISTS"
                                      " functional.insert_acl_permissions")
    self.execute_query_expect_success(self.client, "CREATE TABLE "
                                      "functional.insert_acl_permissions (col int) ")

    # Check that a simple insert works
    self.execute_query_expect_success(self.client, INSERT_QUERY)
{code}

{code}
query_test/test_insert_behaviour.py:238: in test_insert_acl_permissions
    self.execute_query_expect_success(self.client, INSERT_QUERY)
common/impala_test_suite.py:304: in wrapper
    return function(*args, **kwargs)
common/impala_test_suite.py:311: in execute_query_expect_success
    result = cls.__execute_query(impalad_client, query, query_options)
common/impala_test_suite.py:396: in __execute_query
    return impalad_client.execute(query, user=user)
common/impala_connection.py:158: in execute
    return self.__beeswax_client.execute(sql_stmt, user=user)
beeswax/impala_beeswax.py:161: in execute
    handle = self.__execute_query(query_string.strip(), user=user)
beeswax/impala_beeswax.py:325: in __execute_query
    handle = self.execute_query_async(query_string, user=user)
beeswax/impala_beeswax.py:321: in execute_query_async
    return self.__do_rpc(lambda: self.imp_service.query(query,))
beeswax/impala_beeswax.py:446: in __do_rpc
    raise ImpalaBeeswaxException(self.__build_error_message(b), b)
E   ImpalaBeeswaxException: ImpalaBeeswaxException:
E    INNER EXCEPTION: <class 'beeswaxd.ttypes.BeeswaxException'>
E    MESSAGE: AnalysisException: Table does not exist: functional.insert_acl_permissions
{code}

same in test_load_permissions() and a few more test cases.