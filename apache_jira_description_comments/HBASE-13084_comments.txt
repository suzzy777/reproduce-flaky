I'm not familiar with jruby. And I tried to use ExpAsStringVisibilityLabelServiceImpl instead of DefaultVisibilityLabelServiceImpl since it does not need to do the actual 'addLabels' operation. But I failed because there is a test which asserts we add a label to the 'hbase:label' table...

So any other suggestions here? Catch the exception and sleep then retry? I have not seen this pattern in existing shell unit tests so I do not think it is the right way...

[~anoop.hbase] or [~ram_krish], do you fellas have any input on this one? Thanks.

[~Apache9]
Thanks for the analysis.  I think the reason here may be because there is no enough time between add_labels and set_auths call.
Introducing a small sleep may be helpful.
Went through the logs.
I agree this asynchronous behavior is causing flakiness in the test cases - but generally this might not be the case, though it is better to be solved.

But this zk watcher updated issue did not happen because of this
{code}
2015-02-20 01:44:19,196 ERROR [main-EventThread] zookeeper.ZooKeeperWatcher(521): hconnection-0x2d198aba0x0, quorum=zk2:2182,zk1:2182,zk3:2182, baseZNode=/hbase-prod Received unexpected KeeperException, re-throwing exception
org.apache.zookeeper.KeeperException$OperationTimeoutException: KeeperErrorCode = OperationTimeout
	at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.checkZk(RecoverableZooKeeper.java:145)
	at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:222)
	at org.apache.hadoop.hbase.zookeeper.ZKUtil.checkExists(ZKUtil.java:479)
	at org.apache.hadoop.hbase.zookeeper.ZKClusterId.readClusterIdZNode(ZKClusterId.java:65)
	at org.apache.hadoop.hbase.client.ZooKeeperRegistry.getClusterId(ZooKeeperRegistry.java:102)
	at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.retrieveClusterId(ConnectionManager.java:880)
	at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.<init>(ConnectionManager.java:640)
	at sun.reflect.GeneratedConstructorAccessor28.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
{code}
Not sure if this was an expected error in the TestShell case. 

We could disable the test too [~ram_krish]? We are losing build stability. Need it back.

I hope that's a pre-commit build run on trunk?  I will check and get back to it. If not will provide patch to disable it.

{noformat}
I hope that's a pre-commit build run on trunk?
{noformat}
Yes, on trunk.

I tried this patch and ran the TestShell with and without patch. Every time with patch it seemed to pass.  Can you give a try [~Apache9]?

I think the issue is that it fails on hadoopqa.  Let me submit a few times and see if we see TestShell fails.  'sleep 10' is ten seconds?  That is kinda ugly but maybe it fixes the issue for the moment... lets try it [~ram_krish]  -- thanks.

bq. 'sleep 10' is ten seconds?
I tried in another shell and that did not sleep for 10 secs.  Not sure on that units for that value.  Am checking on that. If it is 10secs definitely we could reduce that.

Ya it is 10 secs.  I will test with 1sec and if it works fine we could commit with 1 sec.

Patch with 1 sec. Seems to pass in my linux box.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700355/HBASE-13084_1.patch
  against master branch at commit 4a74f5e829070db47aae9c46ab88eb96a9cb046e.
  ATTACHMENT ID: 12700355

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified tests.
    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/12947//console

This message is automatically generated.

Add a waitLabelAvailable method.
A little tricky, hope it could work.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700470/HBASE-13084_2.patch
  against master branch at commit 977d65a81cc86d3d970878f74e11a7e1869de7f3.
  ATTACHMENT ID: 12700470

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.
    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/12949//console

This message is automatically generated.

This is looking good. Getting another run in.

A sleep would suffice or a plain wait.  But this looks better. +1.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700525/HBASE-13084_2.patch
  against master branch at commit af848f8a71ae298824b4f6c97fa87d512998d311.
  ATTACHMENT ID: 12700525

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.
    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.coprocessor.TestMasterObserver.testRegionTransitionOperations(TestMasterObserver.java:1604)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/12951//console

This message is automatically generated.

Retry

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700585/HBASE-13084_2.patch
  against master branch at commit c3a9c2a87fcf660348b80ac66c9c0c6341055ed6.
  ATTACHMENT ID: 12700585

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.
    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/12954//console

This message is automatically generated.

Trunk was good for a few builds and then went south again. Committing this to see if it helps.

Thanks [~ram_krish] and [~Apache9]

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700613/HBASE-13084_2.patch
  against master branch at commit c3a9c2a87fcf660348b80ac66c9c0c6341055ed6.
  ATTACHMENT ID: 12700613

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.
    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testVisibilityLabelsOnKillingOfRSContainingLabelsTable(TestVisibilityLabels.java:372)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/12956//console

This message is automatically generated.

FAILURE: Integrated in HBase-TRUNK #6169 (See [https://builds.apache.org/job/HBase-TRUNK/6169/])
HBASE-13084 Add labels to VisibilityLabelsCache asynchronously causes TestShell flakey (stack: rev d34620b8b661b17d55dd75d24e56c5a7ee661b4e)
* hbase-shell/src/test/ruby/hbase/visibility_labels_admin_test.rb
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java


So there must be other errors, we wait 10 seconds and the label is still not ready.

FAILURE: Integrated in HBase-1.1 #212 (See [https://builds.apache.org/job/HBase-1.1/212/])
HBASE-13084 Add labels to VisibilityLabelsCache asynchronously causes TestShell flakey (stack: rev a2123144ff51cbb3e6656065b72917d8bcc69364)
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* hbase-shell/src/test/ruby/hbase/visibility_labels_admin_test.rb


[~ram_krish] You have a patch to disable this test then given [~Apache9] finding above? Thanks boss.

We disable logging in this test so it is hard to debug...
{code:title=tests_runner.rb}
  # Set logging level to avoid verboseness
  org.apache.log4j.Logger.getRootLogger.setLevel(org.apache.log4j.Level::OFF)
  org.apache.log4j.Logger.getLogger("org.apache.zookeeper").setLevel(org.apache.log4j.Level::OFF)
  org.apache.log4j.Logger.getLogger("org.apache.hadoop.hdfs").setLevel(org.apache.log4j.Level::OFF)
  org.apache.log4j.Logger.getLogger("org.apache.hadoop.hbase").setLevel(org.apache.log4j.Level::OFF)
  org.apache.log4j.Logger.getLogger("org.apache.hadoop.ipc.HBaseServer").setLevel(org.apache.log4j.Level::OFF)
{code}

Maybe we could turn it on?

Am just trying to see the reason why the labels where not available.  Let me see once before we disable the test. 

Interesting thing to note is that
When the test case is executed directly from the parent directory ie. from the hbase folder
{code}
 mvn clean test -Dtest=TestShell
{code}
{code}
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.client.TestShell
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 88.598 sec - in org.apache.hadoop.hbase.client.TestShell
Results :
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
{code}
But when the same command is issued from hbase-shell
then we get the below failure 
{code}
  1) Error:
test_The_get/put_methods_should_work_for_data_written_with_Visibility(Hbase::VisibilityLabelsAdminMethodsTest):
NativeException: java.lang.AssertionError: Waiting timed out after [10,000] msec TEST_VISIBILITY is not available yet
    org/junit/Assert.java:88:in `fail'
    org/apache/hadoop/hbase/Waiter.java:209:in `waitFor'
    org/apache/hadoop/hbase/Waiter.java:143:in `waitFor'
    org/apache/hadoop/hbase/HBaseTestingUtility.java:3746:in `waitFor'
    org/apache/hadoop/hbase/HBaseTestingUtility.java:3862:in `waitLabelAvailable'
    ./src/test/ruby/hbase/visibility_labels_admin_test.rb:78:in `test_The_get/put_methods_should_work_for_data_written_with_Visibility'
    org/jruby/RubyProc.java:270:in `call'
    org/jruby/RubyKernel.java:2105:in `send'
    org/jruby/RubyArray.java:1620:in `each'
    org/jruby/RubyArray.java:1620:in `each'

  2) Error:
test_The_set/clear_methods_should_work_with_authorizations(Hbase::VisibilityLabelsAdminMethodsTest):
NativeException: java.lang.AssertionError: Waiting timed out after [10,000] msec TEST_AUTHS is not available yet
    org/junit/Assert.java:88:in `fail'
    org/apache/hadoop/hbase/Waiter.java:209:in `waitFor'
    org/apache/hadoop/hbase/Waiter.java:143:in `waitFor'
    org/apache/hadoop/hbase/HBaseTestingUtility.java:3746:in `waitFor'
    org/apache/hadoop/hbase/HBaseTestingUtility.java:3862:in `waitLabelAvailable'
    ./src/test/ruby/hbase/visibility_labels_admin_test.rb:57:in `test_The_set/clear_methods_should_work_with_authorizations'
    org/jruby/RubyProc.java:270:in `call'
    org/jruby/RubyKernel.java:2105:in `send'
    org/jruby/RubyArray.java:1620:in `each'
    org/jruby/RubyArray.java:1620:in `each'
{code}
As that has come in the build.  So I think it has got some thing to do with the API that is getting called from the shell - may be the singleton VisibililtyLabelsCAche is not the same instance that is expected?

Can we just try to add some sleep for 3 secs and try if the builds turn green again?

Of course. Try anything to get tests passing again [~ram_krish] Can always back it out.

Oh I review the code again, the waitLabelAvailable does not work. We use different instances for different servers.

{code:title=VisibilityLabelsCache.java}
  public synchronized static VisibilityLabelsCache createAndGet(ZooKeeperWatcher watcher,
      Configuration conf) throws IOException {
    // VisibilityLabelService#init() for different regions (in same RS) passes same instance of
    // watcher as all get the instance from RS.
    // watcher != instance.zkVisibilityWatcher.getWatcher() - This check is needed only in UTs with
    // RS restart. It will be same JVM in which RS restarts and instance will be not null. But the
    // watcher associated with existing instance will be stale as the restarted RS will have new
    // watcher with it.
    if (instance == null || watcher != instance.zkVisibilityWatcher.getWatcher()) {
      instance = new VisibilityLabelsCache(watcher, conf);
    }
    return instance;
  }
{code}

So maybe just add a sleep, I can not find a easy way to check whether the label is ready. :(

And I got this error
{noformat}
  2) Error:
test_The_set/clear_methods_should_work_with_authorizations(Hbase::VisibilityLabelsAdminMethodsTest):
ArgumentError: No authentication set for the given user zhangduo
{noformat}

Test code
{code:title=visibility_labels_admin_test.rb}
      label = 'TEST_AUTHS'
      user = org.apache.hadoop.hbase.security.User.getCurrent().getName();
      visibility_admin.add_labels(label)
      $TEST_CLUSTER.waitLabelAvailable(10000, label)
      count = visibility_admin.get_auths(user).length // <---- failed at this line

      # verifying the set functionality
      visibility_admin.set_auths(user, label)
{code}
So do we call set auths at other places? Because we call set_auths after this line in the tests...

{code}
      visibility_admin.add_labels(label)
      count = visibility_admin.get_auths(user).length
{code}

Here the count would be 0 only.  So we won't be needing the wait there. But we would be needing the wait/sleep here
{code}
      visibility_admin.set_auths(user, label)
      assert_equal(count + 1, visibility_admin.get_auths(user).length)
{code}
But this set_auths would ideally not fail because add_labels is done and there is some time before we check set_auths.

But seems visibility_admin.get_auths will raise an error if count is 0? This makes me confused...

{code:title=visibility_labels.rb}
    def get_auths(user)
      lables_table_available?
      begin
        response = VisibilityClient.getAuths(@config, user)
        if response.nil?
          raise(ArgumentError, "DISABLED: Visibility labels feature is not available")
        end
        if response.getAuthList.empty?
          raise(ArgumentError, "No authentication set for the given user " + user)
        end
        return response.getAuthList
      end
    end
{code}

FYI. While working on HBASE-12644, I recall seeing ZK events (data changed events) lost (not captured) by the ZK watcher due to race condition.
See this comment, 
https://issues.apache.org/jira/browse/HBASE-12644?focusedCommentId=14242242&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14242242
It may not be the same issue.
In the test Surefire reports, there should be detailed ZK events debug logging. That will help to make sure at least no visibility ZK events are lost due to race condition.
One idea is put the wait in Before the addLabels call to make sure all prior ZK events have been processed and watchs are reset.

On the other hand, in waitLabelAvailable() in the patch, try to use the listLabels() from the client to see if the labels are really in there.
 
Just threw in some ideas.

listLabels fetches label from labelRegion, and setAuths check label from labelsCache, so listLabels is success does not mean setAuths can also be success...

Let us just add a sleep as of now and get the test green.

With sleep also am not able to get a consistent green run for that test.

Just disabled the test by commenting the script related to the failing test cases.  Need to look into it again later. May be in a couple of days will get back to it.

[~ram_krish] I think the problem is what you have posted above. The actual zk update event is not fired since the zookeeper EventThread is stuck in replication related operations.
{noformat}
2015-02-25 17:51:40,714 WARN  [main-EventThread] zookeeper.RecoverableZooKeeper(144): Unable to create ZooKeeper Connection
java.net.UnknownHostException: zk2
        at java.net.InetAddress.getAllByName0(InetAddress.java:1250)
        at java.net.InetAddress.getAllByName(InetAddress.java:1162)
        at java.net.InetAddress.getAllByName(InetAddress.java:1098)
        at org.apache.zookeeper.client.StaticHostProvider.<init>(StaticHostProvider.java:61)
        at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:445)
        at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:380)
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.checkZk(RecoverableZooKeeper.java:142)
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:222)
        at org.apache.hadoop.hbase.zookeeper.ZKUtil.checkExists(ZKUtil.java:479)
        at org.apache.hadoop.hbase.zookeeper.ZKClusterId.readClusterIdZNode(ZKClusterId.java:65)
        at org.apache.hadoop.hbase.client.ZooKeeperRegistry.getClusterId(ZooKeeperRegistry.java:102)
        at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.retrieveClusterId(ConnectionManager.java:884)
        at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.<init>(ConnectionManager.java:644)
        at sun.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
        at org.apache.hadoop.hbase.client.ConnectionFactory.createConnection(ConnectionFactory.java:238)
        at org.apache.hadoop.hbase.client.ConnectionManager.createConnection(ConnectionManager.java:424)
        at org.apache.hadoop.hbase.client.ConnectionManager.createConnectionInternal(ConnectionManager.java:327)
        at org.apache.hadoop.hbase.client.HConnectionManager.createConnection(HConnectionManager.java:147)
        at org.apache.hadoop.hbase.replication.regionserver.HBaseInterClusterReplicationEndpoint.init(HBaseInterClusterReplicationEndpoint.java:85)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.getReplicationSource(ReplicationSourceManager.java:422)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.addSource(ReplicationSourceManager.java:248)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.peerListChanged(ReplicationSourceManager.java:515)
        at org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl$PeersWatcher.nodeChildrenChanged(ReplicationTrackerZKImpl.java:187)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.process(ZooKeeperWatcher.java:419)
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
{noformat}

So if it is failed fast enough(we can see this)
{noformat}
2015-02-25 17:52:05,580 ERROR [main-EventThread] zookeeper.ZooKeeperWatcher(521): hconnection-0x78acc5540x0, quorum=zk2:2182,zk1:2182,zk3:2182, baseZNode=/hbase-prod Received unexpected KeeperException, re-throwing exception
org.apache.zookeeper.KeeperException$OperationTimeoutException: KeeperErrorCode = OperationTimeout
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.checkZk(RecoverableZooKeeper.java:145)
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:222)
        at org.apache.hadoop.hbase.zookeeper.ZKUtil.checkExists(ZKUtil.java:479)
        at org.apache.hadoop.hbase.zookeeper.ZKClusterId.readClusterIdZNode(ZKClusterId.java:65)
        at org.apache.hadoop.hbase.client.ZooKeeperRegistry.getClusterId(ZooKeeperRegistry.java:102)
        at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.retrieveClusterId(ConnectionManager.java:884)
        at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.<init>(ConnectionManager.java:644)
        at sun.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
        at org.apache.hadoop.hbase.client.ConnectionFactory.createConnection(ConnectionFactory.java:238)
        at org.apache.hadoop.hbase.client.ConnectionManager.createConnection(ConnectionManager.java:424)
        at org.apache.hadoop.hbase.client.ConnectionManager.createConnectionInternal(ConnectionManager.java:327)
        at org.apache.hadoop.hbase.client.HConnectionManager.createConnection(HConnectionManager.java:147)
        at org.apache.hadoop.hbase.replication.regionserver.HBaseInterClusterReplicationEndpoint.init(HBaseInterClusterReplicationEndpoint.java:85)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.getReplicationSource(ReplicationSourceManager.java:422)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.addSource(ReplicationSourceManager.java:248)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.peerListChanged(ReplicationSourceManager.java:515)
        at org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl$PeersWatcher.nodeChildrenChanged(ReplicationTrackerZKImpl.java:187)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.process(ZooKeeperWatcher.java:419)
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
{noformat}
Then the EventThread is free to fire other events. If not, we will get a timeout when waiting label available.

So set a small retry time and count could help I think. And more, I do not suggest to do 'sleep and retry' in the zk EventThread...

What I found is that even a sleep of 10 secs was not enough some times.  The reason should  be because of the ZK error that we got in the Replication related test cases.  And that is why I went on with commenting this testcase out and look out what is happening with the replication test cases in TestShell.  
May be a better ideal would be to create TestReplicatonShell?  And move those test cases to a seperated one so that other testcases are running fine?

I tried to set a small retry interval but met other problems...
{noformat}
14598 2015-02-25 20:54:40,797 WARN  [main-EventThread] zookeeper.ZKUtil(482): hconnection-0x6b387ba30x0, quorum=server1.cie.com:2181, baseZNode=/hbase Unable to set watcher on znode (/hbase/hbaseid)
14599 org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hbase/hbaseid
14600         at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
14601         at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
14602         at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
14603         at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:222)
14604         at org.apache.hadoop.hbase.zookeeper.ZKUtil.checkExists(ZKUtil.java:479)
14605         at org.apache.hadoop.hbase.zookeeper.ZKClusterId.readClusterIdZNode(ZKClusterId.java:65)
14606         at org.apache.hadoop.hbase.client.ZooKeeperRegistry.getClusterId(ZooKeeperRegistry.java:102)
14607         at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.retrieveClusterId(ConnectionManager.java:884)
14608         at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.<init>(ConnectionManager.java:644)
14609         at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
14610         at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
14611         at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
14612         at org.apache.hadoop.hbase.client.ConnectionFactory.createConnection(ConnectionFactory.java:238)
14613         at org.apache.hadoop.hbase.client.ConnectionManager.createConnection(ConnectionManager.java:424)
14614         at org.apache.hadoop.hbase.client.ConnectionManager.createConnectionInternal(ConnectionManager.java:327)
14615         at org.apache.hadoop.hbase.client.HConnectionManager.createConnection(HConnectionManager.java:147)
14616         at org.apache.hadoop.hbase.replication.regionserver.HBaseInterClusterReplicationEndpoint.init(HBaseInterClusterReplicationEndpoint.java:85)
14617         at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.getReplicationSource(ReplicationSourceManager.java:422)
14618         at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.addSource(ReplicationSourceManager.java:248)
14619         at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.peerListChanged(ReplicationSourceManager.java:515)
14620         at org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl$PeersWatcher.nodeChildrenChanged(ReplicationTrackerZKImpl.java:187)
14621         at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.process(ZooKeeperWatcher.java:426)
14622         at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
14623         at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
{noformat}

Now I agree to seperate replication shell tests to another unit test. Let's close this issue and open a new issue to do it?
Thanks. [~ram_krish]

move replication_admin_test.rb to TestReplicationShell.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700990/HBASE-13084-addendum.patch
  against master branch at commit 1c957b65b16a8706caee140c18b84ea48a0dc0aa.
  ATTACHMENT ID: 12700990

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 19 new or modified tests.
    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestMetaTableAccessor

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/12974//console

This message is automatically generated.

[~ram_krish] Have you tried the new patch? Does it work for you? Thanks~

I went thro the patch. The patch looks good to me. That inclusion and exclusion logic is nice.  +1 on commit.  Hope it clears the build issues.

So commit it as addendum is OK? Or I should create a new issue? Or revert the previous commit and merge them into one patch and then commit the merged patch?

[~Apache9] I applied your patch on top of the added timeout. Lets see how it does. We can back out the ten second wait later when all stable again.  I applied your patch to branch-1+.  Lets see how builds do from here on before closing.  You are pretty amazing the way you are digging in here on these ugly issues. Thanks for doing it.

FAILURE: Integrated in HBase-1.1 #218 (See [https://builds.apache.org/job/HBase-1.1/218/])
HBASE-13084 addendum move replication_admin_test.rb to individual test (stack: rev 6331bc2afb2d0d62a1b749ee8e1772305b4665bc)
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestReplicationShell.java
* hbase-shell/src/test/ruby/tests_runner.rb
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestShell.java


FAILURE: Integrated in HBase-TRUNK #6176 (See [https://builds.apache.org/job/HBase-TRUNK/6176/])
HBASE-13084 addendum move replication_admin_test.rb to individual test (stack: rev f670649f0e2cfba8a2112eb5c1d79b8b7f52c3b2)
* hbase-shell/src/test/ruby/tests_runner.rb
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestReplicationShell.java
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestShell.java


https://builds.apache.org/job/HBase-TRUNK/6180/testReport/junit/org.apache.hadoop.hbase.client/TestReplicationShell/org_apache_hadoop_hbase_client_TestReplicationShell/

{noformat}
2015-02-28 02:28:36,085 WARN  [main] mortbay.log (Slf4jLog.java:warn(76)) - failed SelectChannelConnector@0.0.0.0:16010: java.net.BindException: Address already in use
2015-02-28 02:28:36,085 WARN  [main] mortbay.log (Slf4jLog.java:warn(76)) - failed Server@5de44bb4: java.net.BindException: Address already in use
2015-02-28 02:28:36,086 ERROR [main] hbase.MiniHBaseCluster (MiniHBaseCluster.java:init(229)) - Error starting cluster
java.lang.RuntimeException: Failed construction of Master: class org.apache.hadoop.hbase.master.HMasterAddress already in use
	at org.apache.hadoop.hbase.util.JVMClusterUtil.createMasterThread(JVMClusterUtil.java:143)
	at org.apache.hadoop.hbase.LocalHBaseCluster.addMaster(LocalHBaseCluster.java:216)
	at org.apache.hadoop.hbase.LocalHBaseCluster.<init>(LocalHBaseCluster.java:154)
	at org.apache.hadoop.hbase.MiniHBaseCluster.init(MiniHBaseCluster.java:213)
	at org.apache.hadoop.hbase.MiniHBaseCluster.<init>(MiniHBaseCluster.java:93)
	at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniHBaseCluster(HBaseTestingUtility.java:996)
	at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:956)
	at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:830)
	at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:824)
	at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:768)
	at org.apache.hadoop.hbase.client.AbstractTestShell.setUpBeforeClass(AbstractTestShell.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:77)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:53)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:144)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.io.IOException: Failed to start redirecting jetty server
	at org.apache.hadoop.hbase.master.HMaster.putUpJettyServer(HMaster.java:428)
	at org.apache.hadoop.hbase.master.HMaster.<init>(HMaster.java:391)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.apache.hadoop.hbase.util.JVMClusterUtil.createMasterThread(JVMClusterUtil.java:139)
	... 37 more
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.mortbay.jetty.nio.SelectChannelConnector.open(SelectChannelConnector.java:216)
	at org.mortbay.jetty.nio.SelectChannelConnector.doStart(SelectChannelConnector.java:315)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.Server.doStart(Server.java:235)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.apache.hadoop.hbase.master.HMaster.putUpJettyServer(HMaster.java:426)
	... 43 more
{noformat}

16010 seems to be the default info port, but I think we set all ports to 0 in unit tests? Let me check again.

Disable info server when running shell tests.

InfoServer is disabled in src/test/resources/hbase-site.xml when running hbase-server unit tests, but hbase-shell does not have a src/test/resources, so disable it manually.

Pushed addendum to branch-1+.  Thanks [~Apache9]


{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12701536/HBASE-13084-addendum2.patch
  against master branch at commit bec2b0d320554b0af8c891fddc147a953f35765f.
  ATTACHMENT ID: 12701536

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified tests.
    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13012//console

This message is automatically generated.

SUCCESS: Integrated in HBase-1.1 #225 (See [https://builds.apache.org/job/HBase-1.1/225/])
HBASE-13084 addendum disable info server in shell test (stack: rev 3862b30a479fe6d30301dc27c9d3fa973c3f90c1)
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java


[~Apache9] you are making progress https://builds.apache.org/job/HBase-1.1/225/

FAILURE: Integrated in HBase-TRUNK #6183 (See [https://builds.apache.org/job/HBase-TRUNK/6183/])
HBASE-13084 addendum disable info server in shell test (stack: rev fdb48a7bbeecf891a0fc74171961901fbfdb5664)
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java


{quote}
you are making progress https://builds.apache.org/job/HBase-1.1/225/
{quote}
Yeah, but 226 is failed again...

[~Apache9] 227 is blue... you are making progress (smile).

[~stack] Seems branch-1 is much better now. But master is still unstable most of time:(

Can we resolve this if this particular test passes after separating the Shell related test cases?

Seems TRUNK is back to normal, so resolve this? [~stack]

Resolving. Nice digging [~Apache9] Thanks for help [~ram_krish]

While messing around with HBASE-13035 I ended up porting this back. It's at worst a harmless change and seems just as good an idea in 0.98 as other branches. I've run TestShell with this applied in a loop 10 times and it always passed. 

SUCCESS: Integrated in HBase-0.98 #988 (See [https://builds.apache.org/job/HBase-0.98/988/])
HBASE-13084 Add labels to VisibilityLabelsCache asynchronously causes TestShell flakey (apurtell: rev 2810ba63a9a2e7d285989da9db57c765401334bf)
* hbase-shell/src/test/ruby/hbase/visibility_labels_admin_test.rb
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java


SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #939 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/939/])
HBASE-13084 Add labels to VisibilityLabelsCache asynchronously causes TestShell flakey (apurtell: rev 2810ba63a9a2e7d285989da9db57c765401334bf)
* hbase-shell/src/test/ruby/hbase/visibility_labels_admin_test.rb
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java


FAILURE: Integrated in HBase-1.0 #916 (See [https://builds.apache.org/job/HBase-1.0/916/])
HBASE-13084 Add labels to VisibilityLabelsCache asynchronously causes TestShell flakey (apurtell: rev e36876b75ef72e4149705c1819e5a945f90946ec)
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* hbase-shell/src/test/ruby/hbase/visibility_labels_admin_test.rb


Closing issues released in 1.1.0.

SUCCESS: Integrated in HBase-1.0 #991 (See [https://builds.apache.org/job/HBase-1.0/991/])
HBASE-13084 addendum move replication_admin_test.rb to individual test (enis: rev 347eb6bdbf435aedb866aafdb51127e3504ee223)
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestReplicationShell.java
* hbase-shell/src/test/ruby/tests_runner.rb
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestShell.java
HBASE-13084 addendum disable info server in shell test (enis: rev fac3908f83b9eec772af6b6218ae5065b9669a4e)
* hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java


