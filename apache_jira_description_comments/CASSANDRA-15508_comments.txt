This kinda makes sense since the test is parameterized. [~marcuse] do you have a link to a build which is failing because of this? Last I saw circle uses test-jvm-dtest and I use testclasslist when running it

{code}
$ ant testclasslist -Dtest.classlistfile=<(echo org/apache/cassandra/distributed/test/FailingRepairTest.java) -Dtest.classlistprefix=distributed
 ...
 testclasslist:
 [testparallelhelper] Warning: Nashorn engine is planned to be removed from a future JDK release
 [echo] Number of test runners: 1
 [junit-timeout] OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
 [junit-timeout] Testsuite: org.apache.cassandra.distributed.test.FailingRepairTest
 [junit-timeout] Testsuite: org.apache.cassandra.distributed.test.FailingRepairTest Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.205 sec
 [junit-timeout]
 [junitreport] Processing /Users/dcapwell/src/github/apache/cassandra/build/test/TESTS-TestSuites.xml to /var/folders/cm/08cddl2s25j7fq3jdb76gh4r0000gn/T/null108561510
 [junitreport] Loading stylesheet jar:[file:/usr/local/Cellar/ant/1.10.7/libexec/lib/ant-junit.jar!/org/apache/tools/ant/taskdefs/optional/junit/xsl/junit-frames.xsl|file:///usr/local/Cellar/ant/1.10.7/libexec/lib/ant-junit.jar!/org/apache/tools/ant/taskdefs/optional/junit/xsl/junit-frames.xsl]
 [junitreport] Transform time: 389ms
 [junitreport] Deleting: /var/folders/cm/08cddl2s25j7fq3jdb76gh4r0000gn/T/null108561510

BUILD SUCCESSFUL
 Total time: 22 seconds
{code}

https://circleci.com/gh/krummas/cassandra/2684

Thanks!  Replicated locally

{code}
$ ant test-jvm-dtest-forking
...
     [exec] testsome:
     [exec] [junit-timeout] OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
     [exec] [junit-timeout] Testsuite: org.apache.cassandra.distributed.test.FailingRepairTest
     [exec] [junit-timeout] Testsuite: org.apache.cassandra.distributed.test.FailingRepairTest Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.086 sec
     [exec] [junit-timeout]
     [exec] [junit-timeout] Testcase: initializationError(org.junit.runner.manipulation.Filter):        Caused an ERROR
     [exec] [junit-timeout] No tests found matching Method testFailingMessage(org.apache.cassandra.distributed.test.FailingRepairTest) from org.junit.internal.requests.ClassRequest@481a996b
     [exec] [junit-timeout] java.lang.Exception: No tests found matching Method testFailingMessage(org.apache.cassandra.distributed.test.FailingRepairTest) from org.junit.internal.requests.ClassRequest@481a996b
     [exec] [junit-timeout]     at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
     [exec] [junit-timeout]     at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
     [exec] [junit-timeout]     at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
     [exec] [junit-timeout]     at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
     [exec] [junit-timeout]
     [exec] [junit-timeout]
     [exec] [junit-timeout] Test org.apache.cassandra.distributed.test.FailingRepairTest FAILED
     [exec] [junitreport] Processing /Users/dcapwell/src/github/apache/cassandra/build/test/TESTS-TestSuites.xml to /var/folders/cm/08cddl2s25j7fq3jdb76gh4r0000gn/T/null1366232332
     [exec] [junitreport] Loading stylesheet jar:file:/usr/local/Cellar/ant/1.10.7/libexec/lib/ant-junit.jar!/org/apache/tools/ant/taskdefs/optional/junit/xsl/junit-frames.xsl
     [exec]
     [exec] BUILD FAILED
     [exec] /Users/davidcapwell/src/github/apache/cassandra/build.xml:1517: The following error occurred while executing this line:
     [exec] /Users/davidcapwell/src/github/apache/cassandra/build.xml:1803: Some test(s) failed.
     [exec]
     [exec] Total time: 5 seconds
     [exec] [junitreport] Transform time: 943ms
     [exec] [junitreport] Deleting: /var/folders/cm/08cddl2s25j7fq3jdb76gh4r0000gn/T/null1366232332
     [exec] Picked up _JAVA_OPTIONS: -Djava.net.preferIPv4Stack=true
     [exec] Buildfile: /Users/davidcapwell/src/github/apache/cassandra/build.xml
     [exec]    [script] Warning: Nashorn engine is planned to be removed from a future JDK release
{code}

This looks caused by the fact test-jvm-dtest-forking is implemented on top of testsome.  The tests run faster with testclasslist and would let circle run multiple instance in parallel; is there any issue with changing circle to use that and let testsome keep breaking?

I'll try changing j?_jvm_dtests to do testclasslist

[~ifesdjeen] [~marcuse] could you two review?  This modifies CASSANDRA-15506 so we always run upgrade and upgrade and jvm dtest are not separated (same build).

the reason I separated them and had the dtest jar build as "type: approval" was to avoid rebuilding cassandra 5 extra times on every commit

what has changed since CASSANDRA-15014 to make {{ant testclasslist}} work now?

That’s fair; my Main thoughts were that I hope it’s short term (there is a Jira to publish the jars), and it simplifies the build.  If it’s desired I can keep it the same way (two builds)

No idea what has changed, but testclasslist is how I run jvm dtests so know it works for 3.0 and trunk.

spoke with [~marcuse] and one issue with this patch is that his patch he is working on (upgrade tests) fails.  Ill try to rework this so it works with his patch; ill also keep upgrade as separate and move to its own runner so it can use different resources than normal jvm dtest.

Ok, after diving through ant implementation and looking at which processes get forked; here is a dump of what I see.

 

1) testclasslist creates a new JVM for each class.  

2) unless you override -Dtest.runner the default is 1; testclasslist runs with 1 runner so no concurrent tests (in the same container)

3) current model creates a JVM for each method, but does not support paramaiterized tests (same method has different names)

4) the test Marcus is working on had one test fail to gossip then the second test couldn't start since the port was still open; this looks like a resource leak within a single test class.

 

Given this, I do feel that its fair to say that in-jvm dtest tests are expected to run within a single JVM for all the tests in a single class; this is also how unit tests run.  By also having this requirement, we simplify the build since we don't need the in-jvm tasks, since you can just say -Dtest.classlistprefix=distributed; this means we don't fragment the build.

 

Without looking at the code, this is what I changed circle ci to do

 

{code}

ant testclasslist -Dtest.classlistfile=<( echo "org/apache/cassandra/distributed/test/ReadRepairTest.java" ) -Dtest.classlistprefix=distributed

{code}

 

this means that the split and run commands in circle ci can be shared by unit, distributed, long, and burn.

Pushed the change so that upgrade tests are their own build and still require approval; I think the only real change here is that the approval button is now top level so I can trigger the dtest builds at the same time as building trunk.

FYI [~mck]; trying to change circle ci build for in-jvm dtests.

+1


+1, I'll commit tomorrow

realised we want to commit this to all the branches (2.2, 3.0, 3.11, trunk) - could you provide patches for them as well [~dcapwell]?

Sure, I'll provide a set of patches.  I have a feeling 3.0 will start to fail... lets see!

Ok, working on 2.2 and noticed that generate.sh causes a lot of changes... looking at the history it seems that not everything was controlled by .circleci/config-2_1.yml

ill see about making this clear in the history.

smithed to 2.2 without my change, ran generate.sh and get the following
{code}
$ git diff | wc -l
    1072
{code}

this is 0 on trunk.

2.2
src: https://github.com/apache/cassandra/pull/430 - 3 commits so its clear what changed what.
tests: https://circleci.com/gh/dcapwell/cassandra/tree/cleanHistory-2.2

3.0
src: https://github.com/apache/cassandra/pull/431 - 2 commits, same reason
tests: https://circleci.com/gh/dcapwell/cassandra/tree/cleanHistory-3.0

3.11 is missing things...

{code}
$ git diff trunk config-2_1.yml | wc -l
     396
{code}

Ill just rewrite for this branch since patch doesn't work =(

ok, I have something which compiles for 3.11

3.11
src: https://github.com/dcapwell/cassandra/pull/new/cleanHistory-3.11
tests: https://circleci.com/gh/dcapwell/cassandra/tree/cleanHistory-3.11

hold off, the builds (though green) look off.  ill say when done.

ok, so for some reason circle ci put all my jobs in "not running" state even though the pipeline is running (and nothing else is running); given this can't validate in the UI.

Looking at the YAML, all the branches look ok.  [~marcuse] should be good.

3.0 ran last night and verified it did the right thing for dtests.  trying to trigger a 3.11 to confirm.

looks like the 3.11 in-jvm upgrade dtests fail with: {{java.lang.RuntimeException: No v22 versions found}}

also the 3.0 and 3.11 workflows don't have {{start_jvm_upgrade_dtest}} in the top level like trunk does?

ill look closer

bq. also the 3.0 and 3.11 workflows don't have start_jvm_upgrade_dtest in the top level like trunk does?

3.0: https://circleci.com/workflow-run/1145e096-8b8b-4519-bd47-81655b6cedfe
3.0 w/ my patch: https://circleci.com/workflow-run/0d06171e-3056-4976-b9db-c3e950e686bc
3.11: https://circleci.com/workflow-run/8988cc5c-736d-4d1b-b811-c9df5544cb9c
3.11 w/ my patch: https://circleci.com/workflow-run/2da5d802-8a3c-42eb-9ab4-7e44fcf4a70b

the shape looks the same to me

What I saw when applying the patch was that I had to rewrite this for 2.2, 3.0, and 3.11 since the patch couldn't cleanly apply; this implies to me there are other differences but I have not looked into that.

Trying to look closer at the 3.11 failing test now.

Sorry, I get the comment now.

The patch I wrote for trunk moved the approval command to the top, but that was lost when I rewrote for 3.0 and 3.11; ill add it back.

pushed changes to 3.0 and 3.11 to also move the approval to top level;

3.0: https://circleci.com/workflow-run/79a284c3-3b71-4a8a-9f19-6a3ed6e0bebd
3.11: https://circleci.com/workflow-run/a0b6cb07-eef5-4758-b39f-bc605dfdad8c


Ill update once I start looking at the 3.11 failure

3.11 had a test failure in jvm dtest https://app.circleci.com/jobs/github/dcapwell/cassandra/393/tests
The test didn't fail in 3.11, but had the same error in a different test, and had another error as well. https://app.circleci.com/jobs/github/dcapwell/cassandra/381/tests

This looks flaky so will attempt to rerun to get a green build.

ok think I fixed 3.11.  I forgot to include the copy dtest jars bit into the parallel Junit runner so no jars were found.  Pushed a fix for this, waiting on circle now.

Latest 3.11: https://circleci.com/workflow-run/0440a3e8-bcc8-4a15-b99d-c06fe8aa078b

3.11 is passing now.

[~marcuse] the dag layout match, and tests are all passing.  Can you look again?

CASSANDRA-15463 adds jvm dtests running on java 11, so get a merge conflict with this.  If that goes in first, will need to rebase trunk.

Rebased against master and rewrote the j11 changes to match the new model; here is the java 11 pipeline https://app.circleci.com/github/dcapwell/cassandra/pipelines/af287bdf-41b3-4231-b1bf-095dc91803fa/workflows/bffb62c8-997c-4461-af4c-66b9f725528c

||branch||circle || patch ||
|2.2 | [lowres|https://circleci.com/workflow-run/09f08975-1d84-49bb-88be-52612bdbf71e], [highres|https://circleci.com/workflow-run/d0bd3809-3acf-4b2f-b5df-7c6db8abbd6d] | [patch|https://github.com/krummas/cassandra/commits/david/15508-2.2] |
|3.0 | [lowres|https://circleci.com/workflow-run/1fd6b99d-844c-490b-b19d-1faff3e286d1], [highres|https://circleci.com/workflow-run/e10706d5-2e18-478a-8d0b-296b189e9f17] | [patch|https://github.com/krummas/cassandra/commits/david/15508-3.0] |
|3.11| [lowres|https://circleci.com/workflow-run/1fd6b99d-844c-490b-b19d-1faff3e286d1], [highres|https://circleci.com/workflow-run/0762d0d1-1ced-404f-bb10-a1f2ed181fad] | [patch|https://github.com/krummas/cassandra/commits/david/15508-3.11] |
|trunk | [j8 lowres|https://circleci.com/workflow-run/4031a9f8-cd7f-4e93-8811-4dca3bcf857a], [j11 lowres|https://circleci.com/workflow-run/b0582f3e-f7cf-4aef-8ca9-8f8cff89df9b], [j8 highres|https://circleci.com/workflow-run/8e2ed311-b74a-41d1-8025-36c6efe8d90f], [j11 highres|https://circleci.com/workflow-run/1225ff39-0666-40b9-8a4d-0f77c058d41f] | [patch|https://github.com/krummas/cassandra/commits/david/15508-trunk] |

trunk j8 highres in-jvm upgrade tests seem to fail with {{No timing found for ...}}

Link to the j8 higher jvm upgrade test https://app.circleci.com/jobs/github/krummas/cassandra/2847

{code}
No timing found for "/home/cassandra/cassandra/test/distributed/org/apache/cassandra/io/sstable/format/ForwardingSSTableReader.java"
{code}

This is common given the flow of the finding (list all files, sort by timing, filter; since the filter is after the sort by timing we see this a lot, it shouldn't impact a normal run).

I believe that the failure is this line

{code}
set -eo pipefail && cat /tmp/java_tests_${CIRCLE_NODE_INDEX}.txt | sed "s;^/home/cassandra/cassandra/test/distributed/;;g" | grep "Test\.java$" | grep upgrade > /tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt
{code}

The reason for this is that the next line is an echo which isn't in the logs and the line before it is what logs the no timing message.  This is weird to me since if I apply that line to the output in the logs I get 

{code}
org/apache/cassandra/distributed/upgrade/MixedModeReadRepairTest.java
org/apache/cassandra/distributed/upgrade/UpgradeTest.java
{code}

Ill try to dig into this.

ohhhhhhhh I see the problem!  2 nodes pass, 2 fail.  We currently don't have enough tests to justify 4 nodes so it fails (only 2 tests, so 2/4 == 0 on 2 nodes).

Fixing the higher files now.

Sorry for all the back and forth.  I will update all the branches and have a higher/lower test run linked here next time.

|| Branch || j8 LOWER || j11 LOWER || j8 HIGHER || j11 HIGHER || Status |
| trunk  | [circle|https://circleci.com/workflow-run/7d7effd3-fb31-4492-809c-a728d9fa64b4] | [circle|https://circleci.com/workflow-run/357d79a9-388c-4179-b906-1c814eae5068] | [circle|https://circleci.com/workflow-run/0aac61bf-b796-4f2b-a1df-f816d6d25141] | [circle|https://circleci.com/workflow-run/3f6f8cc8-c76c-4da9-8ca7-0f6a717f57ca] | green (some unit tests failed but look flaky) |
| 3.11  | [circle|https://circleci.com/workflow-run/177bd574-d3d8-4383-a950-2370ae95434e] | NA | [circle|https://circleci.com/workflow-run/58236772-59af-45be-88f9-d7aaa26eca54] | NA | Some tests were flaky on HIGHER, [reran on circle|https://circleci.com/workflow-run/21f47971-de1a-4972-bb80-7b9f26924b72] and green |
| 3.0  | [circle|https://circleci.com/workflow-run/3d5df26f-d764-48e0-9a34-4de858760d01] | NA | [circle|https://circleci.com/workflow-run/75137ab1-7b22-4759-891b-243a7b92beb0] | NA | Green |
| 2.2  | [circle|https://circleci.com/workflow-run/245e115d-703f-44ce-a031-0803c346f50b] | NA | [circle|https://circleci.com/workflow-run/daa0495b-748f-4781-879c-3c9b404fb600] | NA | some unit tests failed but look flaky.  Higher didn't schedule anything so canceled and [submitted a new workflow|https://circleci.com/workflow-run/e486f41d-1119-42c6-b424-41625c0a30d4] unit tests failed as well, but jvm dtest is green|

[~marcuse] sorry again for all the back and forth.

I made sure that each branch had for LOWER small=1 medium=1 and HIGHER small=2 medium=2.  
I made sure to run the builds for both LOWER and HIGHER in each branch (links above).

There are test failures, but they were unit.  If there were test failures for jvm dtest I linked the rerun.
3.11 and before do not run jvm dtests in java 11, so marked NA in the table.

lgtm, will commit with a small change to keep 2.2 utests_long running with xlarge resource class: https://github.com/krummas/cassandra/commit/37240814111fad75ce0785b55722056586737766

and committed, thanks

