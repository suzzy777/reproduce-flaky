The same behavior is observed for *testRebalancingOnRestartAfterCheckpoint* test.

It was found that sometimes in four-nodes cluster after stopping two nodes some partitions on left nodes get [re]created and partition update counters are initialized to zero.

After returning stopped nodes back to cluster partitions from them are considered as up-to-date although they should have been declared as outdated and rebalanced from other nodes.

[~sergey-chugunov], [~cyberdemon], 
Folks, I doubt we are gonna make it to 2.3 release. Please correct me if I am wrong. Does it make sense to move the ticket to 2.4?

[~vozerov], as far as I remember it was not obvious issue with method resetLostPartitions(). and issue fix may be impact. 

Issue is older than age of JIRA issue (tests were flaky before), and I think it make sense to move it to next release if there is no solution now.

[~vozerov], I ran into the problem of the lack of lost partitions after stopping two of the four nodes, and now I have some questions about this topic. And I think that we can move the fix to release 2.4 too.

The last research results for this ticket (on the head of branch ignite-5267):

Without grid activation after start of nodes (last line in code block below)
{code}
        IgniteEx ignite1 = (IgniteEx)G.start(getConfiguration("test1"));
        IgniteEx ignite2 = (IgniteEx)G.start(getConfiguration("test2"));
        IgniteEx ignite3 = (IgniteEx)G.start(getConfiguration("test3"));
        IgniteEx ignite4 = (IgniteEx)G.start(getConfiguration("test4"));

        ignite1.active(true);
{code}
test fails with exception shown below:
{noformat}
class org.apache.ignite.IgniteException: Can not perform the operation because the cluster is inactive. Note, that the cluster is considered inactive by default if Ignite Persistent Store is used to let all the nodes join the cluster. To activate the cluster call Ignite.activate(true).

	at org.apache.ignite.internal.IgniteKernal.checkClusterState(IgniteKernal.java:3693)
	at org.apache.ignite.internal.IgniteKernal.cache(IgniteKernal.java:2713)
	at org.apache.ignite.internal.processors.cache.persistence.IgnitePdsCacheRebalancingAbstractTest.testPartitionLossAndRecover(IgnitePdsCacheRebalancingAbstractTest.java:336)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1995)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1910)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

With grid activation test fails with assertion error:
{noformat}
java.lang.AssertionError
	at org.apache.ignite.internal.processors.cache.persistence.IgnitePdsCacheRebalancingAbstractTest.testPartitionLossAndRecover(IgnitePdsCacheRebalancingAbstractTest.java:350)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1995)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1910)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

Assertion error shown above happens on that code line:
{code}
assert !ignite1.cache(cacheName).lostPartitions().isEmpty();
{code}

So, we need provide lost partitions in our test first, then we'll can fix the problem.

Folks, this issue is outdated:
test testPartitionLossAndRecover does not exist anymore
we have baseline topology now

I would like to close it. Fill free to reopen it if I am wrong.

