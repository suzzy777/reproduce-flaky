self = <apache_beam.runners.interactive.utils_test.ProgressIndicatorTest testMethod=test_progress_in_HTML_JS_when_in_notebook>
mocked_display_javascript = <MagicMock name='display_javascript' id='139743144054856'>
mocked_display = <MagicMock name='display' id='139743144055136'>
mocked_javascript = <MagicMock name='Javascript' id='139743144054912'>
mocked_html = <MagicMock name='HTML' id='139742992798328'>

    @patch('IPython.core.display.HTML')
    @patch('IPython.core.display.Javascript')
    @patch('IPython.core.display.display')
    @patch('IPython.core.display.display_javascript')
    def test_progress_in_HTML_JS_when_in_notebook(
        self,
        mocked_display_javascript,
        mocked_display,
        mocked_javascript,
        mocked_html):
    
      ie.current_env()._is_in_notebook = True
      mocked_display.assert_not_called()
      mocked_display_javascript.assert_not_called()
    
      @utils.progress_indicated
      def progress_indicated_dummy():
        mocked_display.assert_called_once()
        mocked_html.assert_called_once()
    
>     progress_indicated_dummy()

apache_beam/runners/interactive/utils_test.py:232: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
apache_beam/runners/interactive/utils.py:228: in run_within_progress_indicator
    return func(*args, **kwargs)
apache_beam/runners/interactive/utils_test.py:229: in progress_indicated_dummy
    mocked_display.assert_called_once()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

_mock_self = <MagicMock name='display' id='139743144055136'>

    def assert_called_once(_mock_self):
        """assert that the mock was called only once.
        """
        self = _mock_self
        if not self.call_count == 1:
            msg = ("Expected '%s' to have been called once. Called %s times." %
                   (self._mock_name or 'mock', self.call_count))
>           raise AssertionError(msg)
E           AssertionError: Expected 'display' to have been called once. Called 2 times.

/usr/lib/python3.6/unittest/mock.py:795: AssertionError


still happening: https://ci-beam.apache.org/job/beam_PreCommit_Python_Commit/17604/testReport/junit/apache_beam.runners.interactive.utils_test/ProgressIndicatorTest/test_progress_in_HTML_JS_when_in_notebook/

Working on it now.

Thanks, Ning!

Looks like it is still happening: https://ci-beam.apache.org/job/beam_PreCommit_Python_Commit/17921/testReport/junit/apache_beam.runners.interactive.utils_test/ProgressIndicatorTest/test_progress_in_HTML_JS_when_in_notebook/

Find the root cause: assert_called_with does not mean `asserting has been called with` but `asserting the last call is`. And there is an IPythonLogHandler that emits logs from time to time that is not so deterministic when running on a Jenkins environment. The handler uses the same display module that is used by the decorator in test, causing the flakiness. Changed `assert_called_with` with `assert_any_call` to fix it.

