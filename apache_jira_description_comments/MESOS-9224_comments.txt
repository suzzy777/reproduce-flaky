A review chain with the required changes can be found at https://reviews.apache.org/r/68131

The one thing that is still missing is a set of unit tests, which is appended to the chain as a wip-commit but proves to be unexpectly hard due to the fuzzy interface between http handler and master, and the caching being deeply buried in the master internals.

After discussions with Alex and Greg, we failed to identify a way to deteministically trigger the batching functionality without either introducing some inherent test flakiness or major modifications of both mesos and testing code. The main problems I was running into:

 - A correctly working cache should, ideally, be undetectable from the outside, so there's the question of how to verify that the test code actually was hitting the cache. We thought about introducing new endpoints dynamically that just count how often they've been accessed, but it seems not currently possible to introduce new routes or replace existing ones at runtime. Additionally, this has the problem that the dynamically introduced routes would not be cached.
 - The routines used to implemenet the de-duplication are currently all private. We can introduce public getters and setters or just directly open up master internals for use in tests, but that seems like a code smell. It's also hard to use `protected` here, because instantiating a new master instance is a messy process requiring lots of support code, all of which would need to be duplicated to use a sub-class of the mesos master.
 - Ideally, we should use the actual http pipeline used by mesos in our unit tests, including libprocess authentication and routing, so even if we could somehow directly access the mesos-master http internals its questionable if we should do it.

I'm currently working on an alternate, slightly probabilistic kind of test that tries to launch many requests at once and verifies that they still returning the correct answers.

Review chain ends here: https://reviews.apache.org/r/69064/

{code}
commit 3955b357e7b36b1b20724d920d9138be2180b8e3
Author: Benno Evers <bevers@mesosphere.com>
Date:   Wed Jan 9 14:29:54 2019 -0800

    Added unit tests for Master HTTP endpoints.

    This commit adds a set of unit test to verify that
    basic master HTTP endpoints still work correctly
    under the presence of request caching.

    Review: https://reviews.apache.org/r/69064/
{code}
{code}
commit f961ed1af62e00abe014c3362ee6221c4d6bc4bc
Author: Benno Evers <bevers@mesosphere.com>
Date:   Wed Jan 9 14:29:52 2019 -0800

    Exposed private data members for testing.

    For the unit tests introduced in the subsequent
    commit, access to the underlying master object
    of `cluster::Master` and to the definition of the
    class `Master::ReadOnlyHandler` are required.

    Review: https://reviews.apache.org/r/69421/
{code}
{code}
commit b4d8e7f23be3e0b182207f7573aca707bce82093
Author: Benno Evers <bevers@mesosphere.com>
Date:   Wed Jan 9 14:29:47 2019 -0800

    Added new metric for cache hits.

    This new metric counts the total number of cache
    hits in the newly-added request batching mechanism
    of the Mesos master.

    Review: https://reviews.apache.org/r/69422/
{code}
{code}
commit 4b63b07ed4f7527236334bf3cb2741c7e5c28029
Author: Benno Evers <bevers@mesosphere.com>
Date:   Wed Jan 9 14:29:44 2019 -0800

    Added deduplication for read-only master requests.

    This change will skip the computation of an HTTP response
    for requests with the same principal, endpoint and request
    headers where both requests are authenticated within the
    same batching windows.

    Review: https://reviews.apache.org/r/68795/
{code}
{code}
commit 148b7483234b1989518d191b4db4365a1852ca4f
Author: Benno Evers <bevers@mesosphere.com>
Date:   Wed Jan 9 14:29:41 2019 -0800

    Narrowed interface of `ReadOnlyHandler` members.

    Previously, the members of ReadOnlyHandler would take a full
    Request as parameter, making it hard for clients to reason
    about which parts of the request are used internally, and
    even harder to guarantee that behaviour into the future.

    This commit changes the interface so only the query
    parameters get passed.

    Review: https://reviews.apache.org/r/69071/
{code}

