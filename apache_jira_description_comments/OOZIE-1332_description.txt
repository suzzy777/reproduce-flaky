We've been seeing TestActionCheckXCommand.testActionCheckTransientDuringMRAction as flakey on our CI tests.  

This incorrect sequence of events was occurring:
{noformat}
...
- ActionCheckXCommand start
  - suspend WF
- ActionCheckXCommand end
- ActionCheckXCommand start
  - JT up
  - unknown hadoop job error
    - fail WF
- ActionCheckXCommand end
- ResumeXCommand cannot start (because WF fail)
- test finish
{noformat}
when this correct sequence of events should have been occuring:
{noformat}
...
- ActionCheckXCommand start
  - suspend WF
- ActionCheckXCommand end
- JT Up
- ResumeXCommand start
- ResumeXCommand end
- ActionStartXCommand start
- ActionStartXCommadn end
- ActionCheckXCommand start
- ActionCheckXCommand end
...
- test finish
{noformat}

It turns out that the ActionCheckerService was triggering an extra ActionCheckXCommand at just the wrong moment.  We should disable the ActionCheckerService during this test to prevent this issue (When I originally wrote the test, I incorrectly thought it was needed and that it had to run more frequently to make the test faster).

As a pre-emptive measure, we should also do this for TestActionCheckXCommand.testActionCheckTransientDuringLauncher, which is very similar even though we didn't see any flakiness.  