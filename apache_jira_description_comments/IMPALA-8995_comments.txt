Based on the profile provided it seems like the query waited for more then 60 sec in the queue. This should not ideally happen because the queries being run are a simple sleep(100). Something is holding up the queries and to figure that out I will need the impalad logs, can you please attach those if available?

Commit 9e26b7f25abbe147bc19cf94b01607bb37663364 in impala's branch refs/heads/master from Bikramjeet Vig
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=9e26b7f ]

IMPALA-8995: Fix synchronization in dequeue thread

The admission controller's dequeue thread currently wakes up either
when queries release their admission resources or when a statestore
update is received. The dequeue loop releases the admission lock at
the end of the loop, then acquires it back and calls wait on it.
In this small window, a query can complete, update the admission
stats by acquiring the admission lock, and then call send a notify
to wake the dequeue thread. But since the dequeue thread has not
called wait yet, it can miss this notify. Moreover if the statestore
is down there is no way of waking it up. This will cause the queued
queries to eventually timeout. This patch attempts to fix this by
removing that window.

Testing:
Was able to trigger this manually by adding a sleep right before
the dequeue loop acquires the admission lock.

Change-Id: I91080ce54e59cc7e6361f7c50d6b2156a8a180c8
Reviewed-on: http://gerrit.cloudera.org:8080/14539
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


