Test seems to be failing consistently here yet locally it is passing even when executed together with all the other TestMiniLlapLocalCliDriver qtests. Will investigate further.

I was able to reproduce the test failure by running the test on a machine with CentOS. It seems the qout file was generated under OSX and the stats differ depending on the operation system. I tested it with both ORC and parquet and had the same results, namely that the totalSize differs between operating systems.

Hi [~prasanth_j]
The qtest union_fast_stats.q added in [HIVE-11860|https://issues.apache.org/jira/browse/HIVE-11860] seems to be a bit brittle. I would like to suggest an alternative, a junit test where the file system and the concrete implementations beyond are mocked out, but where the test still covers the original case gathering stats for tables with subdirectories.

I did my best to come up with an implementation that is as clear/flexible as I could make it and would like to swap it out with the qtest.
Would you mind taking a look to confirm that I didn't misunderstand the case to be tested and if you are fine with the swap?
If you feel that we should keep the qtest, then I'll try to look further into the cause of the past/present test failures.



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12840874/HIVE-15115.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 10 failed/errored test(s), 10722 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample2] (batchId=5)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample4] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample6] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample7] (batchId=59)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample9] (batchId=38)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[transform_ppr2] (batchId=133)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_1] (batchId=90)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_4] (batchId=91)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_5] (batchId=90)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=94)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/2325/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/2325/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-2325/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 10 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12840874 - PreCommit-HIVE-Build

Would it be possible to confirm if both operating systems are using same Timezone. My guess is the difference in file size is because of the differences in timezone. Orc stores the timezone id in string format in file footer. So if the q.out files are generated in different timezones the filesizes will differ. Can you confirm if that's case? To view the timezone information, you can do "hive --orcfiledump -t <path-to-orc-file>" and see what timezone gets printed in OSX and centos.

The other possibility is ordering of rows. Generating ORC files with different row orderings will cause different file size because of run length encoding. Usually we avoid such flakiness by explicitly adding order by to INSERT or CTAS query. Something like "INSERT OVERWRITE orctable SELECT * FROM src ORDER BY key". This will avoid issue with changing file sizes caused by encodings (applicable for parquet as well). 

I can confirm that the timezones were indeed different (PST and CET) and I think that the ordering of the rows in the test is not guaranteed either. What is strange is that it seems the tests are now not failing on Jenkins even though there was no change to either the q nor the qout file. On my end the OSX machine with the CET timezone was running the test successfully and I would be surprised if Jenkins ran the test in that timezone. I will try make the row ordering deterministic by adding order by clauses and see if I can get the test to run successfully on the machine with the PST timezone.



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12841018/HIVE-15115.1.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 8 failed/errored test(s), 10748 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample2] (batchId=5)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample4] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample6] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample7] (batchId=59)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample9] (batchId=38)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[transform_ppr2] (batchId=133)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2] (batchId=91)
org.apache.hadoop.hive.metastore.TestMetaStoreEndFunctionListener.testEndFunctionListener (batchId=191)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/2341/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/2341/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-2341/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 8 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12841018 - PreCommit-HIVE-Build

I guess the tests are not failing because it is getting instances from the same region (PST). If it gets instances from different regions then this can fail. May be we should build a better resiliency for these file size related differences in qtestutil. Another option would be add a new marker "TIMEZONE SENSITIVE TEST" to the q file and mask total file size during result comparison that have the marker?

