As Gradle parallelism applied to Python tests and more python versions added to tests, the way Gradle manages projects/tasks changed a lot. Frictions are generated during Gradle refactor since some projects defined separate build script under source directory. Thus, It will be better to standardize how we use Gradle. This will help to manage Python tests/builds/tasks across different versions and runners, and also easy for people to learn/use/develop.

In general, we may want to:
- Apply parallel execution
- Share common tasks
- Centralize test related tasks
- Have a clear Gradle structure for projects/tasks