[~macrergate]

Looks like the fix is to avoid local iterator for replicated cache if local node has moving partitions.

As a workaround set partition for a query explicitly: query.partition(p)  where p in 0..PARTS_CNT


[~ascherbakov], thanks for WA, I see.
About fix you suggested I agree it can fix case 1, but how to fix case 2 when scanQuery is executed from a client node? 
Can client check that a remote node doesn't have moving partitions?


[~macrergate], seems very common to IGNITE-12482. Can it be fixed similarly?

[~Pavlukhin], there is a difference.

I've found the second problem in the method: {{org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl#projection}}

there is stacktrace:

projection:628, IgniteCacheProxyImpl (org.apache.ignite.internal.processors.cache)
 query:809, IgniteCacheProxyImpl (org.apache.ignite.internal.processors.cache)
 query:412, GatewayProtectedCacheProxy (org.apache.ignite.internal.processors.cache)

 

it looks like IgniteCacheProxyImpl#projection somewhat duplicates logic of org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter#nodes()

and both have the same error - lacks the check for moving partitions.

 

 

[~Pavlukhin], can you please review my PR?

{panel:title=Branch: [pull/7277/head] Base: [master] : Possible Blockers (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Cache 5{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=4946462]]
* IgniteCacheTestSuite5: IgniteCachePartitionLossPolicySelfTest.testReadWriteSafeWithPersistence[TRANSACTIONAL] - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Cache 7{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=4946464]]
* IgniteCacheTestSuite7: AuthenticationProcessorNodeRestartTest.test1kUsersNodeRestartServer - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4946509&amp;buildTypeId=IgniteTests24Java8_RunAll]

{panel:title=Branch: [pull/7277/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4946509&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~macrergate], please check my comment on [GitHub|https://github.com/apache/ignite/pull/7277].

[~Pavlukhin], thanks. Please check my reply there.

[~Pavlukhin], I've updated PR and replied to you, TC Run in progress, please check my changes [PR-7277|https://github.com/apache/ignite/pull/7277].

[~macrergate], I will take a look today.

[~macrergate], I need some more time to evaluate the proposed solution. You might ask someone else to review if you need it faster.

[~Pavlukhin], no problem at all, it can wait. Just don't forget about me.

[~macrergate], approach with topology read lock looks fine to me. I left some comments on GitHub.

[~Pavlukhin], thanks, I made changes and replied, TC in progress.

{panel:title=Branch: [pull/7277/head] Base: [master] : Possible Blockers (5)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Cache 5{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5086421]]
* IgniteCacheWithIndexingTestSuite: ClusterReadOnlyModeDoesNotBreakSqlSelectTest.test - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Scala (Examples){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5086389]]

{color:#d04437}Basic 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5086396]]
* IgniteBasicTestSuite: BPlusTreeFakeReuseSelfTest.testMassiveRemove2_true - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Basic 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5086356]]
* IgniteComputeBasicConfigVariationsFullApiTestSuite: IgniteComputeConfigVariationsFullApiTest_46.testDeployExecuteByName - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Thin client: Python{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5086445]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5086468&amp;buildTypeId=IgniteTests24Java8_RunAll]

{panel:title=Branch: [pull/7277/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5086468&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~Pavlukhin], please look. no blockers here, do you give final approve? 

[~macrergate], sorry, I had a lack of time to check it. Will do in a couple of days.

[~macrergate], I merged PR to master. Thank you for contribution!

By the way I left only 2.9 as fix version as it is resolved only in master for now.

[~Pavlukhin], thank you! Shouldn't it go to 2.8.1 also? 

[~macrergate], I believe we can include it into 2.8.1 but as far as I know neither 2.8.1 branch was created neither scope was discussed. We cannot put fix version 2.8.1 immediately here because RESOLVED ticket status can be misleading if the patch will not appear in 2.8.1 by some reason. It seems that we can add 2.8.1 fix version only when the fix will be merged to 2.8.1 branch.

