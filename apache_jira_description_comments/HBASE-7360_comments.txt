offline code backport here: https://github.com/matteobertozzi/hbase/commits/offline-snapshot-0.94-v0

Take a snapshot interface 0.94 with rpc changed review board: https://reviews.apache.org/r/8609/

There was some offline conversation about wheather we bring this patch and snapshots to apache 0.94.  Let's do that conversation here to make why we are deciding one way or the other.  The patch on review board has gotten a +1.  

The question: should we bring this in to 0.94?  [~lhofhansl]? [~jesse_yates]?

(sorry for all the edits)





Thinking about the code changes, I'd be tentative to back port _all_ of the snapshot versions. Certainly the offline snapshot and export cases are non-invasive enough (barely touches any existing code) and the generic restore also seems as safe as it is in 0.96. The online cases strike me as a bit more sensitive and touch a lot more in the region/regionserver. I think the log-roll snapshot that [~jmhsieh] is working on would be a good first candidate, but the timestamp and globally consistent ones are quite invasive and make we worry for the stability of 0.94. 

A reasonable alternative could be cutting a 0.94-snapshot branch that includes the more 'touchy' snapshot cases, though it does lead to some released version pain :-/

WRT the protobuf discussion, if its already in 0.94, then just use it and get this shipping :)

I'm could be swayed either way about the backport but agree with Jesse about the online snapshots.  If we backport we only do the simplest non-invasive snapshots.  To me this means the  offline snapshot and the simple flush online snapshot, HBASE-7321 (as opposed to the log-roll snapshots, HBASE-7291, which is currently on hold).

Currently protobuf already exists in hbase 0.94's code base.  Although not in the core, it is in the rest code.

from mailing list:

stack:

bq. +0 tending toward -1.  Patch is large for little benefit: i.e. offline merge (you have to take table offline, right?)

There have also been some concerns mentioned via conversations.  I'm going to close as won't do for apache 0.94. 

The discussion on backporting the snapshots feature (HBASE-6055 and HBASE-7290) to the apache 0.94 line has been reopened on the mailing list so I've reopened it here for discussion.

Let's get this rocksolid in trunk (without any known bugs).
Then we can discuss the 0.94 backport. My reasoning for not dismissing this outright is the information I got that both Cloudera and Hortonworks plan to backport this to their 0.94-based distributions.
If that is indeed the plan we should consider doing this also in the "official" Apache branch.


Putting 0.94.7 as a placeholder for now.

I assume that both Cloudera and Hortonworks are still interested in backporting the patch, making it a defacto standard...?

In order to get this into 0.94 I would suggest the following:
# Cloudera and Hortonworks work together and agree on a *single* patch.
# That patch would be carefully tested by both companies.
# The testing includes passing all unittests (naturally) as well as tests in physical clusters of reasonable size.
# The patch can be delivered as one large patch, or as a series of smaller patches (whatever turns out to be less work).

Does that make sense?

+1

[~lhofhansl] Jon is off trying to break his neck up on tahoe slopes.. [~mbertozzi] what you reckon?

I think that the large patch it's the easy way to go.
I'll try get the 94 patch out for review in the next few days.

We used HBASE-5548 for a lot of our snapshot test scripting.  Any concerns about back porting that guys as well [~lhofhansl], [~jesse_yates]?

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12571423/HBASE-7360-v0.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 88 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/4604//console

This message is automatically generated.

Backporting HBASE-5548 is fine too.

Thanks for the mega-patch, Matteo.
The patch seems to lack some of the changes incorporated in the review of HBASE-7290.
e.g.
HBASE-7864 Rename HMaster#listSnapshots as getCompletedSnapshots()

I don't get the client side change in HBASE-7864.
I can understand the server having getCompletedSnapshots() but why we expose it to the client?
and why the shell is still list_snapshots and admin is getCompletedSnapshots()?
Why the user should know about the "completed" state. Why the snapshot are treated differently from a table? listTables() vs getCompletedSnapshots() we have the same .tmp concept also for the tables...

First of all since this JIRA is about backporting snapshots to 0.94, I would expect the patch to align with the current formation in 0.95.

bq. I can understand the server having getCompletedSnapshots() but why we expose it to the client?
{code}
  /**
   * List the currently available/stored snapshots. Any in-progress snapshots are ignored
   */
  @Override
  public ListSnapshotResponse getCompletedSnapshots(RpcController controller,
{code}
Since in-progress snapshots are not exposed to client, API name was adjusted for clarity.

bq. why the shell is still list_snapshots
Jonathan prefers list_snapshots during the review of HBASE-7290.

bq. Why the snapshot are treated differently from a table? listTables() vs getCompletedSnapshots()
This question should be in the scope of HBASE-7290. Are you thinking of changing the API in 0.95 and trunk ?

{quote}First of all since this JIRA is about backporting snapshots to 0.94, I would expect the patch to align with the current formation in 0.95.{quote}
It should be everything, but I may have missed some (typo fix, renaming, ...) pre-merge patch.

{quote}This question should be in the scope of HBASE-7290.{quote}
HBASE-7290 went in too early, I didn't get a chance to post a second comment. 

{quote}Are you thinking of changing the API in 0.95 and trunk?{quote}
I'm the wrong person to give methods name. I just want to know why snapshots are treated differently from tables

bq. and why the shell is still list_snapshots and admin is getCompletedSnapshots()?

The shell command to get the list of tables is 'list', so in the shell it make sense to keep it as 'list_snapshots'

In the HBaseAdmin code there is a method called 'getTableDescriptors'.  The change Ted did with 'getCompletedSnapshots' seems to go well with the latter.  

I just looked at the code again, and HBaseAdmin has another method called 'listTables' https://github.com/apache/hbase/blob/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java#L262 which is more analogous.  Since 0.95 isn't released yet, I'm fine if we revert to the 'listSnapshots' name.

With this extra piece of evidence I'm leaning towards [~mbertozzi]'s suggestion of using the listSnapshots name.


I see what happened -- getCompletedSnapshots makes sense for the HMaster interface (which was discussed in review) but HBASE-7864 also changed in HBaseAdmin (which I missed in review).  This doesn't make as much sense, but I may have misled Ted by asking questions about how this modified the shell commands.

I will post a patch with HBASE-7864 incorporated, leaving listSnapshots in HBaseAdmin.

Patch v1 renames HMaster.listSnapshots()

Ran patch v1 through test suite.
No repeatable test failure.

[~tedyu@apache.org] I'm confused -- is it now:

* list_snapshots in shell
* listSnapshots in HBaseAdmin
* getCompletedsnapshots in HMaster

I think this rename work should be a follow issue on since it affects trunk as well.

Goal for this patch HBASE-7360 should be parity with the trunk implementation so that all further changes can be simple backports.

I will create another Jira for 0.95 / trunk so that snapshot listing API is consistent for the 3 branches.

I created HBASE-7969 for renaming HBaseAdmin#getCompletedSnapshots in 0.95 / trunk.

+1. I didn't look at the patch carefully, but assume that since the tests pass and since it should be essentially the same version that matteo has ported in the past.

However on commit let's update the jira description and include the exact list of jiras that have been included in this mega backport so we know what is in and what else needs backporting (like the spell fixes).  Ideally we'd include the list of original jiras in the commit message and list places (or at least mark off the patch) where this back port is significantly different from trunk.  With regards to HBASE-7969, I don't care if it is in or out of this mega patch as long it is documented to be in or out properly.

Maybe have a commit message like:

{code}
HBASE-7360 Backport Snapshots to 0.94

This patch includes:
  HBASE-6610 HFileLink: Hardlink alternative for snapshot restore
  HBASE-6765 Take a Snapshot interface
    This patch is significantly different because of the RPC changes between 0.94/0.96
  HBASE-6571 Generic multi-thread/cross-process error handling framework
  HBASE-6353 Snapshots shell
  HBASE-7107 Snapshot References Utils (FileSystem Visitor)
  HBASE-6863 Offline snapshots
  HBASE-6865 Snapshot File Cleaners
  HBASE-6777 Snapshot Restore Interface
  HBASE-6230 Clone/Restore Snapshots
  HBASE-6802 Export Snapshot 
  ... blah blah blah...
{code}



I updated JIRA description with some JIRAs that I know are part of the backport.
HBASE-7969 is included. With this backport, 0.94 should align with the latest snapshots feature in trunk.

From a testing point of view the backport Matteo's provided should be the version that CDH has been system testing against a real cluster since December.  Matteo can describe his rig in more detail (he focused on chains of snapshots from tables that were restored/clone snapshots).

My rig tested the online snapshot in the presense of "interference" and load.  It has a PE job running that writes a bunch of data.  While the PE is running, we'd take 30-50 snapshots, and then clone them all.  We usually get the large majority of the snapshots taken and cloned (28 for 30).  We also inject RS kills, Master kills, forced compactions, as snapshots are being taken and as they are being cloned.  Master kills affect the success rate the most -- because the master takes time to failover and we go through a few aborted master timeout cycles before being able to succeed again.   In all of these cases, the RS/HM never permanently hung during snapshotting or cloning.  We did encounter some master hangs during disable (which i believe is a separate issue). These tests were run for weeks over a 5 node physical cluster.

Larger versions of online snapshot testing (excluding the fault injection) was also run against a 20 node cluster and a 100 node cluster.

Should we pull this into 0.94.6 folks?

That would be nice, Lars. 

The ball is in [~mbertozzi]'s court -- he has the full list the jiras included in the mega patch that would be good to have in the commmit message.

ok, anyone averse to committing it tomorrow? 
I want to run a couple of tests and doing some other code checks,
then I'll commit it to 94 with the list of jiras included

Make it so [~mbertozzi] - as long as your happy with the tests :)

See also the discussion on the mailing. If we turn 0.94.6 into some kind of "long term" release, we should wait with this until 0.94.7.


Test suite for security profile is green.

Let's commit. +1 (I did not actually look at the giant patch, I trust you folks :) ).
I'll cut 0.94.6 as soon as this is committed.

v1 committed to 0.94

Integrated in HBase-0.94 #878 (See [https://builds.apache.org/job/HBase-0.94/878/])
    HBASE-7360 Backport Snapshots to 0.94 (Revision 1452257)

     Result = FAILURE
mbertozzi : 
Files : 
* /hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
* /hbase/branches/0.94/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* /hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/Chore.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/DaemonThreadFactory.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HConstants.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/catalog/MetaEditor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseMasterObserver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionListener.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/TimeoutException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/executor/EventHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/FileLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HFileLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HLogLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/SnapshotSentinel.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/TableEventHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/CloneSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/MasterSnapshotVerifier.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/RestoreSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotFileCache.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotHFileCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotLogCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMember.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMemberRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/Subprocedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/SubprocedureFactory.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/CopyRecoveredEditsTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/CorruptedSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/HBaseSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/HSnapshotDescription.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ReferenceRegionHFilesTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ReferenceServerWALsTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotCreationException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotDescriptionUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotDoesNotExistException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotExistsException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotInfo.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotLogSplitter.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TableInfoCopyTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TablePartiallyOpenException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TakeSnapshotUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/UnknownSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSVisitor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/HFileArchiveUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/ModifyRegionUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java
* /hbase/branches/0.94/src/main/protobuf
* /hbase/branches/0.94/src/main/protobuf/ErrorHandling.proto
* /hbase/branches/0.94/src/main/protobuf/hbase.proto
* /hbase/branches/0.94/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.94/src/main/ruby/shell.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/clone_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/delete_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/list_snapshots.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/restore_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/snapshot.rb
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/backup/TestHFileArchiving.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestRestoreSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotFromAdmin.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotsFromAdmin.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestForeignExceptionDispatcher.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestForeignExceptionSerialization.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestTimeoutExceptionInjector.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/TestFileLink.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestHFileLinkCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestSnapshotFromMaster.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotFileCache.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotHFileCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotLogCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotManager.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedure.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureCoordinator.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureMember.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedure.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedureControllers.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/SnapshotTestingUtils.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestCopyRecoveredEditsTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestExportSnapshot.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestFlushSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestReferenceRegionHFilesTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreFlushSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreSnapshotHelper.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotDescriptionUtils.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotLogSplitter.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestWALReferenceTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestFSVisitor.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestHFileArchiveUtil.java


https://builds.apache.org/job/HBase-0.94/878/
{code}
Failed tests:   testFlushCommitsWithAbort(org.apache.hadoop.hbase.client.TestMultiParallel): Server count=2, abort=true expected:<1> but was:<2>

Tests in error:
  testFlushCommitsNoAbort(org.apache.hadoop.hbase.client.TestMultiParallel): Server hemera.apache.org,32876,1362399716392 not running, aborting
{code}

this failure seems to be related to HBASE-7299. I've attached 94 patch here that seems to work.

@Matteo:
Mind opening a JIRA for backporting HBASE-7299 ?

Thanks

I think we can do that as an addendum here, since this appears to be related to the snapshot checkin.

And it's test only anyway. Unless there're objection I'll commit Matteo's proposed patch (if you prefer, Ted, I'll file a separate ticket... Let me know).

Committed the HBASE-7299 addendum and added that issue to the list of jira included in this change.

Integrated in HBase-0.94 #879 (See [https://builds.apache.org/job/HBase-0.94/879/])
    HBASE-7360 Addendum, test fix for TestMultiParallel (Matteo) (Revision 1452537)

     Result = FAILURE
larsh : 
Files : 
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestMultiParallel.java


Reopening, because we need to discuss whether HBASE-7987 needs to be fixed first. Thank to Ted for bringing this up.

I was working on HBASE-7841 and realized that HBASE-7987 'Snapshot Manifest file instead of multiple empty files' would give us considerable performance benefit, especially in reducing load on namenode.

Since there is no Apache HBase release containing snapshots feature, I think we should include the fix for HBASE-7987 in the very first release which has snapshots capability.

Otherwise we would have to version snapshot support which complicates this feature.

As stated in off-line email, I agree. Since it is not realistic to have HBASE-7987 for 0.94.6, I think we should revert and move to 0.94.7.


Ted, are you suggesting we should revert this one, or just push for HBASE-7987 to be resolved, and backported before the 0.94.6 release?  

bq. ...and realized that HBASE-7987 'Snapshot Manifest file instead of multiple empty files' would give us considerable performance benefit, especially in reducing load on namenode.

You have evidence of above [~ted_yu]?

You have evidence that what is there is not working?

[~lhofhansl] A bunch of work has gone into getting snapshots back into 0.94.  Snapshots has had a bunch of testing done on it to date.  I would think that there should be a better reason to revert than that snapshot listing is purportedly 'suboptimal'.  At least wait for Matteo to come on line in the morning to get his opinion before revert.

Integrated in HBase-0.94-security-on-Hadoop-23 #12 (See [https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/])
    HBASE-7360 Addendum, test fix for TestMultiParallel (Matteo) (Revision 1452537)
HBASE-7360 Backport Snapshots to 0.94 (Revision 1452257)

     Result = FAILURE
larsh : 
Files : 
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestMultiParallel.java

mbertozzi : 
Files : 
* /hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
* /hbase/branches/0.94/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* /hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/Chore.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/DaemonThreadFactory.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HConstants.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/catalog/MetaEditor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseMasterObserver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionListener.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/TimeoutException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/executor/EventHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/FileLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HFileLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HLogLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/SnapshotSentinel.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/TableEventHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/CloneSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/MasterSnapshotVerifier.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/RestoreSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotFileCache.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotHFileCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotLogCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMember.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMemberRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/Subprocedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/SubprocedureFactory.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/CopyRecoveredEditsTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/CorruptedSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/HBaseSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/HSnapshotDescription.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ReferenceRegionHFilesTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ReferenceServerWALsTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotCreationException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotDescriptionUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotDoesNotExistException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotExistsException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotInfo.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotLogSplitter.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TableInfoCopyTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TablePartiallyOpenException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TakeSnapshotUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/UnknownSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSVisitor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/HFileArchiveUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/ModifyRegionUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java
* /hbase/branches/0.94/src/main/protobuf
* /hbase/branches/0.94/src/main/protobuf/ErrorHandling.proto
* /hbase/branches/0.94/src/main/protobuf/hbase.proto
* /hbase/branches/0.94/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.94/src/main/ruby/shell.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/clone_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/delete_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/list_snapshots.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/restore_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/snapshot.rb
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/backup/TestHFileArchiving.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestRestoreSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotFromAdmin.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotsFromAdmin.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestForeignExceptionDispatcher.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestForeignExceptionSerialization.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestTimeoutExceptionInjector.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/TestFileLink.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestHFileLinkCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestSnapshotFromMaster.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotFileCache.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotHFileCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotLogCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotManager.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedure.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureCoordinator.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureMember.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedure.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedureControllers.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/SnapshotTestingUtils.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestCopyRecoveredEditsTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestExportSnapshot.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestFlushSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestReferenceRegionHFilesTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreFlushSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreSnapshotHelper.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotDescriptionUtils.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotLogSplitter.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestWALReferenceTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestFSVisitor.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestHFileArchiveUtil.java


Integrated in HBase-0.94-security #116 (See [https://builds.apache.org/job/HBase-0.94-security/116/])
    HBASE-7360 Addendum, test fix for TestMultiParallel (Matteo) (Revision 1452537)
HBASE-7360 Backport Snapshots to 0.94 (Revision 1452257)

     Result = SUCCESS
larsh : 
Files : 
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestMultiParallel.java

mbertozzi : 
Files : 
* /hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
* /hbase/branches/0.94/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* /hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/Chore.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/DaemonThreadFactory.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HConstants.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/catalog/MetaEditor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseMasterObserver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionListener.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/TimeoutException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/executor/EventHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/FileLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HFileLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HLogLink.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/SnapshotSentinel.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/handler/TableEventHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/CloneSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/MasterSnapshotVerifier.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/RestoreSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotFileCache.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotHFileCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotLogCleaner.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMember.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMemberRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/Subprocedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/SubprocedureFactory.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/CopyRecoveredEditsTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/CorruptedSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/HBaseSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/HSnapshotDescription.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ReferenceRegionHFilesTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/ReferenceServerWALsTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotCreationException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotDescriptionUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotDoesNotExistException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotExistsException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotInfo.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotLogSplitter.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TableInfoCopyTask.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TablePartiallyOpenException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/TakeSnapshotUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot/UnknownSnapshotException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSVisitor.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/HFileArchiveUtil.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/ModifyRegionUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java
* /hbase/branches/0.94/src/main/protobuf
* /hbase/branches/0.94/src/main/protobuf/ErrorHandling.proto
* /hbase/branches/0.94/src/main/protobuf/hbase.proto
* /hbase/branches/0.94/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.94/src/main/ruby/shell.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/clone_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/delete_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/list_snapshots.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/restore_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/snapshot.rb
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/backup/TestHFileArchiving.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestRestoreSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotFromAdmin.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestSnapshotsFromAdmin.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestForeignExceptionDispatcher.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestForeignExceptionSerialization.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling/TestTimeoutExceptionInjector.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/TestFileLink.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestHFileLinkCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestSnapshotFromMaster.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotFileCache.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotHFileCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotLogCleaner.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotManager.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedure.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureCoordinator.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureMember.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedure.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedureControllers.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/SnapshotTestingUtils.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestCopyRecoveredEditsTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestExportSnapshot.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestFlushSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestReferenceRegionHFilesTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreFlushSnapshotFromClient.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreSnapshotHelper.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotDescriptionUtils.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotLogSplitter.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestSnapshotTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot/TestWALReferenceTask.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestFSVisitor.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestHFileArchiveUtil.java


Having a single manifest was discussed during the development in the snapshot branch.
At the end was moved aside for the first cut since taking or restoring a snapshot is something rare, and the impact is the same as the impact of the cleaner after a table delete. 
Also since the snapshot files creation is not done in parallel you're just asking stuff to the NN with max N RS connection, so the time required to do the snapshot is the same as the time required to do a roundtrip to the NN (excluding all the other stuff like zk, ...)

From my point of view, the "single" Manifest is just an improvement to speedup a bit the performance and have a compact snapshot format.

so the decision is, do we want a format 1 now and a format 2 later on or just a format 2 later on?

bq. since taking or restoring a snapshot is something rare
Some users would perform snapshot periodically.

bq. the impact is the same as the impact of the cleaner after a table delete. 
Table deletion would ultimately remove data. Sanpshotting, on the other hand, creates copy (mostly through references) of data. Can you elaborate on why the impact is same ?

bq. you're just asking stuff to the NN with max N RS connection
Assuming N is the number of region servers, I think the above holds for any moment in time.

bq. so the time required to do the snapshot is the same as the time required to do a roundtrip to the NN
I tend to disagree. See code from ReferenceRegionHFilesTask:
{code}
    // snapshot directories to store the hfile reference
    List<Path> snapshotFamilyDirs = TakeSnapshotUtils.getFamilySnapshotDirectories(snapshot,
      snapshotDir, families);

    LOG.debug("Add hfile references to snapshot directories:" + snapshotFamilyDirs);
    for (int i = 0; i < families.length; i++) {
      FileStatus family = families[i];
      Path familyDir = family.getPath();
      // get all the hfiles in the family
      FileStatus[] hfiles = FSUtils.listStatus(fs, familyDir, fileFilter);

      // if no hfiles, then we are done with this family
      if (hfiles == null || hfiles.length == 0) {
        LOG.debug("Not hfiles found for family: " + familyDir + ", skipping.");
        continue;
      }

      // make the snapshot's family directory
      Path snapshotFamilyDir = snapshotFamilyDirs.get(i);
      fs.mkdirs(snapshotFamilyDir);

      // create a reference for each hfile
      for (FileStatus hfile : hfiles) {
        // references are 0-length files, relying on file name.
        Path referenceFile = new Path(snapshotFamilyDir, hfile.getPath().getName());
        LOG.debug("Creating reference for:" + hfile.getPath() + " at " + referenceFile);
        if (!fs.createNewFile(referenceFile)) {
          throw new IOException("Failed to create reference file:" + referenceFile);
        }
      }
    }
{code}
bq. do we want a format 1 now and a format 2 later on or just a format 2 later on?
In the second half of the question, did you mean 'a format 2 now' ?

I think this discussion is about reducing maintenance overhead, from both operations and code development points of view.
I would vote for reaching format 2 in the first 0.94 release with snapshot feature.

{quote}Some users would perform snapshot periodically.{quote}
sure, my definition of rare is every X minute, every X hours...
you're not constantly taking snapshots

{quote}
Table deletion would ultimately remove data. Sanpshotting, on the other hand, creates copy (mostly through references) of data. Can you elaborate on why the impact is same ?
{quote}
The snapshot doesn't create a copy, even clone doesn't create a copy. It just creates empty files that are pointer to the real files (see HFileLink)

The main impact is going to the NN. and doing all the listStatus() & co for the snapshot has the same impact as doing listStatus() by the cleaners for table deletion or even normal compactions.

{quote}so the time required to do the snapshot is the same as the time required to do a roundtrip to the NN
I tend to disagree. See code from ReferenceRegionHFilesTask{quote}
The code shows just NN calls mkdirs, createNewFile(), listStatus() so each operation is one roundtrip to the NN there's nothing else involved

Thanks Matteo. After thus explanation I'm with leaving this in 0.96

What about maintenance cost for the two formats ?
I think Jesse, Matteo and I agree that:

having an upgrade script is lame (and annoying!).

WRT matteo's comment on NN load, we still save a bit - rather that create a file per HFile (which isn't batched in any way, IIRC), we are just creating one per region. So an average cluster, with say 5-10 CFs and 5-10 HFiles per store, you are seeing anywhere from 25 -100 saved ops, per region. On any sizeable cluster, say 200-400 regions, that means 5,000 to 40,000 saved operations (and those feel like conservative numbers).

However, the code for this isn't a the critical path and doesn't block anything (at least while doing expensive stuff). 

Also, an upgrade script isn't the end of the world - the files are just sitting there in the background. The only major concern would be worrying about people doing a restore/clone while upgrading.

{quote}The only major concern would be worrying about people doing a restore/clone while upgrading.{quote}
currently we have the clone/restore just on a disabled table, so it's a master only operation. This means that once the master is upgraded you should have the snapshots in the new format or it should be able to read both formats.

different is for taking a snapshot, if you have different RS version (one that support format1 and the other that support format2) if you try to take a snapshot you may end up with mixed format.

bq. I think this discussion is about reducing maintenance overhead, from both operations and code development points of view.

[~ted_yu] Nope.  This issue is about backporting snapshots to 0.94.

If you want to 'discuss' some aspect of snapshots, take it elsewhere.

Let's make this a simple decision: snapshots as is for 0.94.6 or not

Anybody? :)

I will cut 0.94.6RC tonight, if we have not found consensus by then I will -1 this for 0.94.6 and back it out.
(with short release cycles that is not the end of the world anyway)


[~lhofhansl] I guess the decision is on you.

From my perspective (Cloudera Hat) we have snapshot in CDH-4.2 (0.94), so when we decide to introduce a new format We should have the upgrade procedure. We have tested snapshot on .94 for months and it works.
From another perspective (Apache Hat) it's easier have less code and no migration, but also we shouldn't write a new format and after two days of testing saying "this is working, merge it!"
(note that the discussion of a single manifest was started during the development, and it was discarded for the first cut)

After the above discussion, here is my understanding.
If format 1 is contained in 0.94.k and formats 1 + 2 are in 0.94.k+1, the user shouldn't be taking snapshot(s) when cluster is upgrading to 0.94.k+1
Downgrading from 0.94.k+1 to 0.94.k would pose some issue - snapshots taken with format 2 wouldn't be usable by 0.94.k

We can alleviate the above pain by making format 1 the default choice for 0.94.k+1

If solution for HBASE-7987 is ready in the next month, looks like supporting formats 1 and 2 in 0.94.k would be ideal.

Another option is to only support format 1 in 0.94 releases and leave format 2 to 0.95 / trunk.

Since 0.95 is coming soon, this seems to be a better choice.

OK. From the discussion we're fine with leaving this.
If/when we introduce the manifest we'll either support the old approach or have an upgrade path. The upgrade path is trick during rolling upgrades.

bq. Another option is to only support format 1 in 0.94 releases and leave format 2 to 0.95 / trunk.
I think this is the optimum choice. Since the new format would be just an optimization for speed, we can leave without it in 0.94. 

