In addition to the above, I think this is a good idea (in addition to the normal builds), as it will allow Pull Requests on GitHub to be checked for compilation errors and possibly test failures prior to being accepted.

I'm willing to try to tackle creating a pull request with a working configuration, though Travis would need to be enabled for the project proper before it was merged by a repository admin.

Would be nice to have. What kind of setting we need to enable on the project side? Git? JIRA?

[~evans_ye] -

First, in response to your question, an admin of the GitHub apache/bigtop repository would have to go to travis-ci.org and "enable" the repository. Once that was done, we could merge the Pull Request I'm attempting to put together, which would add a single configuration file telling Travis what build steps to run

Second, I have a quick question - I have got a "working" basic Travis build which I believe compiles and runs unit tests on the repository (located here: https://travis-ci.org/romeara/bigtop), however I've only been able to get it to work with the Maven process. I'm wondering what commands you use on the official Jenkins builds to do a basic compile and unit test run (ideally, the Travis CI steps would match those as closely as possible)

A note: the description of this ticket talks about detecting vulnerabilities. There are tools that would allow this once a Travis build is in place, however I think it is important to first getting a basic working build running, so the PR I'm working on currently is scoped to that. I will certainly be willing to make an additional PR for the vulnerability piece once the build works.

[~romeara] thanks for the thorough reply.
Regarding to setting of github, I need to check with Apache infra guys since we're not in control. I'll get back to you later.

And for the questions you asked:
{quote}
I'm wondering what commands you use on the official Jenkins builds to do a basic compile and unit test run (ideally, the Travis CI steps would match those as closely as possible)
{quote}

Technically speaking, we don't run UTs. Check out *bigtop/bigtop-packages/src/common/hadoop/do-component-build* you'll tests are skipped during build phase. (CMIIW [~cos]). So the idea here is building tarball or git repo that already pass UTs and apply Integration Tests atop built packages.

FYI, now we only have package and deployment managed by CI. Please see our [package|https://cwiki.apache.org/confluence/display/BIGTOP/Bigtop+CI+Setup+Guide#BigtopCISetupGuide-SetupBigtoppackagesbuildmatrix] and [deployment|https://cwiki.apache.org/confluence/display/BIGTOP/Bigtop+CI+Setup+Guide#BigtopCISetupGuide-SetupBigtopdeploymentsbuildmatrix] doc.

Finally, I agree with you that we should do this step by step.
A follow up question by me is what jars you'd like to put in Travis? Bigtop itself only produces iTests jars. For those upstream projects we produce RPM/DEB packages. So I'm wondering what you're interested here.


[~evans_ye] - Ok, I'll take a look at those steps - though in the meantime, I might just put what I currently have working up for Pull Request, as I think being able to see what I've done might make it clearer where my questions are coming from

I'm not necessarily trying to put jars into Travis -  there are two use cases going forward I think we should look at supporting:

1) Compiling and running basic tests on a pull request before merge. This only requires Travis itself be setup to compile, and then hopefully run some tests on the artifacts
2) Adding addition tools which analyze either pull requests or branches - this will give more feedback to submitters before things are merged. This is where something like the analysis in the description of dependencies comes in. It doesn't necessarily require putting any jars on Travis - just that there is a CI with a valid environment that can run the maven or Gradle commands for the project, which allow dependency analysis

OK. Infra ticket created: INFRA-14858. It seems our infra friends already know how to do that(see INFRA-13220).

For your 1)., I think we should make it a bit concrete since Bigtop has many features. For example, if you'd like to test a new component or a upgraded version of a component, then the first step is to make sure RPM/DEB can be successfully built. There're other PRs for testing code, deployment code, groovy code, provisioner code, etc. But I think package is a good choice for the first step.

Looks [~kwmonroe] has a neat trick to perform components upgrade with Juju charms, which could be very handy in the case of upgrade testing.
As for skipping the tests during the build: yes, we do skip them on purpose for a couple of reasons:
- they might take a very long time to complete (IIRC full Hadoop test suite is 3+ hours)
- it isn't our goal to test upstream components: this supposed to be taken care of by the projects' team
- the tests could (and will be flaky) leading to a lot of false negatives during the build process.

GitHub user romeara opened a pull request:

    https://github.com/apache/bigtop/pull/279

    Add Basic Travic CI Execution

    As per [BIGTOP-2868](https://issues.apache.org/jira/browse/BIGTOP-2868), start by adding a basic build script to build packages, allowing some preliminary validation of pull request viability
    
    This configuration currently uses the maven commands - the newer Gradle commands failed to cooperate (I will add comments below with specifics)

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/romeara/bigtop romeara/BIGTOP-2868

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/bigtop/pull/279.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #279
    
----
commit 559aa9f117a40974f86a694a1b93aa3fb35e621b
Author: Ryan O'Meara <romeara@live.com>
Date:   2017-08-10T03:58:10Z

    Setup Travis is minimum configuration
    
    Add a bare-bones travis configuration file and badge linking to build details

commit acca5120298b24c374639b301bcf8653f882d816
Author: Ryan O'Meara <romeara@live.com>
Date:   2017-08-10T04:05:44Z

    Update approach to utilize "canned environment" approach

commit b111e9c8e377b3aa2f619940b22b5393de593666
Author: Ryan O'Meara <romeara@live.com>
Date:   2017-08-10T04:13:49Z

    Step back to documented command

commit 85ff96741bf7c599d7ab02ac24d5074bd6c46373
Author: Ryan O'Meara <romeara@live.com>
Date:   2017-08-10T04:22:58Z

    Step back to assemble

commit 182c782e28087f2e4758083086f1a13a688bf4bb
Author: Ryan O'Meara <romeara@live.com>
Date:   2017-08-10T14:51:36Z

    Back to basics

----


I put up a pull request at https://github.com/apache/bigtop/pull/279 with what I have working, and comments on the other things I tried that didn't quite work out. I'll be more than happy to adjust it further, just a little confused with all the scripts and things what is what, so I thought having something to poke at and adjust from would be useful

Attach a patch , `git show > bigtop.patch` , to this JIRA, this is a small diff and its non-destructive, I'll review and merge unless anyone else has issues with it.

Attaching patch as requested on pull request by jayunit100

[~romeara] can you add a comment as to why its using your personal travis instance ? I'm ok with it for now as long as

- theres a decent breadcrumb as to why we're using your travis
- and a statement about how we can go about  updating  it to something official at some point.

I can update it now - I wanted to make sure it was working using my fork and forgot to change the url. I will update the pr and upload a new patch

[~jayunit100] Patch file "bigtop.patch" is updated to the correct repository in the README.md badge

diffs look a little funny but its +1 to merge as far as im concerned..  [~evans_ye] can you merge this ?    need to get my ASF creds onto this machine at some point: ).

LGTM. Let me commit this.

Oops the bigtop.patch file can't apply. You can refer to our guide for [generating patch files|https://cwiki.apache.org/confluence/display/BIGTOP/How+to+Contribute#HowtoContribute-Howtogeneratepatchesbyformattingpatchfiles].

I've committed the patch via PR. Thanks [~romeara].


Github user romeara commented on the issue:

    https://github.com/apache/bigtop/pull/279
  
    @jayunit100 If I recall, I believe you took the patch and merged that way? May this PR be closed?


Github user evans-ye commented on the issue:

    https://github.com/apache/bigtop/pull/279
  
    I've merged this. You can close this PR now.


Github user romeara commented on the issue:

    https://github.com/apache/bigtop/pull/279
  
    @evans-ye Ok, thank you!


Github user romeara closed the pull request at:

    https://github.com/apache/bigtop/pull/279


