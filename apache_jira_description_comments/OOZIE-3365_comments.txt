The log looked like following - 
I see reran of the workflow job.

{code}
2018-04-24 21:09:20,684 DEBUG ReRunXCommand:526 [qtp -85] - SERVER[localhost] USER[saley] GROUP[-] TOKEN[-] APP[-] JOB[123-123-oozie-local-W] ACTION[] Skipnode size are to rerun from FAIL nodes :4
2018-04-24 21:09:20,684 DEBUG ReRunXCommand:526 [qtp -85] - SERVER[localhost] USER[saley] GROUP[-] TOKEN[-] APP[-] JOB[123-123-oozie-local-W] ACTION[] SkipNode List :should_run,fail,transform,:start:,
2018-04-24 21:09:20,688 DEBUG ReRunXCommand:526 [qtp -85] - SERVER[localhost] USER[saley] GROUP[-] TOKEN[-] APP[-] JOB[123-123-oozie-local-W] ACTION[] Acquired lock for [123-123-oozie-local-W] in [rerun]
{code}

Then the action failed

{code}
2018-04-24 22:49:12,000 DEBUG EventHandlerService:526 [pool-1-thread-5] - SERVER[localhost] USER[-] GROUP[-] TOKEN[-] APP[appname] JOB[123-123-oozie-local-W] ACTION[123-123-oozie-local-W@appname] Processing event : ID: 123-123-oozie-local-W@appname, MsgType:JOB, AppType: WORKFLOW_ACTION, Appname: appname, Status: FAILURE
2018-04-24 22:49:12,001 DEBUG SLACalculatorMemory:526 [pool-1-thread-5] - SERVER[localhost] USER[-] GROUP[-] TOKEN[-] APP[-] JOB[-] ACTION[-] Received addJobStatus request for job [123-123-oozie-local-W@appname] jobStatus = [ERROR], jobEventStatus = [FAILURE], startTime = [4/24/18 9:09 PM], endTime = [4/24/18 10:49 PM] 
{code}

Workflow should be in failed state after that. But I see CoordActionCheckXCommand checking the coord action status and finding workflow status as running.

{code}
2018-04-24 21:50:41,024 WARN CoordActionCheckXCommand:523 [pool-12-thread-241] - SERVER[localhost] USER[-] GROUP[-] TOKEN[-] APP[-] JOB[123-123-oozie-local-C] ACTION[123-123-oozie-local-C@896] Unexpected workflow 123-123-oozie-local-W STATUS RUNNING
2018-04-24 21:50:41,026 DEBUG CoordActionCheckXCommand:526 [pool-12-thread-241] - SERVER[localhost] USER[-] GROUP[-] TOKEN[-] APP[-] JOB[123-123-oozie-local-C] ACTION[123-123-oozie-local-C@896] Released lock for [123-123-oozie-local-C] in [coord_action_check]
2018-04-24 21:56:41,202 DEBUG CoordActionCheckXCommand:526 [pool-12-thread-51] - SERVER[localhost] USER[saley] GROUP[users] TOKEN[-] APP[app-pipeline] JOB[123-123-oozie-local-C] ACTION[123-123-oozie-local-C@896] Acquired lock for [123-123-oozie-local-C] in [coord_action_check]
2018-04-24 21:56:41,203 DEBUG CoordActionCheckXCommand:526 [pool-12-thread-51] - SERVER[localhost] USER[saley] GROUP[users] TOKEN[-] APP[app-pipeline] JOB[123-123-oozie-local-C] ACTION[123-123-oozie-local-C@896] Execute command [coord_action_check] key [123-123-oozie-local-C]
2018-04-24 21:56:41,203 WARN CoordActionCheckXCommand:523 [pool-12-thread-51] - SERVER[localhost] USER[saley] GROUP[users] TOKEN[-] APP[app-pipeline] JOB[123-123-oozie-local-C] ACTION[123-123-oozie-local-C@896] Unexpected workflow 123-123-oozie-local-W STATUS RUNNING
{code}

 

1.
We skip the nodes here, including the subworkflow as we don't want to create new subworkflow on rerun. We just want to rerun the failed actions from that subworkflow.
Since we skip, subworkflow node is not deleted.

https://github.com/apache/oozie/blob/master/core/src/main/java/org/apache/oozie/command/wf/ReRunXCommand.java#L219-L223

{code}
if (!nodesToSkip.contains(actions.get(i).getName()) &&
 !(conf.getBoolean(OozieClient.RERUN_FAIL_NODES, false) &&
 SubWorkflowActionExecutor.ACTION_TYPE.equals(actions.get(i).getType()))) {
 deleteList.add(actions.get(i));
 LOG.info("Deleting Action[\{0}] for re-run", actions.get(i).getId());

{code}

2.
Here we check if action id exists in database to avoid case of reinserting same node multiple times. 
In case of subworkflow action, action id exists (because we did not delete in step 1 above) and we skip further processing. This leaves workflow in RUNNING state. 
The solution is to add check for subworkflow.


https://github.com/apache/oozie/blob/master/core/src/main/java/org/apache/oozie/command/wf/SignalXCommand.java#L369-L380
{code}
if(!skipAction) {
 try {
 // Make sure that transition node for a forked action
 // is inserted only once
 WorkflowActionQueryExecutor.getInstance().get(WorkflowActionQuery.GET_ACTION_ID_TYPE_LASTCHECK,
 newAction.getId());

continue;
 } catch (JPAExecutorException jee) {
 }
}

{code}

 

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3365

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/git].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3057
.    {color:orange}Tests failed at first run:{color}
TestSubWorkflowActionExecutor#testSubWorkflowRerun
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:green}*+1 Overall result, good!, no -1s*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/885/



Thanks for the contribution [~satishsaley]! +1

Committed to {{master}}.

Closing issue; Oozie 5.2.0 is released

