Error Message
{noformat}
Value of: status.ok()
  Actual: false
Expected: true
Stacktrace

/data/jenkins/workspace/impala-cdh5-trunk-core/repos/Impala/be/src/rpc/rpc-mgr-test.cc:239
Value of: status.ok()
  Actual: false
Expected: true
{noformat}

The failing line:
{noformat}

  RpcController controller;
  srand(0);
  // Randomly invoke either services to make sure a RpcMgr can host multiple
  // services at the same time.
  for (int i = 0; i < 100; ++i) {
    controller.Reset();
    if (random() % 2 == 0) {
      PingRequestPB request;
      PingResponsePB response;
      kudu::Status status = ping_proxy->Ping(request, &response, &controller);
      ASSERT_TRUE(status.ok());
      ASSERT_EQ(response.int_response(), 42);
    } else {
      ScanMemRequestPB request;
      ScanMemResponsePB response;
      SetupScanMemRequest(&request, &controller);
      kudu::Status status = scan_mem_proxy->ScanMem(request, &response, &controller);
      ASSERT_TRUE(status.ok()); <<<------
    }
  }
{noformat}

{noformat}
W1204 08:49:31.593200 13056 mini_kdc.cc:148] Time spent starting KDC: real 0.161s       user 0.001s     sys 0.007s
I1204 08:49:31.629060 13056 authentication.cc:802] Using custom Kerberos configuration file at bc20-a871-c295-f6ca/krb5kdc/krb5.conf
I1204 08:49:31.629201 13056 authentication.cc:720] Using internal kerberos principal "impala-test/127.0.0.1@KRBTEST.COM"
I1204 08:49:31.629212 13056 authentication.cc:1064] Internal communication is authenticated with Kerberos
I1204 08:49:31.629396 13056 authentication.cc:844] Waiting for Kerberos ticket for principal: impala-test/127.0.0.1@KRBTEST.COM
I1204 08:49:31.629444 13177 authentication.cc:511] Registering impala-test/127.0.0.1@KRBTEST.COM, keytab file bc20-a871-c295-f6ca/krb5kdc/impala-test_127.0.0.1.keytab
I1204 08:49:31.645689 13056 authentication.cc:847] Kerberos ticket granted to impala-test/127.0.0.1@KRBTEST.COM
I1204 08:49:31.645872 13056 authentication.cc:720] Using external kerberos principal "impala-test/127.0.0.1@KRBTEST.COM"
I1204 08:49:31.645886 13056 authentication.cc:1080] External communication is authenticated with Kerberos
E1204 08:49:31.660936 13212 authentication.cc:172] SASL message (General): GSSAPI Error: Unspecified GSS failure.  Minor code may provide more information (Cannot determine realm for numeric host address)
W1204 08:49:31.661526 13213 negotiation.cc:302] Failed RPC negotiation. Trace:
1204 08:49:31.659976 (+     0us) reactor.cc:479] Submitting negotiation task for server connection from 127.0.0.1:41183
1204 08:49:31.660359 (+   383us) server_negotiation.cc:169] Beginning negotiation
1204 08:49:31.660363 (+     4us) server_negotiation.cc:358] Waiting for connection header
1204 08:49:31.660376 (+    13us) server_negotiation.cc:366] Connection header received
1204 08:49:31.660405 (+    29us) server_negotiation.cc:322] Received NEGOTIATE NegotiatePB request
1204 08:49:31.660409 (+     4us) server_negotiation.cc:407] Received NEGOTIATE request from client
1204 08:49:31.660425 (+    16us) server_negotiation.cc:334] Sending NEGOTIATE NegotiatePB response
1204 08:49:31.661207 (+   782us) server_negotiation.cc:190] Negotiated authn=SASL
1204 08:49:31.661366 (+   159us) negotiation.cc:293] Negotiation complete: Network error: Server connection negotiation failed: server connection from 127.0.0.1:41183: BlockingRecv error: Recv() got EOF from remote (error 108)
Metrics: {"server-negotiator.queue_time_us":337,"thread_start_us":177,"threads_started":1}
{noformat}

Searching online about the error {{(Cannot determine realm for numeric host address)}}, it seems to suggest that 127.0.0.1 cannot be resolved but checking on {{/etc/hosts}} on the test host seems to suggest otherwise. Still investigating. 

Looks like this is a kerberos bug in Kerberos 1.10, which Kudu worked around by doing this:
https://github.com/cloudera/kudu/commit/ba2ae3de4a7c43ff2f5873e822410e066ea99667

I'll run a private build and see if it fixes it before submitting a patch. [~philip] If you think we should disable the test in the meantime to unblock builds over the next 4-5 hours, I can submit a patch to do so.

I submitted a patch to revert the offending patch.
https://gerrit.cloudera.org/#/c/8763/

The kudu commit I mentioned above is already in our codebase, but it doesn't seem to be working for some reason. From the commit message, that patch basically tries to workaround the following problem by overriding and wrapping around the kerberos library call krb5_get_host_realm() with a custom implementation:
http://krbdev.mit.edu/rt/Ticket/Display.html?id=7603

We need to investigate why it isn't working.

Status update:
Currently testing a private build with a potential fix.

Fix in:

https://github.com/apache/impala/commit/d8ae8801ae668f6ba4771c5794b80f7c9262cd65

Commit bf892858a088a9490a32ea8692055cbd2ad254fe in impala's branch refs/heads/2.x from [~sailesh]
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=bf89285 ]

IMPALA-6477: Fix flakiness with thrift-server-test

THe ThriftKerberizedParamsTest.SslConnectivity backend test verifies
that when kerberos and TLS are switched on, we cannot perform a
negotiation with a non TLS enabled client.

The test works as expected, however, the error messages can be
different in some scenarios. This patch just updates the test to
expect a different error message that has the same effect.

This change also links KRB5_REALM_OVERRIDE back with the
rpc-mgr-test, as one test run showed a similar failure as
IMPALA-6268. It's possible that this is due to IMPALA-6448.

Change-Id: I6294447416ecccc864b842013487f4d93afadc6b
Reviewed-on: http://gerrit.cloudera.org:8080/9247
Reviewed-by: Alex Behm <alex.behm@cloudera.com>
Tested-by: Impala Public Jenkins


Commit 8abc166e113a54e7921796fd1ddfebf6bfdc3982 in impala's branch refs/heads/master from [~sailesh]
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=8abc166 ]

IMPALA-6477: Fix flakiness with thrift-server-test

THe ThriftKerberizedParamsTest.SslConnectivity backend test verifies
that when kerberos and TLS are switched on, we cannot perform a
negotiation with a non TLS enabled client.

The test works as expected, however, the error messages can be
different in some scenarios. This patch just updates the test to
expect a different error message that has the same effect.

This change also links KRB5_REALM_OVERRIDE back with the
rpc-mgr-test, as one test run showed a similar failure as
IMPALA-6268. It's possible that this is due to IMPALA-6448.

Change-Id: I6294447416ecccc864b842013487f4d93afadc6b
Reviewed-on: http://gerrit.cloudera.org:8080/9247
Reviewed-by: Alex Behm <alex.behm@cloudera.com>
Tested-by: Impala Public Jenkins


