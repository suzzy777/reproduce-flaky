More recent failure

https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/IntegrationTest/builds/319

{noformat}
org.apache.geode.cache.ProxyJUnitTest > testExpiration FAILED
    java.lang.AssertionError: expected:<0> but was:<1>
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotEquals(Assert.java:834)
        at org.junit.Assert.assertEquals(Assert.java:645)
        at org.junit.Assert.assertEquals(Assert.java:631)
        at org.apache.geode.cache.ProxyJUnitTest.testExpiration(ProxyJUnitTest.java:1130)
{noformat}

Fixed via b73f8bbde3e19942093e14f090789ee7bec5a299 on GEODE-5607

Recent CI failures indicate that this test is still flaky after the recent refactoring.

Recent CI Failure: https://concourse.apachegeode-ci.info/builds/24706


Commit cd17350f7f5c7b539a7558b07e347c7138c364f9 in geode's branch refs/heads/develop from [~demery]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=cd17350 ]

GEODE-5551: Replace thread interleaving mechanism in LoginHandler...Test

The MultithreadedTestCase class is unreliable under heavy contention for
CPUs, causing the LoginHandlerInterceptorJUnitTest's thread safety test
to fail intermittently in CI. We replaced MultithreadedTestCase (in this
one class) with a more reliable Semaphore-based mechanism to coordinate
the threads.

Also:
* Used ConcurrencyRule to run the multiple threads and collect errors.
* Added geode-junit to geode-web test classpath, to pick up
ConcurrencyRule.
* Simplified the thread-safety test to focus on thread-safety, leaving
basic correctness to other tests.

Signed-off-by: Helena Bales <hbales@pivotal.io>

Commit cd17350f7f5c7b539a7558b07e347c7138c364f9 in geode's branch refs/heads/feature/GEODE-5772 from [~demery]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=cd17350 ]

GEODE-5551: Replace thread interleaving mechanism in LoginHandler...Test

The MultithreadedTestCase class is unreliable under heavy contention for
CPUs, causing the LoginHandlerInterceptorJUnitTest's thread safety test
to fail intermittently in CI. We replaced MultithreadedTestCase (in this
one class) with a more reliable Semaphore-based mechanism to coordinate
the threads.

Also:
* Used ConcurrencyRule to run the multiple threads and collect errors.
* Added geode-junit to geode-web test classpath, to pick up
ConcurrencyRule.
* Simplified the thread-safety test to focus on thread-safety, leaving
basic correctness to other tests.

Signed-off-by: Helena Bales <hbales@pivotal.io>

Commit cd17350f7f5c7b539a7558b07e347c7138c364f9 in geode's branch refs/heads/feature/Micrometer from [~demery]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=cd17350 ]

GEODE-5551: Replace thread interleaving mechanism in LoginHandler...Test

The MultithreadedTestCase class is unreliable under heavy contention for
CPUs, causing the LoginHandlerInterceptorJUnitTest's thread safety test
to fail intermittently in CI. We replaced MultithreadedTestCase (in this
one class) with a more reliable Semaphore-based mechanism to coordinate
the threads.

Also:
* Used ConcurrencyRule to run the multiple threads and collect errors.
* Added geode-junit to geode-web test classpath, to pick up
ConcurrencyRule.
* Simplified the thread-safety test to focus on thread-safety, leaving
basic correctness to other tests.

Signed-off-by: Helena Bales <hbales@pivotal.io>

