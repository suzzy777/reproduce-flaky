While prototyping a fix, I ran into a different failure. I suspect this isn't caused by the local changes I've made, but haven't ruled that out yet:
{quote}    org.apache.kafka.connect.errors.ConnectException: Failed to list offsets for topic partitions.

        at app//org.apache.kafka.connect.util.TopicAdmin.retryEndOffsets(TopicAdmin.java:780)

        at app//org.apache.kafka.connect.util.TopicAdminTest.retryEndOffsetsShouldRetryWhenTopicNotFound(TopicAdminTest.java:572)

 

        Caused by:

        org.apache.kafka.connect.errors.ConnectException: Error while getting end offsets for topic 'myTopic' on brokers at \{retry.backoff.ms=0}

            at app//org.apache.kafka.connect.util.TopicAdmin.endOffsets(TopicAdmin.java:741)

            at app//org.apache.kafka.connect.util.TopicAdmin.lambda$retryEndOffsets$7(TopicAdmin.java:771)

            at app//org.apache.kafka.connect.util.RetryUtil.retryUntilTimeout(RetryUtil.java:87)

            at app//org.apache.kafka.connect.util.TopicAdmin.retryEndOffsets(TopicAdmin.java:770)

            ... 1 more

 

            Caused by:

            java.util.concurrent.ExecutionException: java.lang.ClassCastException: class org.apache.kafka.common.requests.ListOffsetsResponse cannot be cast to class org.apache.kafka.common.requests.MetadataResponse (org.apache.kafka.common.requests.ListOffsetsResponse and org.apache.kafka.common.requests.MetadataResponse are in unnamed module of loader 'app')

                at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395)

                at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1999)

                at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:165)

                at org.apache.kafka.connect.util.TopicAdmin.endOffsets(TopicAdmin.java:718)

                ... 4 more

 

                Caused by:

                java.lang.ClassCastException: class org.apache.kafka.common.requests.ListOffsetsResponse cannot be cast to class org.apache.kafka.common.requests.MetadataResponse (org.apache.kafka.common.requests.ListOffsetsResponse and org.apache.kafka.common.requests.MetadataResponse are in unnamed module of loader 'app')

                    at org.apache.kafka.clients.admin.internals.PartitionLeaderStrategy.handleResponse(PartitionLeaderStrategy.java:144)

                    at org.apache.kafka.clients.admin.internals.AdminApiDriver.onResponse(AdminApiDriver.java:226)

                    at org.apache.kafka.clients.admin.KafkaAdminClient$34.handleResponse(KafkaAdminClient.java:4216)

                    at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.handleResponses(KafkaAdminClient.java:1236)

                    at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1389)

                    at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1312)

                    at java.base/java.lang.Thread.run(Thread.java:829)
{quote}

Ran into a third kind of failure while running the test as-is on trunk:
{quote}    org.apache.kafka.connect.errors.ConnectException: Failed to list offsets for topic partitions.

        at app//org.apache.kafka.connect.util.TopicAdmin.retryEndOffsets(TopicAdmin.java:777)

        at app//org.apache.kafka.connect.util.TopicAdminTest.retryEndOffsetsShouldRetryWhenTopicNotFound(TopicAdminTest.java:570)

 

        Caused by:

        org.apache.kafka.connect.errors.ConnectException: Fail to list offsets for topic partitions after 2 attempts.  Reason: Timed out while waiting to get end offsets for topic 'myTopic' on brokers at \{retry.backoff.ms=0}

            at app//org.apache.kafka.connect.util.RetryUtil.retryUntilTimeout(RetryUtil.java:106)

            at app//org.apache.kafka.connect.util.RetryUtil.retryUntilTimeout(RetryUtil.java:56)

            at app//org.apache.kafka.connect.util.TopicAdmin.retryEndOffsets(TopicAdmin.java:768)

            ... 1 more

 

            Caused by:

            org.apache.kafka.common.errors.TimeoutException: Timed out while waiting to get end offsets for topic 'myTopic' on brokers at \{retry.backoff.ms=0}

 

                Caused by:

                java.util.concurrent.ExecutionException: org.apache.kafka.common.errors.TimeoutException: Call(callName=listOffsets(api=METADATA), deadlineMs=1693359918291, tries=30, nextAllowedTryMs=1693359918431) timed out at 1693359918331 after 30 attempt(s)

                    at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395)

                    at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1999)

                    at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:165)

                    at org.apache.kafka.connect.util.TopicAdmin.endOffsets(TopicAdmin.java:716)

                    at org.apache.kafka.connect.util.TopicAdmin.lambda$retryEndOffsets$7(TopicAdmin.java:769)

                    at org.apache.kafka.connect.util.RetryUtil.retryUntilTimeout(RetryUtil.java:87)

                    at org.apache.kafka.connect.util.RetryUtil.retryUntilTimeout(RetryUtil.java:56)

                    at org.apache.kafka.connect.util.TopicAdmin.retryEndOffsets(TopicAdmin.java:768)

                    at org.apache.kafka.connect.util.TopicAdminTest.retryEndOffsetsShouldRetryWhenTopicNotFound(TopicAdminTest.java:570)

 

                    Caused by:

                    org.apache.kafka.common.errors.TimeoutException: Call(callName=listOffsets(api=METADATA), deadlineMs=1693359918291, tries=30, nextAllowedTryMs=1693359918431) timed out at 1693359918331 after 30 attempt(s)

 

                        Caused by:

                        org.apache.kafka.common.errors.DisconnectException: Cancelled listOffsets(api=METADATA) request with correlation id 62 due to node 0 being disconnected
{quote}

