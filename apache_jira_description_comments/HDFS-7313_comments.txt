Full disclosure: Support for configuration was discussed once before in HDFS-6606, and the decision at that time was to not make it configurable.  See several comments starting here:

https://issues.apache.org/jira/browse/HDFS-6606?focusedCommentId=14145832&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14145832

However, since then, I've heard feedback that it would be preferable to maintain the existing behavior of 3DES or RC4 in existing clusters by default, and activate AES only if configured explicitly.  This is seen as a safety net for managing rollout of the new feature in 2.6.0.  There is no argument against AES as the superior choice, so we can revisit switching it to the default in a future release after some stabilization time.

[~hitliuyi] and [~atm], you participated in the HDFS-6606 discussion.  What do you think of this patch?

Here is a summary of the changes.
* {{SecureMode.apt.vm}}: While I was working on this, I decided to update the docs to cover our new encryption capabilities.
* {{GenericTestUtils}}: Added new test helper method.
* {{DFSConfigKeys}}/{{hdfs-default.xml}}}: Defined new configuration property for specifying cipher suites used during DataTransferProtocol encryption.
* {{DataTransferSaslUtil}}: On the server side, only negotiate AES if it's configured.
* {{SaslDataTransferClient}}: On the client side, only negotiate AES if it's configured.
* {{DataXceiver}}: This fixes a regression that I had introduced in my HDFS-2856 patch.  The fix restores some special case handling from Aaron's earlier HDFS-3637 patch.  We didn't catch the regression earlier because of a bug in the tests.  (See below.)
* {{TestEncryptedTransfer}}: I changed test assertions on existing tests to assert that AES is not used, and I added a new test with AES configured.  I discovered that some of the assertions in this suite have not been running due to an erroneous check on {{resolverClazz}}.  If it's ever non-null, then it's going to be {{TestTrustedChannelResolver}}, effectively meaning that the assertions were never running.  I fixed this and confirmed that the assertions are running now.


{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12678354/HDFS-7313.1.patch
  against trunk revision 81fe8e4.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancer

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8608//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8608//console

This message is automatically generated.

It's nice, Chris, thanks. Actually I also thought it was necessary to have option for whether to use AES cipher suite. So I agree with this JIRA.

I go through the patch, it's good to me. +1 pending Jenkins.

Thank you for the review, Yi.  I committed this to trunk, branch-2 and branch-2.6.

FAILURE: Integrated in Hadoop-trunk-Commit #6405 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6405/])
HDFS-7313. Support optional configuration of AES cipher suite on DataTransferProtocol. Contributed by Chris Nauroth. (cnauroth: rev 5573b3476a5a6fce0ac99c654a9a9ec90f744a20)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiver.java
* hadoop-common-project/hadoop-common/src/site/apt/SecureMode.apt.vm
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/test/GenericTestUtils.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptedTransfer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml


FAILURE: Integrated in Hadoop-Yarn-trunk #729 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/729/])
HDFS-7313. Support optional configuration of AES cipher suite on DataTransferProtocol. Contributed by Chris Nauroth. (cnauroth: rev 5573b3476a5a6fce0ac99c654a9a9ec90f744a20)
* hadoop-common-project/hadoop-common/src/site/apt/SecureMode.apt.vm
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiver.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptedTransfer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/test/GenericTestUtils.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.java


FAILURE: Integrated in Hadoop-Hdfs-trunk #1918 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1918/])
HDFS-7313. Support optional configuration of AES cipher suite on DataTransferProtocol. Contributed by Chris Nauroth. (cnauroth: rev 5573b3476a5a6fce0ac99c654a9a9ec90f744a20)
* hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* hadoop-common-project/hadoop-common/src/site/apt/SecureMode.apt.vm
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/test/GenericTestUtils.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptedTransfer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiver.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.java


FAILURE: Integrated in Hadoop-Mapreduce-trunk #1943 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1943/])
HDFS-7313. Support optional configuration of AES cipher suite on DataTransferProtocol. Contributed by Chris Nauroth. (cnauroth: rev 5573b3476a5a6fce0ac99c654a9a9ec90f744a20)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* hadoop-common-project/hadoop-common/src/site/apt/SecureMode.apt.vm
* hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiver.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/test/GenericTestUtils.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptedTransfer.java


I haven't looked into this at all yet, but are we completely positive that the TestBalancer failure is unrelated? Asking because I recall that the balancer does need to support wire encryption of the DataTransferProtocol.

Apologies if it's just a flaky test failure - like I said, I haven't looked at it at all yet.

bq. I haven't looked into this at all yet, but are we completely positive that the TestBalancer failure is unrelated?

Sorry, I forgot to address this in my commit comment.  I investigated last night before committing.  It's unrelated.  We've seen this test flake out elsewhere.  The failure would not repro for me locally.

Cool, I figured that might be the case. Thanks for confirming, Chris.

No problem!  One more note: we actually cover the combination of encryption + balancer in a separate test suite: {{TestBalancerWithEncryptedTransfer}}.  That one did pass in the Jenkins run.

