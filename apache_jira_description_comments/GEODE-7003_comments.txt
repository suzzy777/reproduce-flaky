There is a race condition within the test. When the test calls dataSource.getConnection(), that method will throw an (expected) exception and expire the connection from the connection pool. There is a background thread which goes through all the expired connections and calls Connection.close(). If this background thread calls close() while the main thread is in the middle of calling BrokeredConnection.isClosed(), the method isClosed() can throw a SQLNonTransientConnectionException. 

Commit 9f0f02041e6084fb4ef8903c08b6c8fa04329e52 in geode's branch refs/heads/develop from Aaron Lindsey
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=9f0f020 ]

GEODE-7003: Fix flaky tests in GemFireTransactionDataSourceIntegrationTest

There is a race condition within the test. When the test calls dataSource.getConnection(), that method will throw an (expected) exception and expire the connection from the connection pool. There is a background thread which goes through all the expired connections and calls Connection.close(). If this background thread calls close() while the main thread is in the middle of calling BrokeredConnection.isClosed(), the method isClosed() can throw a SQLNonTransientConnectionException.


