Seen on 4.0 and trunk so far.

I hit again today in 4.0 - https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1879/workflows/12075004-bbf2-463b-99d0-11ee321c519a/jobs/14865/tests#failed-test-0

Seen again on 4.0: https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/286/workflows/4a1fc543-9733-4c95-b7b9-bd7dd7145a24/jobs/2258

Seen on 4.0 https://app.circleci.com/pipelines/github/yifan-c/cassandra/419/workflows/448022ca-97f3-4010-9015-a4cdc9cb27cd/jobs/4278/tests#failed-test-0

Super old and nothing in Butler and jenkins history for [4.0|https://ci-cassandra.apache.org/job/Cassandra-4.0/644/testReport/org.apache.cassandra.distributed.upgrade/DropCompactStorageTest/], [4.1|https://ci-cassandra.apache.org/job/Cassandra-4.1/414/testReport/org.apache.cassandra.distributed.upgrade/DropCompactStorageTest/], [5.0|https://ci-cassandra.apache.org/job/Cassandra-5.0/27/testReport/org.apache.cassandra.distributed.upgrade/DropCompactStorageTest/] and [trunk|http://https://ci-cassandra.apache.org/job/Cassandra-trunk/1700/testReport/org.apache.cassandra.distributed.upgrade/DropCompactStorageTest/history/] is clean as well. I vote we close as can't repro and reopen if needed.

Butler shows only the last 30 runs from Jenkins. We know from experience that is not enough history to prove flakiness/no flakiness. I am +1 to close the ticket after clean run of a few hundred times in CircleCI. Thanks

I must be doing sthg wrong bc on 4.0 it doesn't seem to pass at all. Can you see if I did sthg silly [~e.dimitrova] [here|https://app.circleci.com/pipelines/github/bereng/cassandra/1070/workflows/edfa498e-938b-48cd-9e1f-9a795753c838/jobs/28988]?

On 5.0 everything seems [fine|https://app.circleci.com/pipelines/github/bereng/cassandra/1071/workflows/8a93b6aa-6da6-4374-a3e9-c734510248fd/jobs/29085]. So I'd say this is a 4.0 only issue. Wdyt?

{quote}Can you see if I did sthg silly [~e.dimitrova] [here|https://app.circleci.com/pipelines/github/bereng/cassandra/1070/workflows/edfa498e-938b-48cd-9e1f-9a795753c838/jobs/28988]?
{quote}
I don't think you did anything wrong. I see "{*}22 tests failed{*}  out of 48," which is unsurprising because [~adelapena] reported it "~68% flaky on 4.0 and ~2% flaky on trunk."

However, we should also check 4.1, as the ticket was reported for trunk when we were still on 4.1-trunk. But on forking, a script moved all tickets to point to the next version - in this case, 5.0.

Unfortunately, the CircleCI links in the ticket description have expired, so I cannot tell how many times the test was run to get the stated results. 

Let's mark the ticket 4.0+, start fixing it at the lowest branch, where it is almost always flaky, and then see how things change in newer branches.  

Ok yes that's what I was getting at, this is no 5.0 blocker imo as well.

After playing a bit here I see this is a test issue imo. There's a race when [shutting down|https://github.com/bereng/cassandra/blob/ee79a89452cf991e0f7eaabf8bd71cabe333343e/test/distributed/org/apache/cassandra/distributed/impl/Instance.java#L811]  which is at least better than a product issue... The difficulty comes from the non-matching code lines even when looking at the correct jar builds.

{quote}The difficulty comes from the non-matching code lines even when looking at the correct jar builds.
{quote}
I am not sure I understand what you mean here. 

Oh apologies. If we look at the exceptions of the failed tests I'll copy here before they disappear:


{noformat}
java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException: org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor@454d32c4[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 218] did not terminate on time
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.cassandra.distributed.upgrade.UpgradeTestBase$TestCase.run(UpgradeTestBase.java:227)
	at org.apache.cassandra.distributed.upgrade.DropCompactStorageTest.testDropCompactStorage(DropCompactStorageTest.java:49)
Caused by: java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException: org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor@454d32c4[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 218] did not terminate on time
	at org.apache.cassandra.distributed.impl.IsolatedExecutor$ThrowingRunnable.lambda$toRunnable$0(IsolatedExecutor.java:235)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.cassandra.concurrent.NamedThreadFactory.lambda$threadLocalDeallocator$0(NamedThreadFactory.java:83)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException: org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor@454d32c4[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 218] did not terminate on time
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:192)
	at org.apache.cassandra.distributed.impl.IsolatedExecutor$ThrowingRunnable.lambda$toRunnable$0(IsolatedExecutor.java:231)
Caused by: java.lang.RuntimeException: java.util.concurrent.TimeoutException: org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor@454d32c4[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 218] did not terminate on time
	at org.apache.cassandra.utils.Throwables.maybeFail(Throwables.java:62)
	at org.apache.cassandra.distributed.impl.Instance.lambda$shutdown$28(Instance.java:810)
	at org.apache.cassandra.distributed.impl.IsolatedExecutor.lambda$null$8(IsolatedExecutor.java:114)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
Caused by: java.util.concurrent.TimeoutException: org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor@454d32c4[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 218] did not terminate on time
	at org.apache.cassandra.utils.ExecutorUtils.awaitTerminationUntil(ExecutorUtils.java:107)
	at org.apache.cassandra.utils.ExecutorUtils.awaitTermination(ExecutorUtils.java:96)
	at org.apache.cassandra.utils.ExecutorUtils.shutdownNowAndWait(ExecutorUtils.java:139)
	at org.apache.cassandra.concurrent.StageManager.shutdownAndWait(StageManager.java:128)
	at org.apache.cassandra.distributed.impl.Instance.lambda$null$26(Instance.java:803)
	at org.apache.cassandra.distributed.impl.Instance.lambda$parallelRun$32(Instance.java:968)
{noformat}

You'll notice {{Instance.java:810}} is being mentioned and that doesn't match a line of code atm. Same for other lines of code, they match to blank lines. And in theory I am looking at the right source from the dtests jar build. So there is some SHA dance going on here I haven't pinned down yet. Everything should match to HEAD as we're not testing against any tag.


