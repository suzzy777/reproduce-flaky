[~isapego] please review.

[~ptupitsyn] looks good to me.

{panel:title=Branch: [pull/10030/head] Base: [master] : Possible Blockers (18)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Control Utility (Zookeeper){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=6583572]]

{color:#d04437}PDS 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=6583597]]
* IgnitePdsTestSuite2: CdcSelfTest.testCdcSingleton[consistentId=true, wal=LOG_ONLY, persistence=false] - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Thin client: Node.js{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=6583530]]

{color:#d04437}Open Census{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=6583585]]

{color:#d04437}JCache TCK 1.1{color} [[tests 0 TIMEOUT |https://ci.ignite.apache.org/viewLog.html?buildId=6583579]]

{color:#d04437}Geospatial Indexing{color} [[tests 0 TIMEOUT |https://ci.ignite.apache.org/viewLog.html?buildId=6583577]]

{color:#d04437}Queries 4{color} [[tests 12|https://ci.ignite.apache.org/viewLog.html?buildId=6583635]]
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testDecimalDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=PRIMARY_SYNC, persistenceEnabled=false, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testBinaryDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testBigIntDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testTimestampDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testDoubleDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testRealDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testDecimalDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testVarcharDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testUUIDDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testCharDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite4: SqlDataTypesCoverageTests.testBooleanDataType[atomicityMode=ATOMIC, cacheMode=PARTITIONED, ttlFactory=null, backups=2, evictionFactory=null, onheapCacheEnabled=false, writeSyncMode=FULL_SYNC, persistenceEnabled=true, useBinaryArrays=false] - Test has low fail rate in base branch 0,0% and is not flaky
... and 1 tests blockers

{panel}
{panel:title=Branch: [pull/10030/head] Base: [master] : New Tests (24)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Platform .NET (Windows){color} [[tests 12|https://ci.ignite.apache.org/viewLog.html?buildId=6583535]]
* {color:#013220}exe: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;custom-grp-partitioned&quot;,&quot;testAtomicLong&quot;,Partitioned,1) - PASSED{color}
* {color:#013220}exe: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;custom-grp-replicated&quot;,&quot;testAtomicLong&quot;,Replicated,0) - PASSED{color}
* {color:#013220}exe: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;default-grp-partitioned&quot;,null,Partitioned,0) - PASSED{color}
* {color:#013220}exe: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;default-grp-replicated&quot;,null,Replicated,2) - PASSED{color}
* {color:#013220}exe: AtomicLongClientTests.TestCompareExchange - PASSED{color}
* {color:#013220}exe: AtomicLongClientTests.TestCreateIgnoresInitialValueWhenAlreadyExists - PASSED{color}
* {color:#013220}exe: AtomicLongClientTests.TestIsClosed - PASSED{color}
* {color:#013220}exe: AtomicLongClientTests.TestOperationsThrowExceptionWhenAtomicLongDoesNotExist - PASSED{color}
* {color:#013220}exe: AtomicLongClientTests.TestCreateSetsInitialValue - PASSED{color}
* {color:#013220}exe: AtomicLongClientTests.TestCustomConfigurationPropagatesToServer - PASSED{color}
* {color:#013220}exe: AtomicLongClientTests.TestExchange - PASSED{color}
... and 1 new tests

{color:#00008b}Platform .NET (Core Linux){color} [[tests 12|https://ci.ignite.apache.org/viewLog.html?buildId=6583529]]
* {color:#013220}dll: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;default-grp-partitioned&quot;,null,Partitioned,0) - PASSED{color}
* {color:#013220}dll: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;default-grp-replicated&quot;,null,Replicated,2) - PASSED{color}
* {color:#013220}dll: AtomicLongClientTests.TestIsClosed - PASSED{color}
* {color:#013220}dll: AtomicLongClientTests.TestOperationsThrowExceptionWhenAtomicLongDoesNotExist - PASSED{color}
* {color:#013220}dll: AtomicLongClientTests.TestCreateSetsInitialValue - PASSED{color}
* {color:#013220}dll: AtomicLongClientTests.TestCustomConfigurationPropagatesToServer - PASSED{color}
* {color:#013220}dll: AtomicLongClientTests.TestExchange - PASSED{color}
* {color:#013220}dll: AtomicLongClientTests.TestIncrementDecrementAdd - PASSED{color}
* {color:#013220}dll: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;custom-grp-partitioned&quot;,&quot;testAtomicLong&quot;,Partitioned,1) - PASSED{color}
* {color:#013220}dll: PartitionAwarenessTest.AtomicLong_RequestIsRoutedToPrimaryNode(&quot;custom-grp-replicated&quot;,&quot;testAtomicLong&quot;,Replicated,0) - PASSED{color}
* {color:#013220}dll: AtomicLongClientTests.TestCompareExchange - PASSED{color}
... and 1 new tests

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=6583642&amp;buildTypeId=IgniteTests24Java8_RunAll]

Merged to master: 9fee83a0d1669843dc697e10d1615f1fdc79ac19

