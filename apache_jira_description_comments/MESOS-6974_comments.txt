[~alexr] Would it be possible for you to attach the entire logs for the test run?

I can repro this consistently on my OSX machine with:
{code}
src/mesos-tests --gtest_filter="MesosContainerizer/DefaultExecutorTest.TaskRunning/0:MesosContainerizer/DefaultExecutorTest.CommitSuicideOnTaskFailure/0" --verbose
{code}
It looks like running any *two* default executor tests together will lead to a failure.  But running the test alone does not fail.

(Attached some logs)

I was able to reproduce this with a single test, though not via {{mesos-tests.sh}}.
Command: {{GTEST_FILTER="*DefaultExecutorTest.CommitSuicideOnTaskFailure*" GLOG_v=1 make check -j3}}, output:
{noformat}
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MesosContainerizer/DefaultExecutorTest
[ RUN      ] MesosContainerizer/DefaultExecutorTest.CommitSuicideOnTaskFailure/0
I0123 20:57:05.344733 4284416 executor.cpp:192] Version: 1.2.0
I0123 20:57:05.358989 3747840 default_executor.cpp:132] Received SUBSCRIBED event
I0123 20:57:05.363127 3747840 default_executor.cpp:136] Subscribed executor on alexr.speedportneo09012801000249
I0123 20:57:05.363265 3747840 default_executor.cpp:132] Received LAUNCH_GROUP event
I0123 20:57:05.397866 528384 default_executor.cpp:480] Successfully launched child containers [ 83409f40-5df1-4cc8-9d1e-ef8c022796a7.dff2d7e8-b98e-4d65-81f5-7d5af86ba6ba ] for tasks [ 31854d26-ad34-4e2c-8979-a30c7b563808 ]
I0123 20:57:05.398625 1601536 default_executor.cpp:556] Waiting for child container 83409f40-5df1-4cc8-9d1e-ef8c022796a7.dff2d7e8-b98e-4d65-81f5-7d5af86ba6ba of task '31854d26-ad34-4e2c-8979-a30c7b563808'
I0123 20:57:05.403578 2138112 default_executor.cpp:132] Received ACKNOWLEDGED event
I0123 20:57:05.554565 1601536 default_executor.cpp:692] Child container 83409f40-5df1-4cc8-9d1e-ef8c022796a7.dff2d7e8-b98e-4d65-81f5-7d5af86ba6ba of task '31854d26-ad34-4e2c-8979-a30c7b563808' in state TASK_FAILED terminated with status exited with status 1
I0123 20:57:05.554682 1601536 default_executor.cpp:813] Terminating after 1secs
I0123 20:57:06.557669 1601536 default_executor.cpp:726] Shutting down
W0123 20:57:06.559087 1064960 process.cpp:3022] Attempted to spawn a process (__shutdown_executor__(1)@192.168.2.100:60348) after finalizing libprocess!
W0123 20:57:06.559134 1064960 process.cpp:3022] Attempted to spawn a process (__async_executor__(6)@192.168.2.100:60348) after finalizing libprocess!
../../../src/tests/default_executor_tests.cpp:963: Failure
Mock function called more times than expected - returning directly.
    Function call: update(0x7fff517bc3f0, @0x7f912f97ef00 32-byte object <B0-CA 20-17 01-00 00-00 00-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 40-49 98-2F 91-7F 00-00>)
         Expected: to be called twice
           Actual: called 3 times - over-saturated and active
[  FAILED  ] MesosContainerizer/DefaultExecutorTest.CommitSuicideOnTaskFailure/0, where GetParam() = "mesos" (10825 ms)
[----------] 1 test from MesosContainerizer/DefaultExecutorTest (10827 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (10857 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] MesosContainerizer/DefaultExecutorTest.CommitSuicideOnTaskFailure/0, where GetParam() = "mesos"
{noformat}

Downgrading from "Critical" to "Major" -- AFAICS this is a flaky test and should be fixed, but isn't more serious than other known flaky tests (of which there are unfortunately quite a few).

Resolving stale issue. Please re-open if the issue persists.

