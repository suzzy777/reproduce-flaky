Patch v1. cc: [~tedyu@apache.org], [~elserj]

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 53s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 19s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 30s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 11s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 56s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 12s{color} | {color:red} hbase-backup: The patch generated 13 new + 0 unchanged - 0 fixed = 13 total (was 0) {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 16 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 16s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:red}-1{color} | {color:red} hadoopcheck {color} | {color:red} 15m 17s{color} | {color:red} The patch causes 15 errors with Hadoop v3.0.0. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 45s{color} | {color:red} hbase-backup generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 19m 15s{color} | {color:green} hbase-backup in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 10s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 49m 54s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-backup |
|  |  Dead store to pp in org.apache.hadoop.hbase.backup.mapreduce.MapReduceBackupMergeJob.convertToDest(Path, Path)  At MapReduceBackupMergeJob.java:org.apache.hadoop.hbase.backup.mapreduce.MapReduceBackupMergeJob.convertToDest(Path, Path)  At MapReduceBackupMergeJob.java:[line 243] |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19969 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12913457/HBASE-19969-v1.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux e9d40e284f5e 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 37d91cdfbb |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC3 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11851/artifact/patchprocess/diff-checkstyle-hbase-backup.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HBASE-Build/11851/artifact/patchprocess/whitespace-eol.txt |
| findbugs | https://builds.apache.org/job/PreCommit-HBASE-Build/11851/artifact/patchprocess/new-findbugs-hbase-backup.html |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11851/testReport/ |
| Max. process+thread count | 4424 (vs. ulimit of 10000) |
| modules | C: hbase-backup U: hbase-backup |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11851/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



{code}
+   * Get tmp directory
{code}
Add backup after 'Get'
{code}
+   * @param backupRootDir
{code}
I don't think the above passes checkstyle
{code}
+      //TODO run job on remote cluster
{code}
Do you want to implement in this JIRA ?
{code}
+import org.mortbay.log.Log;
{code}
I don't think the above is right - we use org.slf4j
{code}
-  private static class DeleteCommand extends Command {
+  public static class DeleteCommand extends Command {
{code}
Is the change to public for testing ?
{code}
+      //System.out.println("Running MERGE again ...");
{code}
Drop commented out code.
{code}
+        if (!fs.delete(destPath, true)) {
+          System.out.println("Failed to delete " + destPath);
{code}
If we get into the if block, the rename() call below would fail, right ?
{code}
+//      if (runMergeAgain) {
+//        try (BackupAdmin admin = new BackupAdminImpl(conn)) {
+//          admin.mergeBackups(backupIds);
+//        }
+//      }
{code}
Drop commented out code.

Please address checkstyle, findbugs warnings.

Will continue reviewing.

{code}
+      Path tmpBackupDir = new Path(HBackupFileSystem.getBackupTmpDirForBackupId(backupRoot, mergedBackupId));
{code}
I looked at the calls to HBackupFileSystem.getBackupTmpDirForBackupId where return value is wrapped by Path.
It would be cleaner if HBackupFileSystem.getBackupTmpDirForBackupId() returns Path.
{code}
+  protected void copyFile(FileSystem fs, Path p, Path newPath) throws IOException {
{code}
Can you add javadoc to the above method ? It is easier to understand what the two Paths are for.
{code}
+    boolean exists = fs.exists(newPath);
+    LOG.debug("copyFile: "+ newPath+" exists="+exists);
{code}
The method throws IOException. If newPath doesn't exist, throwing IOException is better.
{code}
+    Path pp = p;
{code}
Unused variable.



Would be nice to see some javadoc on the methods added to {{MapReduceBackupMergeJob}}
{code:java}
+      long ts = Long.parseLong(backupId.split("_")[1]);{code}
Feels like this should be its own utility method.

I think Ted covered all of the other stuff I noticed.

One more comment about the new test :
{code}
+    LOG.debug("f1 has " + TEST_UTIL.countRows(hTable, famName) + " rows");
+    Assert.assertEquals(TEST_UTIL.countRows(hTable, famName), NB_ROWS_IN_BATCH + 2 * ADD_ROWS);
{code}
You can store the return value from TEST_UTIL.countRows() in a variable.
The count would not change in between the log and the assertion.

I looped the following tests locally which passed:
{code}
[INFO] Running org.apache.hadoop.hbase.backup.TestIncrementalBackupMergeWithFailures
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 201.72 s - in org.apache.hadoop.hbase.backup.TestIncrementalBackupMergeWithFailures
[INFO] Running org.apache.hadoop.hbase.backup.TestBackupMerge
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 164.286 s - in org.apache.hadoop.hbase.backup.TestBackupMerge
{code}

Patch v2 addresses your comments, [~yuzhihong@gmail.com], [~elserj]

{code}
+        if (!fs.delete(destPath, true)) {
+          System.out.println("Failed to delete " + destPath);
+        }
+        boolean res = fs.rename(tmpPath, destPath);
{code}
As I said previously, if the delete() call fails, the rename() would fail as well.
I think IOE can be thrown for both failures.

getBackupTmpDirForBackupId is no longer in the patch. Can you describe related changes ?







{quote}
As I said previously, if the delete() call fails, the rename() would fail as well.
I think IOE can be thrown for both failures.
{quote}
Done.

{quote}
getBackupTmpDirForBackupId is no longer in the patch. Can you describe related changes ?
{quote}
It is now getBackupTmpDirPathForBackupId

Patch v3.

[~elserj]:
Do you want to take another look at v3 ?

Looks like my comments were addressed. +1 from me if you're happy with it, Ted.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 42s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m  3s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 37s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 14s{color} | {color:red} hbase-backup: The patch generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 8 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 15s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 21m 55s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 11m 57s{color} | {color:green} hbase-backup in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 11s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 52m 41s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19969 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12913857/HBASE-19969-v3.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 69ead85f1c66 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / dd6f4525e7 |
| maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC3 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11894/artifact/patchprocess/diff-checkstyle-hbase-backup.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HBASE-Build/11894/artifact/patchprocess/whitespace-eol.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11894/testReport/ |
| Max. process+thread count | 4368 (vs. ulimit of 10000) |
| modules | C: hbase-backup U: hbase-backup |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11894/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 25s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 13s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 27s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 29s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 20s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 12s{color} | {color:red} hbase-backup: The patch generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 8 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m  1s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 16m 18s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 14m 18s{color} | {color:green} hbase-backup in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 13s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 49m 31s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19969 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12913857/HBASE-19969-v3.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux bf486dc27f43 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / dd6f4525e7 |
| maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC3 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11898/artifact/patchprocess/diff-checkstyle-hbase-backup.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HBASE-Build/11898/artifact/patchprocess/whitespace-eol.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11898/testReport/ |
| Max. process+thread count | 4619 (vs. ulimit of 10000) |
| modules | C: hbase-backup U: hbase-backup |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11898/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



Vlad:
Can you address checkstyle warnings ?
{code}
./hbase-backup/src/test/java/org/apache/hadoop/hbase/backup/TestBackupMerge.java:33:import org.junit.Assert;: Wrong order for 'org.junit.Assert' import. [ImportOrder]
./hbase-backup/src/test/java/org/apache/hadoop/hbase/backup/TestBackupMerge.java:39:import static org.junit.Assert.assertTrue;: Wrong order for 'org.junit.Assert.assertTrue' import. [ImportOrder]
{code}

Patch v4 moves the static import to the beginning of TestBackupMerge.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 26s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 13s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 53s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 33s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 14s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 13s{color} | {color:red} hbase-backup: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 8 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 42s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 19m  5s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 11m 25s{color} | {color:green} hbase-backup in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 10s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 47m 36s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19969 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12913896/19969-v4.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 584dd4ef4c83 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 19a396b9c2 |
| maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC3 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11900/artifact/patchprocess/diff-checkstyle-hbase-backup.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HBASE-Build/11900/artifact/patchprocess/whitespace-eol.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11900/testReport/ |
| Max. process+thread count | 4357 (vs. ulimit of 10000) |
| modules | C: hbase-backup U: hbase-backup |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11900/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



Looking at hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestGet.java :
{code}
import org.apache.hadoop.hbase.util.Bytes;
import org.junit.Assert;
import org.junit.ClassRule;
import org.junit.Test;
import org.junit.experimental.categories.Category;
{code}
The relative order of junit import is exactly the same as that in TestBackupMerge.


Thanks for the patch, Vlad.

Thanks for the review, Josh.

Results for branch master
	[build #259 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/master/259/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/master/259//General_Nightly_Build_Report/]




(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/master/259//JDK8_Nightly_Build_Report_(Hadoop2)/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/master/259//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


[~vrodionov], looks like you might have some flaky tests on Hadoop3.
{noformat}
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 104.317 s <<< FAILURE! - in org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad
[ERROR] TestIncBackupDeleteTable[0](org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad)  Time elapsed: 101.908 s  <<< ERROR!
java.io.IOException: java.io.IOException: Failed copy from hdfs://localhost:41991/user/jenkins/test-data/2cc09bf1-7846-4fd8-9928-b23061612b23/data/ns1/test-1520771750106/cf746153b1afe40a737302073b2956b2/f/572cd372c217436b9dd4969ddde3701e_SeqId_205_,hdfs://localhost:41991/user/jenkins/test-data/2cc09bf1-7846-4fd8-9928-b23061612b23/data/ns1/test-1520771750106/cf746153b1afe40a737302073b2956b2/f/d2c3e41730c6415aa98400ccff8b32e7_SeqId_205_ to hdfs://localhost:41991/backupUT/backup_1520771793802
	at org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad.TestIncBackupDeleteTable(TestIncrementalBackupWithBulkLoad.java:120)
Caused by: java.io.IOException: Failed copy from hdfs://localhost:41991/user/jenkins/test-data/2cc09bf1-7846-4fd8-9928-b23061612b23/data/ns1/test-1520771750106/cf746153b1afe40a737302073b2956b2/f/572cd372c217436b9dd4969ddde3701e_SeqId_205_,hdfs://localhost:41991/user/jenkins/test-data/2cc09bf1-7846-4fd8-9928-b23061612b23/data/ns1/test-1520771750106/cf746153b1afe40a737302073b2956b2/f/d2c3e41730c6415aa98400ccff8b32e7_SeqId_205_ to hdfs://localhost:41991/backupUT/backup_1520771793802
	at org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad.TestIncBackupDeleteTable(TestIncrementalBackupWithBulkLoad.java:120)
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 884.349 s <<< FAILURE! - in org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad
[ERROR] TestIncBackupDeleteTable[0](org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad)  Time elapsed: 33.157 s  <<< ERROR!
java.net.ConnectException: Call From 1f03fa77e36a/172.17.0.3 to localhost:41991 failed on connection exception: java.net.ConnectException: Connection refused; For more details see:  http://wiki.apache.org/hadoop/ConnectionRefused
	at org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad.TestIncBackupDeleteTable(TestIncrementalBackupWithBulkLoad.java:93)
Caused by: java.net.ConnectException: Connection refused
	at org.apache.hadoop.hbase.backup.TestIncrementalBackupWithBulkLoad.TestIncBackupDeleteTable(TestIncrementalBackupWithBulkLoad.java:93{noformat}
Would be good to take a quick look to rule out test issues (the cnxn refused sounds like it might be just be the node itself). Logs are at https://builds.apache.org/job/HBase%20Nightly/job/master/259/artifact/output-jdk8-hadoop3/

Josh:
See HBASE-20123.
Looks like we would need hadoop 3.1.0+ (or 3.0.2+) to make backup tests fully working.

Thanks for the pointer, Ted, but HADOOP-15289 was also backported to 3.0.2. We don't need 3.1.0..

{quote}
Vladimir Rodionov, looks like you might have some flaky tests on Hadoop3.
{quote}

Seems like Hadoop3 issue, [~elserj] - not backup. How am I supposed to fix this?

{quote}Seems like Hadoop3 issue, [~elserj] - not backup. How am I supposed to fix this?
{quote}
Well, in this case, it looks like you don't have to do anything. Ted has already done the necessary.

Results for branch HBASE-19064
	[build #77 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/HBASE-19064/77/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/HBASE-19064/77//General_Nightly_Build_Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/HBASE-19064/77//JDK8_Nightly_Build_Report_(Hadoop2)/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/HBASE-19064/77//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


