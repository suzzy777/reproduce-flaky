Took a quick look at this in the name of running down some of the worst flaky tests in Streams. I think it's pretty clear that this is failing because of the state updater thread (see below), but it's not as clear to me whether this hints at a real bug with the state updater thread or whether it only broke the named topologies feature.

If it's the latter, we should probably block people from using named topologies when the state updater thread is enabled in 3.7. Although I'm actually leaning towards going a step further and just taking out the named topologies altogether – we can just remove the "public" API classes for now, as extracting all the internal logic is somewhat of a bigger project that we shouldn't rush.

Of course, this is all assuming there is something about the state updater that broke named topologies – someone more familiar with the state updater should definitely verify that this isn't a real bug in normal Streams first! cc [~cadonna] [~lucasb] 

Oh, and this is how I know the state updater thread is responsible: if you look at [the graph of failure rates for this test|https://ge.apache.org/scans/tests?search.names=Git%20branch&search.relativeStartTime=P90D&search.rootProjectNames=kafka&search.timeZoneId=America%2FLos_Angeles&search.values=trunk&tests.container=org.apache.kafka.streams.integration.NamedTopologyIntegrationTest&tests.sortField=FLAKY&tests.test=shouldAddAndRemoveNamedTopologiesBeforeStartingAndRouteQueriesToCorrectTopology()], you'll see it goes from literally zero flakiness to the 2nd most commonly failing test in all of Streams on Oct 4th. This is the day we turned on the state updater thread by default.

(It's also a bit concerning that we didn't catch this sooner. The uptick in failure rate of this test is actually quite sudden. Would be great if we could somehow manually alert on this sort of thing)

cc [~mjsax] [~wcarlson5] – maybe some motivation to remove, or at least block, the named topologies feature in 3.7

[~ableegoldman] Thanks for looking into this!
I actually thought I fixed all integration tests before I merged the [PR|https://github.com/apache/kafka/pull/13927] to enable the state updater by default. I also adapted that integration test class. Apparently, I missed something.
Lucas has already [disabled those integration tests|https://github.com/apache/kafka/pull/14830].
Now, I have just to ensure that the root cause of the failures was not a state updater bug.

Test disabled in https://github.com/apache/kafka/pull/14830 since feature will be removed.

