After working around IMPALA-3790, I started hitting failures with the minidump custom cluster test.

{code}

14:42:20 =================================== FAILURES ===================================
14:42:20 ___________________ TestBreakpad.test_minidump_relative_path ___________________
14:42:20 
14:42:20 self = <test_breakpad.TestBreakpad object at 0x4e377d0>
14:42:20 
14:42:20     @pytest.mark.execute_serially
14:42:20     def test_minidump_relative_path(self):
14:42:20       """Check that setting 'minidump_path' to a relative value results in minidump files
14:42:20         written to 'log_dir'.
14:42:20         """
14:42:20       minidump_base_dir = os.path.join(os.environ.get('LOG_DIR', '/tmp'), 'minidumps')
14:42:20       shutil.rmtree(minidump_base_dir)
14:42:20       # Omitting minidump_path as a parameter to the cluster will choose the default
14:42:20       # configuration, which is a FLAGS_log_dir/minidumps.
14:42:20       self.start_cluster_with_args()
14:42:20       assert self.count_all_minidumps(minidump_base_dir) == 0
14:42:20       cluster_size = self.get_num_processes('impalad')
14:42:20       self.kill_cluster(SIGSEGV)
14:42:20       self.assert_num_logfile_entries(1)
14:42:20 >     assert self.count_minidumps('impalad', minidump_base_dir) == cluster_size
14:42:20 E     assert 2 == 3
14:42:20 E      +  where 2 = <bound method TestBreakpad.count_minidumps of <test_breakpad.TestBreakpad object at 0x4e377d0>>('impalad', '/data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/logs/custom_cluster_tests/minidumps')
14:42:20 E      +    where <bound method TestBreakpad.count_minidumps of <test_breakpad.TestBreakpad object at 0x4e377d0>> = <test_breakpad.TestBreakpad object at 0x4e377d0>.count_minidumps
{code}


See my private build: http://sandbox.jenkins.cloudera.com/job/impala-umbrella-build-and-test/2699/