sometimes it can be reproduced locally, by running all tez-dag tests (normally, TestSpeculation should finish in 3-5 seconds):
from tez-dag dir:
{code}
mvn --batch-mode  clean test -fae
{code}

there is a suspicious no-op for almost 2 minutes:
{code}
2020-01-27 16:33:22,162 INFO  [Dispatcher thread {Central}] app.DAGAppMaster (DAGAppMaster.java:handle(872)) - Completed cleanup for DAG: name=test, with id=dag_1580139200870_0001_1
2020-01-27 16:35:00,864 INFO  [Thread-53] client.TezClient (TezClient.java:<init>(210)) - Tez Client Version: [ component=tez-api, version=0.10.1-SNAPSHOT, revision=f049d93a69bdc5bd736301bf7081fa5cef2694bf, SCM-URL=scm:git:https://gitbox.apache.org/repos/asf/tez.git, buildTime=2020-01-27T09:27:08Z ]
{code}

jstacks of the surefire process:  [^jstack.log] ...later:  [^jstack4.log] ...later:  [^jstack6.log] 

something strange:
seems like speculation is not triggered
{code}
    // Wait enough time to give chance for the speculator to trigger
    // speculation on VB.
    // This would fail because of JUnit time out.
    do {
      Thread.sleep(100);
    } while (vSpec.getAllCounters().findCounter(TaskCounter.NUM_SPECULATIONS)
        .getValue() <= 0);
{code}

{code}
"Thread-3" #16 prio=5 os_prio=31 tid=0x00007fe07a3bc800 nid=0xa403 waiting on condition [0x00007000062d8000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.tez.dag.app.TestSpeculation.testBasicSpeculationPerVertexConf(TestSpeculation.java:261)
{code}
10 seconds later:
{code}
"Thread-3" #16 prio=5 os_prio=31 tid=0x00007fe07a3bc800 nid=0xa403 waiting on condition [0x00007000062d8000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.tez.dag.app.TestSpeculation.testBasicSpeculationPerVertexConf(TestSpeculation.java:261)
{code}

Hi [~abstractdog], thanks for reporting this issue.

I recently worked on a similar flaky test case for the  MAPREDUCE-7259 (testSpeculateSuccessfulWithUpdateEvents fails Intermittently). I agree with you that this could be caused by timing issues that makes the blocking thread misses the speculator thread.

Have you been able to make any progress on that? If not, let me know if you want me to take over.

 

 

Hi [~ahussein]! I'm not yet familiar with speculation,  feel free to take this over!

Thanks [~abstractdog], I will take a look.

Hey [~abstractdog], Do you still see this error? 

yes [~ahussein], I've seen it in recent precommit tests
my experience was that if I run only TestSpeculation, it passes quickly, but if I run mvn clean test for whole tez-dag submodule, it will more likely fail, hope this helps to reproduce
e.g. 2 days ago: https://issues.apache.org/jira/browse/TEZ-4039?focusedCommentId=17043556&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17043556
maven logs are: https://builds.apache.org/job/PreCommit-TEZ-Build/303/artifact/out/patch-unit-tez-dag.txt

Thanks [~abstractdog]. This was very helpful.

I had a look at the test case. The main problem with that test case is that it was designed without taking into consideration that the speculator can run as a background service.
Once I changed the implementation to make the speculator run in parallel, the test case became fuzzy.
It will take me sometime to reimplement the JUnit test according to the new speculator design.

