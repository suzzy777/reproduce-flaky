The RHEL7 build failed: http://sandbox.jenkins.cloudera.com/job/impala-CI-rhel7/183/ . I pasted a relevant part of the logs below. The memory limit error was:

{code}
19:49:31 E   Memory Limit Exceeded
19:49:31 E   Query(fc4cfc2f3526167b:37c71004b804f0a0) Limit: Limit=150.00 MB Consumption=48.12 MB
19:49:31 E     Fragment fc4cfc2f3526167b:37c71004b804f0a3: Consumption=48.12 MB
19:49:31 E       SORT_NODE (id=5): Consumption=16.00 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=4): Consumption=8.05 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=3): Consumption=8.04 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=2): Consumption=8.02 MB
19:49:31 E       SORT_NODE (id=1): Consumption=8.01 MB
19:49:31 E       EXCHANGE_NODE (id=8): Consumption=0
19:49:31 E       DataStreamSender: Consumption=2.00 KB
19:49:31 E     Block Manager: Limit=50.00 MB Consumption=48.00 MB
19:49:31 E   WARNING: The following tables are missing relevant table and/or column statistics.
{code}

{code}
19:49:31  TestQueries.test_analytic_fns[exec_option: {'disable_codegen': False, 'abort_on_error': 1, 'exec_single_node_rows_threshold': 100, 'batch_size': 0, 'num_nodes': 0} | table_format: rc/def/block] 
19:49:31 [gw3] linux2 -- Python 2.7.5 /data/jenkins/workspace/impala-CI-rhel7/repos/Impala/bin/../infra/python/env/bin/python
19:49:31 query_test/test_queries.py:68: in test_analytic_fns
19:49:31     self.run_test_case('QueryTest/analytic-fns', vector)
19:49:31 common/impala_test_suite.py:216: in run_test_case
19:49:31     result = self.__execute_query(target_impalad_client, query, user=user)
19:49:31 common/impala_test_suite.py:406: in __execute_query
19:49:31     return impalad_client.execute(query, user=user)
19:49:31 common/impala_connection.py:158: in execute
19:49:31     return self.__beeswax_client.execute(sql_stmt, user=user)
19:49:31 beeswax/impala_beeswax.py:162: in execute
19:49:31     handle = self.__execute_query(query_string.strip(), user=user)
19:49:31 beeswax/impala_beeswax.py:328: in __execute_query
19:49:31     self.wait_for_completion(handle)
19:49:31 beeswax/impala_beeswax.py:348: in wait_for_completion
19:49:31     raise ImpalaBeeswaxException("Query aborted:" + error_log, None)
19:49:31 E   ImpalaBeeswaxException: ImpalaBeeswaxException:
19:49:31 E    Query aborted:
19:49:31 E   Memory limit exceeded
19:49:31 E   Query did not have enough memory to get the minimum required buffers in the block manager.
19:49:31 E   
19:49:31 E   
19:49:31 E   
19:49:31 E   Memory Limit Exceeded
19:49:31 E   Query(fc4cfc2f3526167b:37c71004b804f0a0) Limit: Limit=150.00 MB Consumption=48.12 MB
19:49:31 E     Fragment fc4cfc2f3526167b:37c71004b804f0a3: Consumption=48.12 MB
19:49:31 E       SORT_NODE (id=5): Consumption=16.00 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=4): Consumption=8.05 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=3): Consumption=8.04 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=2): Consumption=8.02 MB
19:49:31 E       SORT_NODE (id=1): Consumption=8.01 MB
19:49:31 E       EXCHANGE_NODE (id=8): Consumption=0
19:49:31 E       DataStreamSender: Consumption=2.00 KB
19:49:31 E     Block Manager: Limit=50.00 MB Consumption=48.00 MB
19:49:31 E   WARNING: The following tables are missing relevant table and/or column statistics.
19:49:31 E   functional_rc_def.alltypes
19:49:31 E   Memory Limit Exceeded
19:49:31 E   Query(fc4cfc2f3526167b:37c71004b804f0a0) Limit: Limit=150.00 MB Consumption=48.12 MB
19:49:31 E     Fragment fc4cfc2f3526167b:37c71004b804f0a4: Consumption=48.12 MB
19:49:31 E       SORT_NODE (id=5): Consumption=16.00 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=4): Consumption=8.05 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=3): Consumption=8.04 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=2): Consumption=8.02 MB
19:49:31 E       SORT_NODE (id=1): Consumption=8.01 MB
19:49:31 E       EXCHANGE_NODE (id=8): Consumption=0
19:49:31 E       DataStreamSender: Consumption=2.00 KB
19:49:31 E     Block Manager: Limit=50.00 MB Consumption=48.00 MB
19:49:31 E   WARNING: The following tables are missing relevant table and/or column statistics.
19:49:31 E   functional_rc_def.alltypes
19:49:31 ----------------------------- Captured stderr call -----------------------------
19:49:31 -- executing against localhost:21000
19:49:31 use functional_rc_def;
19:49:31 
19:49:31 SET disable_codegen=False;
19:49:31 SET abort_on_error=1;
19:49:31 SET exec_single_node_rows_threshold=100;
19:49:31 SET batch_size=0;
19:49:31 SET num_nodes=0;
19:49:31 -- executing against localhost:21000
19:49:31 select year, month,
19:49:31 count(int_col) over (partition by year, month),
19:49:31 avg(int_col) over (partition by year, month),
19:49:31 avg(timestamp_col) over (partition by year, month),
19:49:31 min(string_col) over (partition by year, month),
19:49:31 max(string_col) over (partition by year, month)
19:49:31 from alltypessmall
19:49:31 where id % 4 = 0 and month != 1;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select int_col,
19:49:31 count(int_col) over ()
19:49:31 from alltypessmall
19:49:31 where id % 4 = 0 and month = 1
19:49:31 order by int_col;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select tinyint_col,
19:49:31 count(int_col) over (order by tinyint_col)
19:49:31 from alltypessmall
19:49:31 where month = 1 and tinyint_col < 5;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select tinyint_col, smallint_col, int_col,
19:49:31 sum(smallint_col) over (order by tinyint_col nulls first)
19:49:31 from alltypesagg
19:49:31 where year = 2010 and month = 1 and day = 4 and id <= 3030 and bool_col = true
19:49:31 order by tinyint_col, id, smallint_col, int_col;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select tinyint_col, smallint_col,
19:49:31 sum(smallint_col) over (partition by tinyint_col order by smallint_col),
19:49:31 sum(smallint_col) over (partition by tinyint_col order by smallint_col
19:49:31                         rows between unbounded preceding and 1 following),
19:49:31 sum(smallint_col) over (partition by tinyint_col order by smallint_col
19:49:31                         rows between 1 following and 2 following)
19:49:31 from alltypesagg
19:49:31 where year = 2010 and month = 1 and day = 4 and id <= 3200
19:49:31     and (smallint_col < 50 or smallint_col is NULL)
19:49:31     and (tinyint_col = 1 or tinyint_col is NULL);
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select
19:49:31 sum(tinyint_col) over (order by id nulls last rows between 1 preceding and 1 preceding),
19:49:31 sum(tinyint_col) over (order by id nulls last rows between 1 preceding and current row),
19:49:31 sum(tinyint_col) over (order by id nulls last rows between current row and 1 following),
19:49:31 sum(tinyint_col) over (order by id nulls last rows between 1 following and 1 following)
19:49:31 from alltypesagg where id < 30 and (tinyint_col is null or tinyint_col < 6);
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select year, month, bool_col, tinyint_col,
19:49:31 count(id) over (partition by year, month order by bool_col, tinyint_col)
19:49:31 from alltypes
19:49:31 where tinyint_col < 2 and month < 3 and (id % 100 < 10)
19:49:31 order by year, month, bool_col, tinyint_col;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select count(*) from
19:49:31   (select year, month, bool_col, tinyint_col,
19:49:31    count(id) over (partition by year, month order by bool_col, tinyint_col)
19:49:31    from alltypes
19:49:31    where tinyint_col < 2 and month < 3 and (id % 100 < 10)
19:49:31    limit 7) v;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select (month % 2), int_col,
19:49:31 sum(int_col) over (partition by (month % 2)
19:49:31                    order by int_col rows between unbounded preceding and current row)
19:49:31 from alltypestiny;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select
19:49:31 count(tinyint_col) over (partition by bool_col order by tinyint_col
19:49:31                          rows between unbounded preceding and 1 preceding),
19:49:31 sum(tinyint_col) over (partition by bool_col order by tinyint_col
19:49:31                        rows between unbounded preceding and 1 following),
19:49:31 sum(tinyint_col) over (partition by bool_col order by tinyint_col
19:49:31                        rows between unbounded preceding and 3 preceding),
19:49:31 sum(tinyint_col) over (partition by bool_col order by tinyint_col
19:49:31                        rows between unbounded preceding and 20 following),
19:49:31 sum(tinyint_col) over (partition by bool_col order by tinyint_col
19:49:31                        rows between unbounded preceding and 20 preceding)
19:49:31 from alltypesagg where id <= 10 and day = 1;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select tinyint_col, int_col, bigint_col,
19:49:31 count(bigint_col)
19:49:31   over(partition by tinyint_col, bigint_col order by int_col desc
19:49:31   rows between unbounded preceding and 1 following),
19:49:31 max(tinyint_col)
19:49:31   over(partition by bigint_col, tinyint_col order by int_col desc
19:49:31   rows between unbounded preceding and 1 following),
19:49:31 min(int_col)
19:49:31   over(partition by bigint_col, tinyint_col order by int_col desc
19:49:31   rows between unbounded preceding and 2 following),
19:49:31 max(int_col)
19:49:31   over(partition by bigint_col, tinyint_col order by int_col asc
19:49:31   rows between unbounded preceding and 2 following),
19:49:31 sum(int_col)
19:49:31   over(partition by tinyint_col order by int_col desc
19:49:31   rows between unbounded preceding and 2 following)
19:49:31 from functional.alltypesagg
19:49:31 where id < 20;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select bool_col,
19:49:31 sum(min(int_col))
19:49:31   over(partition by min(tinyint_col) order by max(int_col)
19:49:31   rows between unbounded preceding and 1 following),
19:49:31 max(sum(bigint_col))
19:49:31   over(partition by min(tinyint_col) order by max(int_col)
19:49:31   rows between unbounded preceding and 1 following),
19:49:31 min(sum(bigint_col))
19:49:31   over(partition by min(tinyint_col) order by sum(int_col)
19:49:31   rows between unbounded preceding and 4 following)
19:49:31 from functional.alltypes
19:49:31 group by 1
19:49:31 order by 1, 2, 3;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select DISTINCT t1.c1 FROM
19:49:31   (SELECT MAX(smallint_col) OVER (PARTITION BY year ORDER BY id DESC) AS c1
19:49:31    FROM alltypesagg) t1;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 with with_1 AS (
19:49:31   SELECT RANK() OVER (ORDER BY t1.id) AS int_col_1
19:49:31   FROM alltypesagg t1)
19:49:31 SELECT COUNT(t1.int_col_1) AS int_col_1
19:49:31 FROM with_1 t1
19:49:31 WHERE t1.int_col_1 IS NULL;
19:49:31 
19:49:31 -- executing against localhost:21000
19:49:31 select tinyint_col, id,
19:49:31 row_number() over (order by tinyint_col, id) total_order,
19:49:31 row_number() over (partition by tinyint_col order by id) partitioned_order,
19:49:31 first_value(id) over (partition by tinyint_col order by id),
19:49:31 first_value(cast(id as string)) over (partition by tinyint_col order by id),
19:49:31 last_value(id) over (partition by tinyint_col order by id),
19:49:31 last_value(cast(id as string)) over (partition by tinyint_col order by id),
19:49:31 last_value(id) over (partition by tinyint_col order by id
19:49:31                      rows between unbounded preceding and unbounded following)
19:49:31 from alltypes where id < 25 order by tinyint_col, id;
19:49:31 
19:49:31  TestQueries.test_analytic_fns[exec_option: {'disable_codegen': True, 'abort_on_error': 1, 'exec_single_node_rows_threshold': 100, 'batch_size': 0, 'num_nodes': 0} | table_format: rc/def/block] 
19:49:31 [gw3] linux2 -- Python 2.7.5 /data/jenkins/workspace/impala-CI-rhel7/repos/Impala/bin/../infra/python/env/bin/python
19:49:31 query_test/test_queries.py:68: in test_analytic_fns
19:49:31     self.run_test_case('QueryTest/analytic-fns', vector)
19:49:31 common/impala_test_suite.py:216: in run_test_case
19:49:31     result = self.__execute_query(target_impalad_client, query, user=user)
19:49:31 common/impala_test_suite.py:406: in __execute_query
19:49:31     return impalad_client.execute(query, user=user)
19:49:31 common/impala_connection.py:158: in execute
19:49:31     return self.__beeswax_client.execute(sql_stmt, user=user)
19:49:31 beeswax/impala_beeswax.py:162: in execute
19:49:31     handle = self.__execute_query(query_string.strip(), user=user)
19:49:31 beeswax/impala_beeswax.py:328: in __execute_query
19:49:31     self.wait_for_completion(handle)
19:49:31 beeswax/impala_beeswax.py:348: in wait_for_completion
19:49:31     raise ImpalaBeeswaxException("Query aborted:" + error_log, None)
19:49:31 E   ImpalaBeeswaxException: ImpalaBeeswaxException:
19:49:31 E    Query aborted:
19:49:31 E   Memory limit exceeded
19:49:31 E   Query did not have enough memory to get the minimum required buffers in the block manager.
19:49:31 E   
19:49:31 E   
19:49:31 E   
19:49:31 E   Memory Limit Exceeded
19:49:31 E   Query(e344ab18b298035b:bbb52e8f837503a0) Limit: Limit=150.00 MB Consumption=48.13 MB
19:49:31 E     Fragment e344ab18b298035b:bbb52e8f837503a1: Consumption=8.00 KB
19:49:31 E       SORT_NODE (id=7): Consumption=0
19:49:31 E       ANALYTIC_EVAL_NODE (id=6): Consumption=0
19:49:31 E       EXCHANGE_NODE (id=9): Consumption=0
19:49:31 E       DataStreamRecvr: Consumption=0
19:49:31 E     Block Manager: Limit=50.00 MB Consumption=48.00 MB
19:49:31 E     Fragment e344ab18b298035b:bbb52e8f837503a2: Consumption=48.12 MB
19:49:31 E       SORT_NODE (id=5): Consumption=16.00 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=4): Consumption=8.05 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=3): Consumption=8.04 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=2): Consumption=8.02 MB
19:49:31 E       SORT_NODE (id=1): Consumption=8.01 MB
19:49:31 E       EXCHANGE_NODE (id=8): Consumption=0
19:49:31 E       DataStreamSender: Consumption=2.00 KB
19:49:31 E   WARNING: The following tables are missing relevant table and/or column statistics.
19:49:31 E   functional_rc_def.alltypes
19:49:31 E   Memory Limit Exceeded
19:49:31 E   Query(e344ab18b298035b:bbb52e8f837503a0) Limit: Limit=150.00 MB Consumption=48.12 MB
19:49:31 E     Fragment e344ab18b298035b:bbb52e8f837503a3: Consumption=48.12 MB
19:49:31 E       SORT_NODE (id=5): Consumption=16.00 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=4): Consumption=8.05 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=3): Consumption=8.04 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=2): Consumption=8.02 MB
19:49:31 E       SORT_NODE (id=1): Consumption=8.01 MB
19:49:31 E       EXCHANGE_NODE (id=8): Consumption=0
19:49:31 E       DataStreamSender: Consumption=2.00 KB
19:49:31 E     Block Manager: Limit=50.00 MB Consumption=48.00 MB
19:49:31 E   WARNING: The following tables are missing relevant table and/or column statistics.
19:49:31 E   functional_rc_def.alltypes
19:49:31 E   Memory Limit Exceeded
19:49:31 E   Query(e344ab18b298035b:bbb52e8f837503a0) Limit: Limit=150.00 MB Consumption=48.12 MB
19:49:31 E     Fragment e344ab18b298035b:bbb52e8f837503a4: Consumption=48.12 MB
19:49:31 E       SORT_NODE (id=5): Consumption=16.00 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=4): Consumption=8.05 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=3): Consumption=8.04 MB
19:49:31 E       ANALYTIC_EVAL_NODE (id=2): Consumption=8.02 MB
19:49:31 E       SORT_NODE (id=1): Consumption=8.01 MB
19:49:31 E       EXCHANGE_NODE (id=8): Consumption=0
19:49:31 E       DataStreamSender: Consumption=2.00 KB
19:49:31 E     Block Manager: Limit=50.00 MB Consumption=48.00 MB
19:49:31 E   WARNING: The following tables are missing relevant table and/or column statistics.
19:49:31 E   functional_rc_def.alltypes
{code}