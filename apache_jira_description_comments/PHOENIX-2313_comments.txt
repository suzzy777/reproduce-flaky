Here is the patch fixes it.

+1 Looks good. 


Pushed to master and 4.x branches. Thanks for review [~aliciashu].

FAILURE: Integrated in Phoenix-master #928 (See [https://builds.apache.org/job/Phoenix-master/928/])
PHOENIX-2313 TypeMismatchException thrown while querying a table that (rajeshbabu: rev f02fb1b06e55b6d870a42ec051d3fbf18bb39e01)
* phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseMutableIndexIT.java
* phoenix-core/src/main/java/org/apache/phoenix/schema/types/PBoolean.java


It seems like this change is breaking the following tests in 1.0 and master:

{code}
Tests run: 53, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 471.903 sec <<< FAILURE! - in org.apache.phoenix.end2end.AlterTableIT
testDropIndexedColumn(org.apache.phoenix.end2end.AlterTableIT)  Time elapsed: 8.293 sec  <<< ERROR!
java.sql.SQLException: ERROR 2009 (INT11): Unknown error code 0
	at org.apache.phoenix.exception.SQLExceptionCode$Factory$1.newException(SQLExceptionCode.java:398)
	at org.apache.phoenix.exception.SQLExceptionInfo.buildException(SQLExceptionInfo.java:145)
	at org.apache.phoenix.exception.SQLExceptionCode.fromErrorCode(SQLExceptionCode.java:426)
	at org.apache.phoenix.util.ServerUtil.parseRemoteException(ServerUtil.java:127)
	at org.apache.phoenix.util.ServerUtil.parseServerExceptionOrNull(ServerUtil.java:115)
	at org.apache.phoenix.util.ServerUtil.parseServerException(ServerUtil.java:104)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec(ConnectionQueryServicesImpl.java:1053)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec(ConnectionQueryServicesImpl.java:1016)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.dropColumn(ConnectionQueryServicesImpl.java:1819)
	at org.apache.phoenix.schema.MetaDataClient.dropColumn(MetaDataClient.java:2880)
	at org.apache.phoenix.jdbc.PhoenixStatement$ExecutableDropColumnStatement$1.execute(PhoenixStatement.java:1147)
	at org.apache.phoenix.jdbc.PhoenixStatement$2.call(PhoenixStatement.java:322)
	at org.apache.phoenix.jdbc.PhoenixStatement$2.call(PhoenixStatement.java:314)
	at org.apache.phoenix.call.CallRunner.run(CallRunner.java:53)
	at org.apache.phoenix.jdbc.PhoenixStatement.executeMutation(PhoenixStatement.java:312)
	at org.apache.phoenix.jdbc.PhoenixStatement.execute(PhoenixStatement.java:1435)
	at org.apache.phoenix.end2end.AlterTableIT.testDropIndexedColumn(AlterTableIT.java:285)

testDropCoveredColumn(org.apache.phoenix.end2end.AlterTableIT)  Time elapsed: 8.428 sec  <<< ERROR!
java.sql.SQLException: ERROR 2009 (INT11): Unknown error code 0
	at org.apache.phoenix.exception.SQLExceptionCode$Factory$1.newException(SQLExceptionCode.java:398)
	at org.apache.phoenix.exception.SQLExceptionInfo.buildException(SQLExceptionInfo.java:145)
	at org.apache.phoenix.exception.SQLExceptionCode.fromErrorCode(SQLExceptionCode.java:426)
	at org.apache.phoenix.util.ServerUtil.parseRemoteException(ServerUtil.java:127)
	at org.apache.phoenix.util.ServerUtil.parseServerExceptionOrNull(ServerUtil.java:115)
	at org.apache.phoenix.util.ServerUtil.parseServerException(ServerUtil.java:104)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec(ConnectionQueryServicesImpl.java:1053)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec(ConnectionQueryServicesImpl.java:1016)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.dropColumn(ConnectionQueryServicesImpl.java:1819)
	at org.apache.phoenix.schema.MetaDataClient.dropColumn(MetaDataClient.java:2880)
	at org.apache.phoenix.jdbc.PhoenixStatement$ExecutableDropColumnStatement$1.execute(PhoenixStatement.java:1147)
	at org.apache.phoenix.jdbc.PhoenixStatement$2.call(PhoenixStatement.java:322)
	at org.apache.phoenix.jdbc.PhoenixStatement$2.call(PhoenixStatement.java:314)
	at org.apache.phoenix.call.CallRunner.run(CallRunner.java:53)
	at org.apache.phoenix.jdbc.PhoenixStatement.executeMutation(PhoenixStatement.java:312)
	at org.apache.phoenix.jdbc.PhoenixStatement.execute(PhoenixStatement.java:1435)
	at org.apache.phoenix.end2end.AlterTableIT.testDropCoveredColumn(AlterTableIT.java:350)

testDropColumnsWithImutability(org.apache.phoenix.end2end.AlterTableIT)  Time elapsed: 14.768 sec  <<< ERROR!
java.sql.SQLException: ERROR 2009 (INT11): Unknown error code 0
	at org.apache.phoenix.exception.SQLExceptionCode$Factory$1.newException(SQLExceptionCode.java:398)
	at org.apache.phoenix.exception.SQLExceptionInfo.buildException(SQLExceptionInfo.java:145)
	at org.apache.phoenix.exception.SQLExceptionCode.fromErrorCode(SQLExceptionCode.java:426)
	at org.apache.phoenix.util.ServerUtil.parseRemoteException(ServerUtil.java:127)
	at org.apache.phoenix.util.ServerUtil.parseServerExceptionOrNull(ServerUtil.java:115)
	at org.apache.phoenix.util.ServerUtil.parseServerException(ServerUtil.java:104)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec(ConnectionQueryServicesImpl.java:1053)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec(ConnectionQueryServicesImpl.java:1016)
	at org.apache.phoenix.query.ConnectionQueryServicesImpl.dropColumn(ConnectionQueryServicesImpl.java:1819)
	at org.apache.phoenix.schema.MetaDataClient.dropColumn(MetaDataClient.java:2880)
	at org.apache.phoenix.jdbc.PhoenixStatement$ExecutableDropColumnStatement$1.execute(PhoenixStatement.java:1147)
	at org.apache.phoenix.jdbc.PhoenixStatement$2.call(PhoenixStatement.java:322)
	at org.apache.phoenix.jdbc.PhoenixStatement$2.call(PhoenixStatement.java:314)
	at org.apache.phoenix.call.CallRunner.run(CallRunner.java:53)
	at org.apache.phoenix.jdbc.PhoenixStatement.executeMutation(PhoenixStatement.java:312)
	at org.apache.phoenix.jdbc.PhoenixStatement.execute(PhoenixStatement.java:1435)
	at org.apache.phoenix.end2end.AlterTableIT.testDropColumnsWithImutability(AlterTableIT.java:874)
{code}

Addendum patch with more lower level unit tests. When an index was used, it wasn't interpreting the value correctly. I'm not sure if this is going to fix the test failures as I'm unable to reproduce them. However, the boolean value when indexed is interpreted correctly now.

[~jamestaylor]
+1 on addendum. The test failures are flaky before this patch commit as well.
https://builds.apache.org/view/All/job/Phoenix-4.x-HBase-1.0/190/testReport/

FAILURE: Integrated in Phoenix-master #931 (See [https://builds.apache.org/job/Phoenix-master/931/])
PHOENIX-2313 TypeMismatchException thrown while querying a table that (jtaylor: rev 7bc93f405be9f5700f12682e0e505820a0581f84)
* phoenix-core/src/main/java/org/apache/phoenix/schema/types/PBoolean.java
* phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseMutableIndexIT.java
* phoenix-core/src/test/java/org/apache/phoenix/schema/types/PDataTypeTest.java


Bulk close of all issues that has been resolved in a released version. 

