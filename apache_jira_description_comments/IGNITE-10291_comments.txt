I have found follow unconsistency:
In current moment during cache start in IgniteH2Indexind#createTable(tbl.createUserIndexes()) we do not distinguish difference between restored  H2TreeIndex and new one. As result instead of rebuilding of index we  register correct empty  index.
In my opinion, on start moment we should be able to check consistency between real data and index. But I don't sure about right way to do it more correcly.
[~vozerov], [~agoncharuk] can you help with it?

The problem is located here: {{GridCacheDatabaseSharedManager#rebuildIndexesIfNeeded}}. When second nodes goes back it do have index storage initialized ({{IgnitePageStoreManager#hasIndexStore}}), so index rebuild is skipped. But new index is not there in this storage, so it remains empty. Looks like the fix should look like this:
1) For every H2 index - check {{GridCacheOffheapManager.indexStorage}} if index exists (new method will be required)
2) Rebuild indexes which were not found on the previous step.

Implemented a fix. Reproducer works now. Outstanding tasks:
# Skip index rebuild for empty caches
# Convert reproducer into test

GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/5525

    IGNITE-10291

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-10291-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5525.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5525
    
----
commit 10f5f9e328c081953462c498b58edad636e307fb
Author: devozerov <vozerov@...>
Date:   2018-11-28T09:28:40Z

    WIP.

commit b35634bf58a3deb903f4ba9590c36eaa16d8fa4a
Author: devozerov <vozerov@...>
Date:   2018-11-28T09:51:32Z

    Minors.

commit 898e82a27dd8a0ec7773eaa5b1e641c12c6c64cd
Author: devozerov <vozerov@...>
Date:   2018-11-28T12:27:55Z

    Implemented.

commit 48601580e0a87bf2c5c759f736fce3543a5e105c
Author: devozerov <vozerov@...>
Date:   2018-11-28T12:29:37Z

    Minors.

commit 8a2a8610a8439b8fedc3271153379d0d57058128
Author: devozerov <vozerov@...>
Date:   2018-11-28T13:55:52Z

    It works.

commit 7749dc7e34ffadfeee43d79e4098fdbe8085ddeb
Author: devozerov <vozerov@...>
Date:   2018-11-28T14:00:15Z

    Removed "exists".

commit 24092fc6828e9246873814431dddfeb142fa1c8c
Author: devozerov <vozerov@...>
Date:   2018-11-28T14:04:01Z

    Minors.

commit d0c2ee7a01bb202315d7c6ffc917b9ffb0d0bfc8
Author: devozerov <vozerov@...>
Date:   2018-11-28T14:07:24Z

    Minors.

----


Test run: https://ci.ignite.apache.org/viewQueued.html?itemId=2422473

{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Queries 2{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2422400]]
* IgniteBinaryCacheQueryTestSuite2: DynamicColumnsConcurrentAtomicReplicatedSelfTest.testConcurrentPutRemove - 0,0% fails in last 100 master runs.

{color:#d04437}PDS (Indexing){color} [[tests 8|https://ci.ignite.apache.org/viewLog.html?buildId=2422455]]
* IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryTest.testRecoveryOnJoinToInactiveCluster - 0,0% fails in last 100 master runs.
* IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryTest.testRecoveryOnDynamicallyStartedCaches - 0,0% fails in last 100 master runs.
* IgnitePdsWithIndexingCoreTestSuite: IgnitePersistentStoreCacheGroupsTest.testCreateDropCache - 0,0% fails in last 100 master runs.
* IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryTest.testRecoveryOnJoinToActiveCluster - 0,0% fails in last 100 master runs.
* IgnitePdsWithIndexingCoreTestSuite: IgnitePersistentStoreCacheGroupsTest.testCreateDropCache2 - 0,0% fails in last 100 master runs.

{color:#d04437}Basic 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2422418]]
* IgniteBasicTestSuite: IgniteServiceReassignmentTest.testNodeStopWhileThereAreCacheActivitiesInServiceProcessor - 0,0% fails in last 100 master runs.

{color:#d04437}SPI{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2422405]]
* IgniteSpiTestSuite: TcpClientDiscoverySpiMulticastTest.testJoinWithMulticast - 0,0% fails in last 100 master runs.

{color:#d04437}Queries 1{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2422467]]
* IgniteBinaryCacheQueryTestSuite: IgniteDynamicSqlRestoreTest.testMergeChangedConfigOnInactiveGrid - 0,0% fails in last 100 master runs.
* IgniteBinaryCacheQueryTestSuite: IgniteDynamicSqlRestoreTest.testTakeConfigFromJoiningNodeOnInactiveGrid - 0,0% fails in last 100 master runs.

{color:#d04437}JDBC Driver{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2422397]]
* JdbcThinWalModeChangeSelfTest.testSharedCacheGroup (last started)

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2422473&amp;buildTypeId=IgniteTests24Java8_RunAll]

Fixed problems (bad tests, bad asserion). Added new test. Rerun:
PASSED https://ci.ignite.apache.org/viewQueued.html?itemId=2429910
PASSED https://ci.ignite.apache.org/viewQueued.html?itemId=2429912
PASSED https://ci.ignite.apache.org/viewQueued.html?itemId=2429914
PASSED https://ci.ignite.apache.org/viewQueued.html?itemId=2429916
*NEW FLAKY* https://ci.ignite.apache.org/viewQueued.html?itemId=2429918
PASSED https://ci.ignite.apache.org/viewQueued.html?itemId=2429920

Increased condition timeout for failing tests, let's see if it help. Works fine locally even with small timeout.
https://ci.ignite.apache.org/viewQueued.html?itemId=2431177

Didn't help. Apparently, test is broken. investigating.

Fixed. It was a problem with missing object modification callback, so that existing prepared statements got stuck in "no-index" state. 
Full re-run, as fix was dangerous: https://ci.ignite.apache.org/viewQueued.html?itemId=2450385

{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Hibernate 2{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2451320]]
* HibernateL2CacheTransactionalUseSyncSelfTest.testRegionClear (last started)

{color:#d04437}Cache (Restarts) 1{color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=2450348]]
* IgniteCacheRestartTestSuite: GridCacheReplicatedNodeRestartSelfTest.testRestartWithPutEightNodesTwoBackups - 0,0% fails in last 100 master runs.

{color:#d04437}Compute (Grid){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2450294]]
* IgniteBinaryObjectsComputeGridTestSuite: GridEventStorageCheckAllEventsSelfTest.testFailoverJobTask - 0,0% fails in last 100 master runs.

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2450385&amp;buildTypeId=IgniteTests24Java8_RunAll]

Consistent hangs in Hibernate 2. Investigating.

Same failures observed in master, so it is not related to current ticket.

Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/5525


