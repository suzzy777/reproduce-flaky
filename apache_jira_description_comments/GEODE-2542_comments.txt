Commit 8e22ea2137cb58211e0440defe8cbd3e7e11554c in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=8e22ea2 ]

GEODE-2542: add FlakyTest category to LocatorDUnit and LocatorUDPSecurityDUnitTest


Commit 866dc5ca1583c5fab49ec96c48d261c0367427f3 in geode's branch refs/heads/feature/GEODE-1793 from [~bschuchardt]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=866dc5c ]

GEODE-1793 LocatorDUnitTest.testStartTwoLocatorsOneWithSSLAndTheOtherNonSSL

This was a product issue.  When the locator using plain-text sockets is
contacted by a TcpClient using SSL the locator often just closes the socket.
On some platforms this causes a SSLHandshakeException but on others it
just causes a "SocketException: connection reset".  Writing some text to
the socket forces the TcpClient to get a SSLException (which is the superclass
of SSLHandshakeException).

The test class is still marked as Flaky due to GEODE-2542.


Commit 064362e90e150ad4ef5b269fab78f0cf2d6e5f4f in geode's branch refs/heads/develop from [~bschuchardt]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=064362e ]

GEODE-1793 LocatorDUnitTest.testStartTwoLocatorsOneWithSSLAndTheOtherNonSSL

This was a product issue.  When the locator using plain-text sockets is
contacted by a TcpClient using SSL the locator often just closes the socket.
On some platforms this causes a SSLHandshakeException but on others it
just causes a "SocketException: connection reset".  Writing some text to
the socket forces the TcpClient to get a SSLException (which is the superclass
of SSLHandshakeException).

The test class is still marked as Flaky due to GEODE-2542.


commit 0bdfd0e35d8c02f23082f23c2c3552678ccd7421
Author: Bruce Schuchardt <bschuchardt@pivotal.io>
Date:   Thu Mar 16 10:15:06 2017 -0700

    GEODE-2542 LocatorDUnitTest and LocatorUDPSecurityDUnitTest flakyness

    The fix for GEODE-1793 removed the short join-timeouts from this test class
    that caused periodic failure to join the distributed system.


Commit 3f12fd460b1c34543d56ef4f6844f2b9f56918d5 in geode's branch refs/heads/develop from [~bschuchardt]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=3f12fd4 ]

GEODE-2542 LocatorDUnitTest and LocatorUDPSecurityDUnitTest flaky

Removed yet another Flaky annotation from this test class.  Flakiness
was fixed months ago but the Flaky annotations and categorization
weren't removed from the test.


Reopening as the test is still marked Flaky and is still failing even though it's run as part of the flakyTest suite and so has no interference from other unit tests.

{noformat}
org.apache.geode.distributed.LocatorUDPSecurityDUnitTest > testStartTwoLocators FAILED
    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedCallable.call in VM 2 running on Host 1fcec927-d828-4bc5-5f68-8f441aa87f30 with 5 VMs

        Caused by:
        java.lang.AssertionError: expected:<2> but was:<1>

    java.lang.AssertionError: Suspicious strings were written to the log during this run.
    Fix the strings or use IgnoredException.addIgnoredException to ignore.
    -----------------------------------------------------------------------
    Found suspect string in log4j at line 2674

    [error 2017/06/14 01:38:00.381 UTC <unicast receiver,1fcec927-d828-4bc5-5f68-8f441aa87f30-42434> tid=0x317] Exception deserializing message payload: [dst: 1fcec927-d828-4bc5-5f68-8f441aa87f30<v1>:32771, src: 1fcec927-d828-4bc5-5f68-8f441aa87f30<v0>:32770 (2 headers), size=1452 bytes, flags=OOB|DONT_BUNDLE|NO_FC|SKIP_BARRIER]
    java.lang.Exception: Message id is -150
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1109)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readJGMessage(JGroupsMessenger.java:1010)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1278)
    	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
    	at org.jgroups.JChannel.up(JChannel.java:741)
    	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
    	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
    	at org.jgroups.protocols.FlowControl.up(FlowControl.java:390)
    	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1070)
    	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:785)
    	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:74)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:72)
    	at org.jgroups.protocols.TP.passMessageUp(TP.java:1601)
    	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1817)
    	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
    	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1729)
    	at org.jgroups.protocols.TP.receive(TP.java:1654)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
    	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
    	at java.lang.Thread.run(Thread.java:748)
    Caused by: java.lang.NullPointerException
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterSecretKey(GMSEncrypt.java:103)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterEncryptor(GMSEncrypt.java:290)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.decryptData(GMSEncrypt.java:153)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1088)
    	... 20 more
{noformat}


I am disabling testStartTwoLocators along with a couple of new tests that I'm adding to the superclass in an upcoming checkin.

A different failure is seen in testCollocatedLocatorWithSecurity:

{noformat}
java.lang.AssertionError: Suspicious strings were written to the log during this run.
Fix the strings or use IgnoredException.addIgnoredException to ignore.
-----------------------------------------------------------------------
Found suspect string in log4j at line 1042

[fatal 2017/06/14 10:48:52.143 PDT <locator request thread[1]> tid=0xbe] Exception in processing request from 10.118.33.201
java.lang.RuntimeException: Not found public key for member 10.118.33.201(63107)<v1>:32771
	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getPublicKey(GMSEncrypt.java:177)
	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.getPublicKey(JGroupsMessenger.java:1367)
	at org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.processRequest(GMSLocator.java:283)
	at org.apache.geode.distributed.internal.InternalLocator$PrimaryHandler.processRequest(InternalLocator.java:1256)
	at org.apache.geode.distributed.internal.tcpserver.TcpServer.lambda$processRequest$0(TcpServer.java:401)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getPeerEncryptor(GMSEncrypt.java:258)
	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getPublicKey(GMSEncrypt.java:175)
	... 7 more
{noformat}


Similar failure but different test method:
{noformat}
org.apache.geode.distributed.LocatorUDPSecurityDUnitTest > testStartTwoLocators FAILED
    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedCallable.call in VM 2 running on Host c52f651b-907c-405b-6209-c0d8e0c3c93d with 5 VMs

        Caused by:
        java.lang.AssertionError: expected:<2> but was:<1>

    java.lang.AssertionError: Suspicious strings were written to the log during this run.
    Fix the strings or use IgnoredException.addIgnoredException to ignore.
    -----------------------------------------------------------------------
    Found suspect string in log4j at line 1784

    [error 2017/06/16 22:55:51.582 UTC <unicast receiver,c52f651b-907c-405b-6209-c0d8e0c3c93d-12820> tid=0x261] Exception deserializing message payload: [dst: c52f651b-907c-405b-6209-c0d8e0c3c93d<v1>:32771, src: c52f651b-907c-405b-6209-c0d8e0c3c93d<v0>:32770 (2 headers), size=1452 bytes, flags=OOB|DONT_BUNDLE|NO_FC|SKIP_BARRIER]
    java.lang.Exception: Message id is -150
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1109)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readJGMessage(JGroupsMessenger.java:1010)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1278)
    	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
    	at org.jgroups.JChannel.up(JChannel.java:741)
    	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
    	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
    	at org.jgroups.protocols.FlowControl.up(FlowControl.java:390)
    	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1070)
    	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:785)
    	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:74)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:72)
    	at org.jgroups.protocols.TP.passMessageUp(TP.java:1601)
    	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1817)
    	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
    	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1729)
    	at org.jgroups.protocols.TP.receive(TP.java:1654)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
    	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
    	at java.lang.Thread.run(Thread.java:748)
    Caused by: java.lang.NullPointerException
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterSecretKey(GMSEncrypt.java:103)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterEncryptor(GMSEncrypt.java:290)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.decryptData(GMSEncrypt.java:153)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1088)
    	... 20 more
{noformat}

Commit e9f856357565e72e8fe7dff7235404a74fdb5af9 in geode's branch refs/heads/develop from [~WireBaron]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=e9f8563 ]

GEODE-2542: Push DH keys when locator becomes coordinator

This solves a race condition where a second locator (started at
the same time) would fail to get a join response due to the join
 request being processed prior to becoming coordinator.

Signed-off-by: Hitesh Khamesra <hiteshk25@yahoo.com>


Commit e9f856357565e72e8fe7dff7235404a74fdb5af9 in geode's branch refs/heads/feature/GEODE-3026 from [~WireBaron]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=e9f8563 ]

GEODE-2542: Push DH keys when locator becomes coordinator

This solves a race condition where a second locator (started at
the same time) would fail to get a join response due to the join
 request being processed prior to becoming coordinator.

Signed-off-by: Hitesh Khamesra <hiteshk25@yahoo.com>


Reopening as this is still failing in CI:

{code}
org.apache.geode.distributed.LocatorUDPSecurityDUnitTest > testStartTwoLocators FAILED
    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedCallable.call in VM 2 running on Host f2fdb491-3c55-462f-7cd7-57444e5c8493 with 5 VMs

        Caused by:
        org.apache.geode.InternalGemFireError: no distributed system found

    java.lang.AssertionError: Suspicious strings were written to the log during this run.
    Fix the strings or use IgnoredException.addIgnoredException to ignore.
    -----------------------------------------------------------------------
    Found suspect string in log4j at line 1300

    [error 2017/10/23 21:11:02.957 UTC <unicast receiver,f2fdb491-3c55-462f-7cd7-57444e5c8493-51452> tid=0x25c] Exception deserializing message payload: [dst: f2fdb491-3c55-462f-7cd7-57444e5c8493<v1>:32771, src: f2fdb491-3c55-462f-7cd7-57444e5c8493<v0>:32770 (2 headers), size=1452 bytes, flags=OOB|DONT_BUNDLE|NO_FC|SKIP_BARRIER]
    java.lang.Exception: Message id is -150
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1110)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readJGMessage(JGroupsMessenger.java:1011)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1279)
    	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
    	at org.jgroups.JChannel.up(JChannel.java:741)
    	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
    	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
    	at org.jgroups.protocols.FlowControl.up(FlowControl.java:390)
    	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1070)
    	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:785)
    	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:74)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:72)
    	at org.jgroups.protocols.TP.passMessageUp(TP.java:1601)
    	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1817)
    	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
    	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1729)
    	at org.jgroups.protocols.TP.receive(TP.java:1654)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
    	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
    	at java.lang.Thread.run(Thread.java:748)
    Caused by: java.lang.NullPointerException
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterSecretKey(GMSEncrypt.java:104)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterEncryptor(GMSEncrypt.java:290)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.decryptData(GMSEncrypt.java:153)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1089)
    	... 20 more

    -----------------------------------------------------------------------
    Found suspect string in log4j at line 1353

    [error 2017/10/23 21:11:12.938 UTC <unicast receiver,f2fdb491-3c55-462f-7cd7-57444e5c8493-51452> tid=0x25c] Exception deserializing message payload: [dst: f2fdb491-3c55-462f-7cd7-57444e5c8493<v1>:32771, src: f2fdb491-3c55-462f-7cd7-57444e5c8493<v0>:32770 (2 headers), size=234 bytes, flags=OOB|DONT_BUNDLE|NO_FC|SKIP_BARRIER]
    java.lang.Exception: Message id is -153
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1110)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readJGMessage(JGroupsMessenger.java:1011)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1279)
    	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
    	at org.jgroups.JChannel.up(JChannel.java:741)
    	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
    	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
    	at org.jgroups.protocols.FlowControl.up(FlowControl.java:390)
    	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1070)
    	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:785)
    	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:74)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:72)
    	at org.jgroups.protocols.TP.passMessageUp(TP.java:1601)
    	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1817)
    	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
    	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1729)
    	at org.jgroups.protocols.TP.receive(TP.java:1654)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
    	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
    	at java.lang.Thread.run(Thread.java:748)
    Caused by: java.lang.NullPointerException
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterSecretKey(GMSEncrypt.java:104)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterEncryptor(GMSEncrypt.java:290)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.decryptData(GMSEncrypt.java:153)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1089)
    	... 20 more

    -----------------------------------------------------------------------
    Found suspect string in log4j at line 1383

    [error 2017/10/23 21:11:12.939 UTC <unicast receiver,f2fdb491-3c55-462f-7cd7-57444e5c8493-51452> tid=0x25c] Exception deserializing message payload: [dst: f2fdb491-3c55-462f-7cd7-57444e5c8493<v1>:32771, src: f2fdb491-3c55-462f-7cd7-57444e5c8493<v0>:32770 (2 headers), size=924 bytes, flags=OOB|DONT_BUNDLE|NO_FC|SKIP_BARRIER]
    java.lang.Exception: Message id is -150
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1110)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readJGMessage(JGroupsMessenger.java:1011)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1279)
    	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
    	at org.jgroups.JChannel.up(JChannel.java:741)
    	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
    	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
    	at org.jgroups.protocols.FlowControl.up(FlowControl.java:390)
    	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1070)
    	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:785)
    	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:74)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:72)
    	at org.jgroups.protocols.TP.passMessageUp(TP.java:1601)
    	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1817)
    	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
    	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1729)
    	at org.jgroups.protocols.TP.receive(TP.java:1654)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
    	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
    	at java.lang.Thread.run(Thread.java:748)
    Caused by: java.lang.NullPointerException
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterSecretKey(GMSEncrypt.java:104)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterEncryptor(GMSEncrypt.java:290)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.decryptData(GMSEncrypt.java:153)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1089)
    	... 20 more

    -----------------------------------------------------------------------
    Found suspect string in log4j at line 1415

    [error 2017/10/23 21:11:12.940 UTC <unicast receiver,f2fdb491-3c55-462f-7cd7-57444e5c8493-51452> tid=0x25c] Exception deserializing message payload: [dst: f2fdb491-3c55-462f-7cd7-57444e5c8493<v1>:32771, src: f2fdb491-3c55-462f-7cd7-57444e5c8493<v0>:32770 (2 headers), size=924 bytes, flags=OOB|DONT_BUNDLE|NO_FC|SKIP_BARRIER]
    java.lang.Exception: Message id is -150
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1110)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readJGMessage(JGroupsMessenger.java:1011)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1279)
    	at org.jgroups.JChannel.invokeCallback(JChannel.java:816)
    	at org.jgroups.JChannel.up(JChannel.java:741)
    	at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030)
    	at org.jgroups.protocols.FRAG2.up(FRAG2.java:165)
    	at org.jgroups.protocols.FlowControl.up(FlowControl.java:390)
    	at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1070)
    	at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:785)
    	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:74)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:72)
    	at org.jgroups.protocols.TP.passMessageUp(TP.java:1601)
    	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1817)
    	at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10)
    	at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1729)
    	at org.jgroups.protocols.TP.receive(TP.java:1654)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160)
    	at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701)
    	at java.lang.Thread.run(Thread.java:748)
    Caused by: java.lang.NullPointerException
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterSecretKey(GMSEncrypt.java:104)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.getClusterEncryptor(GMSEncrypt.java:290)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.decryptData(GMSEncrypt.java:153)
    	at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.readEncryptedMessage(JGroupsMessenger.java:1089)
    	... 20 more
{code}

Failed again today in https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/FlakyTest/builds/182

The last stack trace in the comments no longer appears to be possible:


{noformat}
protected byte[] getClusterSecretKey() {
    if (this.clusterEncryptor != null) {
      return this.clusterEncryptor.getSecretBytes();
    } else {
      return null;
    }
  }

{noformat}


{{testStartTwoLocators}} includes a 10-second wait for the view to have five members. Is this test flaky simply because under some conditions it takes longer than 10 seconds without there being an error condition, e.g., one of the machines is very, very slow? After running it 700 times locally there were zero failures.

Commit 91ed05a3d6b195a2f361a166b6c97a745bbb0f59 in geode's branch refs/heads/develop from [~gosullivan]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=91ed05a ]

GEODE-2542: Extend timeouts from 10s to 30; cleanup (#1897)

GEODE-2542: Extend timeouts from 10s to 30; cleanup

* Remove usage of Assert.fail()
* Don't use invoke try-catch-throw paradigm.
* Remove dead code
* Un-ignore tests, use implicit default constructors.


Commit 91ed05a3d6b195a2f361a166b6c97a745bbb0f59 in geode's branch refs/heads/develop from [~gosullivan]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=91ed05a ]

GEODE-2542: Extend timeouts from 10s to 30; cleanup (#1897)

GEODE-2542: Extend timeouts from 10s to 30; cleanup

* Remove usage of Assert.fail()
* Don't use invoke try-catch-throw paradigm.
* Remove dead code
* Un-ignore tests, use implicit default constructors.


I bumped up the timeouts from 10s to 30s and did some test cleanup. Hopefully this is enough to fix the flakiness.

Commit 91ed05a3d6b195a2f361a166b6c97a745bbb0f59 in geode's branch refs/heads/feature/GEODE-5166 from [~gosullivan]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=91ed05a ]

GEODE-2542: Extend timeouts from 10s to 30; cleanup (#1897)

GEODE-2542: Extend timeouts from 10s to 30; cleanup

* Remove usage of Assert.fail()
* Don't use invoke try-catch-throw paradigm.
* Remove dead code
* Un-ignore tests, use implicit default constructors.


Commit 91ed05a3d6b195a2f361a166b6c97a745bbb0f59 in geode's branch refs/heads/feature/GEODE-5166 from [~gosullivan]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=91ed05a ]

GEODE-2542: Extend timeouts from 10s to 30; cleanup (#1897)

GEODE-2542: Extend timeouts from 10s to 30; cleanup

* Remove usage of Assert.fail()
* Don't use invoke try-catch-throw paradigm.
* Remove dead code
* Un-ignore tests, use implicit default constructors.


