[PR (trunk)|https://github.com/apache/cassandra/pull/1488]

As an example, I've compared times of running a random set of tests ({{time ant testclasslist}}):

{noformat}
org/apache/cassandra/cql3/ViewFilteringComplexPKTest.java
org/apache/cassandra/cql3/PstmtPersistenceTest.java
org/apache/cassandra/cql3/ViewFilteringClustering1Test.java
org/apache/cassandra/cql3/MemtableSizeTest.java
org/apache/cassandra/cql3/GcCompactionTest.java
org/apache/cassandra/cql3/ViewRangesTest.java
org/apache/cassandra/cql3/ViewTimesTest.java
org/apache/cassandra/cql3/DurationTest.java
org/apache/cassandra/cql3/ViewTest.java
org/apache/cassandra/cql3/ViewComplexTest.java
{noformat}

It was ~ 3'55" vs 3'15" (40 seconds faster)

I also tried for a single test ({{ViewTest}}), it was 50" vs 35" (15 seconds faster)

For a single run, we can safe around 12 seconds by avoiding {{checkstyle}}, {{rat-check}} and {{eclipse-warnings}} - it is enough for them to be executed once for the whole build (when we generate artifacts).

Other changes include: 
- using {{rm -r}} instead of iterating over directories and individual files in Java when deleting stuff (we delete many files before each test) - this is enabled only in unit tests by a system property
- setting grace period for driver shutdown to 0
- avoiding use of open ssl in unit tests

There is also a small change in {{workspace.xml}} for IntelliJ which increases max meta space memory from 384M to 512M as it frequently happens for jvm dtests to fail because of insufficient amount of that memory


+1

+1

There's a breakage here in the rpm packaging.
https://ci-cassandra.apache.org/job/Cassandra-devbranch-artifacts/1461/

This can be reproduced from the a cassandra-builds clone with
{code}
CASSANDRA_GIT_URL="https://github.com/thelastpickle/cassandra.git" build-scripts/cassandra-rpm-packaging.sh c96f3ba 8
{code}

or, in more detail…
{code}
docker run -it -v /Users/mick/src/apache/cassandra-builds-dir/cassandra-builds:/dist cassandra-artifacts-almalinux:c96f3ba /bin/bash

/home/build/build-rpms.sh c96f3ba 8

cd /home/build/rpmbuild/BUILD/apache-cassandra-4.1-src
ant clean jar -Dversion=4.1
{code}
(c96f3ba is found [here|https://github.com/thelastpickle/cassandra/tree/jacek-lewandowski/CASSANDRA-17427-trunk], which is the above branch rebased off latest trunk)

[~jlewandowski], did you have any more time for this? 

[~mck] - let me revisit it, I'll wrap it up by Wed

sorry, I got severely distracted from this ticket :facepalm
I remembered about it when noticed https://issues.apache.org/jira/browse/CASSANDRA-17371
Would you run tests on Jenkins once again?


Please notice CASSANDRA-18000 was recently merged to have a consistent approach where/if they overlap #justfyi

[~bereng], no, they do not overlap - this is about something else


Ok, as I read 

bq. avoiding checkstyle

I thought they could be connected

That was just a suggestion. I was going to implement that in a separate ticket. We already have both things implemented in our fork for quite a long time

bq. Would you run tests on Jenkins once again?


https://ci-cassandra.apache.org/job/Cassandra-devbranch/2091/ 

Some more comparisons:
{{DescribeStatementTest.describeTest}}, 500 runs on CircleCI: [without a patch|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/452/workflows/4a714ebf-c10c-4bbc-b974-4856c8aafe55/jobs/2732/timing], [with a patch|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/453/workflows/229135cb-c409-4e44-8169-f9b01092fea0/jobs/2734/timing] - this shows mostly improvements on initialization and teardown due to improved cleanup and reduce quiet time periods

{{SSTablesIteratedTest.*}}, 100 runs on CircleCI: [without a patch|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/446/workflows/8d7ec2fe-2d28-490e-aa36-8684dc827a6a/jobs/2721/timing], [with a patch|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/450/workflows/85a34177-0659-405d-8727-acf1c9c57d64/jobs/2728/timing] - this shows mostly improvements related to not flushing schema keyspace on every change


https://ci-cassandra.apache.org/view/patches/job/Cassandra-devbranch/2193/

Do I need to re-review this one or were the changes minimal to address that packaging failure?

there's been some additions to the PR yes.
and let me run ci-cassandra again, there's been a few network timeouts and full disks there…

https://ci-cassandra.apache.org/job/Cassandra-devbranch/2196/

Seems lots of the files in the PR have been removed the newline at the end which iirc I have been asked in reviews to keep them?

Left some feedback on the PR, also have the same question as Berenguer about whitespace at end of files. Doesn't look like we specify in our [style guide|https://cassandra.apache.org/_/development/code_style.html].

Ok so if you google a bit there are a number of historical, technical, etc reasons. But what concerns us is that git is going to start complaining about it polluting commands output with 'no newline at end of file' messages. So I vote to avoid the noise and confusion and just add them back.

I know for yaml test files is important as we append files in test. 
If we start removing we will get a wall of failures, talking from experience:) 

I'm ok with bringing them back, just want to a clear rule so that I can setup formatter properly. Definitely I don't to manually add or remove new line at the and just to make no changes

I guess we expect this settings in IntelliJ, and in general, such rules for code style:

 !screenshot-1.png! 

Review comments applied/replied, please have a look, I need to rebase it seems.

+1 w/the latest changes.

[~mck], [~jmckenzie] thanks for your reviews. I've added one more tiny commit which disables that unix file deletion  if the user is on Windows.

https://ci-cassandra.apache.org/view/patches/job/Cassandra-devbranch/2219/ (?)

{quote}if the user is on Windows
{quote}
Is that necessary after CASSANDRA-16956?

As long as we have {{.bat}} files, I will consider that there is some support for Windows :)

Fine, fine. Point taken.

+1 here. :)

That ci-cassandra.a.o build looks surprisingly nice! 

+1 from me. (Can we get a circleci run too please)

PR [trunk|https://github.com/apache/cassandra/pull/1488]
* (!) [j8|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/508/workflows/3c0648d2-0d4a-4c3f-831b-61d6c36f86e4] - failed tests are reported to be flaky
* (!) [j11|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/508/workflows/6833ef10-805b-47df-ad67-30194c97fd13] - failed tests are reported to be flaky, except [org.apache.cassandra.distributed.test.SchemaTest.schemaReset|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/508/workflows/6833ef10-805b-47df-ad67-30194c97fd13/jobs/2900] - but AFAIR it is flaky as well

PR [4.1|https://github.com/apache/cassandra/pull/2115]
* (!) [j8|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/509/workflows/16e480c5-ef6f-4793-8f5c-93c6959fa42e] - failed tests are reported flaky, one org.apache.cassandra.index.sasi.SASICQLTest.testPagingWithClustering-system_keyspace_directory appears to be unrelated
* (!) [j11|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/509/workflows/6ea70537-c47b-424f-b941-7474e378dbaa] - failed tests are reported flaky

PR [4.0|https://github.com/apache/cassandra/pull/2116]
* (/) [j8|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/505/workflows/1ab1a0ae-dc16-448b-9b71-dc1b3febbdc6]
* (/) [j11|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/505/workflows/73dd532b-6b04-4d92-bc57-2d938d4b64a3]

There is one test which is reported in different runs as failing: https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/508/workflows/6833ef10-805b-47df-ad67-30194c97fd13/jobs/2912

I need to take a look at that as it seems to be related

 


 

perhaps fixed SnapshotTest https://app.circleci.com/pipelines/gh/jacek-lewandowski/cassandra/520/workflows/31cc8191-10c6-45de-bc79-267c6a66377b/jobs/2973

it seems also a way faster than previously: https://app.circleci.com/pipelines/gh/jacek-lewandowski/cassandra/514/workflows/1e5c22b1-357a-40cb-be34-34a7256d9125/jobs/2963


Could we push to merge this ticket and create new subsequent ones for follow up work? We've already gone through a couple rounds of reviews and feature creep's going to be a problem; I don't have cycles for reviews atm.

Ok [~jmckenzie], I think there is something wrong in automatic snapshot cleanup and it deserves a separate ticket anyway. 

I've created https://issues.apache.org/jira/browse/CASSANDRA-18211

[j8, 4.0|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/534/workflows/7af2bc45-713a-477c-90e0-2c091b6aefba] (/)
[j11, 4.0|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/534/workflows/0c1428a3-7e91-40ce-9cdf-f32c83df8f71] (/)

[j8, 4.1|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/533/workflows/5afb0a75-275a-4c8d-ba10-277b62bf4580] (!) - [flakies|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/533/workflows/5afb0a75-275a-4c8d-ba10-277b62bf4580/jobs/3212]
[j11, 4.1|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/533/workflows/5f362d56-ab90-4c32-b26d-9ca45ecc0582] (/)

[j8, trunk|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/532/workflows/406cd38a-e903-49d8-ab13-6d1f49f51314] (!) [flakies|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/532/workflows/406cd38a-e903-49d8-ab13-6d1f49f51314/jobs/3115]
[j11, trunk|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/532/workflows/d8c9562d-d8b1-4031-8ca3-a0237e298651] (/)



Will merge, tests look sufficiently well

