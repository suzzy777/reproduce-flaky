test_bloom_filters seems to fail on the last test case when run on seq/gzip/record table format (database used: functional_seq_record_gzip) during exhaustive test runs.

test case:

{noformat}
---- QUERY
####################################################
# Test case 4: Filter size is >= the min buffer size that can be allocated by the
# buffer pool
####################################################
SET RUNTIME_FILTER_MODE=GLOBAL;
SET RUNTIME_FILTER_WAIT_TIME_MS=30000;
SET RUNTIME_FILTER_MIN_SIZE=4KB;
SET RUNTIME_BLOOM_FILTER_SIZE=4KB;
# The min buffer size is set to 8KB for end to end tests. This query would
# produce a 4KB filter if the min buffer size limit bound is not enforced.
select STRAIGHT_JOIN count(*) from alltypes a join [SHUFFLE] alltypes b on a.id = b.id;
---- RESULTS
7300
---- RUNTIME_PROFILE
row_regex: .*1 of 1 Runtime Filter Published.*
row_regex: .*Filter 0 \(8.00 KB\).*
====

{noformat}

Expected size for Filter 0 is 8KB but the actual size comes out to 16 KB

Bloom filter sizes are based on NDV estimates, and considering that the previous runs were successful and the failed run had the patch for IMPALA-7608 which affects stats, I suspect that might be the reason for the failure.  