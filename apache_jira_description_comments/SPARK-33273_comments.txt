I've just faced with this too: https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/130409/testReport/org.apache.spark.sql.hive.thriftserver/ThriftServerQueryTestSuite/subquery_scalar_subquery_scalar_subquery_select_sql/

Thank you for sharing, [~gsomogyi]!

This happens again on master branch again.
- https://amplab.cs.berkeley.edu/jenkins/view/Spark%20QA%20Test%20(Dashboard)/job/spark-master-test-sbt-hadoop-2.7-hive-2.3/lastCompletedBuild/testReport/org.apache.spark.sql.hive.thriftserver/ThriftServerQueryTestSuite/subquery_scalar_subquery_scalar_subquery_select_sql/

This failure is frequent and might be a potential correctness issue in Spark Thrift Server. I'll raise the priority of this issue.

cc [~yumwang] do you have any clue?

I have no idea. I cannot reproduce locally.

Even in a single profile combination, this fails 3 times out of 6 runs recently.
 !failures.png! 

https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/132529/testReport/org.apache.spark.sql/SQLQueryTestSuite/subquery_scalar_subquery_scalar_subquery_select_sql/

SQLQueryTestSuite fails too

Thanks for sharing, [~Qin Yao].

Test scalar-subquery-select.sql is failed on arm64 job, see https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-maven-arm/513/testReport/org.apache.spark.sql.hive.thriftserver/ThriftServerQueryTestSuite/subquery_scalar_subquery_scalar_subquery_select_sql/  https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-maven-arm/516/testReport/org.apache.spark.sql.hive.thriftserver/ThriftServerQueryTestSuite/subquery_scalar_subquery_scalar_subquery_select_sql/

[~huangtianhua]. This is a long-standing general issue. :)

BTW, [~sarutak] provided another reproduced result here.
- https://github.com/apache/spark/pull/30755

According to his result, this is really a correctness issue and a blocker for Apache Spark 3.1.0.

cc [~maryannxue] and [~cloud_fan]


{code:java}
## once
build/sbt clean -Phive-2.3 -Pkinesis-asl -Pspark-ganglia-lgpl -Pyarn -Phive-thriftserver test:package streaming-kinesis-asl-assembly/assembly -Dsbt.override.build.repos=true
{code}


{code:java}
build/sbt -Phive  "sql/testOnly *SQLQueryTestSuite -- -z scalar-subquery-select.sql"

{code}


the possibility goes up to 5-10% when I run the 2nd command repeatedly on my mac

the SQL that hits the failure is not certain, but it seems always failed for the output `min(t3d) ` w/ `0` as its wrong result.

here is one of the debug msg
{code:java}
14:22:32.702 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[10,2017-05-04 01:01:00.0]
14:22:33.481 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1a,2]
14:22:33.885 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[10,null]
14:22:33.885 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[null,2017-05-04 01:01:00.0]
14:22:34.329 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[12]
14:22:34.918 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[null,val2a,null,200.83333333333334]
14:22:34.918 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1c,val1c,0,200.83333333333334]
14:22:34.918 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1c,val1c,0,200.83333333333334]
14:22:34.918 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1e,null,0,null]
14:22:34.918 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1e,null,0,null]
14:22:34.918 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1e,null,0,null]
14:22:35.240 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[19,2017-05-04 01:01:00.0]
14:22:35.636 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[19]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1a,6]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1a,16]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1a,16]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1c,8]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1d,null]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1a,6]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1d,null]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1e,10]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1e,10]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1d,10]
14:22:36.183 ERROR org.apache.spark.sql.execution.HiveResult: debugging ==>[val1e,10]
14:22:36.206 ERROR org.apache.spark.sql.SQLQueryTestSuite: Error using configs:
[info] - subquery/scalar-subquery/scalar-subquery-select.sql *** FAILED *** (4 seconds, 522 milliseconds)
[info]   subquery/scalar-subquery/scalar-subquery-select.sql
[info]   Expected "...3333334
[info]   val1c	val1c	[10	200.83333333333334
[info]   val1c	val1c	10	200.83333333333334
[info]   val1e	NULL	10	NULL
[info]   val1e	NULL	10	NULL
[info]   val1e	NULL	1]0	NULL", but got "...3333334
[info]   val1c	val1c	[0	200.83333333333334
[info]   val1c	val1c	0	200.83333333333334
[info]   val1e	NULL	0	NULL
[info]   val1e	NULL	0	NULL
[info]   val1e	NULL	]0	NULL" Result did not match for query #8
[info]   SELECT q1.t1a, q2.t2a, q1.min_t3d, q2.avg_t3d
[info]   FROM   (SELECT t1a, (SELECT min(t3d) FROM t3) min_t3d
[info]           FROM   t1
[info]           WHERE  t1a IN ('val1e', 'val1c')) q1
[info]          FULL OUTER JOIN
[info]          (SELECT t2a, (SELECT avg(t3d) FROM t3) avg_t3d
[info]           FROM   t2
[info]           WHERE  t2a IN ('val1c', 'val2a')) q2
[info]   ON     q1.t1a = q2.t2a
[info]   AND    q1.min_t3d < q2.avg_t3d (SQLQueryTestSuite.scala:464)
[info]   org.scalatest.exceptions.TestFailedException:
{code}


The msg pattern ‘debugging ==>’ is printed w/ sparkPlan.executeCollectPublic()

I also have set the compression code from lz4 to zstd, and the problem still there, that said, the compression/decompression is not related

User 'cloud-fan' has created a pull request for this issue:
https://github.com/apache/spark/pull/30765

User 'sarutak' has created a pull request for this issue:
https://github.com/apache/spark/pull/30766

User 'sarutak' has created a pull request for this issue:
https://github.com/apache/spark/pull/30766

Fixed in https://github.com/apache/spark/pull/30765

