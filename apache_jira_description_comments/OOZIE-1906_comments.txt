I think we might be able to use Curator's "reaper" thing mentioned at the bottom of this page: http://curator.apache.org/utilities.html

I looked into this more, and you are supposed to setup a Reaper to clean up old lock parent znodes.  Specifically, I think we can create a ChildReaper to look at the location where we store all of the locks and it will take care of this for us.  Also, we only need to have one Oozie server running this.  

https://curator.apache.org/apidocs/org/apache/curator/framework/recipes/locks/ChildReaper.html

bq. Also, we only need to have one Oozie server running this.
This can be done my setting leaderPath for ChildReaper.


Testing JIRA OOZIE-1906

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1504
.    Tests failed: 1
.    Tests errors: 1

.    The patch failed the following testcases:

.      testBundleEngineSuspend(org.apache.oozie.servlet.TestV1JobServletBundleEngine)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/1343/

typo in property name.
+    public static final String REAPING_THRESHOLD = CONF_PREFIX + "ZKLocksService.locks.reaper.threshlod";

Can you make the test more transparent by checking the children of lock once you request lock, and then comparing it with zero children after 'x' threshold seconds?

Few comments:
   - Schedule in SchedulerService.getScheduler() instead of creating a new thread pool. SchedulerService will take care of destroying the thread pool as well.
   - Can get rid of reaper.threads setting after switching to SchedulerService
  - public ZKUtils getZKUtils() - Do not expose this for testing. ZKUtils is kind of a singleton class. Access it that way in the test.

{quote}
Schedule in SchedulerService.getScheduler() instead of creating a new thread pool. SchedulerService will take care of destroying the thread pool as well.

Can get rid of reaper.threads setting after switching to SchedulerService
{quote}

ChildReaper destroys thread-poll on close, so we don't have to close it.

Puru pointed out that Curator does manage that threadpool and shuts it down. Based on what is done here - https://git-wip-us.apache.org/repos/asf?p=curator.git;a=blob;f=curator-client/src/main/java/org/apache/curator/utils/CloseableExecutorService.java , better to keep the threadpool separate. 

So just fixing the 3rd comment about not exposing the getZKUtils() should be enough.

Testing JIRA OOZIE-1906

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1508
.    Tests failed: 4
.    Tests errors: 0

.    The patch failed the following testcases:

.      testConcurrencyReachedAndChooseNextEligible(org.apache.oozie.service.TestCallableQueueService)
.      testCoordinatorActionCommandsSubmitAndStart(org.apache.oozie.sla.TestSLAEventGeneration)
.      testActionInputCheckLatestActionCreationTime(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommandNonUTC)
.      testActionStartWithEscapeStrings(org.apache.oozie.command.coord.TestCoordActionStartXCommand)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/1358/

+1. Committed to branch-4.1 and trunk. Thanks Puru.


Test Result (4 failures / +1)
org.apache.oozie.command.coord.TestCoordActionInputCheckXCommandNonUTC.testActionInputCheckLatestActionCreationTime (flaky - OOZIE-1872)
org.apache.oozie.command.coord.TestCoordActionStartXCommand.testActionStartWithEscapeStrings (flaky - OOZIE-1811)
org.apache.oozie.service.TestCallableQueueService.testConcurrencyReachedAndChooseNextEligible (flaky)
org.apache.oozie.sla.TestSLAEventGeneration.testCoordinatorActionCommandsSubmitAndStart (flaky)

