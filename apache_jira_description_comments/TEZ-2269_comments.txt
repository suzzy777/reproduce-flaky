Attaching client's jstack as well (in case needed for later reference)

Check the stack trace, it's very similar to TEZ-2267

stacktrace isn't revealing much on deadlock & haven't been successful in getting which thread is holding up the lock.

Tried out the test patch attached here multiple number of times, which safely uses "tryLock" with timeout  in DAGImpl.getDAGStatus().  With the patch, the hang issue is not reproduced. [~sseth] - Thoughts?

Wonder if this is just contention trying to acquire the writeLock in a loop - that shouldn't cause the hangs though.

This patch itself mostly looks good - will need to handle negative values for timeoutMillis.
We're probably better off moving this check away from the main DAG lock - which has far too much unnecessary contention at the moment. Will upload a patch which does this.

Patch to move this off the main dag lock.

lgtm.  Tried out the patch with multiple jobs, works fine without any AM hang issue.

Thanks for the review, and trying it out. WIll commit after jenkins gets back.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment
  http://issues.apache.org/jira/secure/attachment/12723400/TEZ-2269.altlock.txt
  against master revision b87a36f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The test build failed in  

Test results: https://builds.apache.org/job/PreCommit-TEZ-Build/401//testReport/
Console output: https://builds.apache.org/job/PreCommit-TEZ-Build/401//console

This message is automatically generated.

Re-uploading for jenkins.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment
  http://issues.apache.org/jira/secure/attachment/12723522/TEZ-2269.altlock.txt
  against master revision b87a36f.

    {color:red}-1 @author{color}.  The patch appears to contain  @author tags which the Tez community has agreed to not allow in code contributions.

    {color:green}+1 tests included{color}.  The patch appears to include  new or modified test files.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-TEZ-Build/402//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment
  http://issues.apache.org/jira/secure/attachment/12723522/TEZ-2269.altlock.txt
  against master revision b87a36f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-TEZ-Build/404//testReport/
Console output: https://builds.apache.org/job/PreCommit-TEZ-Build/404//console

This message is automatically generated.

Committing this. Thanks for the help debugging and verifying [~rajesh.balamohan], and [~zjffdu]. This is probably the same as 2267. Will close that one out if the tests aren't as flaky going forward.
Still not sure why the writeLock in it's original form was an issue though.

Closing issue as 0.5.4, 0.6.1 and 0.7.0 have been released. 

