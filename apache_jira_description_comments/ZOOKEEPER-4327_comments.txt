{{RequestThrottlerTest.testLargeRequestThrottling}} is flaky still. I saw two kind of failures:
# https://github.com/apache/zookeeper/runs/5008842173?check_suite_focus=true#step:7:957
{noformat}RequestThrottlerTest.testLargeRequestThrottling:299 expected: <5> but was: <4>{noformat}
# https://github.com/apache/zookeeper/runs/5284250979?check_suite_focus=true#step:7:957
  {noformat}RequestThrottlerTest.testLargeRequestThrottling:297 expected: <2> but was: <0>{noformat}

For #1, I think it is caused by mistake in {{createCallback}}.

{code:java}
        AsyncCallback.StringCallback createCallback = (rc, path, ctx, name) -> {
            if (KeeperException.Code.get(rc) == KeeperException.Code.CONNECTIONLOSS) {
                disconnected.countDown();
                connectionLossCount++;
            }
        };
{code}

{{disconnected.countDown()}} should placed after {{connectionLossCount++}}, so we can assert on {{connectionLossCount}} after {{disconnected.await}}. But I think a more comfortable fix is to assert on result of {{disconnected.await}}, so timeout await can be easily figure out.

For #2, I think it is caused by synchronous request rejection in {{ServerCnxn}} thread and asynchronous request submission in {{RequestThrottler.submitRequest}}. I think we can fix this by moving metrics read and assertion after {{finished.await}}.

[~eolivelli] [~maoling] What do you think ?

For #2, it is easy to reproduce by adding {{Thread.sleep(200)}} before {{zks.submitRequestNow(request)}} which resides in {{RequestThrottler.run}}.

New flaky run https://github.com/apache/zookeeper/runs/7067228033?check_suite_focus=true.

{noformat}org.opentest4j.AssertionFailedError: expected: <2> but was: <1>
	at org.apache.zookeeper.server.RequestThrottlerTest.testRequestThrottler(RequestThrottlerTest.java:197){noformat}

It should fail with same cause(aka. "asynchronous request submission") as {{RequestThrottlerTest.testLargeRequestThrottling}} assertions on {{prep_processor_request_queued}}.

