I manually verified this test was flaky (did not repro in 500 runs), for some reason I could not get it to multiplex in circle with [the usual method|https://app.circleci.com/pipelines/github/driftx/cassandra/949/workflows/80597aa3-9d84-4689-837f-b2f86cbf670c/jobs/18482/tests] or the [other one|https://app.circleci.com/pipelines/github/driftx/cassandra/950/workflows/6a8b76ea-ead6-49c9-b629-2efc3a6bbe0f/jobs/18578]:

{noformat}
java.lang.Exception: No tests found matching Method testConditionalUpdate(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest) from org.junit.internal.requests.ClassRequest@5851bd4f
{noformat}

Maybe I was doing something wrong though.

I have reproduced similar failures on different tests of the {{InsertUpdateIfConditionTest}} suite with:
{code:java}
.circleci/generate.sh -p \
  -e REPEATED_UTESTS_COUNT=5000 \
  -e REPEATED_UTESTS=org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionCollectionsTest
{code}
[https://app.circleci.com/pipelines/github/adelapena/cassandra/2781/workflows/7a030663-5cbb-4f60-847b-6f6015a57448]
[https://app.circleci.com/pipelines/github/adelapena/cassandra/2782/workflows/a5a3edf7-fb9b-48f8-a8a7-c5a13e683c8a]

It seems the issue is not exclusive to {{testConditionalUpdate}} but to the common initialization done at {{{}InsertUpdateIfConditionTest#before{}}}. I'll try to bisect to see when it started to fail.
 

It seems that the current errors in both {{InsertUpdateIfConditionTest}} and {{InsertUpdateIfConditionCollectionsTest}} started to appear on their current form with CASSANDRA-17653:
 * Before: [commit|https://github.com/apache/cassandra/commit/89f3978dcde958fbad191b8cf628fd89ace64d7a] [CI|https://app.circleci.com/pipelines/github/adelapena/cassandra/2803/workflows/dc769b19-b383-4332-92db-12e7e54a49fa]
 * After: [commit|https://github.com/apache/cassandra/commit/cc28e1a85e2e5760436030ca57667fa69d6de233] [CI|https://app.circleci.com/pipelines/github/adelapena/cassandra/2804/workflows/5bec4990-05da-4879-b097-57116c30ba5b]

CASSANDRA-17653 was trying to fix previous failures on {{{}InsertUpdateIfConditionTest{}}}.

Bisect shows that those failures were originally introduced for the first time by CASSANDRA-16930:
 * Before: [commit|https://github.com/apache/cassandra/commit/ce2a0a28bc9ca21e1fae29f2a38448a877db06c3] [CI|https://app.circleci.com/pipelines/github/adelapena/cassandra/2807/workflows/e08f482a-40bd-4dfc-b322-353572717ada]
 * After: [commit|https://github.com/apache/cassandra/commit/fe9cff663b48fecdb964caaded2004e83a0c89f4] [CI|https://app.circleci.com/pipelines/github/adelapena/cassandra/2808/workflows/a63798dd-1916-4ef6-9e4c-9962127fc66b]

I have only tested {{InsertUpdateIfConditionTest}} and {{{}InsertUpdateIfConditionCollectionsTest{}}}, but I guess it's quite likely that {{InsertUpdateIfConditionStaticsTest}} is also affected. Perhaps we should create an umbrella ticket for all the probably related failures, or rename this one?

The test [sets/hacks|https://github.com/apache/cassandra/blob/cassandra-5.0/test/unit/org/apache/cassandra/cql3/validation/operations/InsertUpdateIfConditionTest.java#L96] the upgrade version and we can see a small hack there were node 2 is [added|https://github.com/apache/cassandra/blob/cassandra-5.0/test/unit/org/apache/cassandra/Util.java#L1099]. This is to prevent the Gossiper upgrade from version supplier from short cutting [here|https://github.com/apache/cassandra/blob/cassandra-5.0/src/java/org/apache/cassandra/gms/Gossiper.java#L235] on isLoneNode(), otherwise it will return the node's default version.

The problem is when node2 is added by the test but on a slow env the Gossiper immediately removes it as if it were a fat client:

_[junit-timeout] INFO  [GossipTasks:1] 2023-08-29 12:32:31,843 Gossiper.java:1119 - FatClient /127.0.0.2:7012 has been silent for 1000ms, removing from gossip_

That will trigger the failure we're seeing. The fix is to spin assert the version setup. We can see [5K green repeats|https://app.circleci.com/pipelines/github/bereng/cassandra/1051/workflows/0f339cc5-7dcd-4798-8202-6d4f2ae2bb0d/jobs/27078] whereas that was impossible before the fix.

The current PR is WIP set up for review for validation of the solution only. If we're happy with it I will clean logging, remove some extra methods from the prior ticket and make it pretty.

The fix looks good to me. We should probably also run repeated CI on {{InsertUpdateIfConditionStaticsTest}} and {{InsertUpdateIfConditionCollectionsTest}} since those tests also call the modified {{InsertUpdateIfConditionTest.beforeSetup}} method.

Final cleaned and prettied-up PRs up for review. 2K repeats, more than enough for the bug to repro, per each test are green totalling 6K repeats.

Looks good. It seems there aren't repeated runs for trunk?

Correct. 5.0 and trunk are 99% identical, the fix is super isolated and the CI would be an unnecessary spend in this occasion. But if you disagree I could fire one for trunk as well.

What about a trunk run with less iterations, just to be sure? Something like 100 iterations?

Sure. Added 100 repeats CI link to trunk PR.

Great, thanks. +1.

Thx for the review! I'll commit on Monday to avoid Murphy's bad commit on a Friday law... :-DD

