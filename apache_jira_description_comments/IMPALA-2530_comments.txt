This test was modified by:

IMPALA-2265: Sorter was not checking the returned Status of PrepareRead (detail)

It added one of the test cases that failed, so that one might be flaky. However, other queries failed as well, and those queries also seem to be running with the 150m mem limit which shouldn't be happening. e.g.:

http://sandbox.jenkins.cloudera.com/view/Impala/view/Builds%20-%202.3.0%20Release/job/impala-cdh5.5.x-exhaustive/34/testReport/junit/query_test.test_queries/TestQueries/test_analytic_fns_exec_option____disable_codegen___True___abort_on_error___1___exec_single_node_rows_threshold___100___batch_size___0___num_nodes___0____table_format__text_bzip_block_/

I guess what happens with the other queries is that if the query where we set the mem_limit fails, then the final "set mem_limit=0" statement is not executed, and so subsequent iterations will incorrectly run with the 150m mem limit still set.

This is a flaky test. I'll send a fix.

commit 14695917b7821f46033b53ebdd03817df80d8cf2
Author: Dan Hecht <dhecht@cloudera.com>
Date:   Sat Oct 10 10:47:48 2015 -0700

    IMPALA-2530: fix flaky test_analytic_fns test case

    Commit: IMPALA-2265: Sorter was not checking the returned Status of
    PrepareRead

    added a new test case that sets a mem_limit. The mem_limit was
    calibrated against functional_parquet tables, but during exhaustive
    this test is run against other formats.  Other scanners will use
    different amounts of memory causing this test to fail in exhaustive.
    Fix the query to always run exactly as it was tuned.

    Change-Id: I8140653825cb4f303ad569f087757148c756e42d
    Reviewed-on: http://gerrit.cloudera.org:8080/1230
    Reviewed-by: Tim Armstrong <tarmstrong@cloudera.com>
    Tested-by: Internal Jenkins

