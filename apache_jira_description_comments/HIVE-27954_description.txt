{noformat}
mvn test -pl streaming -Dtest=TestStreaming
{noformat}
The test is flaky and fails quite often in CI:
http://ci.hive.apache.org/job/hive-flaky-check/772


{noformat}
12:34:14  [INFO] -------------------------------------------------------
12:34:14  [INFO]  T E S T S
12:34:14  [INFO] -------------------------------------------------------
12:34:15  [INFO] Running org.apache.hive.streaming.TestStreaming
12:40:22  [ERROR] Tests run: 38, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 360.619 s <<< FAILURE! - in org.apache.hive.streaming.TestStreaming
12:40:22  [ERROR] org.apache.hive.streaming.TestStreaming.testTimeOutReaper  Time elapsed: 2.216 s  <<< ERROR!
12:40:22  org.apache.hive.streaming.StreamingException: TransactionTxnId/WriteIds=[16/3...16/3] on connection = { metaStoreUri: null, database: testing2, table: alerts };  TxnStatus[O] LastUsed txnid:16 is closed()
12:40:22  	at org.apache.hive.streaming.AbstractStreamingTransaction.checkIsClosed(AbstractStreamingTransaction.java:58)
12:40:22  	at org.apache.hive.streaming.TransactionBatch.commit(TransactionBatch.java:256)
12:40:22  	at org.apache.hive.streaming.HiveStreamingConnection.commitTransaction(HiveStreamingConnection.java:646)
12:40:22  	at org.apache.hive.streaming.HiveStreamingConnection.commitTransaction(HiveStreamingConnection.java:622)
12:40:22  	at org.apache.hive.streaming.HiveStreamingConnection.commitTransaction(HiveStreamingConnection.java:616)
12:40:22  	at org.apache.hive.streaming.TestStreaming.testTimeOutReaper(TestStreaming.java:1395)
12:40:22  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
12:40:22  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
12:40:22  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
12:40:22  	at java.lang.reflect.Method.invoke(Method.java:498)
12:40:22  	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
12:40:22  	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
12:40:22  	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
12:40:22  	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
12:40:22  	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
12:40:22  	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
12:40:22  	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
12:40:22  	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
12:40:22  	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
12:40:22  	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
12:40:22  	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
12:40:22  	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
12:40:22  	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
12:40:22  	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
12:40:22  	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
12:40:22  	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
12:40:22  	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
12:40:22  	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
12:40:22  	at java.util.Iterator.forEachRemaining(Iterator.java:116)
12:40:22  	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
12:40:22  	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
12:40:22  	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
12:40:22  	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
12:40:22  	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:123)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
12:40:22  
12:40:22  [ERROR] org.apache.hive.streaming.TestStreaming.testConnectionWithWriteId  Time elapsed: 40.126 s  <<< ERROR!
12:40:22  java.sql.SQLTransactionRollbackException: 
12:40:22  A lock could not be obtained due to a deadlock, cycle of locks and waiters is:
12:40:22  Lock : ROW, SYSCOLUMNS, (21,18)
12:40:22    Waiting XID : {35832, X} , APP, ALTER TABLE "TXNS" ALTER "TXN_ID" RESTART WITH 1
12:40:22    Granted XID : {35832, S} , {35834, S} 
12:40:22  Lock : TABLE, TXNS, Tablelock
12:40:22    Waiting XID : {35834, IX} , APP, UPDATE "TXNS" SET "TXN_LAST_HEARTBEAT" = { fn timestampdiff(sql_tsi_frac_second, timestamp('1969-12-31 16:00:00.0'), current_timestamp) } / 1000000 WHERE "TXN_STATE" = 'o' AND ("TXN_ID" in (16))
12:40:22    Granted XID : {35832, X} 
12:40:22  . The selected victim is XID : 35832.
12:40:22  	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
12:40:22  	at org.apache.hadoop.hive.metastore.utils.TestTxnDbUtil.resetTxnSequence(TestTxnDbUtil.java:268)
12:40:22  	at org.apache.hadoop.hive.metastore.utils.TestTxnDbUtil.cleanDb(TestTxnDbUtil.java:238)
12:40:22  	at org.apache.hive.streaming.TestStreaming.<init>(TestStreaming.java:225)
12:40:22  	at sun.reflect.GeneratedConstructorAccessor343.newInstance(Unknown Source)
12:40:22  	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
12:40:22  	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:250)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:260)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner$2.runReflectiveCall(BlockJUnit4ClassRunner.java:309)
12:40:22  	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:306)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
12:40:22  	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
12:40:22  	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
12:40:22  	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
12:40:22  	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
12:40:22  	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
12:40:22  	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
12:40:22  	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
12:40:22  	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
12:40:22  	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
12:40:22  	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
12:40:22  	at java.util.Iterator.forEachRemaining(Iterator.java:116)
12:40:22  	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
12:40:22  	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
12:40:22  	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
12:40:22  	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
12:40:22  	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:123)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
12:40:22  Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:
12:40:22  Lock : ROW, SYSCOLUMNS, (21,18)
12:40:22    Waiting XID : {35832, X} , APP, ALTER TABLE "TXNS" ALTER "TXN_ID" RESTART WITH 1
12:40:22    Granted XID : {35832, S} , {35834, S} 
12:40:22  Lock : TABLE, TXNS, Tablelock
12:40:22    Waiting XID : {35834, IX} , APP, UPDATE "TXNS" SET "TXN_LAST_HEARTBEAT" = { fn timestampdiff(sql_tsi_frac_second, timestamp('1969-12-31 16:00:00.0'), current_timestamp) } / 1000000 WHERE "TXN_STATE" = 'o' AND ("TXN_ID" in (16))
12:40:22    Granted XID : {35832, X} 
12:40:22  . The selected victim is XID : 35832.
12:40:22  	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
12:40:22  	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForWrite(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRows(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropColumnDescriptorCore(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropColumnDescriptor(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnDefault(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)
12:40:22  	... 51 more
12:40:22  
12:40:22  [ERROR] org.apache.hive.streaming.TestStreaming.testTransactionBatchEmptyCommit  Time elapsed: 40.078 s  <<< ERROR!
12:40:22  java.sql.SQLTransactionRollbackException: 
12:40:22  A lock could not be obtained due to a deadlock, cycle of locks and waiters is:
12:40:22  Lock : ROW, SYSCOLUMNS, (21,18)
12:40:22    Waiting XID : {35918, X} , APP, ALTER TABLE "TXNS" ALTER "TXN_ID" RESTART WITH 1
12:40:22    Granted XID : {35918, S} , {35920, S} 
12:40:22  Lock : TABLE, TXNS, Tablelock
12:40:22    Waiting XID : {35920, IX} , APP, UPDATE "TXNS" SET "TXN_LAST_HEARTBEAT" = { fn timestampdiff(sql_tsi_frac_second, timestamp('1969-12-31 16:00:00.0'), current_timestamp) } / 1000000 WHERE "TXN_STATE" = 'o' AND ("TXN_ID" in (16))
12:40:22    Granted XID : {35918, X} 
12:40:22  . The selected victim is XID : 35918.
12:40:22  	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
12:40:22  	at org.apache.hadoop.hive.metastore.utils.TestTxnDbUtil.resetTxnSequence(TestTxnDbUtil.java:268)
12:40:22  	at org.apache.hadoop.hive.metastore.utils.TestTxnDbUtil.cleanDb(TestTxnDbUtil.java:238)
12:40:22  	at org.apache.hive.streaming.TestStreaming.<init>(TestStreaming.java:225)
12:40:22  	at sun.reflect.GeneratedConstructorAccessor343.newInstance(Unknown Source)
12:40:22  	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
12:40:22  	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:250)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:260)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner$2.runReflectiveCall(BlockJUnit4ClassRunner.java:309)
12:40:22  	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:306)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
12:40:22  	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
12:40:22  	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
12:40:22  	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
12:40:22  	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
12:40:22  	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
12:40:22  	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
12:40:22  	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
12:40:22  	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
12:40:22  	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
12:40:22  	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
12:40:22  	at java.util.Iterator.forEachRemaining(Iterator.java:116)
12:40:22  	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
12:40:22  	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
12:40:22  	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
12:40:22  	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
12:40:22  	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:123)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
12:40:22  Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:
12:40:22  Lock : ROW, SYSCOLUMNS, (21,18)
12:40:22    Waiting XID : {35918, X} , APP, ALTER TABLE "TXNS" ALTER "TXN_ID" RESTART WITH 1
12:40:22    Granted XID : {35918, S} , {35920, S} 
12:40:22  Lock : TABLE, TXNS, Tablelock
12:40:22    Waiting XID : {35920, IX} , APP, UPDATE "TXNS" SET "TXN_LAST_HEARTBEAT" = { fn timestampdiff(sql_tsi_frac_second, timestamp('1969-12-31 16:00:00.0'), current_timestamp) } / 1000000 WHERE "TXN_STATE" = 'o' AND ("TXN_ID" in (16))
12:40:22    Granted XID : {35918, X} 
12:40:22  . The selected victim is XID : 35918.
12:40:22  	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
12:40:22  	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForWrite(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRows(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropColumnDescriptorCore(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropColumnDescriptor(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnDefault(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)
12:40:22  	... 51 more
12:40:22  
12:40:22  [ERROR] org.apache.hive.streaming.TestStreaming.testNoBuckets  Time elapsed: 20.202 s  <<< ERROR!
12:40:22  java.sql.SQLTransactionRollbackException: 
12:40:22  A lock could not be obtained due to a deadlock, cycle of locks and waiters is:
12:40:22  Lock : ROW, SYSCOLUMNS, (21,19)
12:40:22    Waiting XID : {46895, X} , APP, ALTER TABLE "TXNS" ALTER "TXN_ID" RESTART WITH 1
12:40:22    Granted XID : {46895, S} , {46897, S} 
12:40:22  Lock : TABLE, TXNS, Tablelock
12:40:22    Waiting XID : {46897, IX} , APP, UPDATE "TXNS" SET "TXN_LAST_HEARTBEAT" = { fn timestampdiff(sql_tsi_frac_second, timestamp('1969-12-31 16:00:00.0'), current_timestamp) } / 1000000 WHERE "TXN_STATE" = 'o' AND ("TXN_ID" in (16))
12:40:22    Granted XID : {46895, X} 
12:40:22  . The selected victim is XID : 46895.
12:40:22  	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
12:40:22  	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
12:40:22  	at org.apache.hadoop.hive.metastore.utils.TestTxnDbUtil.resetTxnSequence(TestTxnDbUtil.java:268)
12:40:22  	at org.apache.hadoop.hive.metastore.utils.TestTxnDbUtil.cleanDb(TestTxnDbUtil.java:238)
12:40:22  	at org.apache.hive.streaming.TestStreaming.<init>(TestStreaming.java:225)
12:40:22  	at sun.reflect.GeneratedConstructorAccessor343.newInstance(Unknown Source)
12:40:22  	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
12:40:22  	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:250)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:260)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner$2.runReflectiveCall(BlockJUnit4ClassRunner.java:309)
12:40:22  	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:306)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
12:40:22  	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
12:40:22  	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
12:40:22  	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
12:40:22  	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
12:40:22  	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
12:40:22  	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
12:40:22  	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
12:40:22  	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
12:40:22  	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
12:40:22  	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
12:40:22  	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
12:40:22  	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
12:40:22  	at java.util.Iterator.forEachRemaining(Iterator.java:116)
12:40:22  	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
12:40:22  	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
12:40:22  	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
12:40:22  	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
12:40:22  	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
12:40:22  	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)
12:40:22  	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
12:40:22  	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
12:40:22  	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:123)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
12:40:22  	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
12:40:22  Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:
12:40:22  Lock : ROW, SYSCOLUMNS, (21,19)
12:40:22    Waiting XID : {46895, X} , APP, ALTER TABLE "TXNS" ALTER "TXN_ID" RESTART WITH 1
12:40:22    Granted XID : {46895, S} , {46897, S} 
12:40:22  Lock : TABLE, TXNS, Tablelock
12:40:22    Waiting XID : {46897, IX} , APP, UPDATE "TXNS" SET "TXN_LAST_HEARTBEAT" = { fn timestampdiff(sql_tsi_frac_second, timestamp('1969-12-31 16:00:00.0'), current_timestamp) } / 1000000 WHERE "TXN_STATE" = 'o' AND ("TXN_ID" in (16))
12:40:22    Granted XID : {46895, X} 
12:40:22  . The selected victim is XID : 46895.
12:40:22  	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
12:40:22  	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForWrite(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)
12:40:22  	at org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRows(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRow(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropColumnDescriptorCore(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropColumnDescriptor(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnDefault(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)
12:40:22  	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)
12:40:22  	... 51 more
12:40:22  
12:40:22  [INFO] 
12:40:22  [INFO] Results:
12:40:22  [INFO] 
12:40:22  [ERROR] Errors: 
12:40:22  [ERROR]   TestStreaming.<init>:225 » SQLTransactionRollback A lock could not be obtained...
12:40:22  [ERROR]   TestStreaming.<init>:225 » SQLTransactionRollback A lock could not be obtained...
12:40:22  [ERROR]   TestStreaming.testTimeOutReaper:1395 » Streaming TransactionTxnId/WriteIds=[16...
12:40:22  [ERROR]   TestStreaming.<init>:225 » SQLTransactionRollback A lock could not be obtained...
12:40:22  [INFO] 
12:40:22  [ERROR] Tests run: 38, Failures: 0, Errors: 4, Skipped: 0
12:40:22  [INFO] 
12:40:22  [ERROR] There are test failures.
{noformat}


