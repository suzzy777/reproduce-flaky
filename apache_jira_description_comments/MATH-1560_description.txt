ComplexFormatAbstractTest.testGetAvailableLocales() is flaky because the return array of the call to NumberFormat.getAvailableLocales() is not always ordered in the same way (eg. alphabetically). In fact, the javadoc of getAvailableLocales() in the ComplexFormat class says the function "get the *set* of locales for which complex formats are available". So the return array should logically be treated as a set. 

I detected this flaky test using a tool called NonDex, which detects flakiness due to wrong assumptions about Java APIs. You can find its [implementation here|https://github.com/TestingResearchIllinois/NonDex] and the [paper here|http://mir.cs.illinois.edu/awshi2/publications/FSEDEMO2016.pdf]. My understanding of why this particular test is caught to be flaky is: the spec of NumberFormat.getAvailableLocales() doesn't say the return array is ordered in any way. So the NonDex tool I mentioned shuffles this array, causing the test to fail sometimes, and it decides the test is flaky. 

PR: [https://github.com/apache/commons-math/pull/163]

 