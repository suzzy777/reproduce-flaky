[~adelapena] , I tried running the test 11 times and it did not fail even once. Do we have any way to reproduce. I tried this in trunk.

[~sathyakplm] that's simply not enough iterations.  You can loop the test in bash 100 times like this:

{code}
$ for x in `seq 1 100`;do ant testsome -Dtest.name=org.apache.cassandra.db.SinglePartitionSliceCommandTest -Dtest.methods=testPartitionDeletionRangeDeletionTie || break; done
{code}

and it will fail before completing the iterations.

[~brandon.williams]  I tried 100 times. All were successful. Do you think we should try for 500?

 

[~sathyakplm] it failed in probably 20 runs or less for me, are you sure you are on trunk?  The test passes on other branches.

Here is another CircleCI run of {{SinglePartitionSliceCommandTest.testPartitionDeletionRangeDeletionTie}} on trunk:
[https://app.circleci.com/pipelines/github/adelapena/cassandra/1438/workflows/38c1ad09-57cb-4783-ba54-34c2851bbcf5/jobs/14714]
There are 21 hits in 1000 iterations. The config for Circle was generated with:
{code}
.circleci/generate.sh -m \
  -e REPEATED_UTEST_TARGET=testsome \
  -e REPEATED_UTEST_COUNT=1000 \
  -e REPEATED_UTEST_CLASS=org.apache.cassandra.db.SinglePartitionSliceCommandTest \
  -e REPEATED_UTEST_METHODS=testPartitionDeletionRangeDeletionTie
{code}
I'm also able to reproduce it locally.

I had a failure on the 17th iteration this time, on a machine with plenty of resources.

It failed for me this time. Thank you. Will debug further.

h5. The Problem


There are two delete statements in this test case.
h6. First delete statement

 
{code:java}
QueryProcessor.executeOnceInternalWithNowAndTimestamp(nowInSec,
    timestamp,
    "DELETE FROM ks.partition_range_deletion USING TIMESTAMP 10 WHERE k=1");{code}
 
h6. Second delete statement

 
{code:java}
QueryProcessor.executeOnceInternalWithNowAndTimestamp(nowInSec,
    timestamp,
    "DELETE FROM ks.partition_range_deletion USING TIMESTAMP 10 WHERE k=1 and c1=1");{code}
The test case fails when the first statement and second statement falls in different `second` boundaries. We are passing `nowInSec`; but, this is not being respected while the entry is inserted. `FBUtilities.nowInSeconds()` is getting called instead.
h5. Solution


Use `makeInternalOptionsWithNowInSec` instead of `makeInternalOptions`. This change makes sure that it respects the variable `nowInSec`.

[~adelapena] , [~brandon.williams] , since I am new to Cassandra community, could you please help me in testing this change with CircleCI. I am not a committer; will I have access to trigger CircleCI? If yes, please provide me the pointer to trigger one.

Adding [~blerer] for visibility.

[~sathyakplm] see https://cassandra.apache.org/_/development/index.html#circleci you can use circle but without a paid account you won't be able to allocate enough resources for some of the tests.  In this case, it will likely require the repeated run that Andres did earlier with the medium resource configuration he used that unfortunately won't be available at the free tier.

I think this particular test failure can be reproduced even with Circle's free tier and low resources, like in [this 200-iteration run|https://app.circleci.com/pipelines/github/adelapena/cassandra/1451/workflows/22c1f8f4-c0fd-4e08-a853-b60b36ee4f8c/jobs/14813/tests]. Low resources config can be generated with:
{code}
.circleci/generate.sh -l \
  -e REPEATED_UTEST_TARGET=testsome \
  -e REPEATED_UTEST_COUNT=200 \
  -e REPEATED_UTEST_CLASS=org.apache.cassandra.db.SinglePartitionSliceCommandTest \
  -e REPEATED_UTEST_METHODS=testPartitionDeletionRangeDeletionTie
{code}

Oh nice, thanks.  I didn't realize low resources could cover this,

I tried with the above suggested script. The pipelines are still in "hold" state. https://app.circleci.com/pipelines/github/sathyakplm/cassandra/4/workflows/76f67a54-adb4-41c1-948d-1ebf6d281991

I think you need to approve them to start by clicking on the thumbs up approval icon.  Our config starts with them all disabled so we don't accidentally waste resources.

Thanks [~brandon.williams] , [~adelapena] , I had triggered 200 iterations. The tests passed: https://app.circleci.com/pipelines/github/sathyakplm/cassandra/4/workflows/76f67a54-adb4-41c1-948d-1ebf6d281991/jobs/2/tests

I had a look at the code and the patch will fix this specific use case but it looks like CEP-14 might have introduced  similar problems for other methods from QueryProcessor.
The following seems suspicious to me:
* executeInternalWithNow
* executeInternalRawWithNow

So, what's the plan? Should we take this patch? Or create another Jira issue to find and resolve the issues at other places?

Hi [~brandon.williams] , [~blerer] , are we taking this patch?

We can commit this one and open a new ticket for the 2 other ones.

[~sathyakplm] I understand that the patch is [this commit|https://github.com/sathyakplm/cassandra/commits/17458], is this right?

I have rebased the patch and started CI with repeated runs for {{{}SinglePartitionSliceCommandTest{}}}:
||Patch||CI||
|[4.1 |https://github.com/adelapena/cassandra/commit/0fc3ba4fa91479a201d2050e0ea847d0325cf296]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1537/workflows/171805ea-db04-4dfc-a609-c05b2bf959bf] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1537/workflows/16d3b755-f60c-4ede-8df5-e1b9bfcc3673]|
|[trunk|https://github.com/adelapena/cassandra/commit/eb88e2afa971c48cac72d7e6858d1dc371c7607a]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1535/workflows/2ae4b473-58e8-4ec1-a633-77935b09d871] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1535/workflows/a1026ec7-8517-4be7-92bf-c642e69de1b5]|

I have also replaced the calls to {{makeInternalOptions}} by {{makeInternalOptionsWithNowInSec}} in the methods suggested by [~blerer], and also in:
 * [{{executeAsync(InetAddressAndPort, String, Object...)}}|https://github.com/adelapena/cassandra/blob/0fc3ba4fa91479a201d2050e0ea847d0325cf296/src/java/org/apache/cassandra/cql3/QueryProcessor.java#L454-L461]
 * [{{execute(String, ConsistencyLevel, QueryState, Object...)}}|https://github.com/adelapena/cassandra/blob/0fc3ba4fa91479a201d2050e0ea847d0325cf296/src/java/org/apache/cassandra/cql3/QueryProcessor.java#L525-L531]
 * [{{executeInternalWithPaging(String, int, Object...)}}|https://github.com/adelapena/cassandra/blob/0fc3ba4fa91479a201d2050e0ea847d0325cf296/src/java/org/apache/cassandra/cql3/QueryProcessor.java#L543-L550]

CI for those additional changes is running:
||Patch||CI||
|[4.1 |https://github.com/adelapena/cassandra/commit/f4b431dfbd6cb0e84df041024585d3a10d0e59bd]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1538/workflows/718a5c38-be30-4fa4-b25c-a62e07bbb58e] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1538/workflows/53be68bd-8475-43e1-ad6f-7c58687cf2b6]|
|[trunk|https://github.com/adelapena/cassandra/commit/dfbfca0e56b25a380c52e71fff662c33fa7b3f90]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1536/workflows/314f22de-ceeb-4d0a-9c10-97f09330b46b] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1536/workflows/4258809b-8f54-43b2-8ecb-32657cb8dae3]|

Should this be Patch Available?

Yes, I think this should be Patch Available.

I have rebased the patch with the additional changes mentioned above:
||Patch||CI||
|[4.1 |https://github.com/adelapena/cassandra/commit/0fc3ba4fa91479a201d2050e0ea847d0325cf296]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1615/workflows/8bccc5b1-338c-49b7-b40f-7c12b14ee225] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1615/workflows/a07665e2-5ed1-4189-86d0-4003867cdb31]|
|[trunk|https://github.com/adelapena/cassandra/commit/eb88e2afa971c48cac72d7e6858d1dc371c7607a]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1614/workflows/f2d9a0c8-109a-4b21-b781-4751de7c6abb] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1614/workflows/f38cd087-160c-4341-98e2-1f6659c5c391]|

It seems that the run for 4.1 has [a failure on {{testInvalidateSingleCredential}}|https://app.circleci.com/pipelines/github/adelapena/cassandra/1615/workflows/8bccc5b1-338c-49b7-b40f-7c12b14ee225/jobs/17131]. That failure [doesn't appear on Butler|https://butler.cassandra.apache.org/#/ci/upstream/compare/Cassandra-4.1/cassandra-4.1], but it can be reproduced also on the unpatched {{cassandra-4.1}} branch with the multiplexer, as it's shown by [this run|https://app.circleci.com/pipelines/github/adelapena/cassandra/1620/workflows/89946e82-6a5c-44ec-bbdb-45b16a587360]. Apparently we have been very unlucky with that CI run because the multiplexer points to a flakiness lesser than 1%. In any case, that failure doesn't seem caused by this patch.

[~sathyakplm] do you agree with the proposed additional changes?

Also, we are going to need a second committer/reviewer here.

I can take it later today. 

I am +1 on the suggested changes, whether to split into two tickets - it's up to [~sathyakplm]

Hi [~sathyakplm], I was wondering whether you had the chance to look into this one. Do you agree we can commit your fix plus the additional changes added from [~adelapena] ?

[~e.dimitrova] , yes. I agree.

A final CI round of the rebased patches before commit:
||Patch||CI||
|[4.1 |https://github.com/adelapena/cassandra/commit/b3810396bc4ea6e3055dc48ede6dd9ecb29d5664]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1663/workflows/c63703e3-8c7a-42c6-981a-53cb59babe1f] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1663/workflows/36c3b1aa-8149-4681-ba9c-a4a5a00bef3d]|
|[trunk|https://github.com/adelapena/cassandra/commit/f384a6ab792ab33e3b74fcd3df879ff6258809dd]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1662/workflows/b5753cdb-2d08-44d0-9caf-79b5fd0b01f4] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1662/workflows/73078ee8-9b81-4fd3-9a21-8375aaa6a867]|

That last run has hit two dtest failures. I can't find these test failures in Butler, but they can be reproduced in the base branches with the multiplexer:
|4.1|test_optimized_primary_range_repair|[multiplexer|https://app.circleci.com/pipelines/github/adelapena/cassandra/1666/workflows/6f925be1-c0df-4b2a-83e0-4612a46f32bd]|
|trunk|TestPreviewRepair::test_preview|[multiplexer|https://app.circleci.com/pipelines/github/adelapena/cassandra/1667/workflows/60ba0ade-7e4e-4728-a7ff-3872f2a1903c]|

In both cases the flakiness is below 1%. I'll open tickets reporting these flaky tests. I think we can still commit this fix despite of these unrelated failures.

Agreed, +1

Thanks, committed to {{cassandra-4.1}} as [9b4784bdb7d70bf99c9c290d44b053902b00642d|https://github.com/apache/cassandra/commit/9b4784bdb7d70bf99c9c290d44b053902b00642d] and merged to [{{trunk}}|https://github.com/apache/cassandra/commit/29fea66c89cc1b378aafbaca8d68d21697e667b7].

Created CASSANDRA-17685 and CASSANDRA-17686 for those last test failures.

