Created an attachment (id=17869)
Changes to FileUtilsTestCase

On Windows 2000 using JDK 1.4.2_07 and testing with ant(1.6.1) there were
problems with two of the test methods in FileUtilsTestCase, both of which used
(one directly, one indirectly) Thread.sleep() - they are the testWaitFor() and
testCopyFile2() methods.

testCopyFile2() is identical to testCopyFile1()  except testCopyFile1() has had
some lines commented out - applying the same changes to testCopyFile2()
resolved the issue with that method:

http://svn.apache.org/viewcvs.cgi?rev=140545&view=rev

Also commenting out the testWaitFor() method meant all tests passed under ant.

On Windows 2000 using JDK 1.4.2_07 and testing with maven also caused 
FileUtilsTestCase to fail - but FileCleanerTestCase and 
FileUtilsListFilesTestCase also failed

1) FileCleanerTestCase.testFileCleaner() failed with the following error:

java.io.FileNotFoundException: C:\svn\commons\io\test\io\file-test.txt (Access 
is denied)

2) FileUtilsListFilesTestCase - both test methods failed with the following 
error:

java.io.FileNotFoundException: C:\svn\commons\io\test\io\list-files\dummy-
build.xml (Access is denied)

3) FileUtilsTestCase failed (39 out of 42 tests had an ERROR) with the 
following error:

Cannot create file XXXXX as the parent directory does not exist

After applying the change to FileUtilsTestCase that resolved the problems in 
ant - the number of failing tests reduced to 12 out of 42 (same error) for the 
following methods:

     testTouch,
     testIterateFiles,
     testReadFileToString,
     testReadFileToByteArray,
     testReadLines,
     testWriteStringToFile1,
     testWriteStringToFile2,
     testWriteByteArrayToFile,
     testWriteLines_4arg,
     testWriteLines_4arg_Writer_nullData,
     testWriteLines_4arg_nullSeparator,
     testWriteLines_3arg_nullSeparator

FileCleanerTestCase and FileUtilsListFilesTestCase continued to fail with the 
same issue.

P.S. Occasionally my W2K machine can be a bit flaky - but usually a reboot 
sorts it out (I tried that and reran the tests, but no change).

Created an attachment (id=17875)
Move FileUtils.waitFor() into separate test case

Revision 385118 only resolved the issue with testCopyFile2() - so the tests are
still failing on W2K due to the testWaitFor() method in FileUtilsTestCase.

Can't understand why its failing - but for some reason after this method is
run, calling mkdirs() for the test directory returns false.

Anyway, I tried moving the FileUtils.waitFor() test into a separate test case
and that worked fine. Patch attached.

Created an attachment (id=17876)
Modify build.xml: change JUnit XML formatter to plain

The reason the tests didn't run using JDK 1.3 is because in the ant build file
the <junit> task has a <formatter type="xml"> element - changing this to
"plain" resovled the issue and (with the other change I just attached) the
tests ran and all passed.

OK tried the latest change - runs fine with maven, fails in IOUtulsTestCase in 
ant - bizarre. Then if I add the new LockableFileWriterTest into the mix starts 
failing in different places in both ant and maven!

Can't understand why, but at some point in the process my W2K machine decides 
to stop creating the test/io directory when mkdirs() is called in setup. 
Without someone else with a W2K m/c verifying this, then I assume its something 
to do with my m/c - so I'm going to close this as INVALID.

Sorry for the noise, I'll just test builds out on Windows XP in future.

Niall, what is the exact error during failure?  Maven is notorious for running
out of memory on every Windows machine I've had for the last 2 years, and so
this little gem has done wonders for me...

set MAVEN_OPTS=-Xmx768m

HTH
--
James Mitchell

(In reply to comment #7)
> Niall, what is the exact error during failure?  Maven is notorious for running
> out of memory on every Windows machine I've had for the last 2 years, and so
> this little gem has done wonders for me...
> set MAVEN_OPTS=-Xmx768m

There isn't acutall any error where the problem is occurring - a number of the 
tests delete/create a test directory ("test/io") in their setup() method. In a 
single test case it will happliy do that correctly for a number of tests - but 
then just stop. The test directory is being created using File's mkdirs() 
method - if it doesn't create the directories it just returns false - that then 
causes the tests to fail, since its expecting the dir to exist.

I tried increasing the memory - but that didn't change anything. Thanks for the 
suggestion though.


