It ends up hitting the DCHECK:
{noformat}
F0607 18:39:31.163992 28264 external-data-source-executor.cc:50] Check failed: executor_class_ == __null JniState was already initialized.
{noformat}

So the fundamental problem is that there's no reasonable was to restart the in-process servers (or ImpalaServer in general), so the previous fix for the conflicting ports didn't actually work. I'm a bit stuck here - either we'd need to change a lot of code to make ImpalaServer cleanly restartable or we need to rethink how the port allocation works. E.g. if we can push the retry loop down into the thrift server, it would avoid the need to restart the whole thing.

I looked at this some more. I think adding a retry loop is very tricky with the current code because it assumes in many places that we don't attempt to restart the servers. It's also hard to test and prevent it bit-rotting. I can see a couple of remaining solutions, but nothing really that good:
* Use non-ephemeral ports, which eliminates the chance of other services randomly using the ports, but could cause the tests to fail on systems where other services happen to be using those port ranges
* Reduce the window between choosing a port and starting the server by calling FindUnusedEphemeralPort() when we create the socket, e.g. in ThriftServer::CreateSocket().

I looked at the original patch for the ephemeral ports and Casey had a good suggestion of just listening on port 0 and exposing the socket chosen. https://gerrit.cloudera.org/#/c/1520/2/be/src/testutil/in-process-servers.cc@51 It looks like the thrift sockets support this: [https://github.com/apache/thrift/blob/82ae9575cdc112088771fc7b876f75e1e4d85ebb/lib/cpp/test/TServerSocketTest.cpp#L36]

The bad news is that only Thrift 0.9.3 supports this, so the patch wouldn't be backportable to 2.x.

IMPALA-7151: Rework ephemeral port assignment for be tests

Instead of using FindUnusedEphemeralPort() to choose
many ephemeral ports for in-process servers, we use
Thrift's builtin wildcard ports, where it picks an
ephemeral port when the configured port is 0. This
should be more robust because there's no window where
something else can steal our port. Only Thrift 0.9.2+
support the getPort() method required for this.

This does not necessarily make all ImpalaServer
functionality work with ports configured to 0,
just enough to get expr-test and session-expiry-test
to work. E.g. various strings and names get port 0 in
them and query execution may not work end-to-end.

Some tests still use FindUnusedEphemeralPort() to
pick a single port at a time. We haven't seen that usage pattern
to be flaky with any frequency and it appears to be more work
to fix those, so I left them for now.

Testing:
Ran core tests.

Cherry-picks: not for 2.x

Change-Id: I2fcc9243099f8249380ac5f01ac5eb67cba24cf5
Reviewed-on: http://gerrit.cloudera.org:8080/10740
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Commit 50cb726c3e48ed247559105a40995e13ef9e7ebb in impala's branch refs/heads/2.x from Tim Armstrong
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=50cb726 ]

Fail cleanly when in process server can't bind

This doesn't solve IMPALA-7151 but makes the failure cleaner
because there is no crash.

Change-Id: I376a2aa559f4b5cf3b96fa3465520e9983ecec4b
Reviewed-on: http://gerrit.cloudera.org:8080/10726
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


