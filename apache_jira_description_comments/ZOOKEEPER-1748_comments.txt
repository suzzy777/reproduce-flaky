I think using TCP keepalive can mitigate this issue, but better approach would be using application level pings. E.g. on my Linux box keepalive value is set to 2 hours:{{net.ipv4.tcp_keepalive_time = 7200}}.


Sounds like a good improvement to me. esp if you include it as a config option.

In our system we have been hit 2 times by this problem, causing our system to fail as the leader election does not finish. We have now implemented application level keep alive support in 3.4.6 version (for internal use) in such a way that it would support rolling upgrade to 3.5.x from 3.4.6, as 3.4.6 has support for 'versioning' in initiation message in QuorumCnxManager. The keep alive is implemented in QuorumCnxManager over existing TCP connections.

We are still testing the fix and haven't put it into production use yet, but will most likely to do so in few weeks.

Has there been any work done for this case? And if not, would it be possible to submit our proposal fix for this issue for 3.5.x once its ready and tested properly. The plan would be to make it configurable option for 3.5.



Our system suffer from the same problem and we have patched it as recommended by Antal (by adding keepalive on the socket  and by configuring the tcp stack of the system). We are testing it, for now it works as expected.

Application ping is a  better solution because it does not required any system configuration. We are interested in this solution that seems a more sustainable but also more complicated to patch and to test. 

I have attached a patch in case someone would like to test/use tcp keepalive option.

I haven't adapted the solution we have made to this ticket, but we can try your provided patch.

Can you give us an update on this issued ? Will you use the patch or fix it in another way ?

Sorry for the slowness [~gdrot]! Would you mind rebasing the patch on trunk since it doesn't apply cleanly anymore?

Also, a few nits:

In:

{code}
     private void setSockOpts(Socket sock) throws SocketException {
         sock.setTcpNoDelay(true);
+        LOG.info("Settings keepAlive to " + self.tcpKeepAlive +  " on socket");
+        sock.setKeepAlive(self.tcpKeepAlive);
{code}

you can probably drop that LOG.info call, since it's logged from QuorumPeer#setTcpKeepAlive already. And for the log call in QuorumPeer#setTcpKeepAlive it would be nice to use extrapolation instead of string concatenation, i.e.:

{code}
+    public void setTcpKeepAlive(boolean tcpKeepAlive) {
+        LOG.info("tcpKeepAlive set to {}", tcpKeepAlive);
+        this.tcpKeepAlive = tcpKeepAlive;
+    }
{code}

Other than that, +1 lgtm. Btw, we are using this patch internally so I can attest it works great too. 

Also, it would be nice to document this new configuration property, i.e.:

{code}
--- a/docs/zookeeperAdmin.html
+++ b/docs/zookeeperAdmin.html
@@ -1358,6 +1358,14 @@ server.3=zoo3:2888:3888</pre>
 </div>
 </div>
 </dd>
+<term>tcpKeepAliveEnabled</term>
+</dt>
+<dd>
+<p>(No Java system property)</p>
+<p><Strong>New in 3.5.0:</strong> Sets the keepAlive flag on the sockets used by quorum
+   members to perform elections. Defaults to <strong>false</strong>.
+</p>
+</dd>
         
{code}

Thanks!


GitHub user gnethercutt opened a pull request:

    https://github.com/apache/zookeeper/pull/83

    enable TCP keepalive for the leadership election/quorum socket

    Use TCP keep-alives for election/quorum peer connections.
    
    This is the shortest edit distance to address [ZOOKEEPER-1748](https://issues.apache.org/jira/browse/ZOOKEEPER-1748), and is required to avoid silent packet delivery failures for a long-lived connection in AWS (amongst other environments). 
    
    See also:
    - [VPC security group connection tracking](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html#security-group-connection-tracking)
    - [Using TCP keepalives](http://tldp.org/HOWTO/TCP-Keepalive-HOWTO/usingkeepalive.html)
    - [Zookeeper internals](https://zookeeper.apache.org/doc/r3.4.8/zookeeperInternals.html)


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gnethercutt/zookeeper election_tcp_keepalive

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/83.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #83
    
----
commit bcab41003d91dc121e368337317710c2434bece8
Author: Glenn Nethercutt <glenn.nethercutt@inin.com>
Date:   2016-09-28T18:22:41Z

    enable TCP keepalive for the leadership election/quorum socket

----


Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/83
  
    Thanks for the patch and detailed tech reports @gnethercutt. 
    
    As @rgs1 commented on ZOOKEEPER-1748 JIRA we should have a feature switch that controls on / off of the keep alive option. It should be pretty trivial to add (one line code in QuorumPeerConfig and some lines on the doc update.). Will you be able to add this? 


I believe this will be a fix for many of our outages - any way I can help get this in?  And back-ported to 3.4.x?

[~bensherman] Feel free to send a new pull request if you are willing to drive this. See https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute. Please reference the existing pull request https://github.com/apache/zookeeper/pull/83 and address all review comments. 

It already has a patch and a PR associated with it - what happens next?

What happens next is someone should drive this issue - by responding the code reviews and update pull request and after everything is reviewed, a committer will commit this change to relevant branches. Then we need a new release(s) to ship this so you can use it (assume you want to use an official release instead of patching your own fork). A new pull request is required because only the original author of the git pull request has permission to modify the pull request. 

GitHub user bensherman opened a pull request:

    https://github.com/apache/zookeeper/pull/274

    Zookeeper 1748: Add option for tcp keepalive

    As referenced in https://issues.apache.org/jira/browse/ZOOKEEPER-1748 and https://github.com/apache/zookeeper/pull/83, add the option to use keepalived on quorum connections.  These connections are often idle and long-lived, thus tend to be silently dropped by intermediate networking infrastructure (AWS Security Groups' state tables, for example).
    
    This PR adds the option to use the system's keepalive functionality when creating the socket for quorum connections.  
    
    It does not change existing behavior.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bensherman/zookeeper ZOOKEEPER-1748

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/274.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #274
    
----
commit 0f7ece14df76cba5170c0442ebedec31cf6fb4b9
Author: Ben Sherman <bsherman@axon.com>
Date:   2017-06-05T21:56:14Z

    Added option to use tcp keep alives.

commit 820c628ea05fbdd5477083fa77db55a4f0e8812f
Author: Ben Sherman <bsherman@axon.com>
Date:   2017-06-05T22:34:59Z

    document tcpKeepAlive option

----


Issue resolved by pull request 274
[https://github.com/apache/zookeeper/pull/274]

Merged to branch-3.4: https://github.com/apache/zookeeper/commit/51cdeb407cfb7887e647ba7d34718232e6108409

[~rakeshr] Can you please add [~bensherman] to contributor list and assign this issue to him.

[~bensherman] If you have time to send a pull request targeting branch-3.5, that would be great. The current patch does not apply to branch-3.5.

GitHub user bensherman opened a pull request:

    https://github.com/apache/zookeeper/pull/276

    add tcp keepalive option for branch 3.5

    Adding TCP keepalive for branch 3.5, as described in https://issues.apache.org/jira/browse/ZOOKEEPER-1748 and https://github.com/apache/zookeeper/pull/274

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bensherman/zookeeper ZOOKEEPER-1748-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/276.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #276
    
----

----


Github user bensherman commented on the issue:

    https://github.com/apache/zookeeper/pull/276
  
    This applies cleanly to master too, should that be a separate PR or wit it go auto-magically?


Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/276#discussion_r120997880
  
    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---
    @@ -1179,6 +1179,29 @@ server.3=zoo3:2888:3888</programlisting>
                 </listitem>
               </varlistentry>
     
    +          <varlistentry>
    +            <term>tcpKeepAlive</term>
    +
    +            <listitem>
    +              <para>(Java system property: <emphasis
    +                      role="bold">zookeeper.tcpKeepAlive</emphasisi>)</para>
    +
    +              <para><emphasis role="bold">New in 3.4.11:</emphasis>
    --- End diff --
    
    Please replace 3.4.11 with 3.5.4. 3.4.11 is only applicable for branch-3.4 and 3.5.4 is the version number we use for branch-3.5.


Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/276
  
    It will go in semi automatically as part of commit process so no need to send a separate PR. And the failed jenkins test is a known flaky / buggy one. Patch lgtm pending update version number in doc.


+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/780//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/780//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/780//console

This message is automatically generated.

Github user bensherman commented on the issue:

    https://github.com/apache/zookeeper/pull/276
  
    Version number fixed!


Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/276
  
    lgtm, merging to branch-3.5 and master.


Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/276


Committed to master: https://github.com/apache/zookeeper/commit/4517050510f8db354589d054c9ded4c78b36902f
Committed to branch-3.5: https://github.com/apache/zookeeper/commit/e47e6bb8791b2dce9b82ebe96a1c0d8a173726e0
Documentation fix for branch-3.4: https://github.com/apache/zookeeper/commit/ca4a91dc7ef01c34e3849d99fa3764003fc89715

FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3421 (See [https://builds.apache.org/job/ZooKeeper-trunk/3421/])
ZOOKEEPER-1748: add tcp keepalive option for branch 3.5 (hanm: rev 4517050510f8db354589d054c9ded4c78b36902f)
* (edit) src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml
* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java


Github user bensherman closed the pull request at:

    https://github.com/apache/zookeeper/pull/274


Has this fix been backported into ZK 3.4.14?

Hi Frederic - it went in 3.4.11, it should be in 3.4.14.

