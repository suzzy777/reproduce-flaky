Attached patch for review

Attached patch updated according to finalized YARN-1447. I also found it's hard to split NM protocol changes and implementations (I need leave some stub methods in ContainersManagerImpl, etc.). So I put API changes and implementation together. 

Can you do annotations in the same way that was done for YARN-1448.

{code}
+
+		@Override
+    public ChangeContainersResourceResponse changeContainersResource(
+        ChangeContainersResourceRequest request) throws YarnException,
+        IOException {
+	    return null;
+    }
{code}
Remove tabs

{code}
+      Assert.assertTrue(request.getContainersToDecrease().get(i)
+          .equals(containerToDecrease.get(i)));
{code}
Use assertEquals?

{code}
+      Assert.assertTrue(response.getFailedChangedContainers().get(i)
+          .equals(failChanged.get(i)));
{code}

{code}
+  
+  public abstract void setNewDecreasedContainers(
+      List<ContainerResourceDecrease> decreasedContainers);
+
{code}
I think better to omit new and just call it DecreasedContainers

{code}
+        return new Iterator<ContainerResourceDecreaseProto>() {
+  
+              Iterator<ContainerResourceDecrease> iter = newDecreasedContainers
+                  .iterator();
{code}
Iterator indented too far

{code}
-}
\ No newline at end of file
+}
{code}
False change

{code}
+    // first add all decreased containers to failed, we will support it in the
+    // future
{code}
What is it that we will support in the future?

{code}
+      // check container's existance
{code}
existence

{code}
+        LOG.error("we can only increase size of container in"
+            + " RUNNING state, containerId=" + containerId.toString()
+            + " current state is:" + currentState.name());
{code}
I think this would be better as WARN or even an INFO, as it can happen in normal operation if a container completes while a request is in flight.  Also, capitalize "We".

{code}
+      org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState currentState =
+          context.getContainers().get(containerId).getContainerState();
+      if (currentState != org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.RUNNING) {
{code}
This looks way over 80 characters

{code}
+      // we can consider this should successfully changed
{code}
"We can consider the change successful"

{code}
+public class ContainerChangeMonitoringEvent extends ContainersMonitorEvent {
+  private final long vmemLimit;
+  private final long pmemLimit;
{code}
No need to calculate / include the vmem here.  The containers monitor should know about it.

{code}
-  private static class ProcessTreeInfo {
+  static class ProcessTreeInfo {
{code}
Unnecessary change

{code}
+    public ContainerResourceToBeChanged(ContainerId containerId,
+        long vmemLimit, long pmemLimit) {
{code}
vmem limit not needed here either?

{code}
+              LOG.warn("note container not found in trackingContainers, "
+                  + "it maybe already completed, please check, containerId="
+                  + c.containerId.toString());
{code}
"Container " + c.containerId.toString() + " that was to be resized is no longer running.".  Also, change this to info. 

{code}
+        "org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.MockResourceCalculatorProcessTree");
{code}
Way over 80 characters.  Better to use MockResourceCalculatorProcessTree.class.getName(), because it's resilient to refactorings.

{code}
+  public void testResourceChange() throws Exception {
{code}
It looks like this test relies on sleeps to wait for events to be handled.  This both makes the test run longer and can cause flaky failures. I think there is a way to actually wait for the events to be completed.  I don't know it off the top of my head but can look it up for you if that would be helpful.

{code}
+  // add a stub here, TODO
+  @Override
+  public ChangeContainersResourceResponse changeContainersResource(
{code}
What do you mean by add a stub here?

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12617532/yarn-1449.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 16 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2629//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2629//console

This message is automatically generated.

Hi Sandy,
Thanks so much to give me such comments, that's really helpful, I will update this later.

[~sandyr], I've updated my code according to your comments (thanks again!). But there're some places I haven't changed.

{quote}
{code}
+    // first add all decreased containers to failed, we will support it in the
+    // future
{code}
What is it that we will support in the future?
{quote}

Originally, I planned not support container decrease, so I put all decrease requests directly to failed list. This patch included decrease requests support and such decreased containers will be added to next node heartbeat sent to RM.

{quote}
{code}
+public class ContainerChangeMonitoringEvent extends ContainersMonitorEvent {
+  private final long vmemLimit;
+  private final long pmemLimit;
{code}
No need to calculate / include the vmem here. The containers monitor should know about it.
{quote}

I think we needed them. Originally this is created by ContainerImpl.LaunchTransition, and ContainersMonitoring will not care about this, this is passed in to CsM by ContainerStartMonitoringEvent. I just follow the same way of what ContainerStartMonitoringEvent does.

{quote}
Unnecessary change
{code}
-  private static class ProcessTreeInfo {
+  static class ProcessTreeInfo {
{code}
{quote}

This is used for testing, the easiest way to test ContainersMonitoring is change pmem/vmem by setting fields in ResourceCalculatorProcessTree. We can get ProcessTreeInfo in trackingContainers of ContainersMonitor, but we cannot use this class because its private. I don't if I should propose another jira for this, but I think this can make our easier to write tests for ContainersMonitoring.

{quote}
{code}
+  public void testResourceChange() throws Exception {
{code}
It looks like this test relies on sleeps to wait for events to be handled. This both makes the test run longer and can cause flaky failures. I think there is a way to actually wait for the events to be completed. I don't know it off the top of my head but can look it up for you if that would be helpful.
{quote}

I've thinked about this but not come up with a better way to do it. This will be failed only in some extremely bad cases (like very low resource available). I've set YarnConfiguration.NM_CONTAINER_MON_INTERVAL_MS to 20ms in test, and 200ms seems enough for ContainersMonitor react to bad containers. Please let me know if you have any other ideas!

And any thoughts about this patch?

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618208/yarn-1449.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 16 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2644//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/2644//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-nodemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2644//console

This message is automatically generated.

Updated patch to handle findbugs warning

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618222/yarn-1449.5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 16 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2645//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2645//console

This message is automatically generated.

Cleaning up stale PA patches.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618222/yarn-1449.5.patch
  against trunk revision 18b2507.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6534//console

This message is automatically generated.

Canceled patch.

Attaching patch for review.

The patch has passed the {{test-patch}} script, and includes the following changes:
* Added *ChangeContainersResourceRequest*/*ChangeContainersResourceResponse* protocol
* Added *changeContainersResource* method in *ContainerManagementProtocol*
* Updated *ContainerManagerImpl* to implement the container resource change actions
* Updated unit tests

The patch does *NOT* include the implementation of changes to the *NodeStatus* yet. I would like to have some further discussion on the changes to the NodeStatusProto, especially now we want to update the node heartbeat response to let RM confirm the final resource changes with NM. [~leftnoteasy], do you think it would be a good idea to reopen YARN-1644 so that I can initiate the discussion and post patches in that thread for NodeStatus changes? If you think it is not necessary, I will discuss in this thread. 

I was able to reuse a lot of the code from the original patch :-). The major differences are listed as follows:

* The *ChangeContainersResourceResponse* now returns a containerID to exception Map for failed requests, instead of a list of failed containerIDs. This is to be consistent with other APIs.
* In {{ContainerManagerImpl.java}}
** More strict checking of the resource change request, including checking token expiration and RM identifier.
** Reject resource change requests with both resource increase and decrease specified for the same container in the same request.
** Check validity of the target resource. For decrease request, the target resource must fit in the current resource, otherwise, the request will be rejected right away.
** Added a {{CHANGE_CONTAINER}} event so that container resource change and nodemanager metrics updates will be routed to {{ContainerImpl}}. I believe this is more consistent with the current event model (e.g., from {{CONTAINER_LAUNCHED}} event to {{START_MONITORING_CONTAINER}}).
** Synchronize the calls to change/stop/getstatus of containers.
* In {{ContainerImpl}}
** The {{Resource}} field must be updated now after each successful resource change. It will be used to compare against any invalid resource change coming from AM.
** The nodemanager metrics needs to be updated as well.
** Fire {{CHANGE_MONITORING_CONTAINER}} event in {{ContainerResourceChangeTransition}}.

Thanks a lot.

The design has been changed for YARN-1197. I will post an updated patch shortly.

Attach updated patch for review which includes:

* All protocol changes (AM-RM, AM-NM, NM-RM) as described in the design doc (see YARN-1197). 
* ContainerManager logic
* NodeStatusUpdater logic
* NodeManager recovery logic
* New and updated unit test cases

The ContainersMonitor logic is covered in YARN-1643, and a patch will be posted for review early next week.

The patch is way too big for review. I will split it into several JIRAs. 

Attach patch for AM-NM protocol changes

Attach new patch which fixed coding style issues, and use 4 indents for wrapped lines.

looks good to me overall, could you mark unstable for the newly added APIs too ?

Updated patch to mark new public APIs as Unstable

- the initContainersToIncrease call is unnecessary, containersToIncrease is immediately cleared after wards.
{code}

    if (containersToIncrease == null) {
      return;
    }
    initContainersToIncrease();
    this.containersToIncrease.clear();
    this.containersToIncrease.addAll(containersToIncrease);
{code}

I have also refreshed YARN-1197 branch, you can name your patch like "YARN-1449-YARN-1197.4.patch", which will trigger  jenkins to run YARN-1449 against YARN-1197 branch.



[~jianhe], I think the {{initContainersToIncrease()}} is still needed, because it may need to create the {{this.containersToIncrease}} if it is null.
The {{AllocateRequestPBImpl.setAskList()}} uses the same logic. It seemed a little awkward to me too at first though.

This patch will not build by itself, as it has dependency on YARN-3866 (in particular, {{IncreaseContainersResourceRequestProto}}, {{IncreaseContainersResourceResponseProto}}). It is very difficult to cleanly separate out each patch. Currently I generate a big patch and split it into multiple ones based on files.

If YARN-3866 passes initial review, maybe I can combine YARN-3866 and YARN-1449 into one patch and submit that for pre-commit build?

[~mding], you can submit them together to trigger pre-commit build, I think YARN-3866 will go first. 

bq. because it may need to create the this.containersToIncrease if it is null.
If this.containersToIncrease is null, wont this call return upfront  ?
{code}
if (containersToIncrease == null) {
      return;
    }
{code}
bq. The AllocateRequestPBImpl.setAskList() uses the same logic.
Actually, many places use this logic. No need to respect that. The PB implementations are often past-and-copy code that people pay less attention to it.


Oh, the diff file doesn't show the entire context. The {{containersToIncrease}} refers to the parameter being passed in, so it is only in the scope of the {{setContainersToIncrease}} function.

{code}
+  @Override
+  public void setContainersToIncrease(List<Token> containersToIncrease) {
+    if (containersToIncrease == null) {
+      return;
+    }
+    initContainersToIncrease();
+    this.containersToIncrease.clear();
+    this.containersToIncrease.addAll(containersToIncrease);
+  }
{code}

ah, I missed that too..
Found one example, I think we can use logic similar to ApplicationSubmissionContextPBImpl

[~mding],
Some comments:
- Could you add new PB objects to TestPBRecordImpl as well?
- Could you add test container increase RPC call as well? Just like TestContainerLaunchRPC?

And could you add "YARN-1197" to patch filename to kick Jenkins?

Updated the patch to:

* Refine {{IncreaseContainersResourceRequestPBImpl}} as suggested by [~jianhe]
* Add {{IncreaseContainersResourceRequest}}/{{IncreaseContainersResourceResponse}} PB objects to {{TestPBImplRecords}}
* Add {{TestContainerResourceIncreaseRPC.java}}. This test is for testing RPC timeout of the {{increaseContainersResource}} call, similar to TestContainerLauncherRPC.

I cannot kick jenkins for this ticket yet, as it won't build. It must work together with YARN-1645. I will wait until that ticket passes review, and then combine these two patches together to start jenkins.

As suggested by [~leftnoteasy], I added dummy functions to classes that need to implement {{ContainerManagementProtocol.increaseContainersResource}}, so this patch can build by itself.

The additional files are:
{{ContainerManagerImpl.java}}
{{NodeManager.java}}
{{TestAMAuthorization.java}}
{{TestApplicationMasterLauncher.java}}

Attaching the new patch and kicking Jenkins. 

\\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | pre-patch |  21m 51s | Findbugs (version 3.0.0) appears to be broken on YARN-1197. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 9 new or modified test files. |
| {color:green}+1{color} | javac |   8m 41s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m 39s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 41s | The applied patch generated  5 new checkstyle issues (total was 7, now 12). |
| {color:green}+1{color} | whitespace |   0m  4s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 32s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 37s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   7m 54s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | mapreduce tests |   9m 24s | Tests passed in hadoop-mapreduce-client-app. |
| {color:green}+1{color} | yarn tests |   0m 27s | Tests passed in hadoop-yarn-api. |
| {color:green}+1{color} | yarn tests |   2m  4s | Tests passed in hadoop-yarn-common. |
| {color:red}-1{color} | yarn tests |   6m 14s | Tests failed in hadoop-yarn-server-nodemanager. |
| {color:red}-1{color} | yarn tests |  52m  1s | Tests failed in hadoop-yarn-server-resourcemanager. |
| | | 125m 20s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.yarn.server.nodemanager.TestDeletionService |
|   | hadoop.yarn.server.nodemanager.TestNodeStatusUpdaterForLabels |
|   | hadoop.yarn.server.resourcemanager.security.TestRMDelegationTokens |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12745327/YARN-1449-YARN-1197.5.patch |
| Optional Tests | javac unit findbugs checkstyle javadoc |
| git revision | YARN-1197 / 828e5a4 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8536/artifact/patchprocess/diffcheckstylehadoop-yarn-api.txt |
| hadoop-mapreduce-client-app test log | https://builds.apache.org/job/PreCommit-YARN-Build/8536/artifact/patchprocess/testrun_hadoop-mapreduce-client-app.txt |
| hadoop-yarn-api test log | https://builds.apache.org/job/PreCommit-YARN-Build/8536/artifact/patchprocess/testrun_hadoop-yarn-api.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8536/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| hadoop-yarn-server-nodemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8536/artifact/patchprocess/testrun_hadoop-yarn-server-nodemanager.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8536/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8536/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8536/console |


This message was automatically generated.

* checkstyle error are false alarms. These are needed for Javadoc to work properly.
{code}
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java:24:8: Unused import - org.apache.hadoop.yarn.api.ContainerManagementProtocol.
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java:25:8: Unused import - org.apache.hadoop.yarn.api.records.NMToken.
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java:33: Line is longer than 80 characters (found 97).
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java:24:8: Unused import - org.apache.hadoop.yarn.api.ContainerManagementProtocol.
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java:38: Line is longer than 80 characters (found 97).
{code}

* Unit tests error seems not related. I ran the 3 failed tests locally, and they all passed.

+1 to latest patch.

Committed to YARN-1197 branch, thanks [~mding] and [~leftnoteasy] !

FAILURE: Integrated in Hadoop-trunk-Commit #8505 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8505/])
YARN-1449. AM-NM protocol changes to support container resizing. Contributed by Meng Ding & Wangda Tan) (wangda: rev 83a18add10ee937a04e833a66e0a4642e776e510)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAMAuthorization.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/api/TestPBImplRecords.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestApplicationMasterLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerResourceIncreaseRPC.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/client/ContainerManagementProtocolPBClientImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceResponsePBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/containermanagement_protocol.proto
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ContainerManagementProtocol.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerLaunchRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncherImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/NodeManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceRequestPBImpl.java


FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #436 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/436/])
YARN-1449. AM-NM protocol changes to support container resizing. Contributed by Meng Ding & Wangda Tan) (wangda: rev 83a18add10ee937a04e833a66e0a4642e776e510)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestRPC.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncher.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncherImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerLaunchRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ContainerManagementProtocol.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAMAuthorization.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerResourceIncreaseRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/containermanagement_protocol.proto
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/client/ContainerManagementProtocolPBClientImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceResponsePBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/api/TestPBImplRecords.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceRequestPBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestApplicationMasterLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/NodeManager.java


FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #429 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/429/])
YARN-1449. AM-NM protocol changes to support container resizing. Contributed by Meng Ding & Wangda Tan) (wangda: rev 83a18add10ee937a04e833a66e0a4642e776e510)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerResourceIncreaseRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceResponsePBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/NodeManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAMAuthorization.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncherImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerLaunchRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncher.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceRequestPBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestApplicationMasterLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/client/ContainerManagementProtocolPBClientImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ContainerManagementProtocol.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/api/TestPBImplRecords.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/containermanagement_protocol.proto


SUCCESS: Integrated in Hadoop-Yarn-trunk #1169 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1169/])
YARN-1449. AM-NM protocol changes to support container resizing. Contributed by Meng Ding & Wangda Tan) (wangda: rev 83a18add10ee937a04e833a66e0a4642e776e510)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAMAuthorization.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/containermanagement_protocol.proto
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/api/TestPBImplRecords.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceRequestPBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceResponsePBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ContainerManagementProtocol.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestApplicationMasterLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerLaunchRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/NodeManager.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncherImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerResourceIncreaseRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/client/ContainerManagementProtocolPBClientImpl.java


FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #409 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/409/])
YARN-1449. AM-NM protocol changes to support container resizing. Contributed by Meng Ding & Wangda Tan) (wangda: rev 83a18add10ee937a04e833a66e0a4642e776e510)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceResponsePBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/api/TestPBImplRecords.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/client/ContainerManagementProtocolPBClientImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAMAuthorization.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ContainerManagementProtocol.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceRequestPBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestApplicationMasterLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/NodeManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/containermanagement_protocol.proto
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerLaunchRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerResourceIncreaseRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestRPC.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncher.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncherImpl.java


FAILURE: Integrated in Hadoop-Mapreduce-trunk #2375 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2375/])
YARN-1449. AM-NM protocol changes to support container resizing. Contributed by Meng Ding & Wangda Tan) (wangda: rev 83a18add10ee937a04e833a66e0a4642e776e510)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/containermanagement_protocol.proto
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceResponsePBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAMAuthorization.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestApplicationMasterLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceRequestPBImpl.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncherImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerResourceIncreaseRPC.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/client/ContainerManagementProtocolPBClientImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ContainerManagementProtocol.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/api/TestPBImplRecords.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/NodeManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerLaunchRPC.java


FAILURE: Integrated in Hadoop-Hdfs-trunk #2348 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2348/])
YARN-1449. AM-NM protocol changes to support container resizing. Contributed by Meng Ding & Wangda Tan) (wangda: rev 83a18add10ee937a04e833a66e0a4642e776e510)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerResourceIncreaseRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceRequestPBImpl.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncherImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/NodeManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/containermanagement_protocol.proto
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAMAuthorization.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/IncreaseContainersResourceResponsePBImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestApplicationMasterLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/TestContainerLaunchRPC.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceRequest.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/IncreaseContainersResourceResponse.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/api/TestPBImplRecords.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/launcher/TestContainerLauncher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/client/ContainerManagementProtocolPBClientImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ContainerManagementProtocol.java


