I hesitate to add another option to a plugin that already has so many options, especially one that sounds so much like another option we already have.

Note that this is not the recommended way to address the division between unit tests and integration tests.  The recommended way is to put your unit tests into a separate module, or at least a separate plugin execution.  http://docs.codehaus.org/display/MAVENUSER/Maven+and+Integration+Testing

Finally, it's already possible to put <excludes><exclude>${mySpecialProperty}</exclude></excludes> in your plugin configuration, allowing you to configure your plugin from the command line.

Actually, something like this would be useful if you want to run all tests except for one which is known to fail, similar to -Dtest, a

 -DexcludeTest=A*,B*,C

I'm voting this up because there doesn't seem to be a way to include/exclude TestNG test groups other than through path patterns like what's suggested here.

See: http://stackoverflow.com/questions/7150302/excluding-testng-groups-from-maven

I would also like to see this for the reason ian pojman specified. Even if I could do -Dtest=!testToSkip

This would really be helpful for skipping a test on CI environment, where it is known to work erratically. (For example, E2E test that is flaky, and we don't want it invalidating the whole staging build.)
The key is we don't want to modify a pom.xml file, it should be done via command line option.

Now it is possible with command line option test using the exclamation mark (!):
mvn test -Dtest=!*IntTest
or with failsafe plugin
mvn verify -Dit.test=!*IntTest
Multiple patterns and regex are possible, see the documentation.

