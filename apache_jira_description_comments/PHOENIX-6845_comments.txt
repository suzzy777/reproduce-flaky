shahrs87 commented on PR #1544:
URL: https://github.com/apache/phoenix/pull/1544#issuecomment-1349014265

   There is 1 test failure: `testAutomaticallySettingRowtimestamp[UpsertSelecttIT_allowServerSideMutations=true] – org.apache.phoenix.end2end.UpsertSelectIT`
   Ran locally multiple times and it succeeded. Looks like a flaky test.




shahrs87 commented on PR #1544:
URL: https://github.com/apache/phoenix/pull/1544#issuecomment-1349420695

   There are 2 things that are done in this PR:
   1. Port changes from [PHOENIX-5863](https://issues.apache.org/jira/browse/PHOENIX-5863) to 5.1 branch. [PHOENIX-5863](https://issues.apache.org/jira/browse/PHOENIX-5863) was merged only to 4.x branch.
   2. Changed the MetaDataProtocol#MIN_SPLITTABLE_SYSTEM_CATALOG to 4.15.0 which was the version when Splittable System Catalog feature was introduced.
   
   @jpisaac  @virajjasani  Please review.




shahrs87 commented on PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#issuecomment-1349449855

   There are 2 things that are done in this PR:
   
   1. Port changes from [PHOENIX-5863](https://issues.apache.org/jira/browse/PHOENIX-5863) to 5.1 branch. [PHOENIX-5863](https://issues.apache.org/jira/browse/PHOENIX-5863) was merged only to 4.x branch. Most the changes were merged to master branch via [PHOENIX-6227](https://issues.apache.org/jira/browse/PHOENIX-6227) and [PR-1345](https://github.com/apache/phoenix/pull/1345)
   2. Changed the MetaDataProtocol#MIN_SPLITTABLE_SYSTEM_CATALOG to 4.15.0 which was the version when Splittable System Catalog feature was introduced.
   
   @jpisaac @virajjasani Please review.




Couple of things that contributed to this failure:
 # We don't have  PHOENIX-5863 in master/5.1 branch. This change removed adding indexes to the view on the server side since we add indexes to the view on the client side.
 # MetaDataProtocol#MIN_SPLITTABLE_SYSTEM_CATALOG is set to 5.1.0 in master/5.1 branches. This should be set to 4.15.0 in all the branches since this is the version that splittable syscat feature was introduced.

Created PR to fix this.

Cc [~jisaac]  [~vjasani]  [~kadir] [~tkhurana] 

virajjasani commented on PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#issuecomment-1349507340

   ViewUtil changes are applicable on master branch?




shahrs87 commented on PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#issuecomment-1349526813

   > ViewUtil changes are applicable on master branch?
   
   They are already done in master branch via [PHOENIX-6227](https://issues.apache.org/jira/browse/PHOENIX-6227) and https://github.com/apache/phoenix/pull/1345
   
   
   




virajjasani commented on PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#issuecomment-1349579635

   Looks like build#2 was aborted, will trigger new build. From build#1, all tests seem to have passed: https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/view/change-requests/job/PR-1543/
   




virajjasani commented on PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#issuecomment-1349582001

   Build#1 test report: https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/view/change-requests/job/PR-1543/1/testReport/




virajjasani commented on PR #1544:
URL: https://github.com/apache/phoenix/pull/1544#issuecomment-1349583997

   1 test failure in [build#1](https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/view/change-requests/job/PR-1544/1/testReport/), re-triggered new build.




gjacoby126 commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047778295


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   @shahrs87 @virajjasani - what will this do to users running Phoenix 5.0, which is also not splittable?





shahrs87 commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047780585


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   Cc @jpisaac 





gjacoby126 commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047778295


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   @shahrs87 @virajjasani - what will this do to users running Phoenix 5.0 clients, which is also not splittable?





shahrs87 commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047825124


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   @gjacoby126  Did we even release 5.0 ? I don't see it in tags here: https://github.com/apache/phoenix/tags





jpisaac commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047837603


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   If the server is non-splitable (v5.0.0), then the client (v5.0.0) would also be not split aware right? Are we envisioning scenarios like 4.16 clients and v5.0.0 servers? 





jpisaac commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047837603


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   @gjacoby126 If the server is non-splitable (v5.0.0), then the client (v5.0.0) would also be not split aware right? Are we envisioning scenarios like 4.16 clients and v5.0.0 servers? 





virajjasani commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047843799


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   As of today, 4.16 client would not be able to connect to 5.0 server as [this commit](https://github.com/apache/phoenix/commit/e516b19e8a6c0f5d2eea4bc7cd6ecbe611bf300e) only allows it to connect to 5.1 server.





jpisaac commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047859747


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   The other possibility is 5.0.0 client and 5.1.x server.





gjacoby126 commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047862871


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   @jpisaac - 5.0 client and 5.1 server was the combination I was worried about. That should be allowed (it's necessary, for example, if you're running 5.0 and need to upgrade to 5.1 during the transition)





gjacoby126 commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047863916


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   @shahrs87 - Phoenix 5.0 was an official release 

jpisaac commented on code in PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#discussion_r1047889490


##########
phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataProtocol.java:
##########
@@ -118,8 +118,9 @@ public abstract class MetaDataProtocol extends MetaDataService {
     /** Version below which we fall back on the generic KeyValueBuilder */
     public static final int CLIENT_KEY_VALUE_BUILDER_THRESHOLD = VersionUtil.encodeVersion("0", "94", "14");
     // Version at which we allow SYSTEM.CATALOG to split
-    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG = VersionUtil.encodeVersion("5", "1", "0");
-    public static final String MIN_SPLITTABLE_SYSTEM_CATALOG_VERSION = "5.1.0";
+    public static final int MIN_SPLITTABLE_SYSTEM_CATALOG =

Review Comment:
   This complicates the checks for MIN_SPLITTABLE_SYSTEM_CATALOG (e.g => clientVersion < MIN_SPLITTABLE_SYSTEM_CATALOG)
   Since  MIN_SPLITTABLE_SYSTEM_CATALOG  is not fixed it will need to be client major version dependent.
   @gjacoby126 @shahrs87 @virajjasani 





shahrs87 commented on PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#issuecomment-1352046369

   > Based on the discussion above I think this needs more thought to make sure we don't break any supported client / server pairs. Probably the logic needs more complexity.
   
   @gjacoby126  Dropped the changes from MetadataProtocol class and this patch just tracks forward porting of [PHOENIX-5863](https://issues.apache.org/jira/browse/PHOENIX-5863) 




shahrs87 commented on PR #1543:
URL: https://github.com/apache/phoenix/pull/1543#issuecomment-1352367718

   1 test failed: org.apache.phoenix.jdbc.FailoverPhoenixConnectionIT#testConnectionWhenActiveZKRestarts
   Created [PHOENIX-6846](https://issues.apache.org/jira/browse/PHOENIX-6846) to track this flaky test.




jpisaac merged PR #1543:
URL: https://github.com/apache/phoenix/pull/1543




jpisaac merged PR #1544:
URL: https://github.com/apache/phoenix/pull/1544




