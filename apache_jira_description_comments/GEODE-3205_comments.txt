Commit be0ce583ee3ecd006def26875d3ceca7dfa3ad84 in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=be0ce58 ]

GEODE-3205: add FlakyTest category


This test is still intermittently failing:
{noformat}
:geode-core:flakyTest

org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest > aboveZeroDeletesPreviousFiles FAILED
    org.junit.ComparisonFailure: [Unexpected files: [/tmp/junit3462458996513472258/aboveZeroDeletesPreviousFiles-02-01.gfs, /tmp/junit3462458996513472258/aboveZeroDeletesPreviousFiles-02-02.gfs, /tmp/junit3462458996513472258/aboveZeroDeletesPreviousFiles.gfs]] expected:<[2]> but was:<[3]>
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.validateNumberFiles(DiskSpaceLimitIntegrationTest.java:269)
        at org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.aboveZeroDeletesPreviousFiles(DiskSpaceLimitIntegrationTest.java:208)

289 tests completed, 1 failed, 8 skipped
:geode-core:flakyTest FAILED
{noformat}
The test is rolling stat files and expecting the deletion of previous rolled stat files.

Pull request https://github.com/apache/geode/pull/1350 fixes both GEODE-3205 and GEODE-2790

Commit ebc1d5eb68efc07ddc694ae20d0de01fde52021a in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=ebc1d5e ]

GEODE-3205: GEODE-2790: fix flakiness in DiskSpaceLimitIntegrationTest (#1350)



Reproduced with different stack.
org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest > aboveZeroDeletesPreviousFiles FAILED
    java.lang.AssertionError:
    Expecting file:
      </tmp/junit6694938191041488432/aboveZeroDeletesPreviousFiles-02-01.gfs>
    to exist.
        at org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.aboveZeroDeletesPreviousFiles(DiskSpaceLimitIntegrationTest.java:205)

This issue has either failed to reproduce or been fixed systemically elsewhere (e.g. improving port selection and timeouts).  Closing but please reopen if needed.

Reopening as this failure reproduced in CI:
https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/IntegrationTestOpenJDK8/builds/232

{noformat}
org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest > aboveZeroDeletesPreviousFiles_nameWithHyphen FAILED
    java.lang.AssertionError: 
    Expecting file:
      </tmp/junit8991932761886784585/psin8p724_cache1-statistics-02-01.gfs>
    to exist.
        at org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.aboveZeroDeletesPreviousFiles_nameWithHyphen(DiskSpaceLimitIntegrationTest.java:255)
{noformat}

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  Test Results URI =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
http://files.apachegeode-ci.info/builds/apache-develop-main/1.9.0-build.275/test-results/integrationTest/1544663063/
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Test report artifacts from this job are available at:

http://files.apachegeode-ci.info/builds/apache-develop-main/1.9.0-build.275/test-artifacts/1544663063/integrationtestfiles-OpenJDK8-1.9.0-build.275.tgz

See also: GEODE-2790, GEODE-2786 (both closed as duplicates of one another)

From stdout:
{noformat}
[warn 2018/12/13 00:57:45.682 UTC <Test worker> tid=0x19] Use of java.lang.System.nanoTime() resulted in a non-positive timestamp delta. Skipping archival of statistics sample.
java.lang.IllegalArgumentException: Sample timestamp must be greater than previous timestamp (millisTimeStamp is 420894, previousMillis is 420894 and delta is 0).
	at org.apache.geode.internal.statistics.StatArchiveWriter.calcDelta(StatArchiveWriter.java:412)
	at org.apache.geode.internal.statistics.StatArchiveWriter.writeTimeStamp(StatArchiveWriter.java:422)
	at org.apache.geode.internal.statistics.StatArchiveWriter.sampled(StatArchiveWriter.java:501)
	at org.apache.geode.internal.statistics.StatArchiveHandler.sampled(StatArchiveHandler.java:137)
	at org.apache.geode.internal.statistics.SampleCollector$MarkableSampleHandler.sampled(SampleCollector.java:627)
	at org.apache.geode.internal.statistics.SampleCollector.notifyAllHandlersOfSample(SampleCollector.java:484)
	at org.apache.geode.internal.statistics.SampleCollector.sample(SampleCollector.java:252)
	at org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.sample(DiskSpaceLimitIntegrationTest.java:337)
	at org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.sampleUntilFileExists(DiskSpaceLimitIntegrationTest.java:298)
	at org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.zeroKeepsAllFiles(DiskSpaceLimitIntegrationTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
{noformat}

Commit 18958023b40749892bc01d6388359998b88ae343 in geode's branch refs/heads/develop from Kirk Lund
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=1895802 ]

GEODE-3205: Fix timestamp warning


Commit cbf071d26e01ce458cea2f730114ad396b4ae69b in geode's branch refs/heads/develop from Kirk Lund
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=cbf071d ]

GEODE-3205: Cleanup and reenable DiskSpaceLimitIntegrationTest

Remove @Ignore added for duplicate ticket GEODE-5494.

Cleanup tests and improve failure messages.


Fixed the file limit size after adding list of files and byte sizes to the assertion failures. I then ran it 1000 times in GCP without failures, so I think it should be much less flaky now.

