As a trivial solution there is the [*static code analysis Jenkins plugin*|https://wiki.jenkins-ci.org/display/JENKINS/Static+Code+Analysis+Plug-ins]. It's nice and applying that with the [*Jenkins Findbugs plugin*|https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin] would give us just the correct behavior. Two things versus this solution:
# Cannot run locally before submitting the patch
# I think installing and configuring two new Jenkins plugins to Apache Jenkins CI server is not easily done

So we go for the second best option:
# create a new script as {{bin/test-patch-11-findbugs-diff}} so that it comes right after {{compile}}
# {{mvn clean verify -DskipTests}} before and after applying the patch, and saving each and every module's {{target/findbugs/findbugsXml.xml}} to a secure folder
# call the [*{{findbugs-diff}}*|https://github.com/adjohnson916/findbugs-diff] app for all the before / after FindBugs {{xml}} pairs
# analyze all the {{findbugs-new.xml}} entries for nodes with XPath {{/BugCollection/BugInstance}} entries. Stop on any {{BugInstance}} w/ {{priority}} and / or {{rank}} lower than threshold
# have the reports merged and be downloadable in any case in following scenarios:
## {color:red}-1{color} for bugs that are too serious to apply the patch with them
## {color:orange}0{color} for other new bugs
## {color:green}+1{color} if there is no new bug

Sample output to console:

{code}
bin/test-patch-11-findbugs-diff --taskname=FINDBUGS_DIFF --op=report --tempdir=tmp/OOZIE-1986 --reportdir=tmp/OOZIE-1986/FINDBUGS_DIFF/report --summaryfile=tmp/OOZIE-1986/FINDBUGS_DIFF/summary.txt
[TRACE] Downloading FindBugs diff JAR from https://github.com/adjohnson916/findbugs-diff/releases/download/v0.1.0/findbugs-diff-0.1.0-all.jar
[TRACE] FindBugs diff JAR downloaded
[TRACE] Performing FindBugs diffs
[TRACE] FindBugs diffs performed
[TRACE] Checking FindBugs diffs and creating reports
[DEBUG] There are no new bugs found in [client].
[ERROR] There are [2] new bugs found below threshold in [core].
[DEBUG] You can find the FindBugs diff here (look for the red and orange ones): core/findbugs-new.html
[DEBUG] There are no new bugs found in [docs].
[DEBUG] There are no new bugs found in [examples].
[DEBUG] There are no new bugs found in [hadooplibs/hadoop-utils-2].
[DEBUG] There are no new bugs found in [sharelib/distcp].
[DEBUG] There are no new bugs found in [sharelib/hcatalog].
[DEBUG] There are no new bugs found in [sharelib/hive].
[DEBUG] There are no new bugs found in [sharelib/hive2].
[DEBUG] There are no new bugs found in [sharelib/oozie].
[DEBUG] There are no new bugs found in [sharelib/pig].
[DEBUG] There are no new bugs found in [sharelib/spark].
[DEBUG] There are no new bugs found in [sharelib/sqoop].
[DEBUG] There are no new bugs found in [sharelib/streaming].
[DEBUG] There are no new bugs found in [tools].
[ERROR] There are [2] new bugs found below threshold in total that must be fixed.
[TRACE] FindBugs diffs checked and reports created

Process finished with exit code 0
{code}

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 7 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3337/

This is great.  I like that someone already wrote a diff tool for this that we can just use :)

A couple quick things:
# Can you post the patch on ReviewBoard?  It will be easier to comment on specific things that way given that this is a shell script.
# We should make the output show up in the report (i.e. the Hadoop QA comment above me), and link to the diff
# Run the script through ShellCheck.  It's kind of like findbugs, but for shell scripts.  It'll suggest a bunch of things to fix.  You can find it [here|https://www.shellcheck.net/]; it's also available in package managers to easily install locally.

{{shellcheck}} modifications.

Hi Robert,

thanks for your feedback!

My thoughts:
* Good idea, just did it :)
* The output will be shown in the report later on (when this new {{.sh}} file will also run) and there will be diffs generated like {{core/findbugs-new.html}} but I cannot tell how to make that filenames inside the reports clickable since I cannot tell the real path of the generated file inside JIRA. But these will also appear in the generated folder of the Jenkins job
* Nice catch on {{shellcheck}}, using it. The actual patchset doesn't have any warnings anymore with this marvellous tool

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 7 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1812
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3353/

Downloading a jar from a remote git repo like https://github.com/adjohnson916/findbugs-diff/  and using it without any validation is unsecure.
In addition, I do not see any licensing information for the project, and as far as I know "code without an explicit license is protected by copyright and is by default All Rights Reserved" (at least on github, according to http://www.infoworld.com/article/2615869/open-source-software/github-needs-to-take-open-source-seriously.html). 

Check downloaded FindBugs diff JAR: MD5 is like expected.

I've sent an email to [*the author*|mailto:adjohnson916@gmail.com] requesting license information and that [*the FindBugs JAR file*|https://github.com/adjohnson916/findbugs-diff/releases/download/v0.1.0/findbugs-diff-0.1.0-all.jar] should be put to Maven Central.

In the meanwhile the new patch does MD5 check in order we can go for sure the downloaded JAR file is not tampered.

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 7 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1813
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3356/

The MD5 check is a good idea.  As for the licensing, I think we're okay because we're not actually including it when shipping Oozie.  

The last issue remaining here is that in the bash scripts some lines are too long.

This patchset puts also the bash scripts to the raw patch analysis blacklist, as in general, bash lines are quite cumbersome to cut to a given length - let alone these contain long strings.

In the meanwhile the developer has kindly [*Apache 2.0d*|https://github.com/adjohnson916/findbugs-diff/blob/master/LICENSE] the project, so no worries whatsoever.

Some small refactors to make function names more {{bash}}-like.

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 7 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1815
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3362/

As said before, bash files are quite cumbersome to cut line length...

That's fine.  I think we can ignore the line length check on this one.

Can we make the results of the findbugs diff show up in the comment made by Hadoop QA?  Otherwise, you have to go digging around in the output text.

Some lines were broken so that these can fit into 132 chars. For some others it's not feasible being {{String}} constants.

We also delete the JAR file and the MD5 file after having checked.

Moreover, in the summary file we also enlist the most severe errors ({{summary.txt}}).

Current {{stdout}} is:

{code}
[TRACE] Downloading FindBugs diff JAR from https://github.com/adjohnson916/findbugs-diff/releases/download/v0.1.0/findbugs-diff-0.1.0-all.jar
[TRACE] FindBugs diff JAR downloaded
[TRACE] FindBugs diff JAR checked, is safe to use
[TRACE] Performing FindBugs diffs
[TRACE] FindBugs diff JAR removed
[TRACE] FindBugs diffs performed
[TRACE] Checking FindBugs diffs and creating reports
[DEBUG] There are no new bugs found in [client].
[ERROR] There are [2] new bugs found below threshold in [core].
[DEBUG] You can find the FindBugs diff here (look for the red and orange ones): core/findbugs-new.html
[DEBUG] There are no new bugs found in [docs].
[DEBUG] There are no new bugs found in [examples].
[DEBUG] There are no new bugs found in [hadooplibs/hadoop-utils-2].
[DEBUG] There are no new bugs found in [sharelib/distcp].
[DEBUG] There are no new bugs found in [sharelib/hcatalog].
[DEBUG] There are no new bugs found in [sharelib/hive].
[DEBUG] There are no new bugs found in [sharelib/hive2].
[DEBUG] There are no new bugs found in [sharelib/oozie].
[DEBUG] There are no new bugs found in [sharelib/pig].
[DEBUG] There are no new bugs found in [sharelib/spark].
[DEBUG] There are no new bugs found in [sharelib/sqoop].
[DEBUG] There are no new bugs found in [sharelib/streaming].
[DEBUG] There are no new bugs found in [tools].
[ERROR] There are [2] new bugs found below threshold in total that must be fixed.
[TRACE] FindBugs diffs checked and reports created

Process finished with exit code 0
{code}

Done as per [*summary file*|https://issues.apache.org/jira/secure/attachment/12832466/summary.txt].

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:red}-1{color} Patch failed to apply to head of branch

----------------------------

Re-patch.

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1815
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3366/

Small refactoring.

Some other piece of small refactor.

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1815
.    Tests failed: 1
.    Tests errors: 1

.    The patch failed the following testcases:

.      testBundleStatusTransitWithLock(org.apache.oozie.service.TestStatusTransitService)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3373/

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:red}-1{color} the patch contains 1 line(s) with trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1815
.    Tests failed: 5
.    Tests errors: 3

.    The patch failed the following testcases:

.      testMain(org.apache.oozie.action.hadoop.TestHiveMain)
.      testPigScript(org.apache.oozie.action.hadoop.TestPigMain)
.      testEmbeddedPigWithinPython(org.apache.oozie.action.hadoop.TestPigMain)
.      testPig_withNullExternalID(org.apache.oozie.action.hadoop.TestPigMain)
.      testPigScript(org.apache.oozie.action.hadoop.TestPigMainWithOldAPI)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3374/

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1815
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3375/

Got 2x Ship It! on [*ReviewBoard*|https://reviews.apache.org/r/52429/], should be fine.

Going for the {{v0.1.0-all}} JAR from Maven Central instead of GitHub.

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1815
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3391/

Thank you for making the jar available on mavencentral! 
+1 (nonbinding) for the latest patch.
This will certainly be an improvement to our reporting.

LGTM +1

However, how come it doesn't show up in the previous Hadoop QA comment?  Is there something missing that needs to be done to get it to run automatically?

It still doesn't come because the patch, and thus {{bin/test-patch-11-findbugs-diff}}, is still not present in the repository. It will be run automatically once it's part of the sources.

See {{bin/test.patch#getAllTasks()}}.

Oh, I see.  It doesn't have the new {{test-patch-11-findbugs-diff}} file until after it's determined which tasks to run.

Thanks [~andras.piros] and others for reviews/comments.  Committed to master!

Once it starts being used in future reports, we can always file a followup JIRA if there's anything we need to change or tweak.

It does not work:
https://builds.apache.org/job/oozie-trunk-precommit-build/3398/consoleFull
{noformat}
...
[INFO] ------------------------------------------------------------------------
  Running test-patch task FINDBUGS_DIFF
bin/test-patch: line 314: bin/test-patch-11-findbugs-diff: Permission denied
bin/test-patch-11-findbugs-diff-0.1.0-all.jar.md5: line 1: d965fab3dbf678189924ad6d61fc7a3d: command not found
  Running test-patch task BACKWARDS_COMPATIBILITY
  Running test-patch task TESTS
  Running test-patch task DISTRO

Applying patch
...
[INFO] Final Memory: 308M/1596M
[INFO] ------------------------------------------------------------------------
  Running test-patch task FINDBUGS_DIFF
bin/test-patch: line 314: bin/test-patch-11-findbugs-diff: Permission denied
bin/test-patch-11-findbugs-diff-0.1.0-all.jar.md5: line 1: d965fab3dbf678189924ad6d61fc7a3d: command not found
  Running test-patch task BACKWARDS_COMPATIBILITY
  Running test-patch task TESTS
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems 
...
{noformat}

I guess issue is because of the missing execute flag in file permissions. Please check. Thanks.

{noformat}
-rwxr-xr-x  1 abafna  staff   4292 Oct 10 17:38 test-patch-10-compile
-rw-r--r--  1 abafna  staff   9381 Oct 19 11:15 test-patch-11-findbugs-diff
-rw-r--r--  1 abafna  staff     33 Oct 19 11:15 test-patch-11-findbugs-diff-0.1.0-all.jar.md5
-rwxr-xr-x  1 abafna  staff   3471 Jan 25  2016 test-patch-15-backwards-compatibility
{noformat}

Oops.  I've pushed in an addendum commit that sets the right permissions:
https://github.com/apache/oozie/commit/149500bf9bfabd28ac5571857437079f011c112d

Some MD5 related issue is present, plus some more fixes for the case in the patch there is a new Maven module born / an old one was killed.

MD5 related issue and others are fixed.

[~andras.piros], in cases like this, we're using amend-patches.
Please upload your changes in a "OOZIE-1986-amend.xx.patch", so it's easier to see what portions were committed into master.

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 1 new RAT warning(s)
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} FindBugs diff JAR has a weird MD5 sum, rejecting.
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1815
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3403/

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 1 new RAT warning(s)
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} FindBugs diff JAR has a weird MD5 sum, rejecting.
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1815
.    Tests failed: 5
.    Tests errors: 3

.    The patch failed the following testcases:

.      testMain(org.apache.oozie.action.hadoop.TestHiveMain)
.      testPigScript(org.apache.oozie.action.hadoop.TestPigMain)
.      testEmbeddedPigWithinPython(org.apache.oozie.action.hadoop.TestPigMain)
.      testPig_withNullExternalID(org.apache.oozie.action.hadoop.TestPigMain)
.      testPigScript(org.apache.oozie.action.hadoop.TestPigMainWithOldAPI)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3404/

Done.

Those are flaky tests.

[~andras.piros], thanks for working on the amend patch.  Two things:
# Can you look into the RAT warning?  You may need to add another file to the exclusions.
# This line seems odd to me, though I'm not a bash expert so it could be correct:
{code}
done <   <(find "${sourceFolder}" -name ${FINDBUGS_XML_NAME} -print0)
{code}
In particular, the {{done <   <(}} part.  What does two {{<}} separated like that do?
#- This makes me think of Kirby {{<('o'<)}} :)

Hi [~rkanter],

# Accepted, {{bin/*}} will be blacklisted
# See the [*official ShellCheck explanation*|https://github.com/koalaman/shellcheck/wiki/SC2044]: {{< <(...)}} feeds the contents of the {{find}} into the {{while read}} loop. It's considered safer than {{for}} loops over {{find}}

{{bin/*}} is excluded from RAT analysis.

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} FindBugs diff JAR has a weird MD5 sum, rejecting.
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1815
.    Tests failed: 1
.    Tests errors: 0

.    The patch failed the following testcases:

.      testBundleStatusCoordSubmitFails(org.apache.oozie.service.TestStatusTransitService)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3409/

Thanks for pointing out the double {{<}} thing.  That's interesting.

+1 on the amend 2 patch.

Thanks [~andras.piros].  Committed to trunk!

Following things fixed:
* works on systems w/o {{md5}} but w/ {{md5sum}} (e.g. most Linux systems)
* works for old XMLLib not supporting {{xmllint --xpath}} but only {{xmllint --shell}} and separate {{xpath}}
* different md5sum files for both {{md5}} and {{md5sum}} tools as these behave slightly differently as per hashing algorithm, and hence, results

Testing JIRA OOZIE-1986

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 2 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [core].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1831
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3459/

+1 on the 003 addendum patch

Thanks [~andras.piros].  Committed to master!

Closing issue; Oozie 5.0.0-beta1 is released

