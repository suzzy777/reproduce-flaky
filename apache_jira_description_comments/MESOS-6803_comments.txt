Thanks for re-motivating this! cc: [~tillt], [~karya] [~bbannier]
Let's also consider this for framework authentication, as per https://github.com/apache/mesos/blob/1.1.0/src/sched/sched.cpp#L336

{code}
commit 56adf97d1e3706ee08f956c5ad290247bade7d2a
Author: Alex Clemmer <clemmer.alexander@gmail.com>
Date:   Wed Dec 21 22:57:09 2016 -0800

    Fixed `SlaveTests` to pass when `HAS_AUTHENTICATION` is undefined.
    
    Currently, when `HAS_AUTHENTICATION` is undefined, the Agent will
    use `delay` to schedule a random time in the future to register with the
    Master, to avoid the thundering herd problem after a Master failover.
    The authentication codepath, in contrast, schedules the registration
    immediately.
    
    In tests where we have `Clock::pause`'d when we are supposed to be
    registering the slave, the authentication codepath will succeeed, while
    the no-authentication codepath will hang forever.
    
    A much more detailed analysis of this situation exists in MESOS-6803.
    
    This commit will resolve this issue for `slave_tests.cpp` by changing
    the tests to advance and settle the clock when necessary.
    
    Review: https://reviews.apache.org/r/54803/
{code}
{code}
commit 9408651c3255379afa0533169cd1feb7138dca42
Author: Alex Clemmer <clemmer.alexander@gmail.com>
Date:   Thu Dec 22 03:10:42 2016 -0800

    Fixed spurious registration bug in framework and agent.
    
    This issue appears when `HAS_AUTHENTICATION` is not defined. This commit
    will resolve the issue, and fix tests that surfaced it (as well as some
    associated errors that cause them to be flaky when this symbol is not
    defined).
    
    Currently when a new master is detected and no credential is provided,
    the agent and framework (which have very similar registration code
    paths) will attempt to (re)register after some random initial `delay`,
    to avoid a "thundering herd" problem.  It is hence possible to have
    spurious double-(re)registrations, since a new master could be detected
    after we add the `delay`d registration, but before we execute it.
    
    In a degenerate case, suppose a single agent has a registration delay
    of one minute.  A master is brought up, to which, the agent successfully
    registers.  Prior to this commit, the agent will still have a scheduled
    registration loop (`doReliableRegistration`) with a backoff factor.
    If the master goes down and a new master is brought up, the agent
    will race against itself (two ongoing loops of `doReliableRegistration`)
    to register with the new master.  If the first loop reaches the new
    master first, authentication will fail and cause the agent to commit
    suicide.
    
    To resolve this problem, we store the value of the `Timer` returned by
    `delay` in `doReliableRegistration` and cancel it when we have either
    registered, or need to start a new cycle of registration. This solution
    is implemented in both the framework code and the agent code.
    
    Review: https://reviews.apache.org/r/54909/
{code}
{code}
commit 0cf4f036c12f909deb7b83427c1a2c19dbd3a3ce
Author: Alex Clemmer <clemmer.alexander@gmail.com>
Date:   Thu Dec 22 03:34:26 2016 -0800

    Fixed more tests to pass when `HAS_AUTHENTICATION` is undefined.
    
    This is a follow-on for https://reviews.apache.org/r/54803/
    
    Currently, when `HAS_AUTHENTICATION` is undefined, the Agent will
    use `delay` to schedule a random time in the future to register with the
    Master, to avoid the thundering herd problem after a Master failover.
    The authentication codepath, in contrast, schedules the registration
    immediately.
    
    In tests where we have `Clock::pause`'d when we are supposed to be
    registering the slave, the authention codepath will succeeed, while
    no-authentication codepath will hang forever.
    
    A much more detailed analysis of this situation exists in MESOS-6803.
    
    This commit will resolve this issue for a few existing test files by
    changing the tests to advance/settle the clock as necessary.
    
    Review: https://reviews.apache.org/r/54910/
{code}
{code}
commit 4dc1274ed6b14dbaf90254157799be8c66010a84
Author: Alex Clemmer <clemmer.alexander@gmail.com>
Date:   Thu Dec 22 03:38:18 2016 -0800

    Fixed partition tests to pass when `HAS_AUTHENTICATION=0`.
    
    This is a follow-on for https://reviews.apache.org/r/54803/
    
    Currently, when `HAS_AUTHENTICATION` is undefined, the Agent will
    use `delay` to schedule a random time in the future to register with the
    Master, to avoid the thundering herd problem after a Master failover.
    The authentication codepath, in contrast, schedules the registration
    immediately.
    
    In tests where we have `Clock::pause`'d when we are supposed to be
    registering the slave, the authention codepath will succeeed, while
    no-authentication codepath will hang forever.
    
    A much more detailed analysis of this situation exists in MESOS-6803.
    
    This commit will resolve this issue for a few existing test files by
    changing the tests to advance/settle the clock as necessary.
    
    Review: https://reviews.apache.org/r/54927/
{code}
{code}
commit 3e2e018b8b3f526e8f7bcde5f479f7bca2b25f8d
Author: Alex Clemmer <clemmer.alexander@gmail.com>
Date:   Thu Dec 22 03:41:22 2016 -0800

    Added initial random delay to agent (re)registration.
    
    Currently when a master fails over, agents that do not use
    authentication will choose a random time to re-register to avoid the
    "thundering herd" problem. This is not true of the authenticated
    codepath -- agents that have a credential will attempt to re-register
    immediately.
    
    This issue adds a random delay to the initial authentication to match
    the non-authenticated code path.
    
    This issue caps off a chain of reviews that fixes tests to work with
    this change. This issue also resolves MESOS-6803.
    
    Review: https://reviews.apache.org/r/54928/
{code}

