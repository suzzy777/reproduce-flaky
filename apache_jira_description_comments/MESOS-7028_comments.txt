Observed this on a Mac OS:
{noformat}
[ RUN      ] Encryption/NetSocketTest.EOFBeforeRecv/0
I0515 16:10:02.243257 1918930944 openssl.cpp:419] CA file path is unspecified! NOTE: Set CA file path with LIBPROCESS_SSL_CA_FILE=<filepath>
I0515 16:10:02.243273 1918930944 openssl.cpp:424] CA directory path unspecified! NOTE: Set CA directory path with LIBPROCESS_SSL_CA_DIR=<dirpath>
I0515 16:10:02.243288 1918930944 openssl.cpp:429] Will not verify peer certificate!
NOTE: Set LIBPROCESS_SSL_VERIFY_CERT=1 to enable peer certificate verification
I0515 16:10:02.243374 1918930944 openssl.cpp:435] Will only verify peer certificate if presented!
NOTE: Set LIBPROCESS_SSL_REQUIRE_CERT=1 to require peer certificate verification
E0515 16:10:02.243955 4820992 process.cpp:950] Failed to accept socket: future discarded
I0515 16:10:02.247562 1918930944 process.cpp:1266] libprocess is initialized on 10.0.49.4:62888 with 8 worker threads
../../../3rdparty/libprocess/src/tests/socket_tests.cpp:196: Failure
Failed to wait 15secs for client->recv()
[  FAILED  ] Encryption/NetSocketTest.EOFBeforeRecv/0, where GetParam() = "SSL" (15159 ms)
{noformat}

FWIW, the test run crashed because of MESOS-7106, not sure whether these two issues are related.

Steps to reproduce:
1) Add a `{{::sleep(1);}}` after [server_socket.shutdown()|https://github.com/apache/mesos/blob/4959887230a7d7c55629083be978810f48b780a3/3rdparty/libprocess/src/tests/socket_tests.cpp#L195]Â 
2) recompile `make check`
3) launch the test:
{code:java}
GLOG_v=3 sudo GLOG_v=3 ./3rdparty/libprocess/libprocess-tests --gtest_filter=Encryption/NetSocketTest.EOFBeforeRecv/0 --gtest_break_on_failure --gtest_repeat=1 --verbose
{code}

https://reviews.apache.org/r/65179/

{noformat}
alex@alexr: ~/Projects/mesos $ git reveal 52a55de
commit 52a55debebdba2f40361dafc5c10cf9d1b1a584d
Author:     Andrei Budnik <abudnik@mesosphere.com>
AuthorDate: Wed Jan 17 18:00:53 2018 +0100
Commit:     Alexander Rukletsov <alexr@apache.org>
CommitDate: Wed Jan 17 18:00:53 2018 +0100

    Fixed flaky EOFBeforeRecv test.
    
    This patch is a small correction of commit d4185d4a11.
    Before this patch, if EOF event for a ssl socket is received before
    a client called `recv`, then this EOF event is lost. This leads to
    hanging `recv` on the ssl socket after calling `shutdown`.
    
    Review: https://reviews.apache.org/r/65179/
{noformat}

