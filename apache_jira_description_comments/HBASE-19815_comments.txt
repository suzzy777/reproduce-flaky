.001 Fix cast failure.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  2m 29s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 39s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 58s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 26s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 33s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m 28s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 14m  3s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 92m 35s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}127m 12s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19815 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12906448/HBASE-19815.branch-2.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux d740c8f10303 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / b4f6ae86b6 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11084/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11084/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



I pushed this to master and branch-2. Lets see if it fixes it. 

I fixed classcastexception but test still fails. Here the test fails on the commit that includes the patch attached here!

 

https://builds.apache.org/job/HBASE-Flaky-Tests-branch2.0/299/

FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4421 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4421/])
HBASE-19815 Flakey TestAssignmentManager.testAssignWithRandExec (stack: rev 53d0c2388d9eb564c20e4231d3cb7ae7be360478)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockNoopMasterServices.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/RecoverMetaProcedure.java


The random assigns lock up when hbase:meta fails, we schedule a crash, and then try to assign meta again but its 'owned' already by initial assign. The original assign will not run because it fostered the crash so is waiting for it to complete before it goes on. Seems like an issue in AMv2.  Happens one in four times (this is the test that fails the most).
{code:java}

2018-01-18 03:59:43,526 INFO  [ProcExecWrkr-8] assignment.RegionTransitionProcedure(213): Dispatch pid=2, state=RUNNABLE:REGION_TRANSITION_DISPATCH; AssignProcedure table=testAssignWithRandExec, region=a0f2130e096959aa4b835ed735d63a48; rit=OPENING, location=localhost,108,1
2018-01-18 03:59:43,677 INFO  [MockRSProcedureDispatcher-pool1-t7] assignment.TestAssignmentManager$RandRsExecutor(777): Return null as response; means proc stuck so we send in a crash report after a few seconds...
2018-01-18 03:59:48,679 INFO  [pool-1-thread-1] assignment.TestAssignmentManager$RandRsExecutor$1(781): Delayed CRASHING of localhost,108,1
2018-01-18 03:59:48,683 DEBUG [pool-1-thread-1] procedure2.ProcedureExecutor(869): Stored pid=3, state=RUNNABLE:SERVER_CRASH_START; ServerCrashProcedure server=localhost,108,1, splitWal=false, meta=true
2018-01-18 03:59:48,684 DEBUG [pool-1-thread-1] assignment.AssignmentManager(1393): Added=localhost,108,1 to dead servers, submitted shutdown handler to be executed meta=true
2018-01-18 03:59:48,693 DEBUG [ProcExecWrkr-11] procedure2.StateMachineProcedure(180): pid=3, state=RUNNABLE:SERVER_CRASH_START; ServerCrashProcedure server=localhost,108,1, splitWal=false, meta=true
2018-01-18 03:59:48,693 INFO  [ProcExecWrkr-11] procedure.ServerCrashProcedure(118): Start pid=3, state=RUNNABLE:SERVER_CRASH_START; ServerCrashProcedure server=localhost,108,1, splitWal=false, meta=true
2018-01-18 03:59:48,694 DEBUG [ProcExecWrkr-11] procedure2.StateMachineProcedure(180): pid=3, state=RUNNABLE:SERVER_CRASH_PROCESS_META; ServerCrashProcedure server=localhost,108,1, splitWal=false, meta=true
2018-01-18 03:59:48,694 DEBUG [ProcExecWrkr-11] procedure.ServerCrashProcedure(192): pid=3, state=RUNNABLE:SERVER_CRASH_PROCESS_META; ServerCrashProcedure server=localhost,108,1, splitWal=false, meta=true; Processing hbase:meta that was on localhost,108,1
2018-01-18 03:59:48,698 INFO  [ProcExecWrkr-11] procedure2.ProcedureExecutor(1499): Initialized subprocedures=[{pid=4, ppid=3, state=RUNNABLE:RECOVER_META_SPLIT_LOGS; RecoverMetaProcedure failedMetaServer=localhost,108,1, splitWal=false}]
2018-01-18 03:59:48,698 DEBUG [ProcExecWrkr-11] procedure2.StateMachineProcedure(180): pid=4, ppid=3, state=RUNNABLE:RECOVER_META_SPLIT_LOGS; RecoverMetaProcedure failedMetaServer=localhost,108,1, splitWal=false
2018-01-18 03:59:48,698 INFO  [ProcExecWrkr-11] procedure.RecoverMetaProcedure(106): Start pid=4, ppid=3, state=RUNNABLE:RECOVER_META_SPLIT_LOGS; RecoverMetaProcedure failedMetaServer=localhost,108,1, splitWal=false
2018-01-18 03:59:48,698 DEBUG [ProcExecWrkr-11] procedure2.StateMachineProcedure(180): pid=4, ppid=3, state=RUNNABLE:RECOVER_META_ASSIGN_REGIONS; RecoverMetaProcedure failedMetaServer=localhost,108,1, splitWal=false
2018-01-18 03:59:48,699 INFO  [ProcExecWrkr-11] procedure.RecoverMetaProcedure(130): pid=4, ppid=3, state=RUNNABLE:RECOVER_META_ASSIGN_REGIONS; RecoverMetaProcedure failedMetaServer=localhost,108,1, splitWal=false; Assigning meta with new plan. previous meta server=localhost,108,1
2018-01-18 03:59:48,699 INFO  [ProcExecWrkr-11] procedure2.ProcedureExecutor(1499): Initialized subprocedures=[{pid=5, ppid=4, state=RUNNABLE:REGION_TRANSITION_QUEUE; AssignProcedure table=hbase:meta, region=1588230740}]
2018-01-18 03:59:48,699 INFO  [ProcExecWrkr-11] procedure.MasterProcedureScheduler(813): pid=5, ppid=4, state=RUNNABLE:REGION_TRANSITION_QUEUE; AssignProcedure table=hbase:meta, region=1588230740 hbase:meta hbase:meta,,1.1588230740
2018-01-18 03:59:48,700 INFO  [ProcExecWrkr-11] assignment.AssignProcedure(211): Start pid=5, ppid=4, state=RUNNABLE:REGION_TRANSITION_QUEUE; AssignProcedure table=hbase:meta, region=1588230740; rit=OFFLINE, location=null; forceNewPlan=false, retain=false
2018-01-18 03:59:48,851 DEBUG [AssignmentThread] assignment.AssignmentManager(1758): Processing assignment plans for System tables sysServersCount=10, allServersCount=10
2018-01-18 03:59:48,853 INFO  [ProcExecWrkr-13] assignment.RegionTransitionProcedure(213): Dispatch pid=5, ppid=4, state=RUNNABLE:REGION_TRANSITION_DISPATCH; AssignProcedure table=hbase:meta, region=1588230740; rit=OPENING, location=localhost,102,1
2018-01-18 03:59:49,004 INFO  [MockRSProcedureDispatcher-pool1-t8] assignment.TestAssignmentManager$RandRsExecutor(777): Return null as response; means proc stuck so we send in a crash report after a few seconds...
2018-01-18 03:59:54,005 INFO  [pool-1-thread-1] assignment.TestAssignmentManager$RandRsExecutor$1(781): Delayed CRASHING of localhost,102,1
2018-01-18 03:59:54,005 DEBUG [pool-1-thread-1] procedure2.ProcedureExecutor(869): Stored pid=6, state=RUNNABLE:SERVER_CRASH_START; ServerCrashProcedure server=localhost,102,1, splitWal=false, meta=true
2018-01-18 03:59:54,006 DEBUG [pool-1-thread-1] assignment.AssignmentManager(1393): Added=localhost,102,1 to dead servers, submitted shutdown handler to be executed meta=true
2018-01-18 03:59:54,006 DEBUG [ProcExecWrkr-15] procedure2.StateMachineProcedure(180): pid=6, state=RUNNABLE:SERVER_CRASH_START; ServerCrashProcedure server=localhost,102,1, splitWal=false, meta=true
2018-01-18 03:59:54,007 INFO  [ProcExecWrkr-15] procedure.ServerCrashProcedure(118): Start pid=6, state=RUNNABLE:SERVER_CRASH_START; ServerCrashProcedure server=localhost,102,1, splitWal=false, meta=true
2018-01-18 03:59:54,007 DEBUG [ProcExecWrkr-15] procedure2.StateMachineProcedure(180): pid=6, state=RUNNABLE:SERVER_CRASH_PROCESS_META; ServerCrashProcedure server=localhost,102,1, splitWal=false, meta=true
2018-01-18 03:59:54,007 DEBUG [ProcExecWrkr-15] procedure.ServerCrashProcedure(192): pid=6, state=RUNNABLE:SERVER_CRASH_PROCESS_META; ServerCrashProcedure server=localhost,102,1, splitWal=false, meta=true; Processing hbase:meta that was on localhost,102,1
2018-01-18 03:59:54,008 INFO  [ProcExecWrkr-15] procedure2.ProcedureExecutor(1499): Initialized subprocedures=[{pid=7, ppid=6, state=RUNNABLE:RECOVER_META_SPLIT_LOGS; RecoverMetaProcedure failedMetaServer=localhost,102,1, splitWal=false}]
2018-01-18 03:59:54,009 DEBUG [ProcExecWrkr-15] procedure2.StateMachineProcedure(180): pid=7, ppid=6, state=RUNNABLE:RECOVER_META_SPLIT_LOGS; RecoverMetaProcedure failedMetaServer=localhost,102,1, splitWal=false
2018-01-18 03:59:54,009 INFO  [ProcExecWrkr-15] procedure.RecoverMetaProcedure(106): Start pid=7, ppid=6, state=RUNNABLE:RECOVER_META_SPLIT_LOGS; RecoverMetaProcedure failedMetaServer=localhost,102,1, splitWal=false
2018-01-18 03:59:54,009 DEBUG [ProcExecWrkr-15] procedure2.StateMachineProcedure(180): pid=7, ppid=6, state=RUNNABLE:RECOVER_META_ASSIGN_REGIONS; RecoverMetaProcedure failedMetaServer=localhost,102,1, splitWal=false
2018-01-18 03:59:54,009 INFO  [ProcExecWrkr-15] procedure.RecoverMetaProcedure(130): pid=7, ppid=6, state=RUNNABLE:RECOVER_META_ASSIGN_REGIONS; RecoverMetaProcedure failedMetaServer=localhost,102,1, splitWal=false; Assigning meta with new plan. previous meta server=localhost,102,1
2018-01-18 03:59:54,010 INFO  [ProcExecWrkr-15] procedure2.ProcedureExecutor(1499): Initialized subprocedures=[{pid=8, ppid=7, state=RUNNABLE:REGION_TRANSITION_QUEUE; AssignProcedure table=hbase:meta, region=1588230740}]
2018-01-18 03:59:54,010 INFO  [ProcExecWrkr-15] procedure.MasterProcedureScheduler(813): pid=8, ppid=7, state=RUNNABLE:REGION_TRANSITION_QUEUE; AssignProcedure table=hbase:meta, region=1588230740 hbase:meta hbase:meta,,1.1588230740
2018-01-18 03:59:54,011 DEBUG [ProcExecWrkr-15] assignment.RegionTransitionProcedure(376): LOCK_EVENT_WAIT pid=8 serverLocks={}, namespaceLocks={{default=exclusiveLockOwner=NONE, sharedLockCount=1, waitingProcCount=0}}, tableLocks={{testAssignWithRandExec=exclusiveLockOwner=NONE, sharedLockCount=1, waitingProcCount=0}}, regionLocks={{1588230740=exclusiveLockOwner=5, sharedLockCount=0, waitingProcCount=1}, {a0f2130e096959aa4b835ed735d63a48=exclusiveLockOwner=2, sharedLockCount=0, waitingProcCount=0}}
2018-01-18 03:59:54,011 DEBUG [ProcExecWrkr-15] procedure2.ProcedureExecutor(1234): LOCK_EVENT_WAIT pid=8, ppid=7, state=RUNNABLE:REGION_TRANSITION_QUEUE; AssignProcedure table=hbase:meta, region=1588230740
2018-01-18 04:00:12,076 DEBUG [ProcExecTimeout] procedure2.ProcedureExecutor$CompletedProcedureCleaner(221): Evict completed pid=1, state=SUCCESS; AssignProcedure table=hbase:meta, region=1588230740
2018-01-18 04:02:38,100 WARN  [Time-limited test] procedure.ProcedureSyncWait(183): Interrupted while sleeping, waiting on pid=2
2018-01-18 04:02:38,101 INFO  [Time-limited test] assignment.TestAssignmentManager(447): ExecutionException
java.util.concurrent.ExecutionException: java.io.InterruptedIOException{code}

Issue seems to be our not cancelling the failed assign. We do this if it user-space region – see handleRIT in ServerCrashProcedure – but we do not seem to do similar if a failed hbase:meta assign because we go a different route via RecoverMetaProcedure.

Patch coming...

To be clear 2.001 has been committed. It cleans up the Cast error reported above. We then reopened this issue to address the fact that this test is still failing.

.001 adds handleRIT from SCP to RecoverMetaProcedure.

This is first cut. Will see if I can have SCP and RMP share a method but contexts are different... 

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  4s{color} | {color:red} HBASE-19815 does not apply to branch-2. Rebase required? Wrong Branch? See https://yetus.apache.org/documentation/0.6.0/precommit-patchnames for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HBASE-19815 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12906448/HBASE-19815.branch-2.001.patch |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11103/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



.002 Retry. We picked up wrong patch?

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  4s{color} | {color:red} HBASE-19815 does not apply to branch-2. Rebase required? Wrong Branch? See https://yetus.apache.org/documentation/0.6.0/precommit-patchnames for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HBASE-19815 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12906448/HBASE-19815.branch-2.001.patch |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11105/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HBASE-19815 does not apply to branch-2. Rebase required? Wrong Branch? See https://yetus.apache.org/documentation/0.6.0/precommit-patchnames for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HBASE-19815 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12906448/HBASE-19815.branch-2.001.patch |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11106/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



Deleted 2.001 so hadoopqa won't keep picking it up.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  2m 28s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m  7s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 55s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m  5s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 56s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m  9s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 18m  4s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 94m 20s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 14s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}131m 44s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19815 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12906563/HBASE-19815.master.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 359040d6e7ce 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 7573e07cc6 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11114/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11114/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



Resolving. Pushed .003 to branch-2 and master. Hopefully this does it. The test found a real issue (hurray for randomized tests). Will keep an eye on it.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 35s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 57s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 23s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 19s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 19m 28s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}111m 49s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 14s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}149m 39s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19815 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12906563/HBASE-19815.master.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 7110eb5b5386 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / 09ffbb5b68 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11116/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11116/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4426 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4426/])
HBASE-19815 Flakey TestAssignmentManager.testAssignWithRandExec (Part (stack: rev 581fabe7b2177a090af33517f2f7cb1cdab2c64b)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestAssignmentManager.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/RecoverMetaProcedure.java


