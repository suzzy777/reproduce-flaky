Current IgniteUtils.closeQuiet(@Nullable Socket sock) can take about 5sec to close socket. This violates node detection failure. Despite we set failureDetectionTiemout == 1000, node failure is detected within 6.5 secs in average. 

This time gap was unearther by a discovery integration test on ducktape [1]. Failure detection timeout is set to 1000ms.
Typical results before the fix for 1 node:
"Detection of node(s) failure (ms)": 6140, "All detection delays (ms):": "[6140]", "Nodes failed": 1}

Typical results after the fix for 1 node:
"Detection of node(s) failure (ms)": 1034, "All detection delays (ms):": "[1034]", "Nodes failed": 1}

There is note that 'graceful' socket closing was made to workaround bag in OpenJDK12 [2]. But as I see it has been fixed. Also, there were SSL issues like [3] and [4].
There are various fixes in modern versions of various JDK, supporting TLS 1.3 ([6]). OpenJDK11 works well as far as I know.

I believe, SSL in discovery is rare in usage. This slows down performance. With the issues, one could just enable soLiger or update the JDK. There is no reason to affect all users by default.

[1] https://github.com/apache/ignite/blob/ignite-ducktape/modules/ducktests/tests/ignitetest/tests/discovery_test.py
[2] https://bugs.openjdk.java.net/browse/JDK-8219658
[3] https://issues.apache.org/jira/browse/IGNITE-12818
[4] https://issues.apache.org/jira/browse/IGNITE-11288
[5] https://bugs.openjdk.java.net/browse/JDK-8245468
[6] https://www.oracle.com/java/technologies/javase/8u261-relnotes.html
