Do you have a link to the full log?

https://scans.gradle.com/s/6cokekk7btld4

Changed the priority to P1 based on https://beam.apache.org/contribute/jira-priorities/

Saw this again in https://builds.apache.org/job/beam_PreCommit_Java_Commit/11730/

I can make this test fail in the same way locally if I add a call to tempFolder.delete() here: https://github.com/apache/beam/blob/db00d869060a222df730d0737a1ae48d4f3f8b26/runners/flink/src/test/java/org/apache/beam/runners/flink/FlinkSavepointTest.java#L189

So it seems likely the cause of these failures is something cleaning up tempFolder. This seems like it could indicate a bug in the Flink runner - I'd expect it to fail loudly when that happens, not just hang

I looked into why we aren't getting more logging info here. The junit jenkins plugin is supposed to keep 500KB at the beginning and at the end of the log for failing tests, while it only keeps 500B for passing tests (source: https://github.com/jenkinsci/junit-plugin/blob/master/src/main/java/hudson/tasks/junit/CaseResult.java#L190). It seems for some reason this test is being classified as passing so a lot of our log is getting thrown away. I wonder if this is because there are multiple runs of testSavepointRestorePortable, only one of which fails?

Not sure it has to do with the temp folder. The reason you might not see failures is that we are starting an embedded cluster which runs async from the main test thread. There is a synchronization though via a latch.

{quote}
I wonder if this is because there are multiple runs of testSavepointRestorePortable, only one of which fails?
{quote}

There is only one run of that test and another run for {{testSavepointRestoreLegacy}}.

I was referring to the multiple runs you can see at https://builds.apache.org/job/beam_PreCommit_Java_Commit/11730/testReport/org.apache.beam.runners.flink/FlinkSavepointTest/, there are three of each: !multiple_savepoint_tests.png! 

That is really strange because the class only contains two tests. I don't know why Jenkins triples the number of tests.

[https://ci-beam.apache.org/job/beam_PreCommit_Java_Cron/2922/]

Build scan seems to be missing. The issue with the multiple runs is that Jenkins test result plugin has an insufficient primary key for results. We had these problem before a lot where e.g. ParDoTest for different runners would clobber each other. And then when you click through, which page loaded was nondeterministic. At least the case here seems a little less broken...

Yup. Reading the log in this case it is {{:runners:flink:1.8:test}} failing. The same test runs for each Flink version and they land in the same test bucket because the tests themselves do not have distinct names.

Oh I see. They're actually (sort of) duplicates for the same runs, the stderr is exactly the same.

That must be the cause of BEAM-10262 then. The junit plugin checks stacktrace == null to see if a test passed when deciding how much of the log to truncate.

Good catch! Of course the tests run three times, once for each Flink version.

The test hangs waiting for the latch countdown after restoring the pipeline from a savepoint.
{noformat}
org.apache.beam.runners.flink.FlinkSavepointTest > testSavepointRestorePortable FAILED
    org.junit.runners.model.TestTimedOutException at FlinkSavepointTest.java:190
{noformat}

Locally, I can't get the test to fail if I continue to execute the test in a loop (Note: you need to manually call the after() method after the test method). 

Is there a way we could generate test names which include the Flink version?

I hadn't looked at this, so just searching. It seems the {{@DisplayName}} is unfortunately static.

https://issues.jenkins-ci.org/browse/JENKINS-13214 is relevant, but I think is the fix for what I was complaining about from the early days of Beam. (like maybe we upgraded past that fix some years after it was fixed)

Could be caused by BEAM-10558. We will see after the fix is merged.

Doesn't seem to be the case because the test is still flaky: https://ci-beam.apache.org/job/beam_PreCommit_Java_Cron/3042/

This scan has the log: https://scans.gradle.com/s/jb5tbdedsu5xs/tests/:runners:flink:1.8:test/org.apache.beam.runners.flink.FlinkSavepointTest/testSavepointRestorePortable#1

The problem seems to come from the embedded cluster which does not allow the job to start from a savepoint, due to missing resources. The job vertices are still in the {{SCHEDULED}} phase (not {{RUNNING}}) and thus can't produce output. This may be resolvable by just increasing the timeout: https://github.com/apache/beam/pull/12378

[https://github.com/apache/beam/pull/12378] is merged. Can we close this?

If we haven't seen any new failures, I'd say yes.

History LGTM: https://ci-beam.apache.org/job/beam_PreCommit_Java_Cron/lastCompletedBuild/testReport/junit/org.apache.beam.runners.flink/FlinkSavepointTest/testSavepointRestorePortable/history/
Last failure was on July 26, PR merged on July 28

Oh that's neat. I didn't know this feature. Cool!

Hello! Due to a bug in our Jira configuration, this issue had status:Resolved but resolution:Unresolved.

I am bulk editing these issues to have resolution:Fixed

If a different resolution is appropriate, please change it. To do this, click the "Resolve" button (you can do this even for closed issues) and set the Resolution field to the right value.

