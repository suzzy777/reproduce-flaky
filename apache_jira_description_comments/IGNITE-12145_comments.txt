This PR contains:

* Monitoring list engine.
  ** Support for SQL, JMX, Log exporters implemented.
  ** Internal MonitoringList API added.
  ** Enable/Disable of lists implemented.
* Following list implemented:
  ** Cache list
  ** Cache group list
  ** Compute task list
  ** Service list.

Engine details:
* {{MonitoringList}} added to store list data.
* Base interface {{MonitoringRow` for list data created.
* Corresponding method added to {{MetricExporterSpi}}
* {{JmxMetricExporterSpi}}, {{SqlViewExporterSpi}}, {{LogExporterSpi}} updated to support list export.
* JMX, SQL and other column-oriented SPI uses {{MonitoringRowAttributeWalker}} to quickly traverse all list row attributes.
* Implementation of {{MonitoringRowAttributeWalker}} for specific {{MonitoringRow}} can be generated with {{MonitoringRowAttributeWalkerGenerator}}

* Basic interface for objects list is {{MonitoringList}}. It provides the following features:
 ** name.
 ** description.
 ** row class.
 ** size.
 ** iterator for the list content.
 ** attribute walker (described below).
 * MonitoringRow is a marker interface for classes that can be used as a monitoring list content.

Internally, there is only one implementation of {{MonitoringList}}, for now, {{MonitoringListAdapter}}.
 It adapts the content of some {{ConcurrentMap}} which uses widely in Ignite internals.
 I think, will be another implementation in the follow-up PRs.

Public API changes:

* New registry created {{ReadOnlyMonitoringListRegistry}} It provides access:
** To all lists that exist in the Ignite.
** Ability to subscribe to the list creation/removal events.
* {{MetricExporterSpi}} changes:
** {{setMonitoringListRegistry}} method added
** {{setMonitoringListExportFilter}} method added.


{{MonitoringRowAttributeWalker}} is a helper class for exporter implementations.
Usually, exporter SPI iterates on `MonitoringRow` attributes.
{{SqlViewExporterSpi}}, {{JmxMetricExporterSpi}} can be taken as an example.

It can be implemented with Java reflection API, but I use more quick approach.

{{MonitoringRowAttributeWalker}} can visit each attribute of the {{MonitoringRow}} implementation.
It's also, preserves, the order provided by the {{MonitoringRow}} implementation author.

[~NIzhikov] Nikolay, looks good to me. Thanks for contribution and thanks to all who was involved.

[~NIzhikov], the patch looks good to me.

{panel:title=Branch: [pull/6845/head] Base: [master] : Possible Blockers (1)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}SPI{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=4621625]]
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailedNodes3 - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4621709&amp;buildTypeId=IgniteTests24Java8_RunAll]

Failure unrelated.

Thanks to all for the review and feedback.
Merged to master.

