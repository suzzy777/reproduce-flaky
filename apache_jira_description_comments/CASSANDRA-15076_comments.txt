One obvious and simple solution would of course be to just add a {{version}} at the start of the audit record header.

But we could also consider to change audit type value from {{AuditLog}} to {{audit}}.

A bit more invasive, but we might also consider to swap the order of the fields so we get:
{noformat}
type:<type>(text)
version:0(int16)
{noformat}

[~vinaykumarcse], what are our thoughts on this?


Adding {{version}} field to {{BinAuditLogger}} entry sounds like a good idea to me. 


{quote}
But we could also consider to change audit type value from AuditLog to audit.
{quote}
+1.



Sounds reasonable to me.

So FQL header remain as is. Audit record header will be:
{noformat}
version:0(int16)
type:audit(text)
{noformat}
And we'll update {{fqltool}} and {{auditlogviewr}} to give useful error messages when an unexpected header version or type is detected.

I'd be willing to work on this ticket either as assignee or reviewer. [~vinaykumarcse], would you be able to work with me on this?

I'm about to cut a new release of [ecAudit|https://github.com/Ericsson/ecaudit] soon where support for a Chronicle backend is added. Having an agreement on record header format in this ticket would simplify upgrades from Cassandra 3.x + ecAudit -> Cassandra 4.0.

Sure. Happy to help you with the review on this.

I've created a patch based on the proposal above.

[Patch|https://github.com/eperott/cassandra/tree/15076-trunk]
[Unit tests|https://circleci.com/gh/eperott/cassandra/66#tests/containers/2]
[FQL Unit tests|https://circleci.com/gh/eperott/cassandra/67]

A local run of the dtests result in some flaky failures, but nothing that seem related to fql or audit. In particular, the {{auditlog_test.py}} and {{fqltool_test.py}} run without errors.


First pass of review:
 * {{AuditLogViewer::verifyVersion}} and {{AuditLogViewer::readType}} are throwing runtime exceptions in case of unexpected format and unsupported versions. However, when reading log files with thousands of records, earlier schematics were to ignore those records. Are we stopping the processing of the audit log in new schematics? If so, It might be better to log warnings for those specific records (_if needed)_ and move on with processing rather than aborting the viewer.
 * nitpick/idea: Would {{int16}} be the right choice for version? Can we be aggressive to {{int8}}?

Can you also rebase your changes on the latest trunk?

Thanks for having a look on this patch.
{quote}It might be better to log warnings for those specific records (if needed) and move on with processing rather than aborting the viewer.
{quote}
If an incompatible record version/type appears in the queue, aren't chances quite high that the rest of the records in the queue will be incompatible as well?

One option could be to add a new flag {{-i, --ignore}}. When used, the auditlogviewer tool would silently skip unexpected records, try to recover and continue on next record. That way users could at least try to read out records from the queue even when some unexpected records are present. What do you think?
{quote}Would {{int16}} be the right choice for version? Can we be aggressive to {{int8}}?
{quote}
Yeah, {{int8}} would probably last us quite some time. However, I'd prefer it if we stick to {{int16}} since I've already released versions of [ecAudit|https://github.com/Ericsson/ecaudit] where proposed record header format is used. It would simplify a lot for ecAudit users as they migrate to Cassandra 4.0.

On the topic of saving disk space and improving efficiency - we ran some tests with shorter field-names, or even fieldless queues. That makes a [significant difference|https://github.com/Ericsson/ecaudit/issues/115#issuecomment-537950722]. But that's probably for another ticket.

Will rebase and re-test once we agree on details above.

{quote}One option could be to add a new flag {{-i, --ignore}}. When used, the auditlogviewer tool would silently skip unexpected records, try to recover and continue on next record. That way users could at least try to read out records from the queue even when some unexpected records are present. What do you think?
{quote}

I like this option. +1. 

{quote}
On the topic of saving disk space and improving efficiency - we ran some tests with shorter field-names, or even fieldless queues. That makes a significant difference. But that's probably for another ticket.
{quote}
Please create a ticket so that we can follow up on this as well.



I've rebased the patch on latest trunk and added the -i flag as discussed above.

[PR|https://github.com/apache/cassandra/pull/372]
[Tests|https://circleci.com/workflow-run/9ecd0d8b-7d3b-4b0b-a3f1-089d1126ce89]

A local run of the auditlog_test.py and fqltool_test.py dtests is OK. Also, I did some manual verification on a ccm cluster.
{quote}Please create a ticket so that we can follow up on this as well.
{quote}
Created CASSANDRA-15384 to follow up on disk space improvements.

[~marcuse] Do you have any comments on this? 

this lgtm, +1

-[~eperott] was preparing to commit this, but noticed [this|https://github.com/apache/cassandra/pull/372/files#diff-bdaab1104a93e723ce0b609a6477c9c4L1262-L1266] - was that included on purpose?-

edit: yep, leftover from CASSANDRA-14373

committed, ran the tests [here|https://circleci.com/workflow-run/ee21bc21-f190-4c8e-ac44-eea36dc1d50b]

