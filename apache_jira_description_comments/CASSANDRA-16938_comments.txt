The proposed patch reverts the conversion from {{Double[]}} to {{String[]}} in {{TpStatsHolder}} and uses {{jackson-mapper-asl}} instead of {{json-simple}} to generate the json output:
||PR||CI||
|[4.0|https://github.com/apache/cassandra/pull/1190]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/837/workflows/494afd37-92b7-4127-9626-40cbc279a90c] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/837/workflows/b8fee35e-5b60-4590-80b6-ffa53858b741]​|
|[trunk|https://github.com/apache/cassandra/pull/1191]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra?branch=16938-trunk] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/838/workflows/1ec0b51b-eb8d-4f55-b9d6-7b6d06dcce45]​|

All praise to [~dimitarndimitrov] who originally found the problem with {{json-simple}} and wrote the changes for {{StatsPrinter}}. The changes in {{TpStatsHolder}} and the new tests are mine.

Please note that the change to {{jackson-mapper-asl}} will produce some formatting differences in the output. The original output didn't have any pretty-printing:
{code:json}
{"ThreadPools":{"ReadStage":{"TotalBlockedTasks":0,"ActiveTasks":0,"PendingTasks":0,"CurrentlyBlockedTasks":0,"CompletedTasks":1},"CompactionExecutor":(...)}
{code}
While the new output does use pretty-printing:
{code:json}
{
  "ThreadPools" : {
    "CompactionExecutor" : {
      "TotalBlockedTasks" : 0,
      "ActiveTasks" : 0,
      "PendingTasks" : 0,
      "CurrentlyBlockedTasks" : 0,
      "CompletedTasks" : 41
    },
    "MemtableReclaimMemory" : {
(...)
}
{code}
Also the order of the attributes is different. I have attached examples of the output after and before the changes. Of course the old output doesn't contain the wait latency metrics.

These formatting differences shouldn't be a problem for anyone parsing the output as proper json, but it might be an issue if someone is trying to parse the output as regular text. If we think that that can be a problem we can always keep using the old, ugly compact format.

Thank you [~adelapena] and [~ddimitrov].

The patch looks great but I think changes of output probably can be introduced only in minor/major version. I wouldn't do it in a patch version probably. (even if the old one is ugly, indeed :) )

I think [~brandon.williams] and [~mck] might have some thoughts to share here.

I don't see how it matters in a serialized format like json. If people are trying to read it themselves and specifically chose json output to do so...well, this is still valid json, heh.

{quote}
I don't see how it matters in a serialized format like json. If people are trying to read it themselves and specifically chose json output to do so...well, this is still valid json, heh.
{quote}
I agree, the new rearranged json is equivalent to the previous one and any parser should produce the same output as before. 

By the way, at some point we should probably try to get rid of other usages of the venerable {{json-simple}}. We are using version 1.1 which was released in 2009. The only newer version is 1.1.1, which is from 2012 and doesn't solve the bug with numeric arrays.

bq. at some point we should probably try to get rid of other usages of the venerable json-simple

I believe that's CASSANDRA-16855

Agreed with all said, the question was I guess about something weird someone might do but I guess we can't support every weird customization in the world. +1 on green CI (some tests were still running)

bq. I don't see how it matters in a serialized format like json. If people are trying to read it themselves and specifically chose json output to do so...well, this is still valid json, heh.

Agreed.

I'd say CI looks good, the only two failing tests for 4.0 are known flakies.

Thanks for the feedback and the quick review.

Committed to {{cassandra-4.0}} as [636ab42bd5b2d2e55d37ce653daf23955f869a38|https://github.com/apache/cassandra/commit/636ab42bd5b2d2e55d37ce653daf23955f869a38] and merged to [{{trunk}}|https://github.com/apache/cassandra/commit/0516aa1be2b30dfe25c213c5ccfed44c9220cccc].

