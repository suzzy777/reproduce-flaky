Nice catch, [~mirg], thank you!!

This is also present on the current master branch: https://github.com/apache/zookeeper/blob/37eae03080b93d63a6ba9f624b37c764511ad2dc/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L771

Would you like to make a PR by changing this line?
If you don't have time just now, I'm happy to fix this quickly.

Great, please go ahead [~symat]! (I am not up to speed on testing and checkin procedures). But let me know if it takes much effort on your side too, I'll figure it out.

Sure, thanks [~mirg]! I'll sent the PR soon

Hmm... checking this code and I don't think that this bug would cause an increased number of connection attempts. It might lead to call the `connectOne` method more frequently, but in that method we are always checking if there is an open connection already for the give SID. (and there are more synchronization later in the connection initiations) But I am not 100% sure... also a lot changed since 3.5.5.

Also I think this part of the code should be reached, only if dynamic reconfig is used. Are you using dynamic reconfig? Even if the quorum membership changed (using static configuration file modification), this code should not be reached. At least on the master branch. (although there was a bug in the earlier 3.5 and 3.6 versions that might affect this)

Anyway, the bottom line is that this is clearly a bug, so we need to fix it. I'm just not sure that it would be responsible for the high number of connection attempts you see in your logs.

Update: actually if the other server is unreachable, then this "!=" can indeed cause that we try to connect to it twice, before giving up. I tried to explain this in the PR. (bit if the servers are online during the leader election, then this shouldn't matter)

I submitted the PR: https://github.com/apache/zookeeper/pull/1615

Yep, this is what we are seeing. We forcibly shut down the current leader, and one of the remaining instances occasionally runs into two back-to-back timeouts (2 x 1.5s) trying to connect to the downed leader:
{quote}2020-12-13T22:46:30.997+0000 [.WorkerReceiver[myid=6]] Notification: 2 (message format version), 1 (n.leader), 0x700003804 (n.zxid), 0x4 (n.round), LOOKING (n.state), 1 (n.sid), 0x7 (n.peerEPoch), FOLLOWING (my state)7000000ad (n.config version)
 2020-12-13T22:46:32.503+0000 [.WorkerSender[myid=6]] Cannot open channel to 4 at election address /10.80.140.226:3888java.net.SocketTimeoutException: connect timed out\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:648)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:705)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:618)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:478)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:457)\n\tat java.lang.Thread.run(Thread.java:745)
 2020-12-13T22:46:34.006+0000 [.WorkerSender[myid=6]] Cannot open channel to 4 at election address /10.80.140.226:3888java.net.SocketTimeoutException: connect timed out\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:648)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:712)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:618)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:478)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:457)\n\tat java.lang.Thread.run(Thread.java:745)
{quote}
Sometimes, this pair of connects repeats, perhaps when the remaining live instances disagree on the election round. This is when the election doesn't seem to converge.

And yes, we are using dynamic reconfig (but not at the time of the crash, I believe).

Thank you for making the change!

Thanks for the clarification [~mirg]!
In this case this fix will likely improve the situation. Cool! :)

Issue resolved by pull request 1615
[https://github.com/apache/zookeeper/pull/1615]

