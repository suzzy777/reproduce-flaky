So the situation isn't so bad as I'd feared. HBASE-26523 includes an import ban on {{javax.ws.rs.**}}, which would catch the situation i raised on the parent ticket regarding use of {{ClientBuilder}}.

The only occurrences of "javax.ws.rs" outside of maven dependency {{exclusion}} bocks are in a comment from HBASE-24284 that introduces an explicit dependency on {{org.glassfish.jaxb:jaxb-runtime:2.3.2}} in hbase-rest for the JDK11/Hadoop3 profile, and in {{supplemental-models.xml}} files.

I think we are clear of shaded jersey and the JSRs it implements ([JSR-311|https://jcp.org/aboutJava/communityprocess/final/jsr311/index.html], [JSR-339|https://jcp.org/aboutJava/communityprocess/final/jsr339/index.html], and [JSR-370|https://jcp.org/aboutJava/communityprocess/final/jsr370/index.html]). Because of the banned import, we _should_ even be safe to remove all of those extra {{excludes}} from our various hadoop dependencies and suffer no ill effect.

The Glassfish JAXB runtime jar provides an implementation of [JSR-222|https://jcp.org/aboutJava/communityprocess/final/jsr222/index.html], aka, Java Bean <-> XML/Json serialization (I think). If this is related to jersey, it's through a transitive dependency that jersey has on an JSR-222 implementation. At the time of [~stack]'s comments on HBASE-24284 and HBASE-24215, we were using unshaded jersey in hbase-rest. Since then, we have migrated to the shaded version of jersey, as well as a shaded version of jackson. Indeed, [~GeorryHuang] and [~zhangduo] noticed that we were missing a shading of a jaxb implementation during a jersey version upgrade and added {{jersey-media-jaxb}} via HBASE-26506. In short, we may still have a transitive runtime dependency on an unshaded JSR-222 implementation, but I think there's enough evidence to the contrary that if it exists, it will be minor. This should be tested.

Results for branch branch-2
	[build #486 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/486/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/486/General_20Nightly_20Build_20Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/486/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/486/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/486/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(x) {color:red}-1 client integration test{color}
--Failed when running client tests on top of Hadoop 2. [see log for details|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/486//artifact/output-integration/hadoop-2.log]. (note that this means we didn't run on Hadoop 3)


Results for branch master
	[build #538 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/538/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/538/General_20Nightly_20Build_20Report/]






(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/538/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/538/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2.5
	[build #66 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/66/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/66/General_20Nightly_20Build_20Report/]




(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/66/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/66/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/66/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(x) {color:red}-1 client integration test{color}
--Failed when running client tests on top of Hadoop 2. [see log for details|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/66//artifact/output-integration/hadoop-2.log]. (note that this means we didn't run on Hadoop 3)


This breaks some tests. Maybe we still need to add it when running UTs.

See https://ci-hbase.apache.org/job/HBase-Flaky-Tests/job/master/3146/testReport/junit/org.apache.hadoop.hbase.mapreduce/TestHBaseMRTestingUtility/testMRYarnConfigsPopulation/

{noformat}
java.lang.NoClassDefFoundError: javax/ws/rs/WebApplicationException
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:756)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:74)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:369)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:363)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:362)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfigurationWithEphemeralPorts(MiniYARNCluster.java:332)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:300)
	at org.apache.hadoop.mapreduce.v2.MiniMRYarnCluster.serviceInit(MiniMRYarnCluster.java:206)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.MiniMRClientClusterFactory.create(MiniMRClientClusterFactory.java:79)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:188)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:176)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:168)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:129)
	at org.apache.hadoop.hbase.HBaseTestingUtil.startMiniMapReduceCluster(HBaseTestingUtil.java:2334)
	at org.apache.hadoop.hbase.HBaseTestingUtil.startMiniMapReduceCluster(HBaseTestingUtil.java:2267)
	at org.apache.hadoop.hbase.mapreduce.TestHBaseMRTestingUtility.testMRYarnConfigsPopulation(TestHBaseMRTestingUtility.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.apache.hadoop.hbase.SystemExitRule$1.evaluate(SystemExitRule.java:38)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: javax.ws.rs.WebApplicationException
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	... 47 more
{noformat}

I've reverted the commit from branch-2.5+, to make tests pass first. We can discuss later on how to better fix this.

Results for branch branch-2
	[build #491 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/491/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/491/General_20Nightly_20Build_20Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/491/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/491/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/491/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(x) {color:red}-1 client integration test{color}
--Failed when running client tests on top of Hadoop 2. [see log for details|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2/491//artifact/output-integration/hadoop-2.log]. (note that this means we didn't run on Hadoop 3)


BTW I've deleted several builds of flaky tests and master nightly avoid adding bunch of UTs to flaky list...

Results for branch master
	[build #542 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/542/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/542/General_20Nightly_20Build_20Report/]






(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/542/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/master/542/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2.5
	[build #69 on builds.a.o|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/69/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/69/General_20Nightly_20Build_20Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/69/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/69/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/69/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(x) {color:red}-1 client integration test{color}
--Failed when running client tests on top of Hadoop 2. [see log for details|https://ci-hbase.apache.org/job/HBase%20Nightly/job/branch-2.5/69//artifact/output-integration/hadoop-2.log]. (note that this means we didn't run on Hadoop 3)


bq. I've reverted the commit from branch-2.5+, to make tests pass first. We can discuss later on how to better fix this.

Thanks for keeping an eye on this. I'll look into it, and also into why the PR tests didn't cover these failures.

Going to roll 2.5.0RC0 soon. Looks like this was reverted from branch-2.5. Fix version updated.

Correct, it was reverted everywhere. I've removed all fixVersion values for now.

Hello [~ndimiduk] , do we have any plans to fix this issue? I was looking at a similar issue and tried a simple fix where I modified the bin/hbase script to filter out the javax.ws.rs-api* jars while adding the jar files to the CLASSPATH. This seems to be working for me, although, not sure if this is the right approach.

Thanks.

