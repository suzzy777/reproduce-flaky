The first observation. This particular test call ShardReadersPool, which handles the Kinesis shard readers, and, in its order, it spawns two threads (through ExecutorService) for two shards (one thread per shard). Then it checks that one shard was closed. So, here, seems, we have a race condition between shard thread  and main thread and  200 ms of Thread.sleep() is not enough sometimes to wait until all spawn threads will be finished.

Since _sleep()_ never won't be enough, I think that before calling _assert()_ we need to make sure that all spawn threads have finished their job. Perhaps, one of the way to do this is to call _shardReadersPool.stop()_ before _assert()_ because it shutdowns all spawn threads.

Any thoughts?

Hi, sorry for late reply.

Is this the only test case that is flaky? I'm asking because other cases in ShardReadersPoolTest also rely on sleeping some amount of time.

I think calling _shardReadersPool.stop()_ should work in this case. Not sure about other test cases yet, I would have to take a second look at them. Would you like to fix it? I not, I can do it tomorrow.

Hi [~pawel.kaczmarczyk],

Thank you for joining this thread.

There are several opened jiras related to these flaky tests: 

_ShardReadersPoolTest_:

https://issues.apache.org/jira/browse/BEAM-3598

https://issues.apache.org/jira/browse/BEAM-3599

https://issues.apache.org/jira/browse/BEAM-3605 (this one)

_KinesisReaderTest_

https://issues.apache.org/jira/browse/BEAM-3317 

But potentially, there can be more since some other tests also rely on _Thread.sleep()_. So, perhaps, it's just a question of probability how rare they would fail.

Do you think that we can avoid using _sleep()_ in these tests because, seems, it's not always reliable way for testing multithreading code? 
 I'm ok if you already have a fix for other tests and can fix them.

 

I think I found a way how to fix some of these flaky tests using _CountDownLatch._ I'm going to submit PR tomorrow.

Ok, great [~aromanenko]

 

Just submitted a PR (4661) which fixes BEAM-3605 (this one) and BEAM-3598. Also, I fixed some other tests of ShardReadersPoolTest that used _Thread.sleep()_ to use _CountDownLatch_ approach instead.

Finally, it was fixed by using _Mockito.timeout_

