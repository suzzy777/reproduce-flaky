Before we see code, can you describe what it will functionally replace it?  

IMO this state is permanent -- something that should be in meta or a system table.  (This is what you mean by breaking the zk contract right?)

Yes, we will replace this with putting this in META, depending on the actual design of the parent issue. 

[~enis] FYI, we used to do enable/disable by setting a flag on each region.  You can imagine what used to happen when a big table (It was a bad idea).  Just FYI.

@Enis
If we do this, atleast we can ensure that any partial table state transititons like ENABLING/DISABLING can also be handled thro HBCK.


If we come up with a nice way to make this scalable, I am a big +1. The enable/disable seems fairly broken through the use of ZK. Rather than tagging disables to every region in META, I think we could just use the tableinfo.  This would also allow us to update table state while HBase is offline and could assist with troubleshooting.

Moving out issue not being worked on though would love to have it.

Shall this jira be part of HBASE-10909?

From my understanding 10909 deals with abstracting zk usage, while this would change the implementation to not use ZK at all. I would think this is part of the parent issue, mainly the metadata management in hbase. 

right, agreed

[~enis] it looks like this class actually encapsulates the zk-related things pretty good (except KeeperException leaking from all public methods). Do you think it may be a good idea to separate it to interface and impl, and then create alternative impl?

It would be ok to have a TableState interface with the implementation for zk. We should be doing it in a different issue (or subtask) since in this issue, we should probably have tables table with the table state kept there. If the interface is done right, the tables table based implementation can just provide the implementation and it will just work. 

[~enis] does that intersect with HBASE-11059? In sense - introduce a notion of generic system table (or extended meta tables) to keep this kind of metadata?

What do you think if I open a subtask in HBASE-10909 called like (rework ZKTable to TableState interface and ZkTableState impl) and link it to this one - does that sound a right approach to you? Or, do you think ZKTableState doesn't really make sense and should be just removed eventually?

I have opened the split ticket as a subtask of HBASE-10909

[~enis] since the splitting zk table apart to interface and impl is finished in related jira..this moving of ZK state out of ZK - is that something you're working on? just curious.

HBASE-8233 and HBASE-6469 will probably get fixed as part of that too.

[~enis] just in case this issue isn't being worked on, I could pick it up and write impl of TableStateManager based on system table (was that the proposal that seems correct?), so we regain zookeeper contract on that.

[~mantonov] I am not working on the tables table if that is what you are asking. You can pick it up if you want. 

[~enis], [~mantonov], I can take this jira. I have some experience with zk stuff and such, I suppose I'll be able to solve it.

[~octo47] yeah, please feel free to assign to yourself - I actually didn't have a chance to do measurable progress on that. Thanks!

Assigned to me. Thanks.

Currently, state management used for tracking all tables, including meta. 
In case of using system table I've faced with checken-egg problem. Need to 
store states somewhere for meta and states table itself.
I see two ways here:
1. Track states of system tables in zk. Thats doesn't solve initial task, we'll still have two implementations, but one for system tables, and other of the rest of tables.
2. Track system tables in memory (those that always assigned to master)

I prefer second path, but not sure whether it breaks something important or not. Not very familiar with new zkless assignment implementation.

Any thoughts?

Have done more research.
Seems that an idea with tableinfo looks better. TableStateManager implementation can hold information in memory and on failover to new master it simply reread from hdfs. Every state change will goes through TSM too. Transient states stored in memory too.
Why it is better then using table:
 - table is much more heavyweight structure than needed (why we need support for wal and split log for such small structure)
 - TableStateManager used even before meta table is up, so it is not obvious, where to store state of meta table and states table itself.
Currently client uses zk. With table implementation it will use regular scan requests, but it will be cumbersome to implement modification semantics (we need coprocessor to intercept updates to this table). 

Much better solution is to add status (enabled/disabled) to HTableDescriptor. Thats gives consistent way to create disabled tables. Or to disable enabled via alter table calls. Transient states (ENABLING/DISABLING) should be stored in memory and on reactivating new master it should figure out that table is not enabled/disabled completely (state of the table will be disabled, but not all regions unassigned).

Is it make sense?

[~enis], discussed it offline with Mikhail, seems like keeping tableState in HTableDescriptor makes more sense

Linked to HBASE-11759, as seems related.


Patch is quite big, but what was done.
1. Table state stored in .tableinfo. HTableDescriptor now has TABLE_STATE parameter.
2. Added TableState and inner enum State.
3. Added MasterRPC getTableState (which supersedes isTableEnabled/isTableDisabled, now getTableState returns enum)
4. TableStateManager removed from public api and become helper private class (similar to TableNamespaceManager)
5. TableStateManager caches reads and updates cache on writes. 
6. TableStateManager doesn’t use table locks for modifications, caller should ensure, that table locked. That is because TableLocks not reentrant. An option is to add boolean, but currently TableStateManager used in master only as helper class.
5. Table state also available through HTableDescriptor, but can’t be altered. enable/disable RPC call should be used.
6. Removed TableState from ZookeeperProtos.
7. Removed methods for table availability from Registry.
7. Removed TableStateManager from CoordinatedStateManager (now master is responsible for table state)

Rationale for additional method: currently getTableDecriptor method wants fully initialised HMaster, but table state requests are used before master fully initialised. Added method waits only HMaster ’started’ status. 

https://reviews.apache.org/r/24924/

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663365/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12663365

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 22 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 11 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +      "\030\003 \001(\003\022\021\n\tis_shared\030\004 \001(\010\022\017\n\007purpose\030\005 \001" +
+  public MasterProtos.GetTableStateResponse getTableState(RpcController controller, MasterProtos.GetTableStateRequest request) throws ServiceException {
+  public boolean setTableStateIfInStates(TableName tableName, TableState.State newState, TableState.State... states) throws IOException {
+  public boolean setTableStateIfNotInStates(TableName tableName, TableState.State newState, TableState.State... states) throws IOException {
+            && !regionStates.isRegionInState(region, org.apache.hadoop.hbase.master.RegionState.State.FAILED_CLOSE)) {

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10518//console

This message is automatically generated.

fixing javadocs

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663486/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12663486

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 28 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 7 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:red}-1 site{color}.  The patch appears to cause mvn site goal to fail.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.camel.test.junit4.CamelTestSupport.doStopCamelContext(CamelTestSupport.java:450)
	at org.apache.camel.test.junit4.CamelTestSupport.tearDown(CamelTestSupport.java:351)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10537//console

This message is automatically generated.

[~enis], [~ryanobjc], can you look at RB for some comments on this patch. 
thank you.

Made a first pass over what's there on review board, left some comments and questions. Looks good! More reviews needed surely.

Thank you [~mantonov] for reviewing. 

New patch (also submitted changes to RB)

Reverted back HTableDescriptor to its original state. There is not additional key/values for TABLE_STATE. Table state now aggregated with HTD in new structure - TableDescriptor (pojo and protobuf versions).


{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667762/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12667762

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 6 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +        compactStoreFiles(tableDir, htd.getHTableDescriptor(), hri, path.getName(), compactOnce, major);
+          if (scc.getTableState(table).inStates(TableState.State.DISABLED, TableState.State.DISABLING)) {
+       * @see org.apache.hadoop.hbase.TableDescriptors#getTableDescriptors(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path)
+      assertEquals("Meta should be not in transition", metaState.getState(), RegionState.State.OPEN);
+      assertEquals("Meta should be not in transition", metaState.getState(), RegionState.State.OPEN);

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverScannerOpenHook
                  org.apache.hadoop.hbase.coprocessor.TestBigDecimalColumnInterpreter
                  org.apache.hadoop.hbase.coprocessor.TestMasterObserver
                  org.apache.hadoop.hbase.coprocessor.TestDoubleColumnInterpreter
                  org.apache.hadoop.hbase.zookeeper.TestTableStateManager
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithRemove
                  org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver
                  org.apache.hadoop.hbase.TestClusterBootOrder
                  org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove
                  org.apache.hadoop.hbase.coprocessor.TestHTableWrapper
                  org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint
                  org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles
                  org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerObserver
                  org.apache.hadoop.hbase.coprocessor.TestClassLoading
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster
                  org.apache.hadoop.hbase.coprocessor.TestOpenTableInCoprocessor
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort
                  org.apache.hadoop.hbase.client.TestSnapshotMetadata
                  org.apache.hadoop.hbase.snapshot.TestExportSnapshot
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication
                  org.apache.hadoop.hbase.TestJMXListener
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting
                  org.apache.hadoop.hbase.coprocessor.TestBatchCoprocessorEndpoint
                  org.apache.hadoop.hbase.TestGlobalMemStoreSize
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas
                  org.apache.hadoop.hbase.master.handler.TestCreateTableHandler
                  org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithAbort
                  org.apache.hadoop.hbase.zookeeper.TestZooKeeperACL
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverBypass
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorStop
                  org.apache.hadoop.hbase.coprocessor.TestAggregateProtocol

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.client.TestAdmin.testCreateTableRPCTimeOut(TestAdmin.java:1241)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10813//console

This message is automatically generated.

fixing bug with not updated descriptor.
fixing review comments from [~stack]


This patch include the migration step?  Seemed like you were going to do that from rb comments [~octo47]?

not yet. within a day, I suppose.

Migration procedure was added.
Reverted ZookeeperProtos structure, but marked as Deprectated.
Test for migration added

[~octo47] Nice. Stick up on RB when you get a chance please.

I've updated RB.

One small change and we good to go IMO.  [~jxiang] or [~mbertozzi], you fellas want to look at this very nice change?  Ok to just skim.  Just want your blessing you like how its done.

Just skimmed it, looks good to me.

[~stack] addressed issues from RB regarding robust migration.

looks good to me

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668105/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12668105

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 7 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +  private static  ZooKeeperProtos.DeprecatedTableState.State getTableState(final ZooKeeperWatcher zkw,
+      ZooKeeperProtos.DeprecatedTableState t = builder.mergeFrom(data, magicLen, data.length - magicLen).build();

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas
                  org.apache.hadoop.hbase.security.access.TestAccessController
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsOpWithDifferentUsersNoACL
                  org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.TestZooKeeper
                  org.apache.hadoop.hbase.security.access.TestCellACLWithMultipleVersions
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10836//console

This message is automatically generated.

Retrying (unless you think those failures related [~octo47]?)

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668132/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12668132

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to cause Findbugs (version 2.0.3) to fail.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +  private static  ZooKeeperProtos.DeprecatedTableState.State getTableState(final ZooKeeperWatcher zkw,
+      ZooKeeperProtos.DeprecatedTableState t = builder.mergeFrom(data, magicLen, data.length - magicLen).build();

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestClassFinder

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.camel.test.blueprint.CamelBlueprintTestSupport.setUp(CamelBlueprintTestSupport.java:187)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10841//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10841//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10841//console

This message is automatically generated.

[~stack], thats mine. I'm fixing currently (last changes broke modifyTable logic). give me a 30 minutes.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668142/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12668142

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 3 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles
                  org.apache.hadoop.hbase.TestZooKeeper

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10844//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668145/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12668145

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 3 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
                  org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10845//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668261/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12668261

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 3 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.access.TestAccessController
                  org.apache.hadoop.hbase.coprocessor.TestMasterObserver
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.client.TestAdmin.testCreateTableRPCTimeOut(TestAdmin.java:1241)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10852//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668366/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12668366

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.access.TestAccessController2
                  org.apache.hadoop.hbase.master.TestMasterFailover
                  org.apache.hadoop.hbase.security.visibility.TestEnforcingScanLabelGenerator
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication
                  org.apache.hadoop.hbase.security.access.TestTablePermissions

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10860//console

This message is automatically generated.

Are they your failures [~octo47]?  TestPerTableCFReplication may be because of a commit just made.  I'll check that one.

those shouldn't be mine. I have fixed all broken from last run




-- 
Andrey.


Rebase after the test classifications went in and some other files moved around since.  Added missing apache license.  Let me see how this does against hadoopqa.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668545/7767v2.txt
  against trunk revision .
  ATTACHMENT ID: 12668545

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 45 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10872//console

This message is automatically generated.

Retry

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668584/0001-rebase.patch
  against trunk revision .
  ATTACHMENT ID: 12668584

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 62 new or modified tests.

    {color:red}-1 javac{color}.  The patch appears to cause mvn compile goal to fail.

    Compilation errors resume:
    [ERROR] COMPILATION ERROR : 
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[137,51] error: cannot find symbol
[ERROR]   symbol:   class Table
[ERROR]   symbol:   class Table
[ERROR]   symbol:   class Table
[ERROR]   symbol:   class Table
[ERROR]   symbol:   variable Table
[ERROR]   symbol:   variable Table
[ERROR]   symbol:   class Table
[ERROR]   symbol:   variable Table
[ERROR]   symbol:   variable Table
[ERROR]   symbol:   class Table
[ERROR]   symbol:   variable Table
[ERROR]   symbol:   class Table
[ERROR]   symbol:   variable Table
[ERROR]   symbol:   variable Table
[ERROR]   symbol:   class Table
[ERROR]   symbol:   variable Table
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbase-client: Compilation failure: Compilation failure:
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[137,51] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[138,27] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[148,24] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[60,19] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[61,39] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[76,59] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[92,19] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[93,39] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[94,34] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[110,21] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[111,34] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[129,21] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[130,34] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[131,34] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[156,21] error: cannot find symbol
[ERROR] symbol:   class Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[156,61] error: cannot find symbol
[ERROR] symbol:   variable Table
[ERROR] location: class ZooKeeperProtos
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java:[158,21] error: cannot find symbol
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :hbase-client
    

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10873//console

This message is automatically generated.

Another try at rebase

Trying to run tests on my jenkins, locally patch looks good, don't
understand why apache jenkins won't work.





-- 
Andrey.


on my jenkins only unrelated tests failed (in initialisation, to small timeout int waitTableAvailable).

resubmitting.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668753/HBASE-7767.patch
  against trunk revision .
  ATTACHMENT ID: 12668753

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 43 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.access.TestAccessController2
                  org.apache.hadoop.hbase.rest.TestScannersWithLabels
                  org.apache.hadoop.hbase.security.access.TestAccessController

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10889//console

This message is automatically generated.

[~stack] 
Thank you for rebasing! (I was in flight, so was unable to help you with that).

Locally test-patch.sh gets all greens, have no idea why 'find bugs' gives warnings. 
Tests seems unrelated too.

Pushed to master.  Thanks for the excellent patch [~octo47].

The findbugs are from elsewhere and the tests are flakies we should address elsewhere.

Since this auto-migrates, we should bring this back for 1.0 I'd say.  Let me make myself an issue against 0.99 to test it actually works before committing to 0.99.

Is replication state the only permanent data now left in zk?

Great, [~stack].
As I know, yes, only replication seems permanent.

FAILURE: Integrated in HBase-TRUNK #5507 (See [https://builds.apache.org/job/HBase-TRUNK/5507/])
HBASE-7767 Get rid of ZKTable, and table enable/disable state in ZK (Andrey Stepachev) (stack: rev 3cc5d19039904361f60c413f10f3cbca27a7ba96)
* hbase-server/src/test/java/org/apache/hadoop/hbase/TestHColumnDescriptorDefaultVersions.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionTool.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateClientSideReader.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkCoordinatedStateManager.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/TestTableDescriptor.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/Merge.java
* hbase-protocol/src/main/protobuf/Master.proto
* hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionAdapter.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/TableDescriptors.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableModifyFamilyHandler.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateManager.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterServices.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKTableStateManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableDeleteFamilyHandler.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/HConnection.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/migration/NamespaceUpgrade.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMaster.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableStateManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/ModifyTableHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManagerOnCluster.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/TableStateManager.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableAddFamilyHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotManifest.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableState.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/BaseCoordinatedStateManager.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterRestartAfterDisablingTable.java
* hbase-protocol/src/main/protobuf/HBase.proto
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestFSTableDescriptors.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTool.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/handler/TestTableDescriptorModification.java
* hbase-protocol/src/main/protobuf/ZooKeeper.proto
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStates.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TruncateTableHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableEventHandler.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/TableDescriptor.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/CoordinatedStateManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableNamespaceManager.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HMerge.java
* hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientNoCluster.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/SnapshotTestingUtils.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ZooKeeperRegistry.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/ZKDataMigrator.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/Registry.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java


Is this a problem with this commit?

{code}
90 2014-09-15 16:28:12,387 FATAL [ActiveMasterManager] master.HMaster: Failed to become active master
 91 java.io.IOException: content=20546
 92   at org.apache.hadoop.hbase.util.FSTableDescriptors.readTableDescriptor(FSTableDescriptors.java:599)
 93   at org.apache.hadoop.hbase.util.FSTableDescriptors.createTableDescriptorForTableDirectory(FSTableDescriptors.java:804)
 94   at org.apache.hadoop.hbase.util.FSTableDescriptors.createTableDescriptor(FSTableDescriptors.java:771)
 95   at org.apache.hadoop.hbase.util.FSTableDescriptors.createTableDescriptor(FSTableDescriptors.java:749)
 96   at org.apache.hadoop.hbase.master.MasterFileSystem.checkRootDir(MasterFileSystem.java:460)
 97   at org.apache.hadoop.hbase.master.MasterFileSystem.createInitialFileSystemLayout(MasterFileSystem.java:147)
 98   at org.apache.hadoop.hbase.master.MasterFileSystem.<init>(MasterFileSystem.java:127)
 99   at org.apache.hadoop.hbase.master.HMaster.finishActiveMasterInitialization(HMaster.java:488)
100   at org.apache.hadoop.hbase.master.HMaster.access$500(HMaster.java:155)
101   at org.apache.hadoop.hbase.master.HMaster$1.run(HMaster.java:1244)
102   at java.lang.Thread.run(Thread.java:744)
103 Caused by: org.apache.hadoop.hbase.exceptions.DeserializationException: com.google.protobuf.InvalidProtocolBufferException: While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either than the input has been truncated or that an embedded message misreported its own length.
104   at org.apache.hadoop.hbase.TableDescriptor.parseFrom(TableDescriptor.java:120)
105   at org.apache.hadoop.hbase.util.FSTableDescriptors.readTableDescriptor(FSTableDescriptors.java:597)
106   ... 10 more
107 Caused by: com.google.protobuf.InvalidProtocolBufferException: While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either than the input has been truncated or that an embedded message misreported its own length.
108   at com.google.protobuf.InvalidProtocolBufferException.truncatedMessage(InvalidProtocolBufferException.java:70)
109   at com.google.protobuf.CodedInputStream.refillBuffer(CodedInputStream.java:728)
110   at com.google.protobuf.CodedInputStream.readRawByte(CodedInputStream.java:769)
111   at com.google.protobuf.CodedInputStream.readRawLittleEndian64(CodedInputStream.java:488)
112   at com.google.protobuf.CodedInputStream.readFixed64(CodedInputStream.java:203)
113   at com.google.protobuf.UnknownFieldSet$Builder.mergeFieldFrom(UnknownFieldSet.java:481)
114   at com.google.protobuf.GeneratedMessage.parseUnknownField(GeneratedMessage.java:193)
115   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableName.<init>(HBaseProtos.java:215)
116   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableName.<init>(HBaseProtos.java:173)
117   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableName$1.parsePartialFrom(HBaseProtos.java:261)
118   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableName$1.parsePartialFrom(HBaseProtos.java:256)
119   at com.google.protobuf.CodedInputStream.readMessage(CodedInputStream.java:309)
120   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableSchema.<init>(HBaseProtos.java:852)
121   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableSchema.<init>(HBaseProtos.java:799)
122   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableSchema$1.parsePartialFrom(HBaseProtos.java:923)
123   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableSchema$1.parsePartialFrom(HBaseProtos.java:918)
124   at com.google.protobuf.CodedInputStream.readMessage(CodedInputStream.java:309)
125   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableDescriptor.<init>(HBaseProtos.java:3396)
126   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableDescriptor.<init>(HBaseProtos.java:3343)
127   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableDescriptor$1.parsePartialFrom(HBaseProtos.java:3445)
128   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableDescriptor$1.parsePartialFrom(HBaseProtos.java:3440)
129   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableDescriptor$Builder.mergeFrom(HBaseProtos.java:3800)
130   at org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$TableDescriptor$Builder.mergeFrom(HBaseProtos.java:3672)
131   at com.google.protobuf.AbstractMessage$Builder.mergeFrom(AbstractMessage.java:337)
132   at com.google.protobuf.AbstractMessage$Builder.mergeFrom(AbstractMessage.java:267)
133   at com.google.protobuf.AbstractMessageLite$Builder.mergeFrom(AbstractMessageLite.java:170)
{code}

I tried starting over old /hbase dir.

surprisingly, at some point changed pb message and didn't handle that properly. 
fixed there https://issues.apache.org/jira/browse/HBASE-11987

Ok. I tried to backport.  Its a bunch of work to do.  Putting aside.  It would be nice to have this especially if it self-migrates but will take a bit of effort.

A few notes:

+ To be clear, this fix is a big improvement on previous state of affairs.
+ On a table for state:
++ On chicken-and-egg problem, as I see it system tables cannot be disabled so this issue goes away
++ Agree that a table for table state is heavyweight (WAL, assignment issues).  A table for schema and state would be more useful but it'd be more important than meta even and would have to be assigned before all else... we'd need to move the .tableinfo out of fs and up in here., etc.

Over in HBASE-11974,[~octo47], you talk of proxy?  You saying RS should proxy M requests or are you saying RS could learn of table state from master and proxy this to the client throwing TableDisabledException instead of NSRE?  (This latter seems interesting... Master could pass table state and other cluster info the back of the heartbeat).

[~stack] 
bq. ++On chicken-and-egg problem, as I see it system tables cannot be disabled so this issue goes away
but from code point of view there will be may _if table == 'tables'_ ugly code.

bq. ++ Agree that a table for table state is heavyweight (WAL, assignment issues). A table for schema and state would be more useful but it'd be more important than meta even and would have to be assigned before all else... we'd need to move the .tableinfo out of fs and up in here., etc.
and table doesn't solve scaling well, it still will be one rs/master which will response for requests (replicas can be here, but they will not be consistent).

bq. Over in HBASE-11974,Andrey Stepachev, you talk of proxy? You saying RS should proxy M requests or are you saying RS could learn of table state from master and proxy this to the client throwing TableDisabledException instead of NSRE? (This latter seems interesting... Master could pass table state and other cluster info the back of the heartbeat).
that can be made lazy, region server can hold short-lived cache for table info (state, schema) and throttle client requests. 
And as I proposed in original ticket, RS should throw TDE, not NSRE.

bq. but from code point of view there will be may if table == 'tables' ugly code.

Yes.  This would be ugly.

bq. and table doesn't solve scaling well, it still will be one rs/master which will response for requests (replicas can be here, but they will not be consistent).

Could split it to divide up the work! (Now I am being silly)

bq. that can be made lazy, region server can hold short-lived cache for table info (state, schema) and throttle client requests. 

This is good.

What to do about client connecting to cluster for first time?  It goes to master to ask if enabled/disabled in HTable constructor IIRC.  We should just remove that?  Let it scan meta for table info and then on first acces, it will get the TDE (or some such?)




[~stack] Let's move here https://issues.apache.org/jira/browse/HBASE-12035, looks like this jira is a way too long :), to continue here.



Results for branch branch-1
	[build #29 on builds.a.o|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/29/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/29//General_Nightly_Build_Report/]


(x) {color:red}-1 jdk7 checks{color}
-- For more information [see jdk7 report|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/29//JDK7_Nightly_Build_Report/]


(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/29//JDK8_Nightly_Build_Report_(Hadoop2)/]




(x) {color:red}-1 source release artifact{color}
-- See build output for details.


Results for branch branch-1
	[build #141 on builds.a.o|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/141/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/141//General_Nightly_Build_Report/]


(/) {color:green}+1 jdk7 checks{color}
-- For more information [see jdk7 report|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/141//JDK7_Nightly_Build_Report/]


(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://ci-hadoop.apache.org/job/HBase/job/HBase%20Nightly/job/branch-1/141//JDK8_Nightly_Build_Report_(Hadoop2)/]




(/) {color:green}+1 source release artifact{color}
-- See build output for details.


