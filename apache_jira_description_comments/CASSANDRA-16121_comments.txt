CI results in PR.

I am wondering do we know why they were not included before? 

I will make a review pass later today. 

I don't know tbh. I just found a failure in ci-cass that I couldn't repro on circle and found out that it was just they weren't being ran :shrug:

bq. I am wondering do we know why they were not included before? 

[~djoshi] can you answer?

In CASSANDRA-10190 all cql related python tests were updated to run with both python 2&3 and jobs were added to circleci but I think the in-tree tests might have been missed. I will check better tomorrow on the laptop(locked myself out of my apartment and now trying to do some stuff from my phone to distract myself from the situation:D ). Meanwhile, did you test with different resources how much time it takes?

Also, I saw you set large resource_class for j8 and medium for j11 for the MIDRES? Was this a copy-paste issue or there is any reason I missed?

What is the difference in duration between medium and large resource class usage? 
 Also, I am curious, do the tests manage to run properly with medium resources? 

Actually, I just saw in CircleCI your test run, you are using medium resources to run both j8 and j11 and the test run duration is 5 minutes so I suggest not to spend credits on the large resources with MIDRES, WDYT?

Change large resources to medium for the MIDRES

[~e.dimitrova] if I managed to follow the steps correctly that {{large}} on {{MIDRES}} is down to what {{generate.sh}} produces.

New CI results in PR available. Everything is good with {{medium}} on j8 as expected.

Hi [~Bereng],

Thanks for the update, can you also update the patch files, please? I think at least the HIGHRES needs an update for the large resources?

Hi [~e.dimitrova] I updated both patch files. But notice the following which ties to your original comment about using too large resources:
- config21 uses {{j8_small_par_executor}} [here|https://github.com/bereng/cassandra/blob/CASSANDRA-16121/.circleci/config-2_1.yml#L399]
- {{j8_small_par_executor}} is patched to {{large}} and parallelism of {{10}} [here|https://github.com/bereng/cassandra/blob/trunk/.circleci/config-2_1.yml.mid_res.patch#L19]

So my original commit was correct when generating 'large & 10' (it is what the patch does) Shouldn't we instead change the patch to redefine {{j8_small_par_executor}} to 'medium & 1'?

I saw that  j8_small_par_executor is used by the in-jvm tests so we shouldn't change it as this will unfortunately reflect them. I checked, there is no annotation for 'medium&1' so we can just create one ('j8_small_executor' or something) to be used by the new job. That should be fine. 

I added that new executor and updated the files. I will now run small, medium and high to make sure the 3 still work and then we should be able to merge.

- Small:  [j11|https://app.circleci.com/pipelines/github/bereng/cassandra/121/workflows/7d278dce-3f13-46f0-bde2-79dcf61c6ad1] [j8|https://app.circleci.com/pipelines/github/bereng/cassandra/121/workflows/6bba245b-ac4d-426a-9041-c90571070d51]: OOM on the final test report which is a known problem, otherwise LGTM.
- Medium [j11|https://app.circleci.com/pipelines/github/bereng/cassandra/123/workflows/16aa4612-4a27-4bea-bebf-97efeef56353] [j8|https://app.circleci.com/pipelines/github/bereng/cassandra/123/workflows/c261dcdb-d878-4d66-afa6-5791d01dc45d] Failures look unrelated or known to fail. LGTM
- High [j11|https://app.circleci.com/pipelines/github/bereng/cassandra/125/workflows/69b234d0-dc70-4dd7-850a-23cb20ba4891] [j8|https://app.circleci.com/pipelines/github/bereng/cassandra/125/workflows/2e2143f0-6750-4579-b301-9c6747df1aa4] Same as prevoius. LGTM

[~e.dimitrova] squashed and you can see in the previous message low, mid and high CI runs. Feel free to butcher it :-)

Thanks [~Bereng], I left some small comments on github, maybe during squash something went wrong with the patch files. Please check them. Thanks

Replied in GH. LGTM it's just {{diff}} 'noise' making things hard to follow iiuc what you meant.

[~e.dimitrova] executors are now in the original config-2.1 file:

- Low: [j11|https://app.circleci.com/pipelines/github/bereng/cassandra/129/workflows/42ede6ff-d809-42f3-b143-3945003539a6] & [j8|https://app.circleci.com/pipelines/github/bereng/cassandra/129/workflows/10497110-d938-4500-8ef3-eb3d0e815b6e]
- Medium: [j11|https://app.circleci.com/pipelines/github/bereng/cassandra/130/workflows/ee08a837-0710-40c8-bb26-cad7b2e20891] & [j8|https://app.circleci.com/pipelines/github/bereng/cassandra/130/workflows/94de5698-26b5-467d-afe4-c8b284d52d50]
- High: [j11|https://app.circleci.com/pipelines/github/bereng/cassandra/131/workflows/5d7b1a6e-fd7b-47d9-932c-cabc8194a644] & [j8|https://app.circleci.com/pipelines/github/bereng/cassandra/131/workflows/893ae53b-0744-4568-ae41-993a9c1fdcd5]


Thank you for your work.

One last thing to add and I will +1. Artifacts are not stored.

Otherwise I apply the patch and the only thing I see is this line but the patch applies properly so it doesn't look as an issue?
{code:java}
missing header for unified diff at line 1 of patch{code}
Also, [~Bereng], you mentioned this line doesn't appear on your machine...

[~dcapwell], can you also check it, please?

[~e.dimitrova] iirc the only thing that survives the execution of the sh script is the xml junit results file. So there are no other artifacts to store available. You get the logs in stdout and the junit results but nothing else.

Also yes the patch applies cleanly for me.

Waiting for committer review.

I can start reviewing.

[~e.dimitrova] did you +1 or still pending?  I read your comment as pending?

[~Bereng] I see Jenkins runs these tests and is green, yet the test results linked are failing with different test names

Jenkins: https://ci-cassandra.apache.org/view/Cassandra%204.0/job/Cassandra-trunk-cqlsh-tests/lastCompletedBuild/cython=no,jdk=jdk_1.8_latest,label=cassandra/testReport/
Jenkins build def: https://github.com/apache/cassandra-builds/blob/6d556fe8873296c0a48f747bd9855e462193252d/jenkins-dsl/cassandra_job_dsl_seed.groovy#L344

Circle CI: https://app.circleci.com/pipelines/github/bereng/cassandra/129/workflows/10497110-d938-4500-8ef3-eb3d0e815b6e/jobs/1053/tests

Left comments in PR, but won't to know why this acts differently than Jenkins, if you could look into that it would be great (we don't archive the test xml so I can't view it).

Talking to [~e.dimitrova] in slack she showed me how to find all tests that ran and I was also looking at Jenkins wrong; here is the test results in Jenkins for the test that failed: https://ci-cassandra.apache.org/view/Cassandra%204.0/job/Cassandra-trunk-cqlsh-tests/lastCompletedBuild/cython=no,jdk=jdk_1.8_latest,label=cassandra/testReport/cqlshlib.python3.jdk8.no_cython.test.test_cqlsh_output/TestCqlshOutput/test_describe_cluster_output/history/
 

In Jenkins this test isn't flaky, so wondering why it failed here.

Correct, those are 2 diff sets of tests.

At the time of this PR `test_describe_cluster_output` was failing (CASSANDRA-16098) but wasn't getting reported in jenkins, this is what trigerred me raising this ticket. So this SHA fails this test and you can run it locally to doublecheck. It is not fixed/rebased in this PR bc I needed a failing test to see that circleci was reporting failures correctly :-)

Should we rebase and run a new circleci/jenkins and then we have confirmation it A. reports failures B. now passes green?

Edit: That was a silly question lol. Rebased as it was an old PR, pushed and new CI passing green in the PR. Now we know both it's green and does indeed report failures.

[~dcapwell] [~Bereng]
I saw one discussion in the PR which I believe It is quite important so I will leave a comment in the ticket for visibility.
Currently no tests  are started automatically in Java 11.
I would like to encourage people to always run at least the unit and in-jvm tests for Java 11. IMO that is the only stable way to move Java 11 out of being only experimental. 
Now, one can argue that sometimes in circle we test something quick before final submission and we want a quick j8 check only but I think most of the time people run the full CI in Circle/Jenkins for a patch in final/almost final state
While we still don't have Java 11 in Jenkins, we need to be sure at least in Circle we have always at least a minimal coverage, personal opinion. Feel free to disagree :-)  

CASSANDRA-15944 has been merged recently #justfyi

sorry for the delay, been overloaded.  I should be able to get to this Friday.

sorry for the delay, starting back today.

Overall +1 from me, only small comment about keeping the logs

+1 as soon as David's comment is addressed and the logs are added, thank you for spotting the absence and adding the tests

Hi [~dcapwell] [~e.dimitrova] thx for looking into this. Unfortunately logs are not reachable atm so that is food for another ticket imo. Details in the PR.

thanks for replying [~Bereng], LGTM, will commit today (unless [~e.dimitrova] has anything open).

CI Results: Yellow, seems these tests can be flaky.
||Branch||Source||Circle CI||Jenkins||
|trunk|[branch|https://github.com/dcapwell/cassandra/tree/commit_remote_branch/CASSANDRA-16121-trunk-13B96DF0-43D0-4161-977E-5D1FEFDE4DE8]|[build|https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16121-trunk-13B96DF0-43D0-4161-977E-5D1FEFDE4DE8]|[build|unknown]|


testing out commit but used a slight change; seems that the commit was reverting the python dtest change to use the trunk branch, so corrected that.

{code}
diff --git a/.circleci/config.yml.MIDRES b/.circleci/config.yml.MIDRES
index 691cc2886f..823a550e04 100644
--- a/.circleci/config.yml.MIDRES
+++ b/.circleci/config.yml.MIDRES
@@ -1459,7 +1459,7 @@ jobs:
     - CASS_DRIVER_NO_CYTHON: true
     - CASSANDRA_SKIP_SYNC: true
     - DTEST_REPO: git://github.com/apache/cassandra-dtest.git
-    - DTEST_BRANCH: master
+    - DTEST_BRANCH: trunk
     - CCM_MAX_HEAP_SIZE: 1024M
     - CCM_HEAP_NEWSIZE: 256M
     - JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
@@ -2002,7 +2002,7 @@ jobs:
     - CASS_DRIVER_NO_CYTHON: true
     - CASSANDRA_SKIP_SYNC: true
     - DTEST_REPO: git://github.com/apache/cassandra-dtest.git
-    - DTEST_BRANCH: master
+    - DTEST_BRANCH: trunk
     - CCM_MAX_HEAP_SIZE: 1024M
     - CCM_HEAP_NEWSIZE: 256M
     - JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
{code}

Saw test failures, but they pass the next time or on the other jdk pipeline.  Since this patch just runs them and didn't change them, I committed knowing that this will cause more flaky tests; can't fix if we don't know them.

Thanks for your work [~Bereng]!

[~dcapwell] thanks for looking into this one. Yes that's the point running these tests. If there are hidden flakies they will surface now. Also as this hadn't been rebased in a long time good catch changing 'master' to 'trunk' after the recent change in branch names.

One question: Why was the fixVersion removed?

