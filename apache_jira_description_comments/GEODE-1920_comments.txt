nabarunnag opened a new pull request #980: GEODE-1920 Addition of more logs to the test
URL: https://github.com/apache/geode/pull/980
 
 
   	* More logs were added at the failure points to figure out what caused a failure.
   	* Refactored by simplifying the code and removing deprecated function calls.
   	* Removed the flaky tag
   
   Thank you for submitting a contribution to Apache Geode.
   
   In order to streamline the review of the contribution we ask you
   to ensure the following steps have been taken:
   
   ### For all changes:
   - [ ] Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?
   
   - [ ] Has your PR been rebased against the latest commit within the target branch (typically `develop`)?
   
   - [ ] Is your initial contribution a single, squashed commit?
   
   - [ ] Does `gradlew build` run cleanly?
   
   - [ ] Have you written or updated unit tests to verify your changes?
   
   - [ ] If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under [ASF 2.0](http://www.apache.org/legal/resolved.html#category-a)?
   
   ### Note:
   Please ensure that once the PR is submitted, you check travis-ci for build issues and
   submit an update to your PR as soon as possible. If you need help, please send an
   email to dev@geode.apache.org.
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


nabarunnag commented on issue #980: GEODE-1920 Addition of more logs to the test
URL: https://github.com/apache/geode/pull/980#issuecomment-339545398
 
 
   PS: haven't seen the failure in last 116 iterations of CI

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


nabarunnag closed pull request #980: GEODE-1920 Addition of more logs to the test
URL: https://github.com/apache/geode/pull/980
 
 
   

This is a PR merged from a forked repository.
As GitHub hides the original diff on merge, it is displayed below for
the sake of provenance:

As this is a foreign pull request (from a fork), the diff is supplied
below (as it won't show otherwise due to GitHub magic):

diff --git a/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/misc/WanAutoDiscoveryDUnitTest.java b/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/misc/WanAutoDiscoveryDUnitTest.java
index 7c1308790a..9f4dee2f0f 100644
--- a/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/misc/WanAutoDiscoveryDUnitTest.java
+++ b/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/misc/WanAutoDiscoveryDUnitTest.java
@@ -14,16 +14,17 @@
  */
 package org.apache.geode.internal.cache.wan.misc;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
 
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.UnknownHostException;
-import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
+import java.util.stream.IntStream;
 
 import org.junit.Ignore;
 import org.junit.Test;
@@ -39,10 +40,7 @@
 import org.apache.geode.test.dunit.Host;
 import org.apache.geode.test.dunit.IgnoredException;
 import org.apache.geode.test.dunit.LogWriterUtils;
-import org.apache.geode.test.dunit.cache.internal.JUnit4CacheTestCase;
-import org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase;
 import org.apache.geode.test.junit.categories.DistributedTest;
-import org.apache.geode.test.junit.categories.FlakyTest;
 
 @Category(DistributedTest.class)
 public class WanAutoDiscoveryDUnitTest extends WANTestBase {
@@ -234,7 +232,6 @@ public void test_TK_Recognises_LN_AND_NY() {
     vm2.invoke(() -> WANTestBase.checkAllSiteMetaData(dsVsPort));
   }
 
-  @Category(FlakyTest.class) // GEODE-1920
   @Test
   public void test_NY_Recognises_TK_AND_HK_Simultaneously() {
     Map<Integer, Set<InetSocketAddress>> dsVsPort = new HashMap<>();
@@ -261,27 +258,14 @@ public void test_NY_Recognises_TK_AND_HK_Simultaneously() {
     dsVsPort.put(4, locatorPortshk);
     async[1] = vm3.invokeAsync(() -> WANTestBase.createFirstRemoteLocator(4, nyLocPort1));
 
-    ArrayList<Integer> locatorPortsln2 = new ArrayList<Integer>();
     async[2] = vm4.invokeAsync(() -> WANTestBase.createSecondLocator(1, lnLocPort1));
 
-    ArrayList<Integer> locatorPortsny2 = new ArrayList<Integer>();
     async[3] = vm5.invokeAsync(() -> WANTestBase.createSecondLocator(2, nyLocPort1));
 
+    waitForAsyncInvokesToComplete(async);
 
-    try {
-      async[0].join();
-      async[1].join();
-      async[2].join();
-      async[3].join();
-    } catch (InterruptedException e) {
-      e.printStackTrace();
-      fail();
-    }
-
-    locatorPortstk.add(new InetSocketAddress("localhost", (Integer) async[0].getReturnValue()));
-    locatorPortshk.add(new InetSocketAddress("localhost", (Integer) async[1].getReturnValue()));
-    locatorPortsln.add(new InetSocketAddress("localhost", (Integer) async[2].getReturnValue()));
-    locatorPortsny.add(new InetSocketAddress("localhost", (Integer) async[3].getReturnValue()));
+    addPortNumbersToDSPortNumCollection(locatorPortsln, locatorPortsny, async, locatorPortstk,
+        locatorPortshk);
 
     vm0.invoke(() -> WANTestBase.checkAllSiteMetaData(dsVsPort));
     vm1.invoke(() -> WANTestBase.checkAllSiteMetaData(dsVsPort));
@@ -289,6 +273,52 @@ public void test_NY_Recognises_TK_AND_HK_Simultaneously() {
     vm3.invoke(() -> WANTestBase.checkAllSiteMetaData(dsVsPort));
   }
 
+  private void addPortNumbersToDSPortNumCollection(Set<InetSocketAddress> locatorPortsln,
+      Set<InetSocketAddress> locatorPortsny, AsyncInvocation[] async,
+      Set<InetSocketAddress> locatorPortstk, Set<InetSocketAddress> locatorPortshk) {
+    IntStream.range(0, 4).forEach(i -> {
+      Integer portNumber = null;
+      try {
+        portNumber = (Integer) async[i].get();
+        switch (i) {
+          case 0:
+            locatorPortstk.add(new InetSocketAddress("localhost", portNumber));
+            break;
+          case 1:
+            locatorPortshk.add(new InetSocketAddress("localhost", portNumber));
+            break;
+          case 2:
+            locatorPortsln.add(new InetSocketAddress("localhost", portNumber));
+            break;
+          case 3:
+            locatorPortsny.add(new InetSocketAddress("localhost", portNumber));
+            break;
+        }
+      } catch (Exception e) {
+        e.printStackTrace();
+        if (portNumber == null) {
+          fail("No port number was returned for async invocation #" + i);
+        }
+        fail();
+      }
+    });
+  }
+
+  private void waitForAsyncInvokesToComplete(AsyncInvocation[] async) {
+    IntStream.range(0, 4).forEach(i -> {
+      try {
+        async[i].join();
+      } catch (InterruptedException e) {
+        e.printStackTrace();
+        if (async[i].getException() != null) {
+          fail(
+              "Failed in async invocation : " + i + " with Exception : " + async[i].getException());
+        }
+        fail();
+      }
+    });
+  }
+
 
   @Test
   public void test_LN_Sender_recognises_ALL_NY_Locators() {


 

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 7f0d5f529c1dc44fecb970a099eb307dd1824235 in geode's branch refs/heads/develop from [~nnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=7f0d5f5 ]

GEODE-1920 Addition of more logs to the test

	* More logs were added at the failure points to figure out what caused a failure.
	* Refactored by simplifying the code and removing deprecated function calls.
	* Removed the flaky tag


Commit a8848a9d20406394b1a2f427ddc2ea22066bc1b4 in geode's branch refs/heads/revert-980-feature/GEODE-1920 from [~nabarunnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=a8848a9 ]

Revert "GEODE-1920 Addition of more logs to the test"

This reverts commit 7f0d5f529c1dc44fecb970a099eb307dd1824235.


nabarunnag opened a new pull request #1069: Revert "GEODE-1920 Addition of more logs to the test"
URL: https://github.com/apache/geode/pull/1069
 
 
   Reverts apache/geode#980

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


nabarunnag closed pull request #1069: Revert "GEODE-1920 Addition of more logs to the test"
URL: https://github.com/apache/geode/pull/1069
 
 
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 478665f17ef56e3d1bd2a0da1fe4d041476170a7 in geode's branch refs/heads/develop from [~nabarunnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=478665f ]

Revert "GEODE-1920 Addition of more logs to the test"

This reverts commit 7f0d5f529c1dc44fecb970a099eb307dd1824235.


Commit 7f0d5f529c1dc44fecb970a099eb307dd1824235 in geode's branch refs/heads/feature/GEODE-3940 from [~nnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=7f0d5f5 ]

GEODE-1920 Addition of more logs to the test

	* More logs were added at the failure points to figure out what caused a failure.
	* Refactored by simplifying the code and removing deprecated function calls.
	* Removed the flaky tag


Commit 478665f17ef56e3d1bd2a0da1fe4d041476170a7 in geode's branch refs/heads/feature/GEODE-3940 from [~nabarunnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=478665f ]

Revert "GEODE-1920 Addition of more logs to the test"

This reverts commit 7f0d5f529c1dc44fecb970a099eb307dd1824235.


Commit 7f0d5f529c1dc44fecb970a099eb307dd1824235 in geode's branch refs/heads/feature/GEODE-3781 from [~nnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=7f0d5f5 ]

GEODE-1920 Addition of more logs to the test

	* More logs were added at the failure points to figure out what caused a failure.
	* Refactored by simplifying the code and removing deprecated function calls.
	* Removed the flaky tag


Commit 478665f17ef56e3d1bd2a0da1fe4d041476170a7 in geode's branch refs/heads/feature/GEODE-3781 from [~nabarunnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=478665f ]

Revert "GEODE-1920 Addition of more logs to the test"

This reverts commit 7f0d5f529c1dc44fecb970a099eb307dd1824235.


I think I just saw this reproduce on a pull request build that did not touch any wan code.

[https://concourse.apachegeode-ci.info/builds/22888]

 

org.apache.geode.internal.cache.wan.misc.WanAutoDiscoveryDUnitTest > test_NY_Recognises_TK_AND_HK_Simultaneously FAILED
 java.lang.NullPointerException
 at org.apache.geode.internal.cache.wan.misc.WanAutoDiscoveryDUnitTest.test_NY_Recognises_TK_AND_HK_Simultaneously(WanAutoDiscoveryDUnitTest.java:280)

