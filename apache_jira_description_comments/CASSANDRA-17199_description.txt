Currently, we warn about the presence of one or more failed sessions existing in the final state and then an operator/user traces back through the logs to find any failed streams for troubleshooting.
{code:java}
private synchronized void maybeComplete()
{
    if (finishedAllSessions())
    {
        StreamState finalState = getCurrentState();
        if (finalState.hasFailedSession())
        {
            logger.warn("[Stream #{}] Stream failed", planId);
            tryFailure(new StreamException(finalState, "Stream failed"));
        }
        else
        {
            logger.info("[Stream #{}] All sessions completed", planId);
            trySuccess(finalState);
        }
    }
} {code}
It would be helpful to log out a summary of the SessionInfo for each failed session since that should be accessible via the StreamState.

 

This can be especially helpful for longer streaming operations like bootstrap where the failure could have been a long time back and all recent streams leading up to the warning actually are successful.

 