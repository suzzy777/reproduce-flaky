java.lang.NullPointerException: null
        at org.apache.hadoop.hbase.rest.TestTableResource.checkTableInfo(TestTableResource.java:184)
        at org.apache.hadoop.hbase.rest.TestTableResource.testTableInfoPB(TestTableResource.java:271)

We also have HBASE-18918 for (what I assume to be) an equivalent issue on branch-1.3

A bisect says this is the first bad commit

commit b2943504b867e7b26e7c6433f026a602ef42a0ab
Author: Pankaj Kumar <pankaj.kr@huawei.com>
Date:   Thu Sep 28 20:41:28 2017 +0800

    HBASE-18890, Backport HBASE-14499 (Master coprocessors shutdown will not happen on master abort) to branch-1
    
    Signed-off-by: [~tedyu]

Must be a timing problem with the test. 

HBASE-18890 is not yet pushed to branch-1.3 but we observed this failure (HBASE-18918) there also, so I think HBASE-18890 is not the cause.
I was trying to narrow down this failure trigger, found that this failure is happening since HBASE-18796 commit. 

let me check HBASE-18796 impact on this test case.

After HBASE-18796, RegionServer create daughter region entries with empty/null server name (earlier it was same server). So by the time region server open the daughter regions and update the location, test case wait is getting over since it found the  HRegionLocation size as 2.

{noformat}
     // tell the master to split the table
    admin.split(TABLE);
    // give some time for the split to happen

    long timeout = System.currentTimeMillis() + (15 * 1000);
    while (System.currentTimeMillis() < timeout && m.size()!=2){
      try {
        Thread.sleep(250);
      } catch (InterruptedException e) {
        LOG.warn(StringUtils.stringifyException(e));
      }
      // check again
      m = regionLocator.getAllRegionLocations();
    }

    // should have two regions now
    assertEquals(m.size(), 2);
{noformat}


Log observed while reproducing issue,
{noformat}
2017-10-03 23:42:23,167 INFO  [main] rest.TestTableResource(143): regions: [region=TestTableResource,,1507045342105.8e80f79bc5e1ca9c9b9397142adfd144., hostname=null, seqNum=-1, region=TestTableResource,ncu,1507045342105.afd377bd152fd021f304ed474a98298d., hostname=null, seqNum=-1]
{noformat}

So during checkTableInfo() it met NPE.

Thanks. Bisect is not always reliable when dealing with flaky tests. I try to do one at the beginning of looking at a test failure anyway. Thanks for looking into this issue [~pankaj_kumar]. Would you like to provide a patch? The way the setup code in BeforeClass is waiting is not good for a couple of reasons and should be redone. Happy to assign it to you if you would like to take it. Please advise.

It would be my pleasure to work on this. :)

Simple patch, please review.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 23s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m  7s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} branch-1 passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 23s{color} | {color:green} branch-1 passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 26s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m 10s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 46s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 17s{color} | {color:green} branch-1 passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 19s{color} | {color:green} branch-1 passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 16s{color} | {color:green} the patch passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} the patch passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  2m 26s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:red}-1{color} | {color:red} hadoopcheck {color} | {color:red} 17m 26s{color} | {color:red} The patch causes 178 errors with Hadoop v3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 16s{color} | {color:green} the patch passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 19s{color} | {color:green} the patch passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 25s{color} | {color:green} hbase-rest in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  9s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 39m 22s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f1cc2c |
| JIRA Issue | HBASE-18923 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12890332/HBASE-18923-branch-1.patch |
| Optional Tests |  asflicense  shadedjars  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux cdf889761224 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1 / fc783ef |
| Default Java | 1.7.0_151 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_144 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_151 |
| findbugs | v3.0.0 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8936/testReport/ |
| modules | C: hbase-rest U: hbase-rest |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8936/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Could we switch to using a Future to handle timing out the retry?

Hadoop 3 alpha4 failure from log:

https://builds.apache.org/job/PreCommit-HBASE-Build/8936/artifact/patchprocess/patch-javac-3.0.0-alpha4.txt

Example of the failures:
{code}
[ERROR] warning: /home/jenkins/.m2/repository/org/apache/hadoop/hadoop-common/3.0.0-alpha4/hadoop-common-3.0.0-alpha4.jar(org/apache/hadoop/fs/CommonConfigurationKeysPublic.class): major version 52 is newer than 51, the highest major version supported by this compiler.
[ERROR] It is recommended that the compiler be upgraded.
[ERROR] warning: /home/jenkins/.m2/repository/org/apache/hadoop/hadoop-common/3.0.0-alpha4/hadoop-common-3.0.0-alpha4.jar(org/apache/hadoop/io/Text.class): major version 52 is newer than 51, the highest major version supported by this compiler.
[ERROR] It is recommended that the compiler be upgraded.
[ERROR] warning: /home/jenkins/.m2/repository/org/apache/hadoop/hadoop-common/3.0.0-alpha4/hadoop-common-3.0.0-alpha4.jar(org/apache/hadoop/io/BinaryComparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
[ERROR] It is recommended that the compiler be upgraded.
[ERROR] /testptch/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java:[351,16] error: cannot find symbol
[ERROR] symbol:   class Job
[ERROR] location: class SecureHadoopUser
[ERROR] /testptch/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java:[375,24] error: cannot find symbol
[ERROR] symbol:   class JobConf
[ERROR] location: class SecureHadoopUser
[ERROR] warning: /home/jenkins/.m2/repository/org/apache/hadoop/hadoop-common/3.0.0-alpha4/hadoop-common-3.0.0-alpha4.jar(org/apache/hadoop/conf/Configured.class): major version 52 is newer than 51, the highest major version supported by this compiler.
[ERROR] It is recommended that the compiler be upgraded.
[ERROR] warning: /home/jenkins/.m2/repository/org/apache/hadoop/hadoop-common/3.0.0-alpha4/hadoop-common-3.0.0-alpha4.jar(org/apache/hadoop/fs/LocalFileSystem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
[ERROR] It is recommended that the compiler be upgraded.
[ERROR] warning: /home/jenkins/.m2/repository/org/apache/hadoop/hadoop-common/3.0.0-alpha4/hadoop-common-3.0.0-alpha4.jar(org/apache/hadoop/fs/ChecksumFileSystem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
[ERROR] It is recommended that the compiler be upgraded.
[ERROR] warning: /home/jenkins/.m2/repository/org/apache/hadoop/hadoop-common/3.0.0-alpha4/hadoop-common-3.0.0-alpha4.jar(org/apache/hadoop/fs/FilterFileSystem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
[ERROR] It is recommended that the compiler be upgraded.
{code}

I think we can ignore these failures, since Hadoop 3 isn't supposed to be checked on branch-1 AFAIK. filed HBASE-18934.

bq. Could we switch to using a Future to handle timing out the retry?

[~pankaj_kumar]?

Or Predicate#waitFor. And use EnvironmentEdgeManager#currentTime, not System directly. 

Attached modified V2 patch, used Predicate#waitFor().

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 58s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 15s{color} | {color:green} branch-1 passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} branch-1 passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m  0s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 43s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 15s{color} | {color:green} branch-1 passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 19s{color} | {color:green} branch-1 passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 15s{color} | {color:green} the patch passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} the patch passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  2m 27s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:red}-1{color} | {color:red} hadoopcheck {color} | {color:red} 17m 49s{color} | {color:red} The patch causes 178 errors with Hadoop v3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 16s{color} | {color:green} the patch passed with JDK v1.8.0_144 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 19s{color} | {color:green} the patch passed with JDK v1.7.0_151 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 21s{color} | {color:green} hbase-rest in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  8s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 39m  4s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f1cc2c |
| JIRA Issue | HBASE-18923 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12890482/HBASE-18923-branch-1-V2.patch |
| Optional Tests |  asflicense  shadedjars  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 7382a6f25549 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1 / fc783ef |
| Default Java | 1.7.0_151 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_144 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_151 |
| findbugs | v3.0.0 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8948/testReport/ |
| modules | C: hbase-rest U: hbase-rest |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8948/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Above failures have the same cause as HBASE-18934,

https://builds.apache.org/job/PreCommit-HBASE-Build/8948/artifact/patchprocess/patch-javac-3.0.0-alpha4.txt



+1
Let me do a couple of checks, then commit

Pushed to branch-1.4 and branch-1. Thanks a lot for the patch [~pankaj_kumar]!

SUCCESS: Integrated in Jenkins build HBase-1.4 #945 (See [https://builds.apache.org/job/HBase-1.4/945/])
HBASE-18923 TestTableResource flaky on branch-1 (apurtell: rev ab8b0a36624e294cc5d9690fde3fca796449b58c)
* (edit) hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java


FAILURE: Integrated in Jenkins build HBase-1.5 #90 (See [https://builds.apache.org/job/HBase-1.5/90/])
HBASE-18923 TestTableResource flaky on branch-1 (apurtell: rev c48155a4d117d2d8f8f3f483763e616968b5a1a1)
* (edit) hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java


Thanks everyone for reviewing this patch. [~apurtell], this fix is applicable for other branches as well where HBASE-18796 is pushed, shall I attach patch for them here?

Looks like only branch-1.3 of the branch-1.x has HBASE-18796 that didn't get this fix, so I picked this there. If you'd like to provide patches for master and branch-2 (are they affected?) then I'll commit them. 

FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #304 (See [https://builds.apache.org/job/HBase-1.3-JDK7/304/])
HBASE-18923 TestTableResource flaky on branch-1 (apurtell: rev 48d1a699034449ff21810c82dce2c6b685d5dc5c)
* (edit) hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java


SUCCESS: Integrated in Jenkins build HBase-1.3-IT #232 (See [https://builds.apache.org/job/HBase-1.3-IT/232/])
HBASE-18923 TestTableResource flaky on branch-1 (apurtell: rev 48d1a699034449ff21810c82dce2c6b685d5dc5c)
* (edit) hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java


SUCCESS: Integrated in Jenkins build HBase-1.3-JDK8 #317 (See [https://builds.apache.org/job/HBase-1.3-JDK8/317/])
HBASE-18923 TestTableResource flaky on branch-1 (apurtell: rev 48d1a699034449ff21810c82dce2c6b685d5dc5c)
* (edit) hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java


Master and branch-2 already have blocking logic,
{code}
    TestEndToEndSplitTransaction.blockUntilRegionSplit(TEST_UTIL.getConfiguration(), 60000,
      m.get(0).getRegionInfo().getRegionName(), true);
{code}

We should have reused this.

Ok, well, we are good then.

