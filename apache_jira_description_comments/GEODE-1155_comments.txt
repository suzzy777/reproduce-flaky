The test failed at the very beginning when trying to create the first cache on the first vm. This is likely to be a GC issue. The membership timeout is 5 seconds. When GC lasts too long, it will cause DistributedSystemDisconnectedException.

Flaky: time sensitive, waitForCriterion

Had tried to increase the member-timeout to 30 seconds in ProcessManager.buildJavaCommand in case GC kicks in. However, it doesn't seem like a good idea.



There is no evidence of a GC issue in the test artifacts that I looked at.  I see vm_0 spin up and join the distributed system.  Then I see it start to shut down in one of the pooled message processors:

{noformat}
[vm_0][info 2016/03/30 09:11:57.159 PDT <Pooled Message Processor 1> tid=0x15e] GemFireCache[id = 423828414; isClosing = true; isShutDownAll = false; created = Wed Mar 30 09:11:57 PDT 2016; server = false; copyOnRead = false; lockLease = 120; lockTimeout = 60]: Now closing.

[vm_0][info 2016/03/30 09:11:57.175 PDT <Pooled Message Processor 1> tid=0x15e] Shutting down DistributionManager cc2-ub(16662)<ec><v18>:1025. 

[vm_3][info 2016/03/30 09:11:57.183 PDT <Pooled High Priority Message Processor 3> tid=0x9d] received leave request from cc2-ub(16662)<ec><v18>:1025 for cc2-ub(16662)<ec><v18>:1025

[vm_3][info 2016/03/30 09:11:57.184 PDT <Pooled High Priority Message Processor 3> tid=0x9d] Member at cc2-ub(16662)<ec><v18>:1025 gracefully left the distributed cache: shutdown message received
{noformat}

This was a "graceful" shutdown, not a forced-disconnect caused by GC.  The question I have is what is it that caused the shutdown to start in the pooled executor?


It looks to me like this was being caused by a lingering DistributionMessageObserver.  This test class and a number of others install message observers that disconnect the DistributedSystem if they see a certain class of message or some other condition.  The logging from these observers looks exactly like what is seen in the logs that I posted in my last comment.

I think that this was fixed in Kirk's refactoring of tearDown, possibly aided by some work that Jason did in November to add a try/catch that ensures that cleanUpAllVMs is invoked.

Commit 041a82f20257f43331f1bf0dfdff4c0ef06ba5fb in geode's branch refs/heads/develop from [~bschuchardt]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=041a82f ]

GEODE-1155 CI failure: NetSearchMessagingDUnitTest.testNetSearchNormals

Removed Flaky category.  The pollution that affected this test has been
eliminated.


removed from the Flaky test category

Commit 041a82f20257f43331f1bf0dfdff4c0ef06ba5fb in geode's branch refs/heads/feature/GEODE-1930-2 from [~bschuchardt]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=041a82f ]

GEODE-1155 CI failure: NetSearchMessagingDUnitTest.testNetSearchNormals

Removed Flaky category.  The pollution that affected this test has been
eliminated.


