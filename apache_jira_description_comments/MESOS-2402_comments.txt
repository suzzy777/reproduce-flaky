Looks like os::execvpe is failing!

Unable to repro this locally.

Submitted a small patch to print the errno to aid further debugging.

{code}
commit 958dff7d7a52977129cb87c003277b6290dff9eb
Author: Vinod Kone <vinodkone@gmail.com>
Date:   Fri Mar 13 11:46:47 2015 -0700

    Print errno in process:childMain().

diff --git a/3rdparty/libprocess/src/subprocess.cpp b/3rdparty/libprocess/src/subprocess.cpp
index 859a4f7..ab8a343 100644
--- a/3rdparty/libprocess/src/subprocess.cpp
+++ b/3rdparty/libprocess/src/subprocess.cpp
@@ -162,7 +162,7 @@ static int childMain(
 
   os::execvpe(path.c_str(), argv, (*envp)());
 
-  ABORT("Failed to os::execvpe in childMain\n");
+  ABORT(string("Failed to os::execvpe in childMain: ") + strerror(errno));
 }

{code}

Latest test failure with the error message included: "No such file or directory"

{code}
[ RUN      ] MesosContainerizerDestroyTest.LauncherDestroyFailure
Using temporary directory '/tmp/MesosContainerizerDestroyTest_LauncherDestroyFailure_x2Wn1e'
I0318 18:04:28.057530 24784 containerizer.cpp:469] Starting container 'test_container' for executor 'executor' of framework ''
I0318 18:04:28.059607 24784 launcher.cpp:130] Forked child with pid '26427' for container 'test_container'
ABORT: (../../../3rdparty/libprocess/src/subprocess.cpp:165): Failed to os::execvpe in childMain: No such file or directory*** Aborted at 1426701868 (unix time) try "date -d @1426701868" if you are using GNU date ***
PC: @     0x2b7e5afa3cc9 (unknown)
*** SIGABRT (@0x95b0000673b) received by PID 26427 (TID 0x2b7e5e3f1700) from PID 26427; stack trace: ***
I0318 18:04:28.061270 24788 containerizer.cpp:950] Destroying container 'test_container'
    @     0x2b7e5ad5f340 (unknown)
    @     0x2b7e5afa3cc9 (unknown)
    @     0x2b7e5afa70d8 (unknown)
    @           0x8ec81f _Abort()
    @           0x8ec84d _Abort()
    @     0x2b7e589e6ff2 process::childMain()
    @     0x2b7e589ebec0 _ZNSt5_BindIFPFiRKSsPPcRKN7process10Subprocess2IOES8_S8_PN2os7ExecEnvERK6OptionISt8functionIFivEEEPiSJ_SJ_ESsS3_S6_S6_S6_SB_SG_SJ_SJ_SJ_EE6__callIiJEJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7ELm8ELm9EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE
    @     0x2b7e589eb522 _ZNSt5_BindIFPFiRKSsPPcRKN7process10Subprocess2IOES8_S8_PN2os7ExecEnvERK6OptionISt8functionIFivEEEPiSJ_SJ_ESsS3_S6_S6_S6_SB_SG_SJ_SJ_SJ_EEclIJEiEET0_DpOT_
    @     0x2b7e589eab44 std::_Function_handler<>::_M_invoke()
    @          0x10d4b5c std::function<>::operator()()
I0318 18:04:28.149530 24788 containerizer.cpp:1159] Executor for container 'test_container' has exited
I0318 18:04:28.151551 24782 process.cpp:2720] Handling HTTP event for process 'metrics' with path: '/metrics/snapshot'
../../src/tests/containerizer_tests.cpp:485: Failure
Value of: metrics.values["containerizer/mesos/container_destroy_errors"]
  Actual: 16-byte object <02-00 00-00 7E-2B 00-00 30-01 C1-03 00-00 00-00>
Expected: 1u
Which is: 1
[  FAILED  ] MesosContainerizerDestroyTest.LauncherDestroyFailure (99 ms)

{code}

It's trying to run a locally installed helper, i.e., **/usr/local/libexec/mesos/mesos-containerizer**. Here's the start of the strace for the forked child:

{noformat}
set_robust_list(0x7f16a9fe39e0, 0x18)   = 0
dup2(8, 0) = 0
dup2(9, 1) = 1
dup2(10, 2) = 2
close(8) = 0
close(9) = 0
close(10) = 0
setsid() = 54676
execve("/usr/local/libexec/mesos/mesos-containerizer", ["mesos-containerizer", "launch", "--command={\"shell\":true,\"value\":"..., "--commands={\"commands\":[]}", "--directory=/tmp/MesosContaineri"..., "--pipe_read=6", "--pipe_write=7"], [/* 35 vars */]) = -1 ENOENT (No such file or directory)
write(2, "ABORT: (../../../3rdparty/libpro"..., 62) = 62
write(2, "Failed to os::execvpe in childMa"..., 61) = 61
...
{noformat}

The launcher needs to have flags.launcher_dir correctly specified if Mesos is not installed in the default location. For tests, this is done in MesosTest::CreateSlaveFlags() so that should be used to generate a correct slave::Flags, not just the default constructor which will have launcher_dir set to the default of PKGLIBEXECDIR.

Given this, I expect this test should be failing for everyone and everywhere _unless they happen to have a locally installed Mesos and it therefore incorrectly uses that binary for the test_. It fails for me on my development box.


As [~idownes] mentioned the flags have to be setup properly for exec to function correctly. But that fix has nothing to do with the flakiness.

The real issue seem to be that there is a race between the 'containerizer->wait()' future being set to failed and the metric being updated. This is because the thread running the test might check for the metric value in between containerizer future being set but before the metric being updated (see 'MesosContainerizerProcess::__destroy()'). The fix is to settle the clock to ensure the metric is updated.

https://reviews.apache.org/r/32454/

commit f98f26fa50e31ab399d156f942f4fb92edcd926e
Author: Vinod Kone <vinodkone@gmail.com>
Date:   Tue Mar 24 14:45:44 2015 -0700

    Fixed flaky MesosContainerizerDestroyTest tests.
    
    Review: https://reviews.apache.org/r/32454


Failing again in [Jenkins|https://builds.apache.org/job/Mesos-Trunk-Ubuntu-Build-Out-Of-Src-Disable-Java-Disable-Python-Disable-Webui/2878/]. Passed fine on internal buildbot.

{code}
[ RUN      ] MesosContainerizerDestroyTest.LauncherDestroyFailure
Using temporary directory '/tmp/MesosContainerizerDestroyTest_LauncherDestroyFailure_y6bgn3'
I0411 10:31:30.128736  9880 containerizer.cpp:469] Starting container 'test_container' for executor 'executor' of framework ''
I0411 10:31:30.131191  9880 launcher.cpp:130] Forked child with pid '13510' for container 'test_container'
I0411 10:31:30.132719  9885 containerizer.cpp:950] Destroying container 'test_container'
I0411 10:31:30.236882  9885 containerizer.cpp:1159] Executor for container 'test_container' has exited
I0411 10:31:30.249621  9883 process.cpp:2701] Handling HTTP event for process 'metrics' with path: '/metrics/snapshot'
../../src/tests/containerizer_tests.cpp:492: Failure
Value of: metrics.values["containerizer/mesos/container_destroy_errors"]
  Actual: 16-byte object <02-00 00-00 00-00 00-00 A0-B8 B0-04 00-00 00-00>
Expected: 1u
Which is: 1
[  FAILED  ] MesosContainerizerDestroyTest.LauncherDestroyFailure (127 ms)
{code}

[~vinodkone] are you going to be able to look at this flaky test again? If you can't, we should unassign it so somebody else can be assigned to it.

Could not reproduce this bug in local machine. I try CentOS 6 and Ubuntu 14.04 .

[~adam-mesos] Do you have recent failed log about this? I could not find the error about this in https://builds.apache.org/job/Mesos/ .

I haven't seen it fail recently. The last failure was back in mid-April, after [~vinodkone]'s previous fix in March. Maybe it was fixed again by [~tnachen] or [~jieyu]'s changes in late April. Let's close as fixed/not-reproducible, and we can reopen it if it starts failing again. Thanks for attempting to reproduce, [~haosdent@gmail.com]

commit bd0863e8482f38f905aebffb7d710b58c9f44f20
Author: Jie Yu <yujie.jay@gmail.com>
Date:   Mon Apr 20 12:56:07 2015 -0700
    Changed the isolator recover interface to take a set of orphan
    containers detected by the launcher.
    Review: https://reviews.apache.org/r/33413

commit 24c78a156f68f09de2c7b6729e077547edf768db
Author: Jie Yu <yujie.jay@gmail.com>
Date:   Mon Apr 20 12:17:51 2015 -0700
    Made the launcher recover interface to return a set of orphan containers.
    Review: https://reviews.apache.org/r/33412

commit 1a69b55652e867fee80ffb224ee3096b9e6c5390
Author: Timothy Chen <tnachen@apache.org>
Date:   Wed Apr 15 15:18:35 2015 -0700
    Fixed recover tasks only by the intiated containerizer.    
    Review: https://reviews.apache.org/r/33257


i encounter this problem two days ago.

hi, [~billowqiu] which version you use? Could you provide more details? Thank you.

I use 0.22.1 which has no more infomation with "Failed to os::execvpe in childMain".
After seach to this page, then i change the "--launcher_dir" flags to slove this problem.

oh, this problem is fixed in 0.23

