The same bug has been also caught while running IgniteHadoopFileSystemShmemExternalDualSyncSelfTest#testMultithreadedDelete on TeamCity.

{{IgfsAbstractSelfTest#testCreateConsistencyMultithreaded}} cannot pass due to an assertion failure in {{IgniteTxManager.removeTxReturn}}. The resolution of [1] revealed the failure previously masked since the moment when the test was reenabled, see [2]. Possible values that break the assertion are {{Boolean.TRUE}} and {{null}}. Failures are flaky but frequent enough on master currently.

[1] https://issues.apache.org/jira/browse/IGNITE-8789
[2] https://issues.apache.org/jira/browse/IGNITE-3998

The issue can be reproduced by using cache manipulations only, see the test attached.

The reproducer attached also fails assertion in the source state where this assertion has just been added, see [1].

[1] https://issues.apache.org/jira/browse/IGNITE-1525

GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/4335

    IGNITE-8823 Quick fix.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-8823

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4335.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4335
    
----
commit 6a86d04802f476a75eb5819aef24a68c875610a7
Author: Andrey Kuznetsov <stkuzma@...>
Date:   2018-07-09T17:16:56Z

    IGNITE-8823 Quick fix.

----


Test failure occurs when data rebalancing is in progress. During this, transactions can contain more backup nodes in their primary-to-list-of-backups mappings than allowed by cache configuration. Thus {{GridNearTxFinishFuture.ackBackup()}} should handle the list of backup nodes more careful.

[~agura], could you please evaluate the change proposed?

GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/4667

    IGNITE-8823 Quick fix.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-8823-true

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4667.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4667
    
----
commit b907d2a8329d58acca77049de580c345a3dee27d
Author: Andrey Kuznetsov <stkuzma@...>
Date:   2018-09-03T11:21:23Z

    IGNITE-8823 Quick fix.

----


Github user andrey-kuznetsov closed the pull request at:

    https://github.com/apache/ignite/pull/4335


[~andrey-kuznetsov] [~agura] is this fix ready for review?

[~dpavlov], I just have rolled new master up. Also, TeamCity tests have been re-triggered, waiting for results.

[~andrey-kuznetsov]

 Fix looks incorrect.

I see that you just added 
 {{if (cacheCtx.config().getBackups() == 1)}}
 before failing code when cache at test have 0 backups.

Looks like we have to rollback fix from IGNITE-5510, but add "null is ok" to these asserts,

and then start fixing this test.

[~avinogradov], thanks for your comments. 

I've partially reverted the assertion in {{IgniteTxManager.removeTxReturn}} introduced by IGNITE-5510. Now the issue is reproducible with {{CacheRebalancingWithConcurrentProcessingTest.testMultithreadedNoOpProcessingWhileRebalanceInProgress}} and needs additional investigation.

The issue has moved to the next release. Please, let me know if we still should include it to the 2.10

