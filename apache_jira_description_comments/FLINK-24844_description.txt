The test {{CassandraConnectorITCase.testCassandraBatchPojoFormat}} fails on AZP with

{code}
2021-11-09T00:32:42.1369473Z Nov 09 00:32:42 [ERROR] Tests run: 17, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 152.962 s <<< FAILURE! - in org.apache.flink.streaming.connectors.cassandra.CassandraConnectorITCase
2021-11-09T00:32:42.1371638Z Nov 09 00:32:42 [ERROR] testCassandraBatchPojoFormat  Time elapsed: 20.378 s  <<< ERROR!
2021-11-09T00:32:42.1372881Z Nov 09 00:32:42 com.datastax.driver.core.exceptions.AlreadyExistsException: Table flink.batches already exists
2021-11-09T00:32:42.1373913Z Nov 09 00:32:42 	at com.datastax.driver.core.exceptions.AlreadyExistsException.copy(AlreadyExistsException.java:111)
2021-11-09T00:32:42.1374921Z Nov 09 00:32:42 	at com.datastax.driver.core.DriverThrowables.propagateCause(DriverThrowables.java:37)
2021-11-09T00:32:42.1379615Z Nov 09 00:32:42 	at com.datastax.driver.core.DefaultResultSetFuture.getUninterruptibly(DefaultResultSetFuture.java:245)
2021-11-09T00:32:42.1380668Z Nov 09 00:32:42 	at com.datastax.driver.core.AbstractSession.execute(AbstractSession.java:63)
2021-11-09T00:32:42.1381523Z Nov 09 00:32:42 	at com.datastax.driver.core.AbstractSession.execute(AbstractSession.java:39)
2021-11-09T00:32:42.1382552Z Nov 09 00:32:42 	at org.apache.flink.streaming.connectors.cassandra.CassandraConnectorITCase.testCassandraBatchPojoFormat(CassandraConnectorITCase.java:543)
2021-11-09T00:32:42.1383487Z Nov 09 00:32:42 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
2021-11-09T00:32:42.1384433Z Nov 09 00:32:42 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
2021-11-09T00:32:42.1385336Z Nov 09 00:32:42 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
2021-11-09T00:32:42.1386119Z Nov 09 00:32:42 	at java.lang.reflect.Method.invoke(Method.java:498)
2021-11-09T00:32:42.1387204Z Nov 09 00:32:42 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
2021-11-09T00:32:42.1388225Z Nov 09 00:32:42 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
2021-11-09T00:32:42.1389101Z Nov 09 00:32:42 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
2021-11-09T00:32:42.1400913Z Nov 09 00:32:42 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
2021-11-09T00:32:42.1401588Z Nov 09 00:32:42 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
2021-11-09T00:32:42.1402487Z Nov 09 00:32:42 	at org.apache.flink.testutils.junit.RetryRule$RetryOnExceptionStatement.evaluate(RetryRule.java:192)
2021-11-09T00:32:42.1403055Z Nov 09 00:32:42 	at org.apache.flink.util.TestNameProvider$1.evaluate(TestNameProvider.java:45)
2021-11-09T00:32:42.1403556Z Nov 09 00:32:42 	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)
2021-11-09T00:32:42.1404008Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
2021-11-09T00:32:42.1404650Z Nov 09 00:32:42 	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
2021-11-09T00:32:42.1405151Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
2021-11-09T00:32:42.1405632Z Nov 09 00:32:42 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
2021-11-09T00:32:42.1406166Z Nov 09 00:32:42 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
2021-11-09T00:32:42.1406670Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
2021-11-09T00:32:42.1407125Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
2021-11-09T00:32:42.1407599Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
2021-11-09T00:32:42.1408258Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
2021-11-09T00:32:42.1408715Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
2021-11-09T00:32:42.1409216Z Nov 09 00:32:42 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
2021-11-09T00:32:42.1409717Z Nov 09 00:32:42 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
2021-11-09T00:32:42.1410251Z Nov 09 00:32:42 	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
2021-11-09T00:32:42.1410721Z Nov 09 00:32:42 	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
2021-11-09T00:32:42.1411155Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
2021-11-09T00:32:42.1411616Z Nov 09 00:32:42 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
2021-11-09T00:32:42.1412050Z Nov 09 00:32:42 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
2021-11-09T00:32:42.1412460Z Nov 09 00:32:42 	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
2021-11-09T00:32:42.1412934Z Nov 09 00:32:42 	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)
2021-11-09T00:32:42.1413453Z Nov 09 00:32:42 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
2021-11-09T00:32:42.1413942Z Nov 09 00:32:42 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
2021-11-09T00:32:42.1414499Z Nov 09 00:32:42 	at java.util.Iterator.forEachRemaining(Iterator.java:116)
2021-11-09T00:32:42.1414969Z Nov 09 00:32:42 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
2021-11-09T00:32:42.1415493Z Nov 09 00:32:42 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
2021-11-09T00:32:42.1416000Z Nov 09 00:32:42 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
2021-11-09T00:32:42.1416505Z Nov 09 00:32:42 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
2021-11-09T00:32:42.1417195Z Nov 09 00:32:42 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
2021-11-09T00:32:42.1417711Z Nov 09 00:32:42 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
2021-11-09T00:32:42.1418326Z Nov 09 00:32:42 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
2021-11-09T00:32:42.1418863Z Nov 09 00:32:42 	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)
2021-11-09T00:32:42.1419385Z Nov 09 00:32:42 	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)
2021-11-09T00:32:42.1420050Z Nov 09 00:32:42 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
2021-11-09T00:32:42.1420609Z Nov 09 00:32:42 	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
2021-11-09T00:32:42.1421177Z Nov 09 00:32:42 	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
2021-11-09T00:32:42.1421751Z Nov 09 00:32:42 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
2021-11-09T00:32:42.1422285Z Nov 09 00:32:42 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
2021-11-09T00:32:42.1422863Z Nov 09 00:32:42 	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
2021-11-09T00:32:42.1423664Z Nov 09 00:32:42 	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)
2021-11-09T00:32:42.1424339Z Nov 09 00:32:42 	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
2021-11-09T00:32:42.1424887Z Nov 09 00:32:42 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
2021-11-09T00:32:42.1425401Z Nov 09 00:32:42 	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
2021-11-09T00:32:42.1425881Z Nov 09 00:32:42 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2021-11-09T00:32:42.1426507Z Nov 09 00:32:42 Caused by: com.datastax.driver.core.exceptions.AlreadyExistsException: Table flink.batches already exists
2021-11-09T00:32:42.1427168Z Nov 09 00:32:42 	at com.datastax.driver.core.exceptions.AlreadyExistsException.copy(AlreadyExistsException.java:130)
2021-11-09T00:32:42.1427696Z Nov 09 00:32:42 	at com.datastax.driver.core.Responses$Error.asException(Responses.java:140)
2021-11-09T00:32:42.1428428Z Nov 09 00:32:42 	at com.datastax.driver.core.DefaultResultSetFuture.onSet(DefaultResultSetFuture.java:179)
2021-11-09T00:32:42.1428992Z Nov 09 00:32:42 	at com.datastax.driver.core.RequestHandler.setFinalResult(RequestHandler.java:184)
2021-11-09T00:32:42.1429555Z Nov 09 00:32:42 	at com.datastax.driver.core.RequestHandler.access$2500(RequestHandler.java:43)
2021-11-09T00:32:42.1430125Z Nov 09 00:32:42 	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.setFinalResult(RequestHandler.java:798)
2021-11-09T00:32:42.1430726Z Nov 09 00:32:42 	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.onSet(RequestHandler.java:617)
2021-11-09T00:32:42.1431428Z Nov 09 00:32:42 	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1005)
2021-11-09T00:32:42.1431959Z Nov 09 00:32:42 	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:928)
2021-11-09T00:32:42.1432524Z Nov 09 00:32:42 	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
2021-11-09T00:32:42.1433112Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
2021-11-09T00:32:42.1433734Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
2021-11-09T00:32:42.1434408Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
2021-11-09T00:32:42.1435096Z Nov 09 00:32:42 	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
2021-11-09T00:32:42.1435670Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
2021-11-09T00:32:42.1436261Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
2021-11-09T00:32:42.1436850Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
2021-11-09T00:32:42.1437503Z Nov 09 00:32:42 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
2021-11-09T00:32:42.1438350Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
2021-11-09T00:32:42.1438990Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
2021-11-09T00:32:42.1439611Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
2021-11-09T00:32:42.1440318Z Nov 09 00:32:42 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321)
2021-11-09T00:32:42.1440868Z Nov 09 00:32:42 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:295)
2021-11-09T00:32:42.1441447Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
2021-11-09T00:32:42.1442041Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
2021-11-09T00:32:42.1442635Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
2021-11-09T00:32:42.1443208Z Nov 09 00:32:42 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
2021-11-09T00:32:42.1443897Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
2021-11-09T00:32:42.1444585Z Nov 09 00:32:42 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
2021-11-09T00:32:42.1445309Z Nov 09 00:32:42 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
2021-11-09T00:32:42.1445947Z Nov 09 00:32:42 	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:792)
2021-11-09T00:32:42.1446545Z Nov 09 00:32:42 	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:475)
2021-11-09T00:32:42.1447013Z Nov 09 00:32:42 	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
2021-11-09T00:32:42.1447551Z Nov 09 00:32:42 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
2021-11-09T00:32:42.1507256Z Nov 09 00:32:42 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
2021-11-09T00:32:42.1507979Z Nov 09 00:32:42 	at java.lang.Thread.run(Thread.java:748)
2021-11-09T00:32:42.1508678Z Nov 09 00:32:42 Caused by: com.datastax.driver.core.exceptions.AlreadyExistsException: Table flink.batches already exists
2021-11-09T00:32:42.1509231Z Nov 09 00:32:42 	at com.datastax.driver.core.Responses$Error$1.decode(Responses.java:85)
2021-11-09T00:32:42.1509707Z Nov 09 00:32:42 	at com.datastax.driver.core.Responses$Error$1.decode(Responses.java:37)
2021-11-09T00:32:42.1510242Z Nov 09 00:32:42 	at com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:266)
2021-11-09T00:32:42.1510732Z Nov 09 00:32:42 	at com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:246)
2021-11-09T00:32:42.1511279Z Nov 09 00:32:42 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
2021-11-09T00:32:42.1511961Z Nov 09 00:32:42 	... 18 more
{code}

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=26191&view=logs&j=c91190b6-40ae-57b2-5999-31b869b0a7c1&t=41463ccd-0694-5d4d-220d-8f771e7d098b&l=14255