Strong +1.
Actually Falcon is utilizing this.


{quote}every XSD version{quote}
I think this is more of a "nice to have".  The evolution of our schemas has generally been forward compatible - i.e. we've only added fields or reduced the restrictiveness of fields.  To upgrade, simply upping the schema version is all that's necessary 99% of the time.  And there's no reason anyone creating a new workflow/coord/bundle should start off with an older schema today.  So I think it's fine if we end up only supporting the latest schemas.  Of course, if it's super easy to add the older ones, we may as well.  And once this interface supports a schema version we shouldn't remove it in the future without first deprecating it.  Anyway, I just wouldn't want to gate this feature on it supporting all of the older schemas if that ends up being complicated or a lot of extra work.

+1.   Falcon has a Oozie builder and it is JAXB based and can be used as a starting point to get some ideas.

[~rkanter] updated specification accordingly.

This patch covers everything as implemented today. More to follow as we advance w/ subtasks.

This one is still a Work In Progress patch, please do not merge to {{master}} yet.

Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 5 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 53 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
.    {color:red}WARNING{color}: the current HEAD has 77 Javadoc warning(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:red}-1{color} There are [85] new bugs found below threshold in total that must be fixed.
. {color:red}-1{color} There are [85] new bugs found below threshold in [jobs-api] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): jobs-api/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At GraphVisualization.java:[line 96]: File(...) reads a file whose location might be specified by user input
. At SimpleEmailExample.java:[line 46]: Dead store to b in org.apache.oozie.jobs.api.examples.SimpleEmailExample.main(String[])
. At SimpleEmailExample.java:[line 52]: Dead store to c in org.apache.oozie.jobs.api.examples.SimpleEmailExample.main(String[])
. At SimpleMapReduceExample.java:[line 59]: Dead store to mrAction3 in org.apache.oozie.jobs.api.examples.SimpleMapReduceExample.main(String[])
. At ACTION.java:[lines 328-329]: org.apache.oozie.jobs.api.generated.action.distcp.ACTION.equals(Object) is unusual
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [tools].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2416
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/oozie-trunk-precommit-build/4046/

Examples implemented as integration tests. FS example added. {{TestWorkflow}} functionality reachable outside.

OOZIE-3005 implemented:
* workflow SLA working. TODO: application SLA
* updated to latest {{master}}
* updated to 1.0 XSDs as per latest {{master}}

Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 12 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 6 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 57 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
.    {color:red}WARNING{color}: the current HEAD has 77 Javadoc warning(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/246/

[~andras.piros] thanks for working on it, can you file a reviewboard request, and add a link here?

Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 12 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 6 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 64 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/251/

Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 12 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 6 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 70 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/253/

All workflow types are covered. TODO: 1) refactor test cases and some of the converter classes 2) add support for {{<global/>}} and {{<credentials/>}} tags.

Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 12 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 6 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 87 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/255/

Latest thingies:
* {{jobs-api}} uber-project consisting of {{jobs-api-jar}} (to be included as a dependency in other projects, e.g. {{client}}), and {{jobs-api-client}} (consumer of {{jobs-api-jar}}, consisting of examples and integration tests using {{minitest}})
* got CLI actions {{apijarcheck}}, {{apijarsubmit}}, and {{apijarrun}} working of {{job}} command
* documented the new CLI actions

Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 12 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 17 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 97 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/315/

Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 12 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 17 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 97 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:red}-1{color} patch does not compile
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1{color} There are no new bugs found in total.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/316/

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:red}-1{color} the patch contains 12 line(s) with tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 37 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 97 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 1 new RAT warning(s)
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
.    {color:red}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 11 new javac warning(s)
{color:red}-1{color} There are [120] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:red}-1{color} There are [114] new bugs found below threshold in [jobs/jobs-api] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): jobs/jobs-api/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At GraphVisualization.java:[line 102]: java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V reads a file whose location might be specified by user input
. At GraphVisualization.java:[line 108]: java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V reads a file whose location might be specified by user input
. At NodeBuilderBaseImpl.java:[line 247]: The use of java.lang.Math.random() is predictable
. At SimpleWorkflowFactory.java:[line 54]: Dead store to happyPath in org.apache.oozie.jobs.api.factory.SimpleWorkflowFactory.create()
. At SimpleWorkflowFactory.java:[line 60]: Dead store to sadPath in org.apache.oozie.jobs.api.factory.SimpleWorkflowFactory.create()
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:red}-1{color} There are [5] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. Dereferenced at ApiJarFactory.java:[line 86]: Possible null pointer dereference in org.apache.oozie.cli.ApiJarFactory.addWorkflowJarEntry(File, JarOutputStream) due to return value of called method
. java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: Known null at ApiJarFactory.java:[line 86]
. At ApiJarFactory.java:[line 67]: At ApiJarFactory.java:[line 67]
. At ApiJarLoader.java:[line 52]: org.apache.oozie.cli.ApiJarLoader.loadAndGenerate() may fail to close stream
. At OozieCLI.java:[line 1396]: Found reliance on default encoding in org.apache.oozie.cli.OozieCLI.checkApiJar(XOozieClient, CommandLine, boolean): String.getBytes()
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:red}-1{color} There are [1] new bugs found below threshold in [core] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): core/findbugs-new.html
. The most important FindBugs errors are:
. At V1JobsServlet.java:[line 163]: Found reliance on default encoding in org.apache.oozie.servlet.V1JobsServlet.checkAndWriteApplicationXMLToHDFS(String, Configuration): new java.io.OutputStreamWriter(OutputStream)
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2824
.    Tests failed: 5
.    Tests errors: 9

.    The patch failed the following testcases:

testSubmit(org.apache.oozie.servlet.TestV1JobsServlet)
testSubmitMapReduce2(org.apache.oozie.client.TestOozieCLI)
testSubmitMapReduce(org.apache.oozie.client.TestOozieCLI)
testSubmitPig(org.apache.oozie.client.TestOozieCLI)
testJobDryrun(org.apache.oozie.client.TestOozieCLI)

.    Tests failing with errors:
testSubmitMR(org.apache.oozie.client.TestWorkflowXClient)
testSubmitSqoop(org.apache.oozie.client.TestWorkflowXClient)
testSubmitPig(org.apache.oozie.client.TestWorkflowXClient)
testSubmitHive(org.apache.oozie.client.TestWorkflowXClient)
testValidateJar(org.apache.oozie.client.TestOozieCLI)
testRunJarWithoutAppPath(org.apache.oozie.client.TestOozieCLI)
testSubmitJarWithoutAppPath(org.apache.oozie.client.TestOozieCLI)
testSubmitJar(org.apache.oozie.client.TestOozieCLI)
testRunJar(org.apache.oozie.client.TestOozieCLI)

.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestHiveActionExecutor#testHiveAction
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/455/



I just left some more comments on ReviewBoard.  Though in the interest of time, I didn't look too carefully at some of the generating code like the {{DozerConverter}} classes and a lot of the unit tests.

One high-level thing I wanted to bring up is what are we calling this feature?  It looks like it's currently "Jobs API", but I have a few concerns about that name:
# It's pretty generic-sounding and non-specific.  
# "Jobs" is a pretty overloaded term already.  It refers to Oozie Jobs (i.e. Workflows, Coordinators, and Bundles), Hadoop/Pig/Sqoop/etc Jobs, the Launcher Job, etc.  I'd like to avoid "Jobs" if possible, or at least qualify it with something else like "Programatic Jobs API" or something.

I don't have a great alternative for a name, other than "Programatic Jobs API", which isn't super great either.  Any ideas?
 

how about "workflow as code"?

[~rkanter] [~dbist13] renamed to Fluent Job API.

[~rkanter] thanks for your review efforts so far! All your comments have been addressed over at ReviewBoard, except for the ones of API versioning / backwards compatibility - let's discuss that over there.

[~gezapeti] you could start experimenting, beginning w/ {{DG_FluentJobAPI.twiki}}, and {{examples/.../fluentjob/*.java}}. Thanks!

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 2 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 94 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 6 new RAT warning(s)
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 8 new javac warning(s)
{color:red}-1{color} There are [111] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:red}-1{color} There are [2] new bugs found below threshold in [examples] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): examples/findbugs-new.html
. The most important FindBugs errors are:
. At Shell.java:[line 35]: Dead store to happyPath in org.apache.oozie.example.fluentjob.Shell.create()
. At Shell.java:[line 41]: Dead store to sadPath in org.apache.oozie.example.fluentjob.Shell.create()
. {color:red}-1{color} There are [2] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. At OozieCLI.java:[line 1415]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: At OozieCLI.java:[line 1415]
. At ApiJarFactory.java:[line 70]: At ApiJarFactory.java:[line 71]
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:red}-1{color} There are [107] new bugs found below threshold in [fluent-job/fluent-job-api] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): fluent-job/fluent-job-api/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At ACTION.java:[lines 328-329]: org.apache.oozie.fluentjob.api.generated.action.distcp.ACTION.equals(Object) is unusual
. At CONFIGURATION.java:[lines 133-134]: org.apache.oozie.fluentjob.api.generated.action.distcp.CONFIGURATION.equals(Object) is unusual
. At CONFIGURATION.java:[lines 318-319]: org.apache.oozie.fluentjob.api.generated.action.distcp.CONFIGURATION$Property.equals(Object) is unusual
. At DELETE.java:[lines 110-111]: org.apache.oozie.fluentjob.api.generated.action.distcp.DELETE.equals(Object) is unusual
. At MKDIR.java:[lines 110-111]: org.apache.oozie.fluentjob.api.generated.action.distcp.MKDIR.equals(Object) is unusual
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2851
.    Tests failed: 5
.    Tests errors: 5

.    The patch failed the following testcases:

testSubmit(org.apache.oozie.servlet.TestV1JobsServlet)
testSubmitMapReduce2(org.apache.oozie.client.TestOozieCLI)
testSubmitMapReduce(org.apache.oozie.client.TestOozieCLI)
testSubmitPig(org.apache.oozie.client.TestOozieCLI)
testJobDryrun(org.apache.oozie.client.TestOozieCLI)

.    Tests failing with errors:
testSubmitMR(org.apache.oozie.client.TestWorkflowXClient)
testSubmitSqoop(org.apache.oozie.client.TestWorkflowXClient)
testSubmitPig(org.apache.oozie.client.TestWorkflowXClient)
testSubmitHive(org.apache.oozie.client.TestWorkflowXClient)
testForkedDistcpActions(org.apache.oozie.jobs.client.minitest.TestDistcpAction)

.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestHiveActionExecutor#testHiveAction
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/517/



Unit test fixtures.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 2 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 94 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 6 new RAT warning(s)
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 8 new javac warning(s)
{color:red}-1{color} There are [112] new bugs found below threshold in total that must be fixed.
. {color:red}-1{color} There are [2] new bugs found below threshold in [examples] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): examples/findbugs-new.html
. The most important FindBugs errors are:
. At Shell.java:[line 35]: Dead store to happyPath in org.apache.oozie.example.fluentjob.Shell.create()
. At Shell.java:[line 41]: Dead store to sadPath in org.apache.oozie.example.fluentjob.Shell.create()
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:red}-1{color} There are [1] new bugs found below threshold in [core] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): core/findbugs-new.html
. The most important FindBugs errors are:
. At V1JobsServlet.java:[line 170]: String.format(String, Object[]) needs printf-style format but called with MessageFormat
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:red}-1{color} There are [107] new bugs found below threshold in [fluent-job/fluent-job-api] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): fluent-job/fluent-job-api/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At ACTION.java:[lines 328-329]: org.apache.oozie.fluentjob.api.generated.action.distcp.ACTION.equals(Object) is unusual
. At CONFIGURATION.java:[lines 133-134]: org.apache.oozie.fluentjob.api.generated.action.distcp.CONFIGURATION.equals(Object) is unusual
. At CONFIGURATION.java:[lines 318-319]: org.apache.oozie.fluentjob.api.generated.action.distcp.CONFIGURATION$Property.equals(Object) is unusual
. At DELETE.java:[lines 110-111]: org.apache.oozie.fluentjob.api.generated.action.distcp.DELETE.equals(Object) is unusual
. At MKDIR.java:[lines 110-111]: org.apache.oozie.fluentjob.api.generated.action.distcp.MKDIR.equals(Object) is unusual
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:red}-1{color} There are [2] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. At OozieCLI.java:[line 1415]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: At OozieCLI.java:[line 1415]
. At ApiJarFactory.java:[line 70]: At ApiJarFactory.java:[line 71]
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2851
.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/531/



Addressing review comments, documentation extensions.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 2 line(s) longer than 132 characters
.    {color:green}+1{color} the patch adds/modifies 93 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:red}-1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:red}-1{color} the patch seems to introduce 24 new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 8 new javac warning(s)
{color:red}-1{color} There are [118] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:red}-1{color} There are [1] new bugs found below threshold in [core] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): core/findbugs-new.html
. The most important FindBugs errors are:
. At V1JobsServlet.java:[line 170]: String.format(String, Object[]) needs printf-style format but called with MessageFormat
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:red}-1{color} There are [113] new bugs found below threshold in [fluent-job/fluent-job-api] that must be fixed, listing only the first [5] ones.
. You can find the FindBugs diff here (look for the red and orange ones): fluent-job/fluent-job-api/findbugs-new.html
. The top [5] most important FindBugs errors are:
. At ACTION.java:[lines 413-414]: org.apache.oozie.fluentjob.api.generated.action.distcp.ACTION.equals(Object) is unusual
. At CHGRP.java:[lines 236-237]: org.apache.oozie.fluentjob.api.generated.action.distcp.CHGRP.equals(Object) is unusual
. At CHMOD.java:[lines 236-237]: org.apache.oozie.fluentjob.api.generated.action.distcp.CHMOD.equals(Object) is unusual
. At CONFIGURATION.java:[lines 133-134]: org.apache.oozie.fluentjob.api.generated.action.distcp.CONFIGURATION.equals(Object) is unusual
. At CONFIGURATION.java:[lines 318-319]: org.apache.oozie.fluentjob.api.generated.action.distcp.CONFIGURATION$Property.equals(Object) is unusual
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:red}-1{color} There are [2] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. At OozieCLI.java:[line 1425]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: At OozieCLI.java:[line 1425]
. At ApiJarFactory.java:[line 70]: At ApiJarFactory.java:[line 71]
. {color:red}-1{color} There are [2] new bugs found below threshold in [examples] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): examples/findbugs-new.html
. The most important FindBugs errors are:
. At Shell.java:[line 53]: Dead store to happyPath in org.apache.oozie.example.fluentjob.Shell.create()
. At Shell.java:[line 59]: Dead store to sadPath in org.apache.oozie.example.fluentjob.Shell.create()
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2857
.    Tests failed: 5
.    Tests errors: 1

.    The patch failed the following testcases:

testValidateJar(org.apache.oozie.client.TestOozieCLI)
testRunJarWithoutAppPath(org.apache.oozie.client.TestOozieCLI)
testSubmitJarWithoutAppPath(org.apache.oozie.client.TestOozieCLI)
testSubmitJar(org.apache.oozie.client.TestOozieCLI)
testRunJar(org.apache.oozie.client.TestOozieCLI)

.    Tests failing with errors:
whenWorkflowXmlWithAllActionTypesIsUnmarshalledAttributesArePreserved(org.apache.oozie.jobs.client.jaxb.TestJAXBWorkflow)

.    {color:orange}Tests failed at first run:{color}
TestCoordActionsKillXCommand#testActionKillCommandActionNumbers
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/577/



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 93 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:red}-1{color} There are [2] new bugs found below threshold in total that must be fixed.
. {color:orange}0{color} There are [1] new bugs found in [examples] that would be nice to have fixed.
. You can find the FindBugs diff here: examples/findbugs-new.html
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:red}-1{color} There are [2] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. At OozieCLI.java:[line 1420]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: At OozieCLI.java:[line 1420]
. At ApiJarFactory.java:[line 72]: At ApiJarFactory.java:[line 72]
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/581/



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 93 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:red}-1{color} There are [2] new bugs found below threshold in total that must be fixed.
. {color:orange}0{color} There are [1] new bugs found in [examples] that would be nice to have fixed.
. You can find the FindBugs diff here: examples/findbugs-new.html
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:red}-1{color} There are [2] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. At OozieCLI.java:[line 1420]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: At OozieCLI.java:[line 1420]
. At ApiJarFactory.java:[line 72]: At ApiJarFactory.java:[line 72]
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/582/



I was lurking around patch-13 and I found the workflow creation api quite handy.
I could not find a way to use the defined credentials in any of the actions though.

Thanks [~gezapeti] for trying out :) attached a new patch that covers {{Credentials}} as part of {{Workflow}} and {{Action}} builders. Retry parameters also added on {{Action}} builders.

Please see the example {{CredentialsRetrying.java}} for an elaborated example.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 96 testcase(s)
{color:red}-1 RAT{color}
.    {color:red}-1{color} the patch seems to introduce 3 new RAT warning(s)
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:red}-1{color} There are [3] new bugs found below threshold in total that must be fixed.
. {color:red}-1{color} There are [1] new bugs found below threshold in [examples] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): examples/findbugs-new.html
. The most important FindBugs errors are:
. At CredentialsRetrying.java:[line 68]: Dead store to hive2RetryingAction in org.apache.oozie.example.fluentjob.CredentialsRetrying.create()
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:red}-1{color} There are [2] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. At OozieCLI.java:[line 1420]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
. java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: At OozieCLI.java:[line 1420]
. At ApiJarFactory.java:[line 72]: At ApiJarFactory.java:[line 72]
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:red}-1 DISTRO{color}
.    {color:red}-1{color} distro tarball fails with the patch

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/618/



PreCommit-OOZIE-Build started


Addressing pre-commit build errors.


Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 96 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 8 new javac warning(s)
{color:red}-1{color} There are [1] new bugs found below threshold in total that must be fixed.
. {color:orange}0{color} There are [1] new bugs found in [examples] that would be nice to have fixed.
. You can find the FindBugs diff here: examples/findbugs-new.html
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:red}-1{color} There are [1] new bugs found below threshold in [client] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
. The most important FindBugs errors are:
. At ApiJarFactory.java:[line 74]: java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input
. At ApiJarFactory.java:[line 74]
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2900
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/619/



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 96 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:orange}0{color} There are [2] new bugs found in total that would be nice to have fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:orange}0{color} There are [2] new bugs found in [client] that would be nice to have fixed.
. You can find the FindBugs diff here: client/findbugs-new.html
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2900
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:green}*+1 Overall result, good!, no -1s*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/620/



Addressing CheckStyle issues.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 96 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:orange}0{color} There are [2] new bugs found in total that would be nice to have fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:orange}0{color} There are [2] new bugs found in [client] that would be nice to have fixed.
. You can find the FindBugs diff here: client/findbugs-new.html
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2902
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:green}*+1 Overall result, good!, no -1s*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/622/



I left some comments on ReviewBoard, but consider it as Round #1. I'll try to continue tomorrow.

+1 LGTM.  Looks like the remaining comments [~pbacsko] is working on are largely cleanup.  So I think we're essentially done once that's all taken care of.  Great work!

I think it would be helpful to have some easy way to generate the XML from a Fluent Workflow as part of developing/debugging it.  For instance, maybe some kind of {{main}} class that takes a {{WorkflowFactory}} and will output the XML to a file or stdout.  Something that can easily be run when writing a {{WorkflowFactory}} in and IDE without having to assemble a JAR.  That would be helpful for users more familiar with the XML or are trying out the Fluent API and want to get an idea of what it looks like before submitting it.  This could be a followup JIRA if you agree.

Thank you all for your review efforts [~rkanter] [~gezapeti] [~pbacsko]! Once [~pbacsko] is ready with all review rounds, going for the final patch(es).

I've completed Round #2.

I was thinking about adding some more comments, however, the patch is big and the quality is already good enough. Perhaps I'll still add some more comments which can be solved in a follow-up JIRA.

Just a couple of random thoughts. I'm listing them here, I'm a bit lazy to add these to the review :D

* Eliminate unnecessary {{instanceof}} checks
* Use the standard Java interfaces for return & variable types instead of {{ImmutableMap}}, {{ImmutableSet}}
* Do we need {{SecureRandom}} ?
* Order of methods: public, protected, private
* {{Workflow}} object could have a method like {{getAsXml()}} for convenience
* Eliminate unnecessary casts if possible. Eg. {{WORKFLOWAPP}} stores JAXB nodes in a {{List<Object>}} which doesn't look good at first sight. A lot of casts necessary in the test methods because of this.
* The method {{getParent()}} seems to belong to {{NodeBase}} as an abstract method
* Weird looking comment: {{/* package private */ void close(final Join join)}}
* {{getNodesInTopologicalOrder()}} looks a bit misleading. Not sure what it does exactly, but this doesn't seem to care about ordering. 

That's it for now. And one last thing - we should fix this before commit: {{WorkflowMarshaller.unmarshal()}} is more like {{marshal()}}, the exact opposite.

+1 on not using {{ImmutableMap}}, etc.  We should be careful to only expose standard Java objects and not any third-party library objects (especially Guava) to make future compatibility easier.  
+1 on the {{getAsXml()}} method.  That should cover what I was trying to get at in my previous comment about a way to get the XML without having to build a JAR.  This can be done as a followup though.


[~pbacsko] thanks for the review rounds!

Here is what I've addressed:
bq. Eliminate unnecessary instanceof checks
Found a few that are truly unnecessary, those are eliminated. Most places we need these.
bq. Use the standard Java interfaces for return & variable types instead of ImmutableMap, ImmutableSet
Fixed.
bq. Do we need SecureRandom ?
Fixed.
bq. Order of methods: public, protected, private
This is actually one I'd argue with. Due to clean code best is to keep {{private}} methods just under the {{public}} or {{protected}} one where these are first called, for better readability.
bq. Workflow object could have a method like getAsXml() for convenience
Good idea, fixed.
bq. Eliminate unnecessary casts if possible. Eg. WORKFLOWAPP stores JAXB nodes in a List<Object> which doesn't look good at first sight. A lot of casts necessary in the test methods because of this.
Sorry for that, cannot fix. {{WORKFLOWAPP}} and everything in {{generated}} packages are JAXB generated code, not much influence how it looks like.
bq. The method getParent() seems to belong to NodeBase as an abstract method
As {{ExplicitNode#getParent()}} returns a {{NodeBase}}, and {{JoiningNodeBase#getParents()}} return a {{List<NodeBase>>}}, we have different semantics for different {{NodeBase}} subclasses whether these are allowed to have only one or multiple parent {{NodeBase}} instances. In that sense, leaving as it is.
bq. Weird looking comment: /* package private */ void close(final Join join)
Fixed.
bq. getNodesInTopologicalOrder() looks a bit misleading. Not sure what it does exactly, but this doesn't seem to care about ordering.
Fixed.

[~pbacsko] [~gezapeti] last patch 020 addressing review comments, and introduces {{CredentialBuilder}}.

[~rkanter] your remaining comments have also been fixed by that patch.

Thanks all for your review efforts.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 97 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [2] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:red}-1{color} There are [2] new bugs found below threshold in [fluent-job/fluent-job-api] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): fluent-job/fluent-job-api/findbugs-new.html
. The most important FindBugs errors are:
. At NodeBuilderBaseImpl.java:[line 331]: The use of java.util.Random is predictable
. At WorkflowBuilder.java:[line 168]: The use of java.util.Random is predictable
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:orange}0{color} There are [2] new bugs found in [client] that would be nice to have fixed.
. You can find the FindBugs diff here: client/findbugs-new.html
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2896
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/626/



Addressing FindBugs warnings, removing star imports.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-2339

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 97 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc error(s)
.    {color:red}ERROR{color}: the current HEAD has 2 Javadoc error(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:orange}0{color} There are [2] new bugs found in total that would be nice to have fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:green}+1{color} There are no new bugs found in [tools].
. {color:orange}0{color} There are [2] new bugs found in [fluent-job/fluent-job-api] that would be nice to have fixed.
. You can find the FindBugs diff here: fluent-job/fluent-job-api/findbugs-new.html
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 2896
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:green}*+1 Overall result, good!, no -1s*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/629/



+1 LGTM

+1, thanks for the fixes!

Committed to {{master}}.

Well done [~andras.piros], many thanks!

Closing issue; Oozie 5.1.0 is released.

