I prepared a fix for the described bug.


[~nizhikov] [~YAMolochkov] 

The bug is about .NET services, right?
1. The fix is for Java service calls
2. I can't reproduce the bug on current master

{panel:title=Branch: [pull/8614/head] Base: [master] : Possible Blockers (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}ZooKeeper (Discovery) 3{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5811165]]
* ZookeeperDiscoverySpiTestSuite3: GridCacheReplicatedNodeRestartSelfTest.testRestartWithTxTenNodesTwoBackups - Test has low fail rate in base branch 0,0% and is not flaky
* ZookeeperDiscoverySpiTestSuite3: GridEventConsumeSelfTest.testApi - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
{panel:title=Branch: [pull/8614/head] Base: [master] : New Tests (6)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Binary Objects{color} [[tests 6|https://ci.ignite.apache.org/viewLog.html?buildId=5811087]]
* {color:#013220}IgniteBinaryObjectsTestSuite: BinaryMarshallerNonCompactSelfTest.testReadDetachedTypedArray - PASSED{color}
* {color:#013220}IgniteBinaryObjectsTestSuite: BinaryMarshallerSelfTest.testReadDetachedTypedArray - PASSED{color}
* {color:#013220}IgniteBinaryObjectsTestSuite: BinaryMarshallerSelfTest.testReadArrayOfBinaryCollections - PASSED{color}
* {color:#013220}IgniteBinaryObjectsTestSuite: BinaryMarshallerSelfTest.testReadArrayOfCollections - PASSED{color}
* {color:#013220}IgniteBinaryObjectsTestSuite: BinaryMarshallerNonCompactSelfTest.testReadArrayOfBinaryCollections - PASSED{color}
* {color:#013220}IgniteBinaryObjectsTestSuite: BinaryMarshallerNonCompactSelfTest.testReadArrayOfCollections - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5811183&amp;buildTypeId=IgniteTests24Java8_RunAll]

Failures unrelated.

Merged to master

[~ptupitsyn], [~ivandasch] Thanks for the review!

The merged patch fixes the following issue - .Net -> Java service not invoked for overload methods.

I will create a follow-up ticket to check .Net -> .Net invocation.

