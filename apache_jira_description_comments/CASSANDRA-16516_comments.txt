Perhaps less rare than I originally anticipated:

bq. java.lang.IllegalStateException: Gave up after finding only 400 example(s) matching the assumptions

I don't think it's a test failure/flakiness issue in the strict sense. Reading about [qt|https://github.com/quicktheories/QuickTheories#assumptions] it mentions qt's assumptions that pass less than 10% of the generated values will render that error.

Test used to fail quickly locally, now it passes 10K runs locally.

I think that we can also fix it in a different way: https://github.com/apache/cassandra/compare/trunk...blerer:CASSANDRA-16516-review?expand=1
The approach ensure that we do not generate invalid slides instead of rejecting them after the validation.
I ran it for 10,000 runs several time and did not hit the problem anymore.
[~Bereng] What do you think?  

LGTM. You are generating valid data in the first place by generating Slices instead of the individual variables that form one. +1 pending CI.

The patch generating the slices according to theÂ generated byte array looks good to me, that way we don't miss any of the generated examples.

Maybe the method {{ValueAccessor#slices}} could be {{private}} and return directly, without declaring and immediately return {{gen}}:
{code:java}
private static Gen<ByteArraySlice> slices(Gen<byte[]> arrayGen)
{
    return td -> {
{code}
I have also successfully run the test locally a few thousand times. [Here|https://jenkins-dse.build.dsinternal.org/view/Parameterized/job/parameterized-testall/706/] are 1000 runs of the method in our multiplexer, and [here|https://jenkins-dse.build.dsinternal.org/view/Parameterized/job/parameterized-testall/707/] are 100 runs of the full suite.

The [CI results|https://app.circleci.com/pipelines/github/blerer/cassandra?branch=CASSANDRA-16516-review] look good. The failing tests are not related to the change.

[~adelapena] Thanks for your review. I applied your suggestions before committing.

Merged into trunk at d0cfd0d9d93b77718e7403c3372e27b25e955e60

