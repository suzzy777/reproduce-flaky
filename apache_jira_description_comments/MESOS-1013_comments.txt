[~greggomann] can you please review this one and see whether fits with the other ones you're looking at?
It may well be this no longer applies (looks from quite some time ago and I don't remember seeing the {{JavaLog}} example framework).

Maybe [~vinodkone] has more info.

Thanks!

[~marco-mesos], this does indeed seem to be the same issue as MESOS-830 - glog attempting to lock a mutex that has been destroyed, or attempting to destroy a mutex that is currently locked. The mutex in question is declared at file scope in glog's logging.cc, so one would think it wouldn't be destroyed until execution is complete, but the destructor is in fact getting called prematurely. Perhaps there is a subtlety relating to the calling of these routines from Java code that is affecting the lifetime of this mutex.

When I remove my debug code, this test passes reliably on my OSX Yosemite machine, I'm guessing the slight delays caused by the debug code are leading to the race condition. Is anyone currently seeing this test fail on a fresh build from master?

For whatever reason, I can't really see this ExamplesTest run in my tests.
If [~jvanremoortere] can help shepherd and commit this, that'd be great.

Similar to MESOS-830, this test has been flaky because the {{ZooKeeperTestServer}} shutdown may not be complete before {{System.exit()}} is called, leading to native destructors being called on glog mutexes that are still in use. Unfortunately, there is no easy fix for this, and I've settled for a brief sleep before {{System.exit()}}. Review here: https://reviews.apache.org/r/37414/

Created a new ticket for the more general issue regarding the lack of synchronization between the JVM and native shutdown routines: MESOS-3264

commit 554bd8d96e3d006f528b149adadff96554dc644e
Author: Greg Mann <greg@mesosphere.io>
Date:   Sun Aug 16 19:13:26 2015 +0200

    Fixed flaky ExamplesTest.JavaLog.

    Review: https://reviews.apache.org/r/37414

