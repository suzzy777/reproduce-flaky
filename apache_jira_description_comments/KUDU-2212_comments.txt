Seem this is probably due to the process exiting with some thread running and concurrent logging (thus holding the mutex). I think it's probably best to just suppress this rather than try to "fix"

Saw this again in a precommit in kudu-tool-test:

{code}
W0321 21:50:51.821048 10757 client.cc:1350] Couldn't close scanner 0f3be50f70c14926a768f00ed8780383: Service unavailable: reactor is shutting down (error 108)
==================
WARNING: ThreadSanitizer: destroy of a locked mutex (pid=10745)
    #0 pthread_rwlock_destroy /home/jenkins-slave/workspace/kudu-master/2/thirdparty/src/llvm-4.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1214 (kudu+0x47919f)
    #1 glog_internal_namespace_::Mutex::~Mutex() /home/jenkins-slave/workspace/kudu-master/2/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 (libglog.so.0+0x158a8)
    #2 at_exit_wrapper(void*) /home/jenkins-slave/workspace/kudu-master/2/thirdparty/src/llvm-4.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:375 (kudu+0x472ae3)
{code}

Happened again in kudu-tool-test, during a run of {{kudu perf loadgen}}
{noformat}
==================
WARNING: ThreadSanitizer: destroy of a locked mutex (pid=4352)
    #0 pthread_rwlock_destroy /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1313 (kudu+0x4b0134)
    #1 glog_internal_namespace_::Mutex::~Mutex() /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 (libglog.so.0+0x16488)
    #2 cxa_at_exit_wrapper(void*) /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:386 (kudu+0x4804c3)

  and:
    #0 pthread_rwlock_destroy /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1313 (kudu+0x4b0134)
    #1 glog_internal_namespace_::Mutex::~Mutex() /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 (libglog.so.0+0x16488)
    #2 cxa_at_exit_wrapper(void*) /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:386 (kudu+0x4804c3)

  Location is global 'google::log_mutex' of size 64 at 0x7f47c0ba19b8 (libglog.so.0+0x00000022c9b8)

  Mutex M121 (0x7f47c0ba19b8) created at:
    #0 pthread_rwlock_init /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1304 (kudu+0x4b03a4)
    #1 glog_internal_namespace_::Mutex::Mutex() /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:247:19 (libglog.so.0+0xc6a3)
    #2 __cxx_global_var_init.130 /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/glog-0.3.5/src/logging.cc:372 (libglog.so.0+0xc6a3)
    #3 _GLOBAL__sub_I_logging.cc /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/glog-0.3.5/src/logging.cc (libglog.so.0+0xc6a3)
    #4 call_init /build/eglibc-SvCtMH/eglibc-2.19/elf/dl-init.c:78 (ld-linux-x86-64.so.2+0x102d9)

SUMMARY: ThreadSanitizer: destroy of a locked mutex /data/somelongdirectorytoavoidrpathissues/src/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 in glog_internal_namespace_::Mutex::~Mutex()
==================
{noformat}

I'm attaching the full log.

Another example of the TSAN warning message about destruction of a locked mutex when {{kudu}} CLI exits:

{noformat}
==================                                                              
WARNING: ThreadSanitizer: destroy of a locked mutex (pid=2813)                  
    #0 pthread_rwlock_destroy /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1313 (kudu+0x4bbaf4)
    #1 glog_internal_namespace_::Mutex::~Mutex() /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 (libglog.so.0+0x16468)
    #2 cxa_at_exit_wrapper(void*) /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:386 (kudu+0x48be83)
                                                                                
  and:                                                                          
    #0 pthread_rwlock_wrlock /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/co
mpiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1352 (kudu+0x4bb124)
    #1 glog_internal_namespace_::Mutex::Lock() /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3
.5/src/base/mutex.h:250:30 (libglog.so.0+0x1ab97)
    #2 glog_internal_namespace_::MutexLock::MutexLock(glog_internal_namespace_::Mutex*) /data/8/aser
bin/Projects/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:290 (libglog.so.0+0x1ab97)
    #3 google::InitVLOG3__(int**, int*, char const*, int) /data/8/aserbin/Projects/kudu/thirdparty/s
rc/glog-0.3.5/src/vlog_is_on.cc:199 (libglog.so.0+0x1ab97)
    #4 kudu::rpc::ReactorThread::ShutdownInternal() /data/8/aserbin/Projects/kudu/src/kudu/rpc/react
or.cc:242:3 (libkrpc.so+0xbf553)
    #5 kudu::rpc::ReactorThread::AsyncHandler(ev::async&, int) /data/8/aserbin/Projects/kudu/src/kud
u/rpc/reactor.cc:322:5 (libkrpc.so+0xc00c4)
    #6 void ev::base<ev_async, ev::async>::method_thunk<kudu::rpc::ReactorThread, &kudu::rpc::ReactorThread::AsyncHandler>(ev_loop*, ev_async*, int) /data/8/aserbin/Projects/kudu/thirdparty/installed/
tsan/include/ev++.h:479:7 (libkrpc.so+0xc8d93)    #7 ev_invoke_pending /home/aserbin/Projects/kudu/thirdparty/src/libev-4.20/ev.c:3155:11 (libev.s
o.4+0x9780)
    #8 kudu::rpc::ReactorThread::InvokePendingCb(ev_loop*) /data/8/aserbin/Projects/kudu/src/kudu/rp
c/reactor.cc:193:3 (libkrpc.so+0xbeea5)
    #9 ev_run /home/aserbin/Projects/kudu/thirdparty/src/libev-4.20/ev.c:3555:7 (libev.so.4+0xa88d)
    #10 ev::loop_ref::run(int) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/ev++.h:211:7 (libkrpc.so+0xc51d8)
    #11 kudu::rpc::ReactorThread::RunThread() /data/8/aserbin/Projects/kudu/src/kudu/rpc/reactor.cc:494:9 (libkrpc.so+0xbefea)
    #12 boost::_mfi::mf0<void, kudu::rpc::ReactorThread>::operator()(kudu::rpc::ReactorThread*) const /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/boost/bind/mem_fn_template.hpp:49:29 (libkrpc.so+0xc94f9)
    #13 void boost::_bi::list1<boost::_bi::value<kudu::rpc::ReactorThread*> >::operator()<boost::_mfi::mf0<void, kudu::rpc::ReactorThread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, kudu::rpc::ReactorThread>&, boost::_bi::list0&, int) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/boost/bind/bind.hpp:259:9 (libkrpc.so+0xc944a)
    #14 boost::_bi::bind_t<void, boost::_mfi::mf0<void, kudu::rpc::ReactorThread>, boost::_bi::list1<boost::_bi::value<kudu::rpc::ReactorThread*> > >::operator()() /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/boost/bind/bind.hpp:1222:16 (libkrpc.so+0xc93d3)
    #15 boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void, boost::_mfi::mf0<void, kudu::rpc::ReactorThread>, boost::_bi::list1<boost::_bi::value<kudu::rpc::ReactorThread*> > >, void>::invoke(boost::detail::function::function_buffer&) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/boost/function/function_template.hpp:159:11 (libkrpc.so+0xc91c9)
    #16 boost::function0<void>::operator()() const /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/boost/function/function_template.hpp:770:14 (libkrpc.so+0xb89d1)
    #17 kudu::Thread::SuperviseThread(void*) /data/8/aserbin/Projects/kudu/src/kudu/util/thread.cc:657:3 (libkudu_util.so+0x1ec634)
                                                                                
  Location is global 'google::vmodule_lock' of size 64 at 0x7f7fa82897e8 (libglog.so.0+0x00000023c7e8)
                                                                                
  Mutex M134 (0x7f7fa82897e8) created at:                                       
    #0 pthread_rwlock_init /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1304 (kudu+0x4bbd64)
    #1 glog_internal_namespace_::Mutex::Mutex() /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:247:19 (libglog.so.0+0xcc86)
    #2 __cxx_global_var_init.15 /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/vlog_is_on.cc:120 (libglog.so.0+0xcc86)
    #3 _GLOBAL__sub_I_vlog_is_on.cc /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/vlog_is_on.cc (libglog.so.0+0xcc86)
    #4 call_init /build/eglibc-SvCtMH/eglibc-2.19/elf/dl-init.c:78 (ld-linux-x86-64.so.2+0x102d9)
                                                                                
SUMMARY: ThreadSanitizer: destroy of a locked mutex /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 in glog_internal_namespace_::Mutex::~Mutex()
==================                                                              
ThreadSanitizer: reported 1 warnings 
{noformat}

One more:

{noformat}
==================                                                              
WARNING: ThreadSanitizer: destroy of a locked mutex (pid=28764)                 
    #0 pthread_rwlock_destroy /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1313 (kudu+0x4bbaf4)
    #1 glog_internal_namespace_::Mutex::~Mutex() /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 (libglog.so.0+0x16468)
    #2 cxa_at_exit_wrapper(void*) /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:386 (kudu+0x48be83)
                                                                                
  and:
    #0 __is_long /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/libcxx/include/string:1255:39 (libc++.so.1+0xd7b09)
    #1 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string() /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/libcxx/include/string:1940 (libc++.so.1+0xd7b09)
    #2 google::CommandLineFlagInfo::~CommandLineFlagInfo() /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/gflags/gflags.h:155:8 (libkudu_tools_util.so+0x6bacc)
    #3 std::__1::allocator<google::CommandLineFlagInfo>::destroy(google::CommandLineFlagInfo*) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v1/memory:1860:64 (libgflags.so.2.2+0x13247)
    #4 void std::__1::allocator_traits<std::__1::allocator<google::CommandLineFlagInfo> >::__destroy<google::CommandLineFlagInfo>(std::__1::integral_constant<bool, true>, std::__1::allocator<google::CommandLineFlagInfo>&, google::CommandLineFlagInfo*) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v1/memory:1727 (libgflags.so.2.2+0x13247)
    #5 void std::__1::allocator_traits<std::__1::allocator<google::CommandLineFlagInfo> >::destroy<google::CommandLineFlagInfo>(std::__1::allocator<google::CommandLineFlagInfo>&, google::CommandLineFl
agInfo*) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v1/memory:1595 (libgflags.so.2.2+0x13247)
    #6 std::__1::__split_buffer<google::CommandLineFlagInfo, std::__1::allocator<google::CommandLineFlagInfo>&>::__destruct_at_end(google::CommandLineFlagInfo*, std::__1::integral_constant<bool, false
>) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v1/__split_buffer:296 (libgfl
ags.so.2.2+0x13247)
    #7 std::__1::__split_buffer<google::CommandLineFlagInfo, std::__1::allocator<google::CommandLineFlagInfo>&>::__destruct_at_end(google::CommandLineFlagInfo*) /data/8/aserbin/Projects/kudu/thirdpart
y/installed/tsan/include/c++/v1/__split_buffer:141 (libgflags.so.2.2+0x13247)
    #8 std::__1::__split_buffer<google::CommandLineFlagInfo, std::__1::allocator<google::CommandLine
FlagInfo>&>::clear() /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v1/__split_buffer:88 (libgflags.so.2.2+0x13247)
    #9 std::__1::__split_buffer<google::CommandLineFlagInfo, std::__1::allocator<google::CommandLineFlagInfo>&>::~__split_buffer() /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v
1/__split_buffer:341 (libgflags.so.2.2+0x13247)    #10 void std::__1::vector<google::CommandLineFlagInfo, std::__1::allocator<google::CommandLineFl
agInfo> >::__push_back_slow_path<google::CommandLineFlagInfo const&>(google::CommandLineFlagInfo const&) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v1/vector:1583 (libgflags.s
o.2.2+0x13247)
    #11 std::__1::vector<google::CommandLineFlagInfo, std::__1::allocator<google::CommandLineFlagInf
o> >::push_back(google::CommandLineFlagInfo const&) /data/8/aserbin/Projects/kudu/thirdparty/installed/tsan/include/c++/v1/vector:1599:9 (libgflags.so.2.2+0x71db)
    #12 google::GetAllFlags(std::__1::vector<google::CommandLineFlagInfo, std::__1::allocator<google
::CommandLineFlagInfo> >*) /data/8/aserbin/Projects/kudu/thirdparty/src/gflags-2.2.0/src/gflags.cc:1
529 (libgflags.so.2.2+0x71db)
    #13 kudu::(anonymous namespace)::CheckFlagsAndWarn(std::__1::basic_string<char, std::__1::char_t
raits<char>, std::__1::allocator<char> > const&, bool) /data/8/aserbin/Projects/kudu/src/kudu/util/flags.cc:394:3 (libkudu_util.so+0x16152a)
    #14 kudu::(anonymous namespace)::CheckFlagsAllowed() /data/8/aserbin/Projects/kudu/src/kudu/util/flags.cc:425:18 (libkudu_util.so+0x1600f9)
    #15 kudu::HandleCommonFlags() /data/8/aserbin/Projects/kudu/src/kudu/util/flags.cc:500:3 (libkudu_util.so+0x15f8c9)
    #16 ParseCommandLineFlags(char const*) /data/8/aserbin/Projects/kudu/src/kudu/tools/tool_main.cc:245:3 (kudu+0x5bd174)
    #17 main /data/8/aserbin/Projects/kudu/src/kudu/tools/tool_main.cc:263:20 (kudu+0x5bcf87)
                                                                                
  Location is global 'google::vmodule_lock' of size 64 at 0x7fe3ee4447e8 (libglog.so.0+0x00000023c7e8)
                                                                                
  Mutex M134 (0x7fe3ee4447e8) created at:                                       
    #0 pthread_rwlock_init /data/8/aserbin/Projects/kudu/thirdparty/src/llvm-6.0.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1304 (kudu+0x4bbd64)
    #1 glog_internal_namespace_::Mutex::Mutex() /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:247:19 (libglog.so.0+0xcc86)
    #2 __cxx_global_var_init.15 /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/vlog_is_on.cc:120 (libglog.so.0+0xcc86)
    #3 _GLOBAL__sub_I_vlog_is_on.cc /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/vlog_is_on.cc (libglog.so.0+0xcc86)
    #4 call_init /build/eglibc-SvCtMH/eglibc-2.19/elf/dl-init.c:78 (ld-linux-x86-64.so.2+0x102d9)
                                                                                
SUMMARY: ThreadSanitizer: destroy of a locked mutex /data/8/aserbin/Projects/kudu/thirdparty/src/glog-0.3.5/src/base/mutex.h:249:30 in glog_internal_namespace_::Mutex::~Mutex()
==================                                                              
ThreadSanitizer: reported 1 warnings
{noformat}

Added suppression for the TSAN warning about locked mutex destruction with {{191e329a1}}

