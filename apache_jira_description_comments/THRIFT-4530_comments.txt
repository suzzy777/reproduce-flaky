I think it's a good idea. Regarding which annotation to use, I think we should definitely include a default {{@Nullable}} implementation, but it might also be worth adding a compiler flag to use a different one.

For the patch, it's better if you send it as a PR on Github instead of posting it here, as a PR will trigger a Travis build.

Great!  I will definitely post the PR on GitHub. Do we want {{@Nullable}} annotations off by default, with a compiler flag to enable them?  Or should they just be on by default?  In any case, hope to have a PR up soon.  Thanks!

I think it's better if they are on by default, but if anyone has objections I'm happy with off as well.

cc [~jking3]

If nullable annotations have no other side-effects why don't we just add the annotation and then at such time someone finds a need to disable it they can add the code necessary to do no?

GitHub user msridhar opened a pull request:

    https://github.com/apache/thrift/pull/1522

    THRIFT-4530: add @Nullable annotations to generated Java code

    Use our own `org.apache.thrift.annotations.Nullable` annotation to avoid
    introducing a third-party dependency

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/msridhar/thrift THRIFT-4530

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/thrift/pull/1522.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1522
    
----
commit 6bc560a1a55a1fca720b4fe7057f25c06fc358d1
Author: Manu Sridharan <msridhar@...>
Date:   2018-03-20T21:45:22Z

    THRIFT-4530: add @Nullable annotations to generated Java code
    
    Use our own `org.apache.thrift.annotations.Nullable` type to avoid
    introducing a third-party dependency

----


Github user msridhar commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    Note that while there are no new tests, the code under `tutorial/java/gen-java` includes the annotations and compiles without issue.  Since this change doesn't affect runtime behavior of the generated code I think this might be sufficient.


Github user msridhar commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    Looks like the Travis failure is on Common Lisp codegen (https://api.travis-ci.org/v3/job/359136811/log.txt), which has nothing to do with this PR


Github user jeking3 commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    Yes there is an issue that appears in builds where lisp cannot find a file it just supposedly wrote.  Lisp is new to the project, this is an ongoing thing.


Github user jeking3 commented on a diff in the pull request:

    https://github.com/apache/thrift/pull/1522#discussion_r177720513
  
    --- Diff: lib/java/src/org/apache/thrift/annotations/Nullable.java ---
    @@ -0,0 +1,33 @@
    +/*
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements. See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership. The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License. You may obtain a copy of the License at
    + *
    + *   http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing,
    + * software distributed under the License is distributed on an
    + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    + * KIND, either express or implied. See the License for the
    + * specific language governing permissions and limitations
    + * under the License.
    + */
    +
    +package org.apache.thrift.annotations;
    --- End diff --
    
    Any reason why java language uses "annotation" but you selected "annotations" for thrift?  Seems like we should be using "annotation".


Github user msridhar commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    I just pushed up another commit with the renaming.  I assume you can do a squash and merge, but if you'd like me to squash just let me know.


Github user dcelasun commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    No need, I'll squash once Travis is all green.


Github user msridhar commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    Hrm, now I see a concurrency test failure on appveyor.  Doesn't seem related to my change, though I'm not 100% sure.


Github user dcelasun commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    I don't think it's relevant either, seems like a flaky test. I think we are good to merge.
    
    @jeking3 any idea on the failing appveyor test, have you seen it before? I'm inclined to ignore it unless you say otherwise.


Github user jeking3 commented on the issue:

    https://github.com/apache/thrift/pull/1522
  
    That is an intermittent test failure that I thought I resolved.  :)  it is C++ only


Github user asfgit closed the pull request at:

    https://github.com/apache/thrift/pull/1522


