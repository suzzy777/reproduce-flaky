results_cache_invalidation2.q failed for me couple of times on a unrelated PR. Here is the error log.

{noformat}
-------------------------------------------------------------------------------
Test set: org.apache.hadoop.hive.cli.split19.TestMiniLlapLocalCliDriver
-------------------------------------------------------------------------------
Tests run: 90, Failures: 1, Errors: 0, Skipped: 6, Time elapsed: 450.54 s <<< FAILURE! - in org.apache.hadoop.hive.cli.split19.TestMiniLlapLocalCliDriver
org.apache.hadoop.hive.cli.split19.TestMiniLlapLocalCliDriver.testCliDriver[results_cache_invalidation2]  Time elapsed: 15.087 s  <<< FAILURE!
java.lang.AssertionError:
Client Execution succeeded but contained differences (error code = 1) after executing results_cache_invalidation2.q ^M
266a267
> #### A masked pattern was here ####
271a273
> #### A masked pattern was here ####
273c275,276
<   Stage-0 is a root stage
---
>   Stage-1 is a root stage
>   Stage-0 depends on stages: Stage-1
275a279,365
>   Stage: Stage-1
>     Tez
> #### A masked pattern was here ####
>       Edges:
>         Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
>         Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
> #### A masked pattern was here ####
>       Vertices:
>         Map 1
>             Map Operator Tree:
>                 TableScan
>                   alias: tab1
>                   filterExpr: key is not null (type: boolean)
>                   Statistics: Num rows: 1500 Data size: 130500 Basic stats: COMPLETE Column stats: COMPLETE
>                   Filter Operator
>                     predicate: key is not null (type: boolean)
>                     Statistics: Num rows: 1500 Data size: 130500 Basic stats: COMPLETE Column stats: COMPLETE
>                     Select Operator
>                       expressions: key (type: string)
>                       outputColumnNames: _col0
>                       Statistics: Num rows: 1500 Data size: 130500 Basic stats: COMPLETE Column stats: COMPLETE
>                       Reduce Output Operator
>                         key expressions: _col0 (type: string)
>                         null sort order: z
>                         sort order: +
>                         Map-reduce partition columns: _col0 (type: string)
>                         Statistics: Num rows: 1500 Data size: 130500 Basic stats: COMPLETE Column stats: COMPLETE
>             Execution mode: vectorized, llap
>             LLAP IO: all inputs
>         Map 4
>             Map Operator Tree:
>                 TableScan
>                   alias: tab2
>                   filterExpr: key is not null (type: boolean)
>                   Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
>                   Fil^M
{noformat}

The test works for me locally. In fact the same PR had a successful run of this test in a previous commit. I think we should disable this and re-enable it after fixing the flakiness.