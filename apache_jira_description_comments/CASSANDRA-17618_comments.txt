I reproduced on 4.1 this failure but I guess whoever assigns the ticket might want to check also other branches.

So far, I can confirm that this only exists in 4.1+, and will not reproduce in a reasonable amount of runs with 2 cores, but reliably with 8.

This looks like it was broken in CASSANDRA-17044.  [Here|https://app.circleci.com/pipelines/github/driftx/cassandra/508/workflows/59f6dfb4-4d12-4320-8312-7d42bbb3043c/jobs/5899] are 500 runs on the commit just before it that succeed, and [here|https://app.circleci.com/pipelines/github/driftx/cassandra/509/workflows/612d851b-f163-4c0c-bfa7-1690d652c012/jobs/5900/parallel-runs/2?filterBy=ALL] are 500 against it where there were 3 failures. [~jlewandowski] [~ifesdjeen] can you take a look?

[~brandon.williams] by 8 cores do you mean setting {{-XX:ActiveProcessorCount=8}} ?

No, I just used a bigger machine.  I was initially attacking with multiple machines and noticed that the smaller ones were not having any luck and impeding my progress.

thanks

Another failure from this class today - https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1822/workflows/1eb7101f-dc32-4e87-88a8-f1660bb5c221/jobs/13916/tests#failed-test-0

Though this bisected to CASSANDRA-17044, I think it just changed the timing enough to expose other problems.  The first is a race that is mostly noise and is just like [this one|https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java#L464], but instead [here|https://github.com/driftx/cassandra/commit/568f2166f84908f1c7f240d6f2f7de0591d46a59].  The second issue is that when a connection is attempted unencrypted we call [failHandshake|https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java#L320] but don't return afterward, which then relies on a later write to call [exceptionCaught|https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java#L339] which it seems in some instances is too late and allows [setupMessagingPipeline|https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java#L357] to run, causing the messageHandler to be present when the test checks them.  I don't see any reason to not return after failing, but there are other instances where we don't and this isn't my area of expertise. [~aleksey] this is your test, can you advise?


I went ahead and tried the 'return after fail' method since that made the most sense to me, and it makes the check on node1 exactly like the one for node2 in the test, since the messageHandlers will now be empty.  It seems like being present before and checking with a count of zero was perhaps working around the fact that they were not empty.

||Branch||CI||
|[4.1|https://github.com/driftx/cassandra/tree/CASSANDRA-17618-4.1]|[j8|https://app.circleci.com/pipelines/github/driftx/cassandra/623/workflows/9f589855-8f3b-4239-88a9-11f6e9ea50f7], [j11|https://app.circleci.com/pipelines/github/driftx/cassandra/623/workflows/4bd7bedc-732d-4c5c-8df2-c389db855db0], [+500|https://app.circleci.com/pipelines/github/driftx/cassandra/623/workflows/480c81d2-5689-4ac5-ab1f-7e0b1e82c584/jobs/7095]|
|[trunk|https://github.com/driftx/cassandra/tree/CASSANDRA-17618-trunk]|[j8|https://app.circleci.com/pipelines/github/driftx/cassandra/624/workflows/7f3170f6-6471-43aa-aceb-6801b2fbc6e6], [j11|https://app.circleci.com/pipelines/github/driftx/cassandra/624/workflows/808dbc03-55a8-465b-9ce2-e1ae1f2d1a6a]|

The fix looks good to me, but I'm not very familiarized with that area of the code, so maybe someone else (like [~aleksey] ) can take a look.

bq. I don't see any reason to not return after failing, but there are other instances where we don't and this isn't my area of expertise. Aleksey Yeschenko this is your test, can you advise?

Your instinct feels right, I think the returns here are the right call. LGTM

Committed, thanks for the review!

