GitHub user andschwa opened a pull request:

    https://github.com/apache/zookeeper/pull/486

    ZOOKEEPER-2999: CMake build should use target-level commands

    CMake is using `include_directories`, which has global side effects,
    instead of the more explicit `target_include_directories`, to include
    directories per target (and with private or public scoping).
    
    Furthermore, CMake should also use `CMAKE_CURRENT_SOURCE_DIR` over
    `CMAKE_SOURCE_DIR` in order to allow inclusion in other projects via
    `add_subdirectory()`, and we can reduce the minimally required CMake
    version to 3.5 from 3.6.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2999

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/486.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #486
    
----
commit 5e184a2b56561af012a09d395e687a0a2cf3cf42
Author: proller <proller@...>
Date:   2017-09-28T14:40:38Z

    ZOOKEEPER-2999: CMake build should use target-level commands
    
    CMake is using `include_directories`, which has global side effects,
    instead of the more explicit `target_include_directories`, to include
    directories per target (and with private or public scoping).
    
    Furthermore, CMake should also use `CMAKE_CURRENT_SOURCE_DIR` over
    `CMAKE_SOURCE_DIR` in order to allow inclusion in other projects via
    `add_subdirectory()`, and we can reduce the minimally required CMake
    version to 3.5 from 3.6.

----


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @phunt This replaces #386.


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @proller I cherry-picked and kept your authorship üëç 


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    [JIRA: ZOOKEEPER-2999](https://issues.apache.org/jira/browse/ZOOKEEPER-2999)


https://github.com/apache/zookeeper/pull/486

Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    CI failures look spurious...


Github user andschwa commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/486#discussion_r176987184
  
    --- Diff: src/c/CMakeLists.txt ---
    @@ -14,14 +14,13 @@
     # See the License for the specific language governing permissions and
     # limitations under the License.
     
    -cmake_minimum_required(VERSION 3.6)
    +cmake_minimum_required(VERSION 3.5)
    --- End diff --
    
    I guess this needs a rebase now.


Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @andschwa try to trigger another build with amend commit
    Those are probably just flaky tests.


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @anmolnar Here goes...


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    FWIW I was able to build and run tests using CMake just fine. That said, this was failing
    
    ```
    1: Zookeeper_simpleSystem::testAsyncWatcherAutoResetterminate called after throwing an instance of 'CppUnit::Exception'
    1:   what():  equality assertion failed
    1: - Expected: -101
    1: - Actual  : -4
    ```
    
    But I don't know if it's a failure on `master` or configuration related or what. I can't see how the posted changes would affect one particular unit test like this.


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @anmolnar So here's what failed on Jenkins, but it makes no sense because Jenkins doesn't even use CMake. It can't be related:
    
    ```
         [exec]      [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build/src/c/tests/TestReconfig.cc:577: Assertion: assertion failed [Expression: numClientsPerHost.at(i) <= upperboundClientsPerServer(numClients, numServers)]
         [exec]      [exec] Failures !!!
         [exec]      [exec] Run: 37   Failure total: 1   Failures: 1   Errors: 0
         [exec]      [exec] FAIL: zktest-st
    ```


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @anmolnar Same here. The changes made in this PR are not executed in the Jenkins build; but the tests are quite flaky.


Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @andschwa I always get confused with these cpp unit tests. They're flaky for sure, but can't really tell why.
    
    I tested your changes and was able to build the client successfully with CMake. I've also run the tests multiple times on Docker and Virtualbox (centos7) and got test failed in `testAsyncMulti()` and `testReadOnly()` and also successful runs.
    
    You might want to take a closer look at C++ tests why they're failing - I suspect you have massive experience - or just keep trying to trigger builds for a green run.


Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    @anmolnar Yay! Flaky tests passed CI.


Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/486


Issue resolved by pull request 486
[https://github.com/apache/zookeeper/pull/486]

Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/486
  
    Thanks @hanm!


