Looking at this test on line 263 I think we just might need to have the test wait a while for the client pool to detect that it has a new primary on the "assertThat" line in the following block:
{noformat}
server_to_fail.invoke(() -> ClusterStartupRule.getCache().close()); // Confirm failover VMProvider secondaryServer = (server1.equals(server_to_fail)) ? server2 : server1; assertThat(secondaryServer).isEqualTo(determinePrimaryServer(client)); {noformat}
{noformat}
dataWriterCanStillOnlyWriteAfterFailover[clientVersion=130]
org.junit.ComparisonFailure: expected:<...unit.rules.MemberVM@[19582245]> but was:<...unit.rules.MemberVM@[23c51fe4]>
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityWithFailoverDUnitTest.dataWriterCanStillOnlyWriteAfterFailover(ClientDataAuthorizationUsingLegacySecurityWithFailoverDUnitTest.java:263)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
{noformat}