GitHub user rdblue opened a pull request:

    https://github.com/apache/nifi/pull/128

    NIFI-1193: Add Hive support to Kite storage processor.

    This adds a Hive dataset implementation that shades and minimizes the
    classes needed to connect to the Hive MetaStore.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rdblue/incubator-nifi NIFI-1193-kite-hive-support

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/nifi/pull/128.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #128
    
----
commit dcf19984ec755e9c706cb3c4a12b7d0d025b89a9
Author: Ryan Blue <blue@apache.org>
Date:   2015-11-01T00:23:08Z

    NIFI-1193: Add Hive support to Kite storage processor.
    
    This adds a Hive dataset implementation that shades and minimizes the
    classes needed to connect to the Hive MetaStore.

----


[~rickysaltzer] and [~jackowaya], this is the patch for adding Hive support to the Kite processor.

[~rdblue] Hey cool that you found a potential new way to tackle this stuff.  This is a big deal item in terms of review/implication and given our current efforts to buckle down on 0.4.0 i've pushed this to 0.5.0.

Will add some comments to the PR too.

Thanks
Joe

Github user joewitt commented on the pull request:

    https://github.com/apache/nifi/pull/128#issuecomment-158074311
  
    Ryan,
    
    Definitely appreciate you trying to make it less size prohibitive.  I think we'll want to avoid having shaded jars and such being utilized for this.  It complicates the licensing and related concerns and we have done an extremely good job getting those clean even to the point of every binary artifact we produce (nars) having embedded license/notice data correct to all sub-dependencies.
    
    This is an area which really highlights our need to tackle the extension registry.  We need to, on the other side of this release, figure out how we as a community can get more agility for releasing extensions like this versus the core framework.
    
    OlegZ: We do need to tackle any copyright assertions on contributed source and ensure all proper license and notice adherence occurs.  I'm overly generalizing here but there are like maybe five people on earth (I'm looking at you Sean Busbey) that care about following the strict guidance of licensing and notices at the level we do.  In basically every contrib that brings in dependencies we'll have to help others most likely.  Feels like a fine trade in exchange for contributions of helpful things the community will benefit from.
    
    We also need to ensure that there is appropriate testing.  However, above all else we need to keep in mind this community is powered by contributions.  So in every exchange let's make sure our discussions stay focused on helping folks bring contribs along.  As specific example consider the lack of unit tests.  We could as part of the review build them.  Or as part of the feedback ask if there are ideas on how to include some.  Some extensions and contributions are inherently really hard to unit test.  I don't know if this one is or isn't.  Adding unit tests or asking if unit tests can be included is more powerful than saying we can't accept the contrib without them.  The difference can at times be subtle but the effect on the community and tenor of discussion can be dramatic.  
    
    So far everyone in the community has done an awesome job of helping each other find the middle ground on contributions so that we can be inclusive and encouraging while increasing quality as well.
    
    Thanks
    Joe


Github user joey commented on the pull request:

    https://github.com/apache/nifi/pull/128#issuecomment-158084660
  
    @rdblue I'm guessing that you used the shade plugin due to the hive-exec jar embedding so many libraries in unshaded package names?
    
    If so, I've got a pom that pulls in direct dependencies that can talk to the Hive metastore without the hive-exec jar. Let me know if that would help here.


Github user busbey commented on the pull request:

    https://github.com/apache/nifi/pull/128#issuecomment-158108067
  
    yes pleas @joey 


Yeah, that's completely understandable.

Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/128#issuecomment-158137120
  
    @joey, that's exactly the problem. If you have a solution that avoids hive-exec, that would be great!


Github user joewitt commented on the pull request:

    https://github.com/apache/nifi/pull/128#issuecomment-158137742
  
    @rdblue @joey @busbey maybe we just don't add the nar to the assembly itself but put this in the source tree.  Once we get a template/extension registry built then this is ok anyway.  What do you think?


Github user joey commented on the pull request:

    https://github.com/apache/nifi/pull/128#issuecomment-158172948
  
    Here's what we've been using to avoid `hive-exec`:
    
    ```
       <dependency>
          <groupId>org.apache.hive.hcatalog</groupId>
          <artifactId>hive-hcatalog-core</artifactId>
          <exclusions>
            <exclusion>
              <groupId>com.google.code.findbugs</groupId>
              <artifactId>jsr305</artifactId>
            </exclusion>
            <exclusion>
              <artifactId>jersey-servlet</artifactId>
              <groupId>com.sun.jersey</groupId>
            </exclusion>
            <exclusion>
              <artifactId>jersey-core</artifactId>
              <groupId>com.sun.jersey</groupId>
            </exclusion>
            <exclusion>
              <artifactId>jersey-server</artifactId>
              <groupId>com.sun.jersey</groupId>
            </exclusion>
            <exclusion>
              <artifactId>servlet-api</artifactId>
              <groupId>javax.servlet</groupId>
            </exclusion>
            <exclusion>
              <artifactId>jetty-all</artifactId>
              <groupId>org.eclipse.jetty.aggregate</groupId>
            </exclusion>
            <exclusion>
              <groupId>org.apache.hive</groupId>
              <artifactId>hive-exec</artifactId>
            </exclusion>
            <exclusion>
              <artifactId>parquet-hadoop-bundle</artifactId>
              <groupId>com.twitter</groupId>
            </exclusion>
          </exclusions>
        </dependency>
    ```


Github user rdblue closed the pull request at:

    https://github.com/apache/nifi/pull/128


GitHub user rdblue opened a pull request:

    https://github.com/apache/nifi/pull/147

    NIFI-1193: Add support for storing data in Hive tables.

    This adds support for storing data in Hive tables to the Kite processor using @joey's suggestion on #128. I've excluded as many dependencies as I could find to get the final size down to something reasonable, both by excluding the ones not used by the metastore (which is what Joey's suggestion helped with) and excluding the ones that are already included in NiFi or the Hadoop dependencies nar.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rdblue/incubator-nifi NIFI-1193-add-kite-hive-support

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/nifi/pull/147.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #147
    
----
commit c244a97069a4bae6065157c2b3552d2fafaa058f
Author: Ryan Blue <blue@apache.org>
Date:   2015-12-23T19:02:51Z

    NIFI-1193: Add support for storing data in Hive tables.

----


I just posted a better fix for this in PR #147.

Anyone familiar with Kite and Hive have time to do a good PR review for this one?  It is a very large and apparently heavily thought through contrib.  Needs a lot of testing obviously.  Going to move to 060 (i set 050 to spur movement).

[~rdblue] Can the Copyright reference to Cloudera be removed?  Make sense to have it if we're pulling in source from a Cloudera published lib but if this is code being submitted to Apache NiFi then best to avoid it.
{quote}
+++ b/nifi-nar-bundles/nifi-kite-bundle/nifi-hive-dataset/src/main/resources/META-INF/services/org.kitesdk.data.spi.Loadable
@@ -0,0 +1,16 @@
+#
+# Copyright 2013 Cloudera Inc.
{quote}

I should have mentioned - if anyone does have review bandwidth and expertise on this would happily have it 050.

Yeah, I can fix those.

[~rickysaltzer], do you have time to review?

Github user rickysaltzer commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-174751825
  
    If I understand this patch correctly, you're just including the necessary dependencies for dataset URIs like `dataset:hive:...` to work?


Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-174752878
  
    Yep!


Github user rickysaltzer commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-174753214
  
    cool! I'll pull this down and test it out this week. Thanks, Ryan! 


Github user rickysaltzer commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175174510
  
    I re-built the kite nar with this patch and was able to insert data into a `dataset:hive` dataset. 


Commit 9dfef8f4327ec4e58c5307fcde758e455267fddd in nifi's branch refs/heads/master from [~blue@cloudera.com]
[ https://git-wip-us.apache.org/repos/asf?p=nifi.git;h=9dfef8f ]

NIFI-1193: Add support for storing data in Hive tables.


Thanks [~rickysaltzer]!

Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175186662
  
    Now that this is in master, I'm going to close this PR. Thanks @rickysaltzer!


Github user rdblue closed the pull request at:

    https://github.com/apache/nifi/pull/147


Github user jskora commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175199900
  
    I cannot build a clean checkout of master from the Apache git repo after this merge.  I get 
    
    > `[ERROR] Failed to execute goal org.apache.maven.plugins:maven-remote-resources-plugin:1.5:process (default) on project nifi-kite-processors: Failed to resolve dependencies for one or more projects in the reactor. Reason: Missing:`
    > `[ERROR] ----------`
    > `[ERROR] 1) org.apache.hive:hive-serde:jar:0.12.0-cdh5.0.0`
    
    If I roll back to the previous commit on master it builds fine.


Github user markap14 commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175205635
  
    I'm getting this as well. a little more of the output to provide additional context:
    
    [ERROR] ----------
    [ERROR] 1) org.apache.hive:hive-serde:jar:0.12.0-cdh5.0.0
    [ERROR]
    [ERROR] Try downloading the file manually from the project website.
    [ERROR]
    [ERROR] Then, install it using the command:
    [ERROR] mvn install:install-file -DgroupId=org.apache.hive -DartifactId=hive-serde -Dversion=0.12.0-cdh5.0.0 -Dpackaging=jar -Dfile=/path/to/file
    [ERROR]
    [ERROR] Alternatively, if you host your own repository you can deploy the file there:
    [ERROR] mvn deploy:deploy-file -DgroupId=org.apache.hive -DartifactId=hive-serde -Dversion=0.12.0-cdh5.0.0 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]
    [ERROR]
    [ERROR] Path to dependency:
    [ERROR] 1) org.apache.nifi:nifi-kite-processors:jar:0.4.2-SNAPSHOT
    [ERROR] 2) org.apache.hive.hcatalog:hive-hcatalog-core:jar:1.2.0
    [ERROR] 3) org.apache.hive:hive-metastore:jar:1.2.0
    [ERROR] 4) org.apache.hive:hive-serde:jar:0.12.0-cdh5.0.0
    [ERROR]
    [ERROR] ----------
    [ERROR] 1 required artifact is missing.
    [ERROR]
    [ERROR] for artifact:
    [ERROR] org.apache.nifi:nifi-kite-processors:jar:0.4.2-SNAPSHOT
    [ERROR]
    [ERROR] from the specified remote repositories:
    [ERROR] central (https://repo1.maven.org/maven2, releases=true, snapshots=false),
    [ERROR] apache-repo (https://repository.apache.org/content/repositories/releases, releases=true, snapshots=false),
    [ERROR] jcenter (http://jcenter.bintray.com, releases=true, snapshots=false),
    [ERROR] apache.snapshots (http://repository.apache.org/snapshots, releases=false, snapshots=true)
    [INFO] Copying httpclient-4.4.1.jar to /devel/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hbase_1_1_2-client-service-bundle/nifi-hbase_1_1_2-client-service-nar/target/classes/META-INF/bundled-dependencies/httpclient-4.4.1.jar
    [ERROR] -> [Help 1]
    [ERROR]
    [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
    [ERROR] Re-run Maven using the -X switch to enable full debug logging.
    [ERROR]
    [ERROR] For more information about the errors and possible solutions, please read the following articles:
    [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
    [ERROR]
    [ERROR] After correcting the problems, you can resume the build with the command
    [ERROR]   mvn <goals> -rf :nifi-kite-processors


Github user rickysaltzer commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175207550
  
    Good catch, guys. This must have built fine for me because I already had that jar in my local repo. I'm working with @rdblue to address this. 



Github user mattyb149 commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175207659
  
    It's in the Cloudera repo but not sure we can resolve from there: https://maven-repository.com/artifact/org.apache.hive/hive-serde/0.12.0-cdh5.0.0


Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175230521
  
    I'll find where that leak is coming from, sorry about this.


Github user apiri commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175401857
  
    @rdblue Can we reopen this just for the sake of continuing tracking this given the current state of things?  I have reopened the associated JIRA issue.
    
    For future reference, while the Travis CI build can be flaky at times, it has greatly aided in my reviews.  Typically, the majority of the builds in the matrix work appropriately and can serve as a pretty decent cleanroom build process and can help catch things like these.  By default this does `a mvn clean install -Pcontrib-check` and allows any reviewer to just do a multithreaded build skipping tests and contrib to generate an assembly for functional testing.


[~aldrin] [~rdblue][~rickysaltzer] can we revert the commit for now '9dfef8f4327ec4e58c5307fcde758e455267fddd'?

Yep, will take care of it.  Let me do a build and confirm it looks good before pushing out.

Commit c5a174ae6de9e18b53d9077300781def17c129f0 in nifi's branch refs/heads/master from [~aldrin]
[ https://git-wip-us.apache.org/repos/asf?p=nifi.git;h=c5a174a ]

Revert "NIFI-1193: Add support for storing data in Hive tables."

This reverts commit 9dfef8f4327ec4e58c5307fcde758e455267fddd.


Okay, commit reverted and pushed to master.

GitHub user rdblue reopened a pull request:

    https://github.com/apache/nifi/pull/147

    NIFI-1193: Add support for storing data in Hive tables.

    This adds support for storing data in Hive tables to the Kite processor using @joey's suggestion on #128. I've excluded as many dependencies as I could find to get the final size down to something reasonable, both by excluding the ones not used by the metastore (which is what Joey's suggestion helped with) and excluding the ones that are already included in NiFi or the Hadoop dependencies nar.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rdblue/incubator-nifi NIFI-1193-add-kite-hive-support

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/nifi/pull/147.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #147
    
----
commit c244a97069a4bae6065157c2b3552d2fafaa058f
Author: Ryan Blue <blue@apache.org>
Date:   2015-12-23T19:02:51Z

    NIFI-1193: Add support for storing data in Hive tables.

----


Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-175765398
  
    @apiri I've reopened this and will fix it in this PR. Thanks for rolling back the changes in master.


Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176281907
  
    I just pushed a fix that @rickysaltzer came up with. The jars being pulled in aren't actually needed for the tests so we can exclude them.


Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176297371
  
    Looks like the build is working after the new commit. Thanks Ricky!


Github user jskora commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176331346
  
    I can also build master successfully now.
    
    Interestingly, it downloaded the hive-serde jar file from the Cloudera repository.  Not sure why it didn't do that yesterday.


i do not believe Master has been updated yet.  Ryan's push was to his PR.  Saltzer has apparently confirmed that but not pushed to ASF NiFi master.

unless i'm missing it.

THanks


Github user apiri commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176354248
  
    @rdblue Could you please squash the commits?  I don't carry a squash all mentality, but would prefer to avoid reintroducing the troublesome commit, even if it is immediately adjusted by the one following it.
    
    Thanks!


Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176373718
  
    Squashed.


[~rdblue] Did you intend for PR147 to build on to PR128?  Went to review/incorp and 147 seemed surprisingly small.

Github user apiri commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176603003
  
    @rdblue Thanks! Travis is giving the green thumb up.
    
    @rickysaltzer Would you be able to give this the same inspection/evaluation as before now that the build is good to go?


Github user rickysaltzer commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176801515
  
    will do - checking on it now


Github user rickysaltzer commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176806382
  
    Build and functional testing are a +1 from me. I'll push this out 


Commit 73c0637c255813a4ff9a9bde60eaa1daf7080012 in nifi's branch refs/heads/master from [~blue@cloudera.com]
[ https://git-wip-us.apache.org/repos/asf?p=nifi.git;h=73c0637 ]

NIFI-1193: Add support for storing data in Hive tables.

Thanks to Ricky for helping with the test dependencies.


Github user rickysaltzer commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176808901
  
    patch checked into `master` https://git-wip-us.apache.org/repos/asf?p=nifi.git;h=73c0637


Github user rdblue commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-176866130
  
    Thanks, @rickysaltzer! I'll close this again.


Github user rdblue closed the pull request at:

    https://github.com/apache/nifi/pull/147


Github user apiri commented on the pull request:

    https://github.com/apache/nifi/pull/147#issuecomment-177054637
  
    @rdblue There was a comment @joewitt had left on the associated ticket.  
    https://issues.apache.org/jira/browse/NIFI-1193?focusedCommentId=15123007&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15123007
    
    Was there to be more associated with tihs?


No, this replaced PR 128. That was trying to build a minimal jar for connecting to the Hive MetaStore, but Joey provided some help to just exclude unnecessary dependencies to do the same thing.

