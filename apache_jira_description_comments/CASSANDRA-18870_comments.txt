hello, [~brandon.williams]   [~smiklosovic] can you help to take a look at  this little patch ?

|pr for trunk |[trunk|https://github.com/apache/cassandra/pull/2709]|
|java17 pre-commit|[java17|https://app.circleci.com/pipelines/github/Maxwell-Guo/cassandra/482/workflows/e5c42fef-bf21-4880-b76d-19ffeff62970]|
|java11|[java11|https://app.circleci.com/pipelines/github/Maxwell-Guo/cassandra/482/workflows/93ea3717-9542-4777-9cad-666a6a7c40fa]|



bq. This test case testInvalidBloomFilterFPRatio() makes no sense and cannot achieve the desired purpose.

Can you explain why this is the case?

Your PR is full of noise from CASSANDRA-17698

Sorry, I may not have noticed, rebase again.

as for this code in the test case :

{code:java}
try
        {
            createTableMayThrow("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 0.0000001");
            fail("Expected an fp chance of 0.0000001 to be rejected");
        }
        catch (ConfigurationException exc) { }
{code}
The test wants to see if the cql : 

{code:java}
"CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 0.0000001 "
{code}

 with bloom_filter_fp_chance = 0.0000001  is meaningful, see [bf validation |https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/schema/TableParams.java#L156]. if bf chance is less than minBloomFilterFpChanceValue or bigger than 1 ,  
{code:java}
 fail("%s must be larger than %s and less than or equal to 1.0 (got %s)",
                 BLOOM_FILTER_FP_CHANCE,
                 minBloomFilterFpChanceValue,
                 bloomFilterFpChance);
{code}
should be thrown.  The test case's catch body do not doing the exception message validation .So no matter the cql is illegal or not , the test will still pass.

Actually the right code should be : 
{code:java}
try
        {
            createTableMayThrow("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 0.0000001");
            fail("Expected an fp chance of 0.0000001 to be rejected");
        }
        catch (ConfigurationException exc)
       { 
         assertTrue(exc.getMessage().contains("bloom_filter_fp_chance must be larger than " + BloomCalculations.minSupportedBloomFilterFpChance() + " and less than or equal to 1.0 (got 1.0E-7)"))
       }
{code}




bq. The test case's catch body do not doing the exception message validation .So no matter the cql is illegal or not , the test will still pass.

I see, good catch.

Unfortunately If you rebased I don't think it helped, it's still got commits from CASSANDRA-17698

|pr|[trunk|https://github.com/apache/cassandra/pull/2711]|
|j17|[pre-commit|https://app.circleci.com/pipelines/github/Maxwell-Guo/cassandra/491/workflows/3ba451c5-8abf-4648-8acd-edf79c6843c0]|
|j11|[pre-commit|https://app.circleci.com/pipelines/github/Maxwell-Guo/cassandra/491/workflows/a4f215c0-f2c7-4a78-80f7-772a4ac94f3b]|

[~brandon.williams] yes, you are right , the commits still exist , so I update my repositories

Looks good to me.  We don't need to do a full pre-commit here but we do need to multiplex this test to make sure no flakiness was introduced (even though I doubt it.)

||Branch||CI||
|[trunk|https://github.com/driftx/cassandra/tree/CASSANDRA-18870-trunk]|[utest repeat|https://app.circleci.com/pipelines/github/driftx/cassandra/1302/workflows/f9de74ee-5423-44bd-a244-5298cb899eed/jobs/54703]|

It's green, +1 from me.

+1 thanks [~maxwellguo]

Committed, thanks!

