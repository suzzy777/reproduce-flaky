I find following test classes have problems described in this jira
{code}
src\java\test\org\apache\zookeeper\server\CRCTest.java
src\java\test\org\apache\zookeeper\server\PurgeTxnTest.java
src\java\test\org\apache\zookeeper\server\ZooKeeperServerMainTest.java
src\java\test\org\apache\zookeeper\server\quorum\ReconfigBackupTest.java
src\java\test\org\apache\zookeeper\server\quorum\ReconfigLegacyTest.java
src\java\test\org\apache\zookeeper\server\quorum\StandaloneDisabledTest.java
src\java\test\org\apache\zookeeper\test\ACLCountTest.java
src\java\test\org\apache\zookeeper\test\ACLTest.java
src\java\test\org\apache\zookeeper\test\AsyncTest.java
src\java\test\org\apache\zookeeper\test\ClientBase.java
src\java\test\org\apache\zookeeper\test\ClientPortBindTest.java
src\java\test\org\apache\zookeeper\test\GetProposalFromTxnTest.java
src\java\test\org\apache\zookeeper\test\IntegrityCheck.java
src\java\test\org\apache\zookeeper\test\InvalidSnapshotTest.java
src\java\test\org\apache\zookeeper\test\LeaderSessionTrackerTest.java
src\java\test\org\apache\zookeeper\test\LoadFromLogTest.java
src\java\test\org\apache\zookeeper\test\ObserverTest.java
src\java\test\org\apache\zookeeper\test\QuorumZxidSyncTest.java
src\java\test\org\apache\zookeeper\test\RestoreCommittedLogTest.java
src\java\test\org\apache\zookeeper\test\SSLTest.java
src\java\test\org\apache\zookeeper\test\SledgeHammer.java
src\java\test\org\apache\zookeeper\test\TestHammer.java
src\java\test\org\apache\zookeeper\test\TruncateTest.java
src\java\test\org\apache\zookeeper\test\ZkDatabaseCorruptionTest.java
{code}

# Corrected almost all the test cases which were doing zookeeper operations without ensuring connection to the ZooKeeperServer
# Many places improved the test code by using existing test utilities.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12822813/ZOOKEEPER-2508-01.patch
  against trunk revision 1755379.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 74 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3340//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3340//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3340//console

This message is automatically generated.

Great to see improvements on the tests! I have two quick comments:
* Would it better if we refactor this code into a utility class / method which takes a set of parameters such as host port and return a connected zk handle? 
{code}
CountdownWatcher watcher = new CountdownWatcher();
final ZooKeeper zk = new ZooKeeper(HOSTPORT, CONNECTION_TIMEOUT, watcher);
watcher.waitForConnected(CONNECTION_TIMEOUT);
{code} 
* The pre-commit build has two tests (ACLTest.testAcls and ObserverTest.testObserver) that this patch touches failed. Might relate to the change in this patch.

Wow, [~hanm] just suggested what I was just going to suggest, that is, to refactor that piece of code into an utility class or method! :-D

Otherwise, CONGRATULATIONS to [~arshad.mohammad] for tackling those pesky tests issue!

+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12822844/ZOOKEEPER-2508-02.patch
  against trunk revision 1755379.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 74 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3341//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3341//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3341//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12822865/ZOOKEEPER-2508-03.patch
  against trunk revision 1755379.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 74 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3343//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3343//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3343//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12822871/ZOOKEEPER-2508-04.patch
  against trunk revision 1755379.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 74 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3345//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3345//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3345//console

This message is automatically generated.

Thanks [~hanm] and [~eribeiro] for your reviews. Latest patch ZOOKEEPER-2508-04.patch addressed your comments.

bq. -1 core tests. The patch failed core unit tests.
There is no test case failure. One test case is skipped which is not related to this patch

Thanks for the quick update [~arshad.mohammad]. New tests are very clean with the abstraction, comparing the old tests where each test reinvented the wheel.

I have a few more comments on 04.patch:

* In "ObserverTest.testObserver" two checks are removed:
{code}
Assert.assertNotSame("Client is still connected to non-quorate cluster", KeeperState.SyncConnected,lastEvent.getState());
Assert.assertTrue("Client didn't reconnect to quorate ensemble (state was" + lastEvent.getState() + ")", 
    (KeeperState.SyncConnected==lastEvent.getState() ||		
    KeeperState.Expired==lastEvent.getState())); 
{code}

This is a functional change to the test case because the new abstraction only checks initially when the ZK handle was created. The removed checks seems very reasonable to have from a functional testing perspective, so I think this should be fixed. If abstracting these checks is cumbersome maybe we can just leave this test case as it is without using the new createZKClient introduced in this patch.

*  For 'public static ZooKeeper createZKClient(String cxnString, int sessionTimeout)', maybe using Assert explicitly is better than throwing a TimeoutException? For example:
{code}
public static ZooKeeper createZKClient(String cxnString, int sessionTimeout) throws Exception {
    CountdownWatcher watcher = new CountdownWatcher(); 
    ZooKeeper zk = new ZooKeeper(cxnString, sessionTimeout, watcher);
    try {
        watcher.waitForConnected(CONNECTION_TIMEOUT);
    } catch (InterruptedException e) {
        // Ignore interrupt.. not interested.
    } catch (TimeoutException e) {
        Assert.fail("ZooKeeper client can not connect to " + cxnString);
    }
    return zk;
}
{code}
By using Assert we make the contract clear that we always expect a functional connected ZK client before proceeding to execute rest of tests; it also makes the test report easier to read, in case such assumption is violated as we would know what exact expectation was failed (instead of digging into code and figured out why).

* I am thinking we should make the 'CONNECTION_TIMEOUT' a parameter in the interface of 'createZKClient', so each test case can tune the timeout based on their needs, given that there are a lot of variations of timeouts per test.

A side note regarding test timeout variation among tests: some requires as small as 5 seconds while others require 10, 20, 30 or more. This might be a by design but could also be an optimization opportunity for us to normalize the timeout value so tests could run faster. This however can be tackled in a separate JIRA.

The -1 is contributed by the failure of a c test (TestReconfig.cc) which is taken care of by ZOOKEEPER-2152. It looks like the test report only include Java test, not C. 

Thanks [~hanm] for the reviews.
# As you suggested,I dropped ObserverTest from the fix list
# Added assert statement in {{createZKClient(String cxnString, int sessionTimeout)}}
# CONNECTION_TIMEOUT is the maximum time to wait. Not necessarily test case will wait full CONNECTION_TIMEOUT.
Currently almost all the test cases have used CONNECTION_TIMEOUT. May be we can add timeout parameter when we fix a test case which takes timeout other than CONNECTION_TIMEOUT. So not adding timeout parameter as of now.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12822950/ZOOKEEPER-2508-05.patch
  against trunk revision 1755379.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 71 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3346//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3346//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3346//console

This message is automatically generated.

Sweet patch, thanks [~arshad.mohammad]!

A few nits:

In:

{code}
+public class PurgeTxnTest extends ZKTestCase{
{code}

a space is missing before the {

In:

{code}
+            zk[i] =  ClientBase.createZKClient("127.0.0.1:" + clientPorts[i]);
{code}

extra whitespace after the = 

Ditto in:

{code}
+        ZooKeeper zk =  ClientBase.createZKClient(HOSTPORT);
{code}

Missing whitespace before the { in:

{code}
+public class LoadFromLogTest extends ZKTestCase{
{code}

Ditto for:

{code}
+public class SledgeHammer extends Thread{
{code}

Extra whitespace in:

{code}
+        zk =  ClientBase.createZKClient("127.0.0.1:" + port2, 15000);
+
{code}

Other than that, it looks great. +1.


Other than the stylistic issues pointed out by Raul, patch 05 lgtm. Thanks Arshad!

Fixed  [~rgs] review comments

+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12823099/ZOOKEEPER-2508-06.patch
  against trunk revision 1755786.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 71 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3353//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3353//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3353//console

This message is automatically generated.

Great cleanup, thanks Arshad! Committed to 3.5.3 and trunk.

SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3048 (See [https://builds.apache.org/job/ZooKeeper-trunk/3048/])
ZOOKEEPER-2508: Many ZooKeeper tests are flaky because they proceed with zk operation without connecting to ZooKeeper server. (Arshad Mohammad via phunt) (phunt: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1757452])
* (edit) trunk/CHANGES.txt
* (edit) trunk/src/java/test/org/apache/zookeeper/server/CRCTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/server/PurgeTxnTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/server/ZooKeeperServerMainTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/server/quorum/ReconfigBackupTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/server/quorum/ReconfigLegacyTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/server/quorum/StandaloneDisabledTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/ACLCountTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/ACLTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/AsyncTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/ClientBase.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/ClientPortBindTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/GetProposalFromTxnTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/IntegrityCheck.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/InvalidSnapshotTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/LeaderSessionTrackerTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/RestoreCommittedLogTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/SSLTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/SledgeHammer.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/TestHammer.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/TruncateTest.java
* (edit) trunk/src/java/test/org/apache/zookeeper/test/ZkDatabaseCorruptionTest.java


Thanks [~phunt] for committing the patch
Thanks [~hanm], [~eribeiro] and [~rgs] for reviewing the patch.

