jinggou opened a new pull request, #1737:
URL: https://github.com/apache/phoenix/pull/1737

   (no comment)




ranganathg commented on code in PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#discussion_r1396791863


##########
phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexBuildTimestampIT.java:
##########
@@ -249,7 +249,8 @@ public void testCellTimestamp() throws Exception {
             String selectSql = String.format("SELECT * FROM %s WHERE val = 'abc'", (view ? viewName : dataTableName));
             conn = DriverManager.getConnection(getUrl());
             // assert we are pulling from index table
-            assertExplainPlan(conn, localIndex, selectSql, dataTableName, (view ? "_IDX_" + dataTableName : indexName));
+            assertExplainPlan(conn, localIndex, selectSql, dataTableName, (view && !localIndex ?
+                    "_IDX_" + dataTableName : indexName));

Review Comment:
   this doesn't have the indexName(dataTableName) format?





ranganathg commented on code in PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#discussion_r1396793509


##########
phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java:
##########
@@ -79,7 +79,8 @@ public void testIndexDeleteOptimizationWithLocalIndex() throws Exception {
             ResultSet rs = conn1.createStatement().executeQuery("EXPLAIN "+ query);
             String expected =
                     "DELETE ROWS CLIENT SELECT\n" +
-                    "CLIENT PARALLEL 1-WAY RANGE SCAN OVER " + dataTableName +" [1,*] - [1,100]\n" +
+                    "CLIENT PARALLEL 1-WAY RANGE SCAN OVER " +
+                            indexTableName+"L" + "(" + dataTableName + ") [1,*] - [1,100]\n" +

Review Comment:
   why is "L" appended to the indexTableName here?





jinggou commented on code in PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#discussion_r1399810185


##########
phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexBuildTimestampIT.java:
##########
@@ -249,7 +249,8 @@ public void testCellTimestamp() throws Exception {
             String selectSql = String.format("SELECT * FROM %s WHERE val = 'abc'", (view ? viewName : dataTableName));
             conn = DriverManager.getConnection(getUrl());
             // assert we are pulling from index table
-            assertExplainPlan(conn, localIndex, selectSql, dataTableName, (view ? "_IDX_" + dataTableName : indexName));
+            assertExplainPlan(conn, localIndex, selectSql, dataTableName, (view && !localIndex ?
+                    "_IDX_" + dataTableName : indexName));

Review Comment:
   we have that format inside assertExplainPlan function here [phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java](https://github.com/apache/phoenix/pull/1737/files/62de58788aed657170cdcfac5fa827cb4230b781#diff-7bc5a84dbd349aa5114d2f1aab874fd3efed28ce5123bcf4ce59bfe6589031ac)





jinggou commented on code in PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#discussion_r1399811479


##########
phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java:
##########
@@ -79,7 +79,8 @@ public void testIndexDeleteOptimizationWithLocalIndex() throws Exception {
             ResultSet rs = conn1.createStatement().executeQuery("EXPLAIN "+ query);
             String expected =
                     "DELETE ROWS CLIENT SELECT\n" +
-                    "CLIENT PARALLEL 1-WAY RANGE SCAN OVER " + dataTableName +" [1,*] - [1,100]\n" +
+                    "CLIENT PARALLEL 1-WAY RANGE SCAN OVER " +
+                            indexTableName+"L" + "(" + dataTableName + ") [1,*] - [1,100]\n" +

Review Comment:
   Because a local index named indexTableName+"L" is created above
   (Line 69: `createIndex(indexTableName+"L", dataTableName, "k3", null, true);`)





virajjasani commented on code in PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#discussion_r1401264578


##########
phoenix-core/src/main/java/org/apache/phoenix/iterate/ExplainTable.java:
##########
@@ -147,7 +148,20 @@ protected void explain(String prefix,
             scanTypeDetails = explainSkipScan();
         }
         buf.append(scanTypeDetails);
-        buf.append("OVER ").append(tableRef.getTable().getPhysicalName().getString());
+
+        String tableName = tableRef.getTable().getPhysicalName().getString();
+        if (ScanUtil.isLocalIndex(scan)) {

Review Comment:
   Rather than `ScanUtil#isLocalIndex`, we should check PTable index type:
   ```
       @Override
       public IndexType getIndexType() {
           return indexType;
       }
   ```





jinggou commented on PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#issuecomment-1828480304

   the failed test `MutableIndexFailureIT.testIndexWriteFailure` succeed in local run




virajjasani commented on PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#issuecomment-1828634948

   That is correct @jinggou, that is flaky test, not related to the changes. Thanks for incorporating changes, will take a look again.




virajjasani commented on PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#issuecomment-1828826188

   After resolving it, could you also create new PR against 5.1 branch?




virajjasani commented on code in PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#discussion_r1406899653


##########
phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java:
##########
@@ -33,6 +33,7 @@
 
 import org.apache.phoenix.util.PropertiesUtil;
 import org.apache.phoenix.util.QueryUtil;
+import org.apache.phoenix.util.SchemaUtil;

Review Comment:
   nit: unused





virajjasani commented on PR #1737:
URL: https://github.com/apache/phoenix/pull/1737#issuecomment-1828958627

   Once new PR against 5.1 branch is created and we have test results, will merge both PRs together.




jinggou opened a new pull request, #1742:
URL: https://github.com/apache/phoenix/pull/1742

   (no comment)




virajjasani commented on PR #1742:
URL: https://github.com/apache/phoenix/pull/1742#issuecomment-1830508913

   Looks like these failures are relevant? https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-1742/1/testReport/junit/org.apache.phoenix.end2end/StatsEnabledSplitSystemCatalogIT/




virajjasani merged PR #1737:
URL: https://github.com/apache/phoenix/pull/1737




virajjasani merged PR #1742:
URL: https://github.com/apache/phoenix/pull/1742




