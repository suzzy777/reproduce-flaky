Code that hangs is [https://github.com/apache/impala/blob/master/tests/beeswax/impala_beeswax.py#L372-L384|https://github.com/apache/impala/blob/master/tests/beeswax/impala_beeswax.py#L372-L384]
which suggests query has some other state than FINISHED or EXCEPTION.
Meanwhile log files contain no trace of the query id 3d486150ff28c15c:118403c200000000





Log says:
E0210 11:23:32.714677 21460 query-state.cc:424] 5a4a60d227d5669e:cfc4ed2100000000] Cancelling fragment instances due to failure to reach the coordinator. (ReportExecStatus() RPC failed: Remote error: Service unavailable: ReportExecStatus request on impala.ControlService from 127.0.0.1:49775 dropped due to backpressure. The service queue is full; it has 2147483647 items.
). Query 5a4a60d227d5669e:cfc4ed2100000000 may hang. See IMPALA-2990.
so is this just an instance of IMPALA-2990?

-Yeah, this may just be a poorly written test. If this is happening very often, we can xfail it, otherwise it'll probably be easier to write a good test for this case once my rpc debugging patch goes in-

Realized we're talking about an existing test, not the one that I just added which I confusingly gave the name 'test_reportexecstatus_retries'. I seem to have repro-ed this locally, and the behavior that I'm seeing doesn't make any sense, so this looks like it may be a real bug with IMPALA-4555. I'll keep investigating

Alright - figured out what's going on.

The test is designed to cause ReportExecStatus() rpcs to fail by backing up the control service queue. Prior to IMPALA-4555, after a failed ReportExecStatus() we would wait 'report_status_retry_interval_ms' between retries, which was 100ms by default and wasn't touched by the test. That 100ms was right on the edge of being enough time for the coordinator to keep up with processing the reports, so that some would fail but most would succeed. It was always possible that we could hit 2990 in this setup, but it was unlikely.

Now, we wait 'status_report_interval_ms'. By default, this is 5000ms, so it should give the coordinator even more time and make these issues less likely. However, the test sets 'status_report_interval_ms' to 10ms, which isn't nearly enough time for the coordinator to do its processing, causing lots of the ReportExecStatus() rpcs to fail and making us hit 2990 pretty often.

Not sure what the solution is yet, the test will need to be reworked, but at least this isn't a bug with IMPALA-4555

Commit 9492d451d5d5a82bfc6f4c93c3a0c6e6d0cc4981 in impala's branch refs/heads/master from Thomas Tauber-Marshall
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=9492d45 ]

IMPALA-8183: fix test_reportexecstatus_retry flakiness

The test is designed to cause ReportExecStatus() rpcs to fail by
backing up the control service queue. Previously, after a failed
ReportExecStatus() we would wait 'report_status_retry_interval_ms'
between retries, which was 100ms by default and wasn't touched by the
test. That 100ms was right on the edge of being enough time for the
coordinator to keep up with processing the reports, so that some would
fail but most would succeed. It was always possible that we could hit
IMPALA-2990 in this setup, but it was unlikely.

Now, with IMPALA-4555 'report_status_retry_interval_ms' was removed
and we instead wait 'status_report_interval_ms' between retries. By
default, this is 5000ms, so it should give the coordinator even more
time and make these issues less likely. However, the test sets
'status_report_interval_ms' to 10ms, which isn't nearly enough time
for the coordinator to do its processing, causing lots of the
ReportExecStatus() rpcs to fail and making us hit IMPALA-2990 pretty
often.

The solution is to set 'status_report_interval_ms' to 100ms in the
test, which roughly achieves the same retry frequency as before. The
same change is made to a similar test test_reportexecstatus_timeout.

Testing:
- Ran test_reportexecstatus_retry in a loop 400 times without seeing a
  failure. It previously repro-ed for me about once per 50 runs.
- Manually verified that both tests are still hitting the error paths
  that they are supposed to be testing.

Change-Id: I7027a6e099c543705e5845ee0e5268f1f9a3fb05
Reviewed-on: http://gerrit.cloudera.org:8080/12461
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


