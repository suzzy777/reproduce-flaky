In my opinion daemon should enable native transport only after successful bootstrap to avoid inconsistent state.

Please find patch with the fix here:
||trunk||3.0||2.x||
|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-trunk.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/76]|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-3.0.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/73]  |  [!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-2.2.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/74]|
|[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-trunk] |[patch|https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-3.0] |[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-2.2] |

Please review it and let me know your opinion.

 

This is not a review, but you should have some dtests to validate your patch.

Sure [~jasobrown] I will add a dTest, created sub-task CASSANDRA-14526

[~jasobrown] I've added a dtest for this which passes with this fix and fails on current trunk, please find dtest here:
||dtest||
|[patch |https://github.com/apache/cassandra-dtest/compare/master...jaydeepkumar1984:14526-trunk]|

 

We've already had a ticket (and a _very_ similar patch) for this since November last year... CASSANDRA-14063 

I see [~KurtG], sorry I missed it. In my opinion this is a bug and needs to be fixed (CASSANDRA-14063 should be considered as per FCFS priority). We also need to fix dtest along with this so CASSANDRA-14526 also needs to be landed.

Thanks [~chovatia.jaydeep@gmail.com], I agree. No fault on your part, more a problem with the consistent lack of reviewers we have who can prioritise review work. Just unfortunate that it's wasted more time than necessary for everyone. I think [~VincentWhite] would appreciate the acknowledgement (especially after such a long time) so FCFS makes sense to me, but there's no use doing the work twice, just take into account the two patches slight discrepancies when reviewing I guess.

I agree there are few discrepancy between two patches as following:
 My patch:
 - It was missing check before starting RPC server. I've incorporated this and my latest patch has this.

[~VincentWhite]'s patch:
 - Missing to start {{cql}} post successful {{bootstrap}}
 - Not sure if we need to use separate variable {{streamingSuccessful}} as we can directly use {{SystemKeyspace.bootstrapComplete()}}
 - We should have consistent error message _{{node is not yet bootstraped completely. Use nodetool to check bootstrap state and resume. For more, see nodetool help bootstrap}}_
 - We should make {{isSurveyMode}} volatile as it is being updated by different thread
 - Need to make sure we get patches for all branches and verify CASSANDRA-14526

[~VincentWhite] Do you want to make a complete patch by incorporating above items?

 

[~KurtG] Does this sound ok to you?

Hi [~KurtG]

It seems [~VincentWhite] is not responding, could you please review patch from this ticket?

Jaydeep

Sorry about that, we had a pretty busy week last week and Vince probably won't have time. I'll review.

A few things:
 If we fail streaming and {{isSurveyMode}} is true we still get the NPE if auth is enabled when trying to connect to C* on that node. Not much we can do about this because auth isn't initialised until we join the ring, but I'm not sure why we should handle this situation differently, and also it's currently kind of broken. At the moment if you resume bootstrap after a streaming failure _while in write survey mode_, you will leave write survey mode on completion of bootstrapping (ouch).


 I think we should handle write survey bootstrapping the same as normal bootstrap, where if we get an error during streaming we don't start transports. Then, on resume, handle survey mode so that we _don't_ join the ring on completion of bootstrapping, but we do still start transports.


 On top of that, seeing as we're in this code anyway, I think it would be reasonable if we could look at handling the auth case a bit better when write survey is enabled as well. Ideally, if auth is required I see no point in starting the transports seeing as you'll always get an NPE, so maybe we can add a check for that in {{CassandraDaemon#start()?}}

{{DatabaseDescriptor.getAuthenticator().requireAuthentication()}} should be enough here I think.

 

Some things regarding the error message:
 We've got repeated information in our error:
{code:java}
WARN  [main] 2018-06-25 09:13:24,136 StorageService.java:935 - Some data streaming failed. Use nodetool to check bootstrap state and resume. For more, see `nodetool help bootstrap`. IN_PROGRESS
ERROR [main] 2018-06-25 09:13:32,190 CassandraDaemon.java:445 - Node is not yet bootstraped hence not enabling native transport. Use nodetool to check bootstrap state and resume. For more, see `nodetool help    bootstrap`
{code}
I think our new message should either be INFO or WARN (INFO is in line with other messages in {{start()}}, and I think it would make more sense if the original message in \{{StorageService}} was ERROR. We could change the message in CassandraDaemon to:
{code:java}
Not starting client transports as bootstrap has not completed.{code}
or something similar, to be more in line with the other info messages.

Finally, with your patch if we resume bootstrap we don't start thrift. As per Vince's patch, daemon.start() is desirable here over startNativeTransport so that we always start thrift and CQL.

[~KurtG] Thanks for your review comments. I've made patch simple by not allowing transport if bootstrap is not complete irrespective of {{survey}} mode. Also incorporated other comments, please find updated patch here:

Please find patch with the fix here:
||trunk||3.0||2.x||
|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-trunk.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/76]|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-3.0.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/73]  |  [!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-2.2.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/74]|
|[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-trunk] |[patch|https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-3.0] |[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-2.2] |


Mostly looks good, however we're still leaving write_survey mode after a resume bootstrap completes when we were started in write survey mode. Also just noticed but as we hackily re-use isSurveyMode when resuming a bootstrap we always log the following message regardless of if we were in write survey mode originally or not.
{code}Leaving write survey mode and joining ring at operator request{code}
I think at this point we could solve these 2 problems by simply calling {{finishJoiningRing}} explicitly when we successfully bootstrap after a resume in {{resumeBootstrap}}, rather than indirectly through {{joinRing}, and also handle write_survey in the same place.

Also, another small nit, can we change the spelling of {{bootstraped}} to {{bootstrapped}} in the exception messages?

[~KurtG] I think there was a bug in my previous patch in which it will not start native transport in normal scenario if {{isSurveyMode}} is {{true}}. 
 Also I've discovered another bug exists in current open source code in which if {{isSurveyMode}} is {{true}} and streaming fails (i.e. {{isBootstrapMode}} is {{true}}) then also one can call {{nodetool join}} without {{nodetool bootstrap resume}} and have that node join the ring.

 

I've taken care of this bug and your review comments,please find updated patch here:
||trunk||3.0||2.x||
|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-trunk.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/76]|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-3.0.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/73]  |  [!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-2.2.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/74]|
|[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-trunk] |[patch|https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-3.0] |[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-2.2] |

{quote}Also I've discovered another bug exists in current open source code in which if isSurveyMode is true and streaming fails (i.e. isBootstrapMode is true) then also one can call nodetool join without nodetool bootstrap resume and have that node join the ring.
{quote}
Great catch. I found a couple more small issue w.r.t {{nodetool join}} as well while I was testing this.
 # If in write_survey and you join the ring after bootstrap, transports won't be enabled. can we call {{CassandraDaemon#start()}} here?
 # nodetool join fails silently if write_survey is true and we haven't completed bootstrapping, but server log prints the following
{code:java}
WARN [RMI TCP Connection(5)-127.0.0.1] 2018-06-29 12:39:49,735 StorageService.java:1008 - Some data streaming failed. Use nodetool to check bootstrap state and resume. For more, see `nodetool help bootstrap`. IN_PROGRESS
{code}
nodetool join should say something along the lines of "{{Can't join the ring because in write_survey mode and bootstrap hasn't completed}}"

Also another minor nit w.r.t logging; you can get the following log message after successfully bootstrapping if you were in write survey mode:
{code:java}
INFO [main] 2018-06-29 12:12:39,071 CassandraDaemon.java:479 - Not starting client transports as bootstrap has not completed
{code}
Probably better to split CassandraDaemon.start() if block so that we print "{{Not starting client transports as write_survey mode is enabled.}}"

And finally, there's still 2 occurences of "bootstraped" in the exception messages in {{startNativeTransport}} and {{startRPCServer}}.

[~KurtG] Please find updated review with all of the review comments incorporated.
||trunk||3.0||2.x||
|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-trunk.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/76]|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-3.0.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/73]  |  [!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-2.2.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/74]|
|[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-trunk] |[patch|https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-3.0] |[patch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-2.2] |

Thanks [~chovatia.jaydeep@gmail.com]. I figured it was unfair making you do all the work so I made some changes myself. Basically we were still silently failing with {{nodetool join}}, so I've added {{isBootstrapMode()}} to {{StorageServiceMBean}} and {{NodeProbe}} and added a check for it in {{Join.java}}. I've also tried to simplify some of the if statements (edge cases are killing me) and added a bit of documentation. I also created a 3.11 branch from our changes as there were a few conflicts from 3.0.

Finally, I extended your dtest from CASSANDRA-14526 to cover the write_survey, join and resume cases to be in line with the changes we've made, and also changed the byteman rule to trigger on {{maybeCompleted()}} as it wasn't consistently triggering on {{startStreamingFiles()}}

Now I think we're pretty much ready to go, but if you want to give my changes a once over to make sure I haven't missed anything as I'm sure you're aware the startup code is an absolute nightmare.

Also, I haven't run the whole dtest suite, but I've at least run all the bootstrap dtests and they are all passing, so I'm taking that as a good sign.
||2.2||3.0||3.11||trunk||dtests||
|[branch|https://github.com/apache/cassandra/compare/cassandra-2.2...kgreav:14525-2.2]|[branch|https://github.com/apache/cassandra/compare/cassandra-3.0...kgreav:14525-3.0]|[branch|https://github.com/apache/cassandra/compare/cassandra-3.11...kgreav:14525-3.11]|[branch|https://github.com/apache/cassandra/compare/trunk...kgreav:14525-trunk]|[branch|https://github.com/apache/cassandra-dtest/compare/master...kgreav:14526-trunk-k]|
|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-2.2.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/178]|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-3.0.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/181]|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-3.11.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/180]|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-trunk.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/183]|

[~KurtG] Thanks for making the changes! 

Latest code changes looks good to me.

So I messed up a merge to 3.11 and upon doing further dtests found some issues and inefficiencies. These have all been fixed up now and branches above should be all up to date and passing tests so going to mark this as ready to commit.
||2.2||3.0||3.11||trunk||dtests||
|[branch|https://github.com/apache/cassandra/compare/cassandra-2.2...kgreav:14525-2.2]|[branch|https://github.com/apache/cassandra/compare/cassandra-3.0...kgreav:14525-3.0]|[branch|https://github.com/apache/cassandra/compare/cassandra-3.11...kgreav:14525-3.11]|[branch|https://github.com/apache/cassandra/compare/trunk...kgreav:14525-trunk]|[branch|https://github.com/apache/cassandra-dtest/compare/master...kgreav:14526-trunk]|
|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-2.2.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/202]|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-3.0.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/199]|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-3.11.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/201]|[!https://circleci.com/gh/kgreav/cassandra/tree/14525-trunk.svg?style=svg! |https://circleci.com/gh/kgreav/cassandra/200]|

[~KurtG] - I pulled your branch and have run the dtests with some failures. See [here.|https://circleci.com/workflow-run/035dca04-5b2b-4fb2-aebe-3089d876f995]

Thanks heaps [~djoshi3], I'll look into it.

[~KurtG] I did analyze all the 9 failing dtests from [~djoshi3]'s run and found that they all expect CQL up and running w/o bootstrap, and as per our new design in this ticket, it is simply not allowed.

So I believe we simply have to remove those 9 dtests. Please check and let me know if you need my help anywhere.

Thanks [~djoshi3] for doing a dtest run for us!

Thanks so much. I have been meaning to get back to this but since we missed the boat on 3.11.3 I figured this could wait until Sept 1st. If you want you can go ahead and fix the tests, otherwise if not I'll have a look next week :)

[~KurtG] I've fixed the failing dtests by changing some part in Cassandra and some part in dtests. Please review them whenever you get a chance. Thank You!
||2.2||3.0||3.11||trunk||dtests||
|[branch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-2.2] |[branch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-3.0] |[branch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-3.11] |[branch |https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-trunk]|[branch |https://github.com/apache/cassandra-dtest/compare/master...jaydeepkumar1984:14526-trunk]|
|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-2.2.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/=132]|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-3.0.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/=133]  |  [!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-3.11.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/=128]|[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/14525-trunk.svg?style=svg! |https://circleci.com/gh/jaydeepkumar1984/cassandra/=129]|

Looks good to me. Probably need another run of the dtests though :/

[~jay.zhuang] [~djoshi3] Can one of you please help run a final round of dtest so that this ticket can be committed and closed? 

Sure, I'll kick off the tests.

Sorry, did not see your comment earlier. I think we should update the dtests rather than removing them. 

Rebased the code and started the tests:
| Branch | uTest | dTest |
| [14525-2.2|https://github.com/cooldoger/cassandra/tree/14525-2.2] | [!https://circleci.com/gh/cooldoger/cassandra/tree/14525-2.2.svg?style=svg!|https://circleci.com/gh/cooldoger/cassandra/tree/14525-2.2] | [!https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/664/badge/icon!|https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/664/] |
| [14525-3.0|https://github.com/cooldoger/cassandra/tree/14525-3.0] | [!https://circleci.com/gh/cooldoger/cassandra/tree/14525-3.0.svg?style=svg!|https://circleci.com/gh/cooldoger/cassandra/tree/14525-3.0] | [!https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/665/badge/icon!|https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/665/] |
| [14525-3.11|https://github.com/cooldoger/cassandra/tree/14525-3.11] | [!https://circleci.com/gh/cooldoger/cassandra/tree/14525-3.11.svg?style=svg!|https://circleci.com/gh/cooldoger/cassandra/tree/14525-3.11] | [!https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/666/badge/icon!|https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/666/] |
| [14525-trunk|https://github.com/cooldoger/cassandra/tree/14525-trunk] | [!https://circleci.com/gh/cooldoger/cassandra/tree/14525-trunk.svg?style=svg!|https://circleci.com/gh/cooldoger/cassandra/tree/14525-trunk] | [!https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/667/badge/icon!|https://builds.apache.org/view/A-D/view/Cassandra/job/Cassandra-devbranch-dtest/667/] |

The uTest failure is because CASSANDRA-14946. The check conditions are hard to read, how about switching it from:
{noformat}
        // We only start transports if bootstrap has completed and we're not in survey mode, OR if we are in
        // survey mode and streaming has completed but we're not using auth.
        // OR if we have not joined the ring yet.
        if (StorageService.instance.hasJoined() &&
                ((!StorageService.instance.isSurveyMode() && !SystemKeyspace.bootstrapComplete()) ||
                (StorageService.instance.isSurveyMode() && StorageService.instance.isBootstrapMode())))
        {
            logger.info("Not starting client transports as bootstrap has not completed");
            return;
        }
        else if (StorageService.instance.hasJoined() &&  StorageService.instance.isSurveyMode() &&
                DatabaseDescriptor.getAuthenticator().requireAuthentication())
        {
            // Auth isn't initialised until we join the ring, so if we're in survey mode auth will always fail.
            logger.info("Not starting client transports as write_survey mode and authentication is enabled");
            return;
        }
{noformat}
to:
{noformat}
        // Do not start the transports if we already joined the ring AND
        // if we are in survey mode, streaming has not completed or auth is enabled
        // if we are not in survey mode, bootstrap has not completed
        if (StorageService.instance.hasJoined())
        {
            if (StorageService.instance.isSurveyMode())
            {
                if (StorageService.instance.isBootstrapMode() ||
                    DatabaseDescriptor.getAuthenticator().requireAuthentication())
                {
                    logger.info("Not starting client transports in write_survey mode as it's bootstrapping or auth is enabled");
                    return;
                }
            }
            else
            {
                if (!SystemKeyspace.bootstrapComplete()) {
                    logger.info("Not starting client transports as bootstrap has not completed");
                    return;
                }
            }
        }
{noformat}

Thanks [~jay.zhuang] for the review, I've incorporated the changes. Please find latest patch details here:
||Branch ||uTest ||
|[2.2|https://github.com/apache/cassandra/compare/cassandra-2.2...jaydeepkumar1984:14525-2.2?expand=1] |[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/bqr.svg?style=svg! | https://circleci.com/gh/jaydeepkumar1984/cassandra/161]  |
|[3.0|https://github.com/apache/cassandra/compare/cassandra-3.0...jaydeepkumar1984:14525-3.0?expand=1] |[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/bqr.svg?style=svg! | https://circleci.com/gh/jaydeepkumar1984/cassandra/160]  |
|[3.11|https://github.com/apache/cassandra/compare/cassandra-3.11...jaydeepkumar1984:14525-3.11?expand=1] |[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/bqr.svg?style=svg! | https://circleci.com/gh/jaydeepkumar1984/cassandra/162]  |
|[trunk|https://github.com/apache/cassandra/compare/trunk...jaydeepkumar1984:14525-trunk?expand=1] |[!https://circleci.com/gh/jaydeepkumar1984/cassandra/tree/bqr.svg?style=svg! | https://circleci.com/gh/jaydeepkumar1984/cassandra/164]  |

Hi, just a question : {{SystemKeyspace.bootstrapComplete()}} is checked here: [https://github.com/apache/cassandra/commit/9c3fb65e697d810321936e06504de4b2f7cf633f#diff-b76a607445d53f18a98c9df14323c7ddR392]

But not here: [https://github.com/apache/cassandra/commit/9c3fb65e697d810321936e06504de4b2f7cf633f#diff-b76a607445d53f18a98c9df14323c7ddR351]

Is that expected?

Yes [~jay.zhuang] that is expected, because {{isSurveyMode=true}} mode and {{SystemKeyspace.bootstrapComplete()=true}} does not co-exist

e.g. 
 [If in survey mode then bootstrap will not be COMPLETE |https://github.com/apache/cassandra/blob/cassandra-3.0/src/java/org/apache/cassandra/service/StorageService.java#L929]
 [If we give-up survey mode then bootstrap will be COMPLETE |https://github.com/apache/cassandra/blob/cassandra-3.0/src/java/org/apache/cassandra/service/StorageService.java#L985]

So this check {{!SystemKeyspace.bootstrapComplete()}} at [this line|https://github.com/apache/cassandra/commit/9c3fb65e697d810321936e06504de4b2f7cf633f#diff-b76a607445d53f18a98c9df14323c7ddR392] was redundant which is been removed in the latest diffs.

Thanks [~chovatia.jaydeep@gmail.com] and [~KurtG]. Committed as [{{a6196a3}}|https://github.com/apache/cassandra/commit/a6196a3a79b67dc6577747e591456328e57c314f].

Thanks [~jay.zhuang] [~KurtG] [~djoshi3]

This breaks bootstrap_test.py:TestBootstrap.test_resumable_bootstrap. The test expects the cluster to start the native interface when bootstrap fails.

I think test_resume secondary_indexes_test.py:TestPreJoinCallback.test_resume has the same issue.


[~aweisberg] I've already taken care of dests as part of https://issues.apache.org/jira/browse/CASSANDRA-14526, here is the [patch for dtest|https://github.com/apache/cassandra-dtest/compare/master...jaydeepkumar1984:14526-trunk]. Not sure if [~jay.zhuang] got a chance to fire dtest, if possible could you please help me start dtest with this patch?

OK, it's better to avoid committing any dtest breakage. If there are 10 developers occasionally committing dtest breakage then each of them has to look at the current set of breakage and figure out if it was their changes that are causing issues or some other set of changes.

And I am very aware I am in a glass house when I say this!

If you want to break things into multiple JIRAs or commits it's fine, but it's less disruptive if you wait until everything is complete before landing any piece of it.

If Jay is reviewing the dtest changes I'll kick it off a dtest run, but let him finish the review.

Apologize for not having both the fixes landed at the same time, will take utmost care in the future.

[~jay.zhuang] If you have sometime then could you please validate the dtest and land it if it looks fine?

I'm sorry for not committing the dtest change. Will do that ASAP (I'm still trying to confirm a few flaky tests are not introduced by the changes).

