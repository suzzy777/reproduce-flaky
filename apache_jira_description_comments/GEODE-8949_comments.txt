mmartell opened a new pull request #745:
URL: https://github.com/apache/geode-native/pull/745


   This brings in the work of pivotal-jbarrett to the develop branch. It has been tested after merging with develop. Several new pieces are being brought in including but not limited to:
   
   - a PR pipeline (all PRs must pass this pipeline before they can be merged)
   - a new yaml templating tool (ytt)
   - new Windows tooling (Visual Studio 2019)
   - new Windows operating system (Windows Server 2019)
   - enhanced test discovery and test parallelism


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on pull request #745:
URL: https://github.com/apache/geode-native/pull/745#issuecomment-780147108


   Do you have a recommended way of reviewing these changes?  Normally I tried to look at individual commits if there are specific and descriptive commit messages, but there's 30 commits to go through.  There are also changes to clang tidy and format (I think moving from 6 to 11?) in addition to adding a pipeline (and some other things since I see changes to c# files, which I assume is fixing the compilation problem I've seen on VS2019.)  While I'm a fan of an up to date clang, I don't know how that is suppose to factor in this change.  In the shadow pipeline I've been running, I didn't have to make those changes so surprised they are in here.  Definitely will need time to look at all these changes (seems like large deletes of packer things happened also)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on pull request #745:
URL: https://github.com/apache/geode-native/pull/745#issuecomment-780147886


   Also is there a publicly deployed version of this pipeline to see it or do I need to build a deploy to my own concourse to see and test it?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske edited a comment on pull request #745:
URL: https://github.com/apache/geode-native/pull/745#issuecomment-780147108


   Do you have a recommended way of reviewing these changes?  Normally I tried to look at individual commits if there are specific and descriptive commit messages, but there's ~~30~~ 100s of commits to go through.  There are also changes to clang tidy and format (I think moving from 6 to 11?) in addition to adding a pipeline (and some other things since I see changes to c# files, which I assume is fixing the compilation problem I've seen on VS2019.)  While I'm a fan of an up to date clang, I don't know how that is suppose to factor in this change.  In the shadow pipeline I've been running, I didn't have to make those changes so surprised they are in here.  Definitely will need time to look at all these changes (seems like large deletes of packer things happened also)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on pull request #745:
URL: https://github.com/apache/geode-native/pull/745#issuecomment-780150709


   Good questions Mo. Yah, I should have squashed these. I'll close this one and resubmit a new PR. To view the new pipeline:
   https://concourse.apachegeode-ci.info/teams/main/pipelines/geode-native-develop


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell closed pull request #745:
URL: https://github.com/apache/geode-native/pull/745


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell opened a new pull request #746:
URL: https://github.com/apache/geode-native/pull/746


   This brings in the work of pivotal-jbarrett to the develop branch. It has been tested after merging with develop. Several new pieces are being brought in including but not limited to:
   
   - a PR pipeline (all PRs must pass this pipeline before they can be merged)
   - a new yaml templating tool (ytt)
   - new Windows tooling (Visual Studio 2019)
   - new Windows operating system (Windows Server 2019)
   - enhanced test discovery and test parallelism
   
   To keep the geode-native history clean, the almost 200 commits have been squashed into this single commit, which is highlighted below:
   
   * Decrease parallelism to fix Windows 2019 test failures
   * Fixes versioning together
   * Remove ABI compatibility flags
   * Increase TIMEBOMB to 600
   * Disable DataInput test for now
   * Fix clang-format error
   * Fixes packer image projects
   * Rename keys and tokens per RTM names
   * Remove Python, PIP and Coveralls from Ubuntu 16.04
   * Integrate rat-check properly into GitHub PR apparatus
   * Add license and/or exclusion as appropriate to pass RAT check (#4)
   * Fix ABI compatibility
   * Use LLVM 11
   * Add Ubunutu 20.04
   * Upgrade cmake and add make
   * Remove unused exports. Remaining exports are for testing.
   * Hide symbols from staticly linked libraries
   * Increase timeouts
   * Fix warnings
   * Add github icon
   * Split out GitHub components for various GitHub resources
   * Tag builds and upload artifacts
   * Add functions to reduce yaml redundancy
   * Reduce resource complexity
   * Use resource to expand geode
   * Updates for release and pr pipelines
   * Fixes per clang-tidy and hide noise
   * Fixes per clang-format and hide noise
   * Add clang-tools Dockerfile
   * Improve CacheImpl (nothing should be virtual)
   * Improve abstract classes (should define virtual destructors)
   * Use the concourse worker's zone by default
   * Don't be so verbose with pipeline output
   * Always fetch latest cmake
   * Rerun failed tests (ctest retry with count 4)
   * Disable broken IPv6 test
   * Fix test failures due to folder collisions
   * Cleanup test output directories for failed tests
   * Improve execution of gfsh (use less memory)
   * Improve gfsh scoping in integration tests
   * Add GfshExecute class to legacy integration tests
   * Add heap settings to GfshExecute
   * Kill all user processes before running tests
   * Use tar to speed up file copies
   * README for GitHub Private Key
   * Fix for .NET 3.5 install on Windows 2016
   * Fixes boost on windows
   * Fixes for ACE
   * Don't checkout sources after upload.
   * Update Building.md per new tooling support
   * Package icon
   * Fixes Windows 2016
   * Remove used windows build scripts
   * Update to boost 1.75.0 and fix MSVC
   * Support for Visual Studio 2019
   * Explicitly set MSVC toolset and Windows SDK
   * Don't retrigger PRs on new versions
   * Improve build-in help for set-pipeline.sh
   * Don't rebuild on image changes
   * Retry packer builds if they fail
   * Update README.md for new CI
   * Add error for canceled jobs
   * Copy source from worker to builder
   * Support for PR resource
   * Split release and pr pipelines
   * Upload packages to GCS
   * Parameterize bucket and key
   * Configure build type, version, date, etc
   * Support semver
   * Templatize docker builds
   * Use newer registry-image resource for images not built in this project.
   * Fix Dockerfile path and caches.
   * Use project specific minimal task image
   * Fix legacy integration port allocations
   * Fix .NET test execution
   * Add support for Windows Server 2019
   * Fix install of .NET 3.5 via WinRM
   * Added Google Compute support


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on pull request #746:
URL: https://github.com/apache/geode-native/pull/746#issuecomment-780741052


   I see one pipeline https://concourse.apachegeode-ci.info/teams/main/pipelines/geode-native-develop?group=all as a running an example of the PR changes.  Does this run both the `develop` branch and PRs or is there a separate PR pipeline deployed?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578033463



##########
File path: docker/centos-7/Dockerfile
##########
@@ -0,0 +1,56 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+FROM centos/devtoolset-4-toolchain-centos7:latest
+LABEL maintainer Apache Geode <dev@geode.apache.org>
+
+USER root
+WORKDIR /
+
+RUN yum update -y && \
+    yum -y clean all
+
+COPY bellsoft.repo /etc/yum.repos.d/
+
+RUN yum update -y && \
+    yum install -y \
+        git \
+        make \
+        zlib-devel \
+        patch \
+        openssl-devel \
+        bellsoft-java11 \
+        doxygen \
+        python3-pip \
+        which && \
+    yum -y clean all
+
+RUN pip3 install --upgrade pip && \
+    pip3 install cpp-coveralls
+
+RUN installer=$(mktemp) \
+    && curl -o ${installer} -L $(curl -s https://api.github.com/repos/Kitware/CMake/releases/latest \
+        | grep 'browser_download_url.*Linux-x86_64\.sh' \
+        | cut -d : -f 2,3 \
+        | tr -d '"') \
+    && bash ${installer} --skip-license --prefix=/usr/local \
+    && rm ${installer}
+
+ARG GEODE_VERSION=1.12.0

Review comment:
       Why is this not using the latest geode of 1.13.1?  This seems to be the case in all of the dockerfiles added.  How do we plan to keep this up to date?  It seems painful to remember to update this value in all dockerfiles every time there is a release, but maybe that is more of a wait and see problem




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578043646



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure

Review comment:
       since you're updating to a new cmake, I'd recommend adding `--schedule-random` to all ctest commands (see https://cmake.org/cmake/help/v3.18/manual/ctest.1.html#options)

##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure
+(@- end @)
+
+(@ def run_cpp_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration/test ctest -C ${CMAKE_CONFIG} -j6 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_cpp_legacy_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration-test ctest -C ${CMAKE_CONFIG} -j4 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_net_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.Tests2.dll -parallel all
+(@- end @)
+
+(@ def run_net_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/integration-test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.IntegrationTests2.dll -verbose -maxthreads 6

Review comment:
       Why no `-parallel all`?  Or does maxthreads cover that?

##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure
+(@- end @)
+
+(@ def run_cpp_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration/test ctest -C ${CMAKE_CONFIG} -j6 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_cpp_legacy_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration-test ctest -C ${CMAKE_CONFIG} -j4 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_net_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.Tests2.dll -parallel all

Review comment:
       I think `-verbose` is still useful even for unit tests




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578554418



##########
File path: docker/centos-7/Dockerfile
##########
@@ -0,0 +1,56 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+FROM centos/devtoolset-4-toolchain-centos7:latest
+LABEL maintainer Apache Geode <dev@geode.apache.org>
+
+USER root
+WORKDIR /
+
+RUN yum update -y && \
+    yum -y clean all
+
+COPY bellsoft.repo /etc/yum.repos.d/
+
+RUN yum update -y && \
+    yum install -y \
+        git \
+        make \
+        zlib-devel \
+        patch \
+        openssl-devel \
+        bellsoft-java11 \
+        doxygen \
+        python3-pip \
+        which && \
+    yum -y clean all
+
+RUN pip3 install --upgrade pip && \
+    pip3 install cpp-coveralls
+
+RUN installer=$(mktemp) \
+    && curl -o ${installer} -L $(curl -s https://api.github.com/repos/Kitware/CMake/releases/latest \
+        | grep 'browser_download_url.*Linux-x86_64\.sh' \
+        | cut -d : -f 2,3 \
+        | tr -d '"') \
+    && bash ${installer} --skip-license --prefix=/usr/local \
+    && rm ${installer}
+
+ARG GEODE_VERSION=1.12.0

Review comment:
       Good catch. Yah, we have several places where we set GEODE_VERSION. Seems like this should be set in a single place. For now, setting  all to 1.13.1. Will create a ticket to fix this.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578595067



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure

Review comment:
       Works for me. Looks like this has been in ctest for a long time. Since we do still have a few intermittent failure, It will be interesting to see how random scheduling affects that, and how it uses random scheduling when rerunning failed tests (we currently use --repeat until-pass:4).




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578599761



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure
+(@- end @)
+
+(@ def run_cpp_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration/test ctest -C ${CMAKE_CONFIG} -j6 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_cpp_legacy_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration-test ctest -C ${CMAKE_CONFIG} -j4 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_net_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.Tests2.dll -parallel all

Review comment:
       I have mixed feelings on that. If Concourse supported paginated output then -verbose is fine. But since it doesn't, having so much output sometimes takes too long before you find what you need.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578603357



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure
+(@- end @)
+
+(@ def run_cpp_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration/test ctest -C ${CMAKE_CONFIG} -j6 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_cpp_legacy_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration-test ctest -C ${CMAKE_CONFIG} -j4 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_net_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.Tests2.dll -parallel all

Review comment:
       Alright makes sense.  Here's an [example](https://github.com/moleske/geode-native/runs/1924579941) of how much the verbose output is on cli unit tests when it fails just as a reference




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578605951



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure

Review comment:
       Here's an [example](https://github.com/moleske/geode-native/runs/1923184473) where I use `--repeat until-pass:3` and `--schedule-random` while running your PR in my shadow pipeline.  It basically just runs the failed test immediately again




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578603357



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure
+(@- end @)
+
+(@ def run_cpp_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration/test ctest -C ${CMAKE_CONFIG} -j6 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_cpp_legacy_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration-test ctest -C ${CMAKE_CONFIG} -j4 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_net_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.Tests2.dll -parallel all

Review comment:
       Alright makes sense.  Here's an [example](https://github.com/moleske/geode-native/runs/1924579941) of how much the verbose output is on cli unit tests when it fails just as a reference (using this PR and my shadow pipeline)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578607252



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure
+(@- end @)
+
+(@ def run_cpp_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration/test ctest -C ${CMAKE_CONFIG} -j6 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_cpp_legacy_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/integration-test ctest -C ${CMAKE_CONFIG} -j4 --timeout=500 --output-on-failure --repeat until-pass:4
+(@- end @)
+
+(@ def run_net_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.Tests2.dll -parallel all
+(@- end @)
+
+(@ def run_net_integration_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/clicache/integration-test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.IntegrationTests2.dll -verbose -maxthreads 6

Review comment:
       Very good question. In general, anything that speeds up the CI turnaround is a good thing. I think this is worth investigating, but I don't think it's appropriate for this PR. Jake has made some changes in the area of parallelization that need to be vetted first. In particular, he has a new test discovery mechanism that he's working on. Also, I think we need to fix all test flakiness (and not require --rerun) before doing test optimization.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578608904



##########
File path: docker/centos-7/Dockerfile
##########
@@ -0,0 +1,56 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+FROM centos/devtoolset-4-toolchain-centos7:latest
+LABEL maintainer Apache Geode <dev@geode.apache.org>
+
+USER root
+WORKDIR /
+
+RUN yum update -y && \
+    yum -y clean all
+
+COPY bellsoft.repo /etc/yum.repos.d/
+
+RUN yum update -y && \
+    yum install -y \
+        git \
+        make \
+        zlib-devel \
+        patch \
+        openssl-devel \
+        bellsoft-java11 \
+        doxygen \
+        python3-pip \
+        which && \
+    yum -y clean all
+
+RUN pip3 install --upgrade pip && \
+    pip3 install cpp-coveralls
+
+RUN installer=$(mktemp) \
+    && curl -o ${installer} -L $(curl -s https://api.github.com/repos/Kitware/CMake/releases/latest \
+        | grep 'browser_download_url.*Linux-x86_64\.sh' \
+        | cut -d : -f 2,3 \
+        | tr -d '"') \
+    && bash ${installer} --skip-license --prefix=/usr/local \
+    && rm ${installer}
+
+ARG GEODE_VERSION=1.12.0

Review comment:
       For the dockerfiles, I'm pretty sure on the `docker build` command you can pass args.  So if scripting all those `docker build` commands, you would be able to have a single variable reused




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578608904



##########
File path: docker/centos-7/Dockerfile
##########
@@ -0,0 +1,56 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+FROM centos/devtoolset-4-toolchain-centos7:latest
+LABEL maintainer Apache Geode <dev@geode.apache.org>
+
+USER root
+WORKDIR /
+
+RUN yum update -y && \
+    yum -y clean all
+
+COPY bellsoft.repo /etc/yum.repos.d/
+
+RUN yum update -y && \
+    yum install -y \
+        git \
+        make \
+        zlib-devel \
+        patch \
+        openssl-devel \
+        bellsoft-java11 \
+        doxygen \
+        python3-pip \
+        which && \
+    yum -y clean all
+
+RUN pip3 install --upgrade pip && \
+    pip3 install cpp-coveralls
+
+RUN installer=$(mktemp) \
+    && curl -o ${installer} -L $(curl -s https://api.github.com/repos/Kitware/CMake/releases/latest \
+        | grep 'browser_download_url.*Linux-x86_64\.sh' \
+        | cut -d : -f 2,3 \
+        | tr -d '"') \
+    && bash ${installer} --skip-license --prefix=/usr/local \
+    && rm ${installer}
+
+ARG GEODE_VERSION=1.12.0

Review comment:
       For the dockerfiles, I'm pretty sure on the `docker build` command you can pass args.  So if scripting all those `docker build` commands, you would be able to have a single variable reused.  So that can be added to the new jira story to do this




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578613553



##########
File path: ci/lib/templates.lib.txt
##########
@@ -0,0 +1,253 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+(@ load("@ytt:data", "data") -@)
+(@ load("functions.lib.yml",
+        "gci_label_value",
+        "image_family_name")
+-@)
+
+(@ def google_variables(): -@)
+GOOGLE_PROJECT=(@=data.values.google.project @)
+GOOGLE_ZONE=(@=data.values.google.zone @)
+(@- end @)
+
+
+(@ def instance_variables(): -@)
+INSTANCE_USER=build
+INSTANCE_DIR=$(pwd)/instance
+
+if [ ! -d "${INSTANCE_DIR}" ]; then
+  echo "${INSTANCE_DIR} not found."
+  exit 1
+fi
+(@- end @)
+
+(@ def remote_functions(): -@)
+(@=instance_variables() @)
+
+SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}
+
+ssh_key_file=${INSTANCE_DIR}/identity
+if [ ! -r "${ssh_key_file}" ]; then
+  echo "${ssh_key_file} not readable."
+  exit 1
+fi
+
+instance_file=${INSTANCE_DIR}/instance.sh
+if [ ! -r "${instance_file}" ]; then
+  echo "${instance_file} not readable."
+  exit 1
+fi
+
+external_ip=$(source ${instance_file} && echo -n ${networkInterfaces_accessConfigs_natIP})
+
+function remote_shell {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
+}
+
+function remote_download {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
+}
+
+function remote_download_directory {
+  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} tar -C $(dirname ${1}) -czf - $(basename ${1}) | tar -C ${2} -zxf -
+}
+
+function remote_upload {
+  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "$1" "${INSTANCE_USER}@${external_ip}:${2}"
+}
+
+(@- end @)
+
+(@ def run_cpp_unit_tests(): -@)
+set -ueo pipefail
+(@= remote_functions() @)
+remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure --schedule-random

Review comment:
       `-j8` on the cppcache unit tests doesn't make sense since there is only one possible job to run.  Though fine keeping it if we feel they'll be more
   
   ```
   2021-02-18 09:27 ~/workspace/geode-native/build/cppcache/test |wip/ci-layers ↓·4 U:1|
   moleske-a01 moeng $ ctest -j8
   Test project /Users/pivotal/workspace/geode-native/build/cppcache/test
       Start 1: apache-geode_unittests
   1/1 Test #1: apache-geode_unittests ...........   Passed   11.87 sec
   
   100% tests passed, 0 tests failed out of 1
   ```




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on pull request #746:
URL: https://github.com/apache/geode-native/pull/746#issuecomment-781577308


   Can we expose the details of jobs on https://concourse.apachegeode-ci.info/teams/main/pipelines/geode-native-develop?group=all ?  I'm pretty sure there are no secrets being printed (or at least there shouldn't be.)  This way someone who is not a committer yet can see what the jobs are doing.  I'm also trying to compare some runs to my shadow CI to understand the code changes related to llvm 11 and visual studio 2019 and don't feel I should have to request concourse access to see this information


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske edited a comment on pull request #746:
URL: https://github.com/apache/geode-native/pull/746#issuecomment-781577308


   Can we expose the details of jobs on https://concourse.apachegeode-ci.info/teams/main/pipelines/geode-native-develop?group=all ?  I'm pretty sure there are no secrets being printed (or at least there shouldn't be.)  This way someone who is not a committer yet can see what the jobs are doing.  I'm also trying to compare some runs to my shadow CI to understand the code changes related to llvm 11 and visual studio 2019 and don't feel I should have to request concourse access to see this information
   
   Here are the [checks](https://github.com/moleske/geode-native/pull/36/checks) I'm running for those curious


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


echobravopapa commented on pull request #746:
URL: https://github.com/apache/geode-native/pull/746#issuecomment-781611653


   Hi @moleske really appreciate the feedback and feature requests, how would you feel about filing improvement tickets against the CI?  the Geode Native community will certainly look to make improvements, but it is valuable that to the CI out there for this to happen... 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on pull request #746:
URL: https://github.com/apache/geode-native/pull/746#issuecomment-781614962


   > Hi @moleske really appreciate the feedback and feature requests, how would you feel about filing improvement tickets against the CI? the Geode Native community will certainly look to make improvements, but it is valuable that to the CI out there for this to happen...
   
   I'll unblock, but this has the _Athena burst from Zeus's head_ style (one giant thing all at once) rather than smaller pieces to make it easy to review.  Since it is coming in one giant piece, I assumed we were trying to cover all things.  Cause I'm noticing now that IPv6 tests pass on linux, mac, and windows but can't find where that is tested in the pipeline (yes it is an optional feature, but we have tests for it and should run it)
   
   My question then, is what kind of review are folks actually looking for then, since there is no direction as to what is important for feedback


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #746:
URL: https://github.com/apache/geode-native/pull/746#discussion_r578817474



##########
File path: docker/centos-7/Dockerfile
##########
@@ -0,0 +1,56 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+FROM centos/devtoolset-4-toolchain-centos7:latest
+LABEL maintainer Apache Geode <dev@geode.apache.org>
+
+USER root
+WORKDIR /
+
+RUN yum update -y && \
+    yum -y clean all
+
+COPY bellsoft.repo /etc/yum.repos.d/
+
+RUN yum update -y && \
+    yum install -y \
+        git \
+        make \
+        zlib-devel \
+        patch \
+        openssl-devel \
+        bellsoft-java11 \
+        doxygen \
+        python3-pip \
+        which && \
+    yum -y clean all
+
+RUN pip3 install --upgrade pip && \
+    pip3 install cpp-coveralls
+
+RUN installer=$(mktemp) \
+    && curl -o ${installer} -L $(curl -s https://api.github.com/repos/Kitware/CMake/releases/latest \
+        | grep 'browser_download_url.*Linux-x86_64\.sh' \
+        | cut -d : -f 2,3 \
+        | tr -d '"') \
+    && bash ${installer} --skip-license --prefix=/usr/local \
+    && rm ${installer}
+
+ARG GEODE_VERSION=1.12.0

Review comment:
       Captured the GEODE_VERSION issue as GEODE-8954. Also, put in your idea of passing in the variable to the docker command.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on pull request #746:
URL: https://github.com/apache/geode-native/pull/746#issuecomment-781865930


   The Travis build is reporting what looks like a false positive in ACE/OS_NS_netdb.inl during clang-analyzer:
   
     if (0 == name || '\0' == name[0])
         return 0;
   
    Others have reported similar false positives. Merging this for now so we can check the rest of the CI.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit bb2f0e448edd0caa0d82f876a2b8a6a646301fb8 in geode-native's branch refs/heads/develop from Michael Martell
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=bb2f0e4 ]

GEODE-8949: Create a new CI pipeline (#746)

* GEODE-8949: Create a new CI pipeline
* Decrease parallelism to fix Windows 2019 test failures
* Fixes versioning together
* Remove ABI compatibility flags
* Increase TIMEBOMB to 600
* Disable DataInput test for now
* Fix clang-format error
* Fixes packer image projects
* Rename keys and tokens per RTM names
* Remove Python, PIP and Coveralls from Ubuntu 16.04
* Integrate rat-check properly into GitHub PR apparatus
* Add license and/or exclusion as appropriate to pass RAT check (#4)
* Fix ABI compatibility
* Use LLVM 11
* Add Ubunutu 20.04
* Upgrade cmake and add make
* Remove unused exports. Remaining exports are for testing.
* Hide symbols from staticly linked libraries
* Increase timeouts
* Fix warnings
* Add github icon
* Split out GitHub components for various GitHub resources
* Tag builds and upload artifacts
* Add functions to reduce yaml redundancy
* Reduce resource complexity
* Use resource to expand geode
* Updates for release and pr pipelines
* Fixes per clang-tidy and hide noise
* Fixes per clang-format and hide noise
* Add clang-tools Dockerfile
* Improve CacheImpl (nothing should be virtual)
* Improve abstract classes (should define virtual destructors)
* Use the concourse worker's zone by default
* Don't be so verbose with pipeline output
* Always fetch latest cmake
* Rerun failed tests (ctest retry with count 4)
* Disable broken IPv6 test
* Fix test failures due to folder collisions
* Cleanup test output directories for failed tests
* Improve execution of gfsh (use less memory)
* Improve gfsh scoping in integration tests
* Add GfshExecute class to legacy integration tests
* Add heap settings to GfshExecute
* Kill all user processes before running tests
* Use tar to speed up file copies
* README for GitHub Private Key
* Fix for .NET 3.5 install on Windows 2016
* Fixes boost on windows
* Fixes for ACE
* Don't checkout sources after upload.
* Update Building.md per new tooling support
* Package icon
* Fixes Windows 2016
* Remove used windows build scripts
* Update to boost 1.75.0 and fix MSVC
* Support for Visual Studio 2019
* Explicitly set MSVC toolset and Windows SDK
* Don't retrigger PRs on new versions
* Improve build-in help for set-pipeline.sh
* Don't rebuild on image changes
* Retry packer builds if they fail
* Update README.md for new CI
* Add error for canceled jobs
* Copy source from worker to builder
* Support for PR resource
* Split release and pr pipelines
* Upload packages to GCS
* Parameterize bucket and key
* Configure build type, version, date, etc
* Support semver
* Templatize docker builds
* Use newer registry-image resource for images not built in this project.
* Fix Dockerfile path and caches.
* Use project specific minimal task image
* Fix legacy integration port allocations
* Fix .NET test execution
* Add support for Windows Server 2019
* Fix install of .NET 3.5 via WinRM
* Added Google Compute support
* Upgrade to cmake 3.18
* Use GEODE_VERSION=1.13.1
* Adding --schedule-random to ctests
* Update travis.yml to use new cmake

Co-authored-by: Jacob Barrett <jbarrett@pivotal.io>

Commit bb2f0e448edd0caa0d82f876a2b8a6a646301fb8 in geode-native's branch refs/heads/develop from Michael Martell
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=bb2f0e4 ]

GEODE-8949: Create a new CI pipeline (#746)

* GEODE-8949: Create a new CI pipeline
* Decrease parallelism to fix Windows 2019 test failures
* Fixes versioning together
* Remove ABI compatibility flags
* Increase TIMEBOMB to 600
* Disable DataInput test for now
* Fix clang-format error
* Fixes packer image projects
* Rename keys and tokens per RTM names
* Remove Python, PIP and Coveralls from Ubuntu 16.04
* Integrate rat-check properly into GitHub PR apparatus
* Add license and/or exclusion as appropriate to pass RAT check (#4)
* Fix ABI compatibility
* Use LLVM 11
* Add Ubunutu 20.04
* Upgrade cmake and add make
* Remove unused exports. Remaining exports are for testing.
* Hide symbols from staticly linked libraries
* Increase timeouts
* Fix warnings
* Add github icon
* Split out GitHub components for various GitHub resources
* Tag builds and upload artifacts
* Add functions to reduce yaml redundancy
* Reduce resource complexity
* Use resource to expand geode
* Updates for release and pr pipelines
* Fixes per clang-tidy and hide noise
* Fixes per clang-format and hide noise
* Add clang-tools Dockerfile
* Improve CacheImpl (nothing should be virtual)
* Improve abstract classes (should define virtual destructors)
* Use the concourse worker's zone by default
* Don't be so verbose with pipeline output
* Always fetch latest cmake
* Rerun failed tests (ctest retry with count 4)
* Disable broken IPv6 test
* Fix test failures due to folder collisions
* Cleanup test output directories for failed tests
* Improve execution of gfsh (use less memory)
* Improve gfsh scoping in integration tests
* Add GfshExecute class to legacy integration tests
* Add heap settings to GfshExecute
* Kill all user processes before running tests
* Use tar to speed up file copies
* README for GitHub Private Key
* Fix for .NET 3.5 install on Windows 2016
* Fixes boost on windows
* Fixes for ACE
* Don't checkout sources after upload.
* Update Building.md per new tooling support
* Package icon
* Fixes Windows 2016
* Remove used windows build scripts
* Update to boost 1.75.0 and fix MSVC
* Support for Visual Studio 2019
* Explicitly set MSVC toolset and Windows SDK
* Don't retrigger PRs on new versions
* Improve build-in help for set-pipeline.sh
* Don't rebuild on image changes
* Retry packer builds if they fail
* Update README.md for new CI
* Add error for canceled jobs
* Copy source from worker to builder
* Support for PR resource
* Split release and pr pipelines
* Upload packages to GCS
* Parameterize bucket and key
* Configure build type, version, date, etc
* Support semver
* Templatize docker builds
* Use newer registry-image resource for images not built in this project.
* Fix Dockerfile path and caches.
* Use project specific minimal task image
* Fix legacy integration port allocations
* Fix .NET test execution
* Add support for Windows Server 2019
* Fix install of .NET 3.5 via WinRM
* Added Google Compute support
* Upgrade to cmake 3.18
* Use GEODE_VERSION=1.13.1
* Adding --schedule-random to ctests
* Update travis.yml to use new cmake

Co-authored-by: Jacob Barrett <jbarrett@pivotal.io>

mmartell merged pull request #746:
URL: https://github.com/apache/geode-native/pull/746


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske opened a new pull request #747:
URL: https://github.com/apache/geode-native/pull/747


   Was failing to build on Mac
   
   Authored-by: M. Oleske <michael@oleske.engineer>
   
   PR https://github.com/apache/geode-native/pull/746 caused a failure on Mac only it seems due to `SetUp` function from gTest not using override correctly.  Since the body was commented out and `scrubTestLogFiles` is used in `TearDown`, I just deleted the function to solve the problem


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell merged pull request #747:
URL: https://github.com/apache/geode-native/pull/747


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 8f8d80a56e180e6a7d69d5277dae5c204afe192b in geode-native's branch refs/heads/develop from M. Oleske
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=8f8d80a ]

GEODE-8949: Fix broken build inconsistent-missing-override (#747)

GEODE-8949: Fix broken build inconsistent-missing-override
* Was failing to build on Mac
* Update to actually use scrubTestLogFiles

Authored-by: M. Oleske <michael@oleske.engineer>

Commit 8f8d80a56e180e6a7d69d5277dae5c204afe192b in geode-native's branch refs/heads/develop from M. Oleske
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=8f8d80a ]

GEODE-8949: Fix broken build inconsistent-missing-override (#747)

GEODE-8949: Fix broken build inconsistent-missing-override
* Was failing to build on Mac
* Update to actually use scrubTestLogFiles

Authored-by: M. Oleske <michael@oleske.engineer>

mmartell commented on pull request #747:
URL: https://github.com/apache/geode-native/pull/747#issuecomment-782388623


   Looks like PR pipeline has issues. Although this PR had 2 approvals, shouldn't have been able to merge due to failing Travis (clang-analyzer problem with ACE). Investigating.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit a5374926c75b984c280a6a064b93e1db327f4f8d in geode-native's branch refs/heads/develop from Jacob Barrett
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=a537492 ]

GEODE-8949: Fixes fetching of latest CMake.

* Avoid pre-release versions.


mmartell opened a new pull request #749:
URL: https://github.com/apache/geode-native/pull/749


   This rolls back changes made to .travis.yml to download new cmake, since docker image on docker hub has now been updated. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 679274d378976d200d7c5b02ac0b83188ebd1481 in geode-native's branch refs/heads/develop from Michael Martell
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=679274d ]

GEODE-8949 rollback travis config since docker image updated to lates… (#749)

* GEODE-8949 rollback travis config since docker image updated to latest cmake

* Fix clang-format error

Commit 679274d378976d200d7c5b02ac0b83188ebd1481 in geode-native's branch refs/heads/develop from Michael Martell
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=679274d ]

GEODE-8949 rollback travis config since docker image updated to lates… (#749)

* GEODE-8949 rollback travis config since docker image updated to latest cmake

* Fix clang-format error

mmartell merged pull request #749:
URL: https://github.com/apache/geode-native/pull/749


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett opened a new pull request #750:
URL: https://github.com/apache/geode-native/pull/750


   * Run all tests in parallel in CTest.
   * Auto discover .NET tests in CTest.
   * Ignore AppDomainUnloadedExceptions when background threads are starting.
   * Removes unused sources.
   * Improves subprocess termination.
   * Removes shell scripts between CTest and test executables.
   * Enables running of tests from VS Test Explorer.
   * Adds C++/CLI integration tests.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


lgtm-com[bot] commented on pull request #750:
URL: https://github.com/apache/geode-native/pull/750#issuecomment-783947315


   This pull request **fixes 2 alerts** when merging c82bf17cda5f0830bac288cc4f125acd237b047e into 679274d378976d200d7c5b02ac0b83188ebd1481 - [view on LGTM.com](https://lgtm.com/projects/g/apache/geode-native/rev/pr-413725afa2d81088531b6c654bc51324e4508414)
   
   **fixed alerts:**
   
   * 2 for Useless assignment to local variable


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pdxcodemonkey commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581154221



##########
File path: CMakeLists.txt
##########
@@ -139,13 +137,8 @@ string(REGEX REPLACE " " "" IGNORED_FULL "${IGNORED_FULL}")
 
 list(APPEND CPACK_SOURCE_IGNORE_FILES ${IGNORED_FULL})
 
-if(CMAKE_GENERATOR MATCHES Win64*)
-  set(CMAKE_GENERATOR_TOOLSET "host=x64")
-else()
-  set(CMAKE_GENERATOR_TOOLSET )
-endif()
-

Review comment:
       Does this mean we can stop specifying `-Thost=x64` on the config command line?
   

##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"

Review comment:
       Should I be concerned about dropping random GUIDs into CMake config files?

##########
File path: clicache/integration-test/CacheHelperN.cs
##########
@@ -2143,14 +2147,23 @@ static int ExecuteGfsh(string command)
           }
         }
 
-        //process.CancelOutputRead();
-        //process.CancelOutputRead();
-
         Util.Log("ExecuteGfsh: Exited {0}", process.Id);
         return process.ExitCode;
       }
     }
 
+    public static void CloseAndIgnore(StreamReader streamRead)
+    {
+      try
+      {
+        streamRead.Close();
+      } 
+      catch (Exception)
+      {
+        // ignored

Review comment:
       I take it this was the site of the `AppDomainUnloadedException`?

##########
File path: tests/cli/NewFwkLib/Utils.cs
##########
@@ -1,1457 +0,0 @@
-/*

Review comment:
       Was this whole `NewFwkLib` directory/project unused, then?

##########
File path: clicache/integration-test/DistributedSystemTests.cs
##########
@@ -1,136 +0,0 @@
-/*

Review comment:
       Awesome, deleting code *rules*!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581217892



##########
File path: ci/lib/templates.lib.txt
##########
@@ -72,43 +72,12 @@ function remote_upload {
 
 (@- end @)
 
-(@ def run_cpp_unit_tests(): -@)
+(@ def ctest_bash_task(path, timeout=300, parallel=6): -@)
 set -ueo pipefail
 (@= remote_functions() @)
-remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure --schedule-random

Review comment:
       Random side note:  I don't think the unit tests respect the `--schedule-random` flag through cmake, though I'm having trouble finding evidence in docs one way or the other.  I know that executing the binary directly like `apache-geode_unittests --gtest_shuffle` definitely shuffles the unit tests, though that would destroy the simplification here




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581280592



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       I get this error on Windows:
   ```CMake Error at clicache/integration-test/CMakeLists.txt:83 (file):
     file Incorrect arguments to GENERATE subcommand.```




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581280592



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       I get this error on Windows if I use -G "Visual Studio 15 2017 Win64" or -G "Visual Studio 16 2019":
   CMake Error at clicache/integration-test/CMakeLists.txt:83 (file):
     file Incorrect arguments to GENERATE subcommand.
     
     




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581346163



##########
File path: CMakeLists.txt
##########
@@ -139,13 +137,8 @@ string(REGEX REPLACE " " "" IGNORED_FULL "${IGNORED_FULL}")
 
 list(APPEND CPACK_SOURCE_IGNORE_FILES ${IGNORED_FULL})
 
-if(CMAKE_GENERATOR MATCHES Win64*)
-  set(CMAKE_GENERATOR_TOOLSET "host=x64")
-else()
-  set(CMAKE_GENERATOR_TOOLSET )
-endif()
-

Review comment:
       No




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581347170



##########
File path: clicache/integration-test/CacheHelperN.cs
##########
@@ -2143,14 +2147,23 @@ static int ExecuteGfsh(string command)
           }
         }
 
-        //process.CancelOutputRead();
-        //process.CancelOutputRead();
-
         Util.Log("ExecuteGfsh: Exited {0}", process.Id);
         return process.ExitCode;
       }
     }
 
+    public static void CloseAndIgnore(StreamReader streamRead)
+    {
+      try
+      {
+        streamRead.Close();
+      } 
+      catch (Exception)
+      {
+        // ignored

Review comment:
       No this is to ignore exceptions on closing file handles to sub processes rather than failing the test.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581347912



##########
File path: tests/cli/NewFwkLib/Utils.cs
##########
@@ -1,1457 +0,0 @@
-/*

Review comment:
       I think it must have been an attempt at something new a long time ago but it wasn't hooked up to anything. Should have been deleted before the initial donation.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on pull request #750:
URL: https://github.com/apache/geode-native/pull/750#issuecomment-784473097


   > Just a few questions, so I understand the full nature of the changes.  Also CI is red, so that needs fixed.  Thanks for this!
   
   CI is red because the changes necessary to make it not red are in here.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581349442



##########
File path: ci/lib/templates.lib.txt
##########
@@ -72,43 +72,12 @@ function remote_upload {
 
 (@- end @)
 
-(@ def run_cpp_unit_tests(): -@)
+(@ def ctest_bash_task(path, timeout=300, parallel=6): -@)
 set -ueo pipefail
 (@= remote_functions() @)
-remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure --schedule-random

Review comment:
       Eh! Random isn't important there unless you're writing bad tests. I errored on the side of consistency in the args.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581352209



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       It works in the CI. The generator arguments are obsolete now so try without. Certainly leave off the x64 now and use the `-A` option.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581357124



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       I get the same error using:
   cmake .. -A x64 -Tv141,version=14.16,host=x64 -DCMAKE_SYSTEM_VERSION=10.0.17763.0
   
   I'm using cmake 18.3. I'll compare with CI.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581368231



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       CI is likely using 3.19. Let me double check the command.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581370470



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       Ahah! The `TARGET` argument is new in 3.19.  Let me see if it is necessary for the file I am generating here.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581370821



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       OK looks like this is fixed in latest cmake (3.19.5). I thought 3.18 would be plenty new enough.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581373661



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
+  VS_DOTNET_REFERENCES "System;System.Xml;System.Web;System.Configuration;System.Management"
+  VS_DOTNET_REFERENCE_NUnit "${CMAKE_BINARY_DIR}/packages/NUnit.2.6.4/lib/nunit.framework.dll"
+  FOLDER cli/test/integration
+)
+
+if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
+  set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+    VS_GLOBAL_SignAssembly "true"
+    VS_GLOBAL_AssemblyOriginatorKeyFile ${STRONG_NAME_KEY}
+  )
 endif()
 
-foreach(FILE ${CSPROJECTS})
-  # TODO: make this a one line MATCH statement
-  string(REGEX REPLACE "\\.csproj.in" "" PROJDIR ${FILE})
-  string(REGEX REPLACE ".*/" "" PROJNAME ${PROJDIR})
-  configure_file(${FILE} ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj)
-  include_external_msproject(
-      ${PROJNAME}  ${CMAKE_CURRENT_BINARY_DIR}/${PROJNAME}.csproj
-      TYPE FAE04EC0-301F-11D3-BF4B-00C04F79EFBC)
-  set_target_properties(${PROJNAME} PROPERTIES FOLDER cli/test/integration)
+add_dependencies(Apache.Geode.Client.UnitTests FwkClient SqLiteImpl)
+add_dependencies(Apache.Geode.Client.UnitTests nuget-restore)
 
-endforeach()
+
+configure_file(test.runsettings.in test.runsettings.gen)
+file(GENERATE OUTPUT test.runsettings INPUT ${CMAKE_CURRENT_BINARY_DIR}/test.runsettings.gen TARGET Apache.Geode.Client.UnitTests)

Review comment:
       Nope, no target specific generator expressions so I can drop it. Thanks!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581395832



##########
File path: CMakeLists.txt
##########
@@ -139,13 +137,8 @@ string(REGEX REPLACE " " "" IGNORED_FULL "${IGNORED_FULL}")
 
 list(APPEND CPACK_SOURCE_IGNORE_FILES ${IGNORED_FULL})
 
-if(CMAKE_GENERATOR MATCHES Win64*)
-  set(CMAKE_GENERATOR_TOOLSET "host=x64")
-else()
-  set(CMAKE_GENERATOR_TOOLSET )
-endif()
-

Review comment:
       That line never really worked and is an anti-pattern in CMake so I clubbed it. 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


lgtm-com[bot] commented on pull request #750:
URL: https://github.com/apache/geode-native/pull/750#issuecomment-784520347


   This pull request **fixes 2 alerts** when merging 789bc631c6b441ba0f2284292b0793dadab539f3 into 679274d378976d200d7c5b02ac0b83188ebd1481 - [view on LGTM.com](https://lgtm.com/projects/g/apache/geode-native/rev/pr-e83253adfe87b388ced4552630389c674cf88e30)
   
   **fixed alerts:**
   
   * 2 for Useless assignment to local variable


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581404560



##########
File path: clicache/integration-test/NUnitTestAddTests.ps1
##########
@@ -0,0 +1,67 @@
+﻿Param

Review comment:
       This is missing a license header (rat should be failing)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581406198



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1

Review comment:
       Awesome. Very elegant reflection based discovery. And using Powershell Core no less!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581412344



##########
File path: clicache/test2/CMakeLists.txt
##########
@@ -63,3 +61,12 @@ if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
 endif()
 
 add_dependencies(Apache.Geode.Tests2 nuget-restore)
+
+enable_testing()
+
+add_test(NAME Apache.Geode.Tests2

Review comment:
       Nice to see more tests running through ctest!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581426048



##########
File path: clicache/integration-test/NUnitTestAddTests.ps1
##########
@@ -0,0 +1,67 @@
+﻿Param

Review comment:
       You are correct. Let me see what is wrong with rat.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581426814



##########
File path: clicache/test2/CMakeLists.txt
##########
@@ -63,3 +61,12 @@ if(NOT "${STRONG_NAME_KEY}" STREQUAL "")
 endif()
 
 add_dependencies(Apache.Geode.Tests2 nuget-restore)
+
+enable_testing()
+
+add_test(NAME Apache.Geode.Tests2

Review comment:
       Its nice to have consistency so you don't need to know all the different magic incantations for each of the different .NET test frameworks.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581449200



##########
File path: clicache/integration-test/NUnitTestAddTests.ps1
##########
@@ -0,0 +1,67 @@
+﻿Param

Review comment:
       Rat sees those ps1 files as binary. LOL
   
   Probably some Windows line ending issues. I will try to fix it.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


moleske commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581451806



##########
File path: clicache/integration-test/NUnitTestAddTests.ps1
##########
@@ -0,0 +1,67 @@
+﻿Param

Review comment:
       hmm... my rat run didn't see them as binary https://github.com/moleske/geode-native/pull/37/checks?check_run_id=1964750486




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581458425



##########
File path: clicache/integration-test/NUnitTestAddTests.ps1
##########
@@ -0,0 +1,67 @@
+﻿Param

Review comment:
       Visual Studio edit insists on UTF-8 with BOM and RAT sees that as binary. I fixed a few files.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


lgtm-com[bot] commented on pull request #750:
URL: https://github.com/apache/geode-native/pull/750#issuecomment-784614738


   This pull request **fixes 2 alerts** when merging 734b5a3aaf5991f1621fafd3ea0ae5f4e9517222 into 679274d378976d200d7c5b02ac0b83188ebd1481 - [view on LGTM.com](https://lgtm.com/projects/g/apache/geode-native/rev/pr-ba3ccfd5ed2c278e65019c95f6c9c43e17c8e810)
   
   **fixed alerts:**
   
   * 2 for Useless assignment to local variable


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r581560801



##########
File path: clicache/integration-test/NUnitTestAddTests.ps1
##########
@@ -0,0 +1,67 @@
+﻿Param

Review comment:
       Rat on macOS sees them as text but on Linux, where we do the check, as binary. 🤷 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pdxcodemonkey commented on a change in pull request #750:
URL: https://github.com/apache/geode-native/pull/750#discussion_r582117337



##########
File path: clicache/integration-test/CMakeLists.txt
##########
@@ -13,108 +13,110 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(nativeclient.tests.clicache)
+project(Apache.Geode.Client.UnitTests CSharp )
 
-set (NUNIT "C:\\Program Files (x86)\\NUnit 2.6.4")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packages.config ${CMAKE_CURRENT_BINARY_DIR}/packages.config COPYONLY)
 
-if (64 EQUAL ${BUILD_BITS})
-  set (NUNIT_CONSOLE "nunit-console")
-else()
-  set (NUNIT_CONSOLE "nunit-console-x86")
-endif()
+file(GLOB_RECURSE SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cs")
+file(GLOB_RECURSE XML_SOURCE RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.xml")
+set(RESOURCES
+  ${XML_SOURCE}
+  geode.properties.mixed
+  geode.properties.nativeclient
+  system.properties
+)
+
+add_library(Apache.Geode.Client.UnitTests SHARED
+  NUnitTestAddTests.ps1
+  packages.config
+  test.runsettings.in
+  ${SOURCE}
+  ${RESOURCES}
+)
 
+source_group("Source Files" FILES "${SOURCE}")
+source_group("Resource Files" FILES ${RESOURCES})
 
-foreach(var CMAKE_CURRENT_SOURCE_DIR CMAKE_SOURCE_DIR CMAKE_BINARY_DIR CMAKE_CURRENT_BINARY_DIR)
-  file(TO_NATIVE_PATH ${${var}} ${var}_NATIVE)
-endforeach()
+set_source_files_properties(
+  ${RESOURCES}
+  PROPERTIES
+    VS_COPY_TO_OUT_DIR PreserveNewest
+    VS_TOOL_OVERRIDE None
+)
+
+target_link_libraries(Apache.Geode.Client.UnitTests
+  PUBLIC
+    Apache.Geode
+    DUnitFramework
+    NewTestObject
+    PdxClassLibrary
+    PdxVersion1Lib
+    PdxVersion2Lib
+    QueryWrapper
+    SecurityUtil
+)
 
-file(GLOB_RECURSE CSPROJECTS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.csproj.in")
-if(EXISTS "${STRONG_NAME_KEY}")
-  set(STRONG_NAME_KEY_ENABLED true)
+set_target_properties(Apache.Geode.Client.UnitTests PROPERTIES
+  VS_GLOBAL_ROOTNAMESPACE "Apache.Geode.Client.UnitTests"
+  VS_GLOBAL_TreatWarningsAsErrors False
+  VS_GLOBAL_IsTestProject True
+  VS_GLOBAL_TestProjectType UnitTest
+  VS_GLOBAL_RunSettingsFilePath "\$(MSBuildProjectDirectory)\\test.runsettings"
+  VS_GLOBAL_PROJECT_TYPES "{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"

Review comment:
       Sorry, wrong choice of words.  Not a random GUID at all (yes I Googled it), but still basically a magic number.  Looks like this is the way everyone has decided to work with VS projects in cmake, though, so meh.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit cc9264052795dcef1efb431fe5cf3953d17d8a3f in geode-native's branch refs/heads/develop from Jacob Barrett
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=cc92640 ]

GEODE-8949: Improves test stability (#750)

* Remove shell scripts.
* Enforce clang-format in integration tests.
* Fixes for windows tests.
* Fixes windows path
* Use ctest directly.
* Close inputs before kill
* Improve file copy
* Use CMake to build CSharp libraries.
* Delete unused tests and framework
* Dynamically discover all NUnit tests
* Fixes for .NET
* Fixes xunit runner path.
* Fixes .net test failure
* Deletes unused sources.
* Terminate gfsh command if it doesn't exit gracefully.
* Dont timeout
* Adds NUnit test runner.
* Discover and run new .net integration tests via ctest.
* Use ctest to run .net C# based unit tests.
* Fix test parallelism
* Test .net unmanaged tests.
* Reduced redundany in templates.
* Fixes test runner dependencies.
* Ignore AppDomainUnloadedException
* Remove NUnit from packer.
* Remove CMake 3.19 argument.
* Fix RAT check.

pdxcodemonkey merged pull request #750:
URL: https://github.com/apache/geode-native/pull/750


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 9a527c3a152a46ea4ef46c87945599d154eded84 in geode-native's branch refs/heads/develop from Jacob Barrett
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=9a527c3 ]

GEODE-8949: Restores reduced parallelism on legacy integration tests.


pivotal-jbarrett opened a new pull request #754:
URL: https://github.com/apache/geode-native/pull/754


   * Download the latest matching version of Geode Java bits from Maven repository.
   * Adds semver and Geode artifact version configuration.
   * Adds minor version bump job.
   * Triggers packer image builds on packer source changes.
   * Removes Geode from packer images.
   * Uploads last Geode to heavy lifters.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pdxcodemonkey commented on a change in pull request #754:
URL: https://github.com/apache/geode-native/pull/754#discussion_r585704872



##########
File path: ci/lib/templates.lib.txt
##########
@@ -90,7 +90,7 @@ run-clang-tidy -j $(nproc) -quiet
 
 (@ def clang_format_bash_task(): -@)
 set -ueo pipefail
-export GEODE_HOME=$(pwd)/geode/expanded/apache-geode-$(cat geode/version)
+export GEODE_HOME=$(pwd)/geode

Review comment:
       Why set GEODE_HOME here, and use -DGEODE_ROOT in cmake configure line below?  It'd be great to do this consistently, probably using cmake variable in both cases.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #754:
URL: https://github.com/apache/geode-native/pull/754#discussion_r585822577



##########
File path: ci/lib/templates.lib.txt
##########
@@ -90,7 +90,7 @@ run-clang-tidy -j $(nproc) -quiet
 
 (@ def clang_format_bash_task(): -@)
 set -ueo pipefail
-export GEODE_HOME=$(pwd)/geode/expanded/apache-geode-$(cat geode/version)
+export GEODE_HOME=$(pwd)/geode

Review comment:
       Sort of out of scope for this PR. I agree making them consistent would be nice.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 38fa9eef45da2a0743410d24c5852e8dd3a69494 in geode-native's branch refs/heads/develop from Jacob Barrett
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=38fa9ee ]

GEODE-8949: Versioning improvements (#754)

* Download latest Geode.
* Don't bake Geode into images.
* Trigger packer images.
* Configurable version for semver and geode resource.
* Adds version bump.
* Uses geode latest in source checks.

pdxcodemonkey merged pull request #754:
URL: https://github.com/apache/geode-native/pull/754


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 540e858f0cfbd2803d1c8b0f2dbccb5ee494699d in geode-native's branch refs/heads/develop from Mike Martell
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=540e858 ]

GEODE-8949: Disable Merge until CI green


Commit e3fd0361f550624e368b480726e18844d28368a6 in geode-native's branch refs/heads/master from Mike Martell
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=e3fd036 ]

GEODE-8949: Enable/disable github Merge button


