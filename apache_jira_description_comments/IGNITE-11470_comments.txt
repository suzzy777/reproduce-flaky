{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Scala (Visor Console){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=3614606]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3614685&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~jooger], my comments:
- please review my minor changes;
- lets refactoring code duplication at the {{IgniteH2Indexing#tablesInformation}} and org.apache.ignite.internal.processors.query.h2.sys.view.SqlSystemViewTables#getRows. I guess only one point of gathering tables and columns Information should exist. So the issue: IGNITE-11434 is related.


[~tledkov-gridgain],

Please review the patch again after some modifications. 

 

Bot Vise in progress

[~jooger], the patch is OK with me.

[~jooger], I left comments on [GitHub|https://github.com/apache/ignite/pull/6456].

Hello, [~jooger]!
Here is my first part of comments:
1) {{org.apache.ignite.internal.jdbc2.JdbcDatabaseMetadata#getTables}} Seems we need to add {{TYPE_VIEW}} check. If we are fetching only VIEWS, we get empty result set.
1.1) Optional: we import {{TYPE_TABLE}} and {{TYPE_VIEW}} from Jdbc thin metadata to jdbc v2 one. Is it better to move these types to common jdbc utils?

2) {{org.apache.ignite.internal.jdbc2.JdbcDatabaseMetadata#getTableTypes}} : 
We expect one column in the result and two rows, so we should replace this (one row and two columns)
{code:java}
Collections.singletonList("TABLE_TYPE"),
//...
Collections.singletonList(Arrays.asList(TYPE_TABLE, TYPE_VIEW))
{code}

With this:
{code:java}
asList(singletonList(TYPE_TABLE), singletonList(TYPE_VIEW) )
{code}
Would you please check same case for jdbc thin?

3) I think we should provide default value "TABLE" for the {{org.apache.ignite.internal.processors.odbc.jdbc.JdbcTableMeta#tblType}}. Review the case: new driver is connected to the old server. Driver side will get {{null}} as a TABLE_TYPE


3.1) Discussable: Similar thing for the {{JdbcMetaTablesRequest#readBinary}}: in case old client + new server we just change behaviour - we start returning extra "tables" meta for type "VIEW". Users are unable to filter out these tables. So here we should do the decision, for ald clients what we do 1. Always return "TABLE"s + "VIEW"s 2. Return only "TABLES" and never "VIEW"s.
3.2) Suggestion: in {{JdbcThinDatabaseMetadata#getTables}} should we throw an sql exception in case of unsupported type is specified?
 
4)Minor: {{ColumnInformation}} - would you please add info about special values for the {{precision}} and {{scale}} (in case column is not a decimal type)?
5)Minor: You've modified return type of the {{org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequestHandler#dispatchBatchOrdered}} which always returns {{null}}, is it better to move this type to {{void}} (with {{executeBatchOrdered}})?

6)Question:
{code:java}
CacheGroupDescriptor cacheGrpDesc = ctx.cache().cacheGroupDescriptors().get(cacheGrpId);

// We should skip table in case in case regarding cache group has been 
if (cacheGrpDesc == null)
    return null;
{code}

I really didn't know about this, would you please share knowledge, in what cases we could get this cache group descriptor == {{null}}? Would you point me to the test case?

{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Platform .NET (Core Linux){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=3688467]]

{color:#d04437}JDBC Driver{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=3688471]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3679731&amp;buildTypeId=IgniteTests24Java8_RunAll]

7) I would add {{@Nullable}} annotation to {{org.apache.ignite.internal.processors.query.TableInformation#affinityKeyColumn()}}. Doc could be more clear, if we added what "is not applicable" mean: "In case of affinity key is the same as _KEY"


[~pkouznet], thanks for the review.

1) fixed.

1.1) done)

2) Yeee. Fixed.

3) Fixed.

3.1) I think is ok to return all types - it correspond to JDBC specification.

3.2) Not sure that's should be done. We just return result corresponded to request. Also javadoc says - throws SQLException if a database access error occurs. Your case about another situation.

4) added.

5) It's not related to the change. Skipped.

6) It can happen in case cachegroup was concurrently deleted

7) Added.

 

 

Let's wait new Bot Vise.

{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}JDBC Driver{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=3781208]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3764112&amp;buildTypeId=IgniteTests24Java8_RunAll]

{panel:title=Branch: [pull/6456/head] Base: [master] : Possible Blockers (25)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}MVCC PDS 4{color} [[tests 14|https://ci.ignite.apache.org/viewLog.html?buildId=3764109]]
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_10_500_8_16 - New test duration 101s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_10_10_1_1 - New test duration 101s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_1000_20000_8_16 - New test duration 104s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_8000_8000_8_16 - New test duration 114s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_1000_500_1_1 - New test duration 100s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_8000_8000_1_1 - New test duration 111s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_1000_500_8_16 - New test duration 102s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_8000_8000_8_1 - New test duration 106s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_8000_500_8_1 - New test duration 114s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_8000_500_1_1 - New test duration 113s is more that 1 minute
* IgnitePdsMvccTestSuite4: IgnitePdsContinuousRestartTestWithSharedGroupAndIndexes.testRebalancingDuringLoad_1000_20000_1_1 - New test duration 104s is more that 1 minute
... and 3 tests blockers

{color:#d04437}Queries 1{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=3767637]]
* IgniteBinaryCacheQueryTestSuite: IgniteSqlNotNullConstraintTest.testReadThroughRestrictionAlterTable - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: IgniteSqlNotNullConstraintTest.testReadThroughRestrictionCreateTable - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Platform .NET{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=3764083]]
* exe: PartitionLossTest.TestReadOnlySafe - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}ZooKeeper (Discovery) 3{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=3764091]]
* ZookeeperDiscoverySpiTestSuite3: GridEventConsumeSelfTest.testMultithreadedWithNodeRestart - Test has low fail rate in base branch 0,0% and is not flaky
* ZookeeperDiscoverySpiTestSuite3: GridEventConsumeSelfTest.testApiAsync - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Cache 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=3767629]]
* IgniteCacheTestSuite2: cache.CacheExchangeMessageDuplicatedStateTest - History for base branch is absent.

{color:#d04437}MVCC PDS 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=3764106]]
* IgnitePdsMvccTestSuite: IgniteClusterActivateDeactivateTestWithPersistence.testDeactivateDuringEvictionAndRebalance - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}[Check Code Style]{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=4475653]]

{color:#d04437}JDBC Driver{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=3781208]]

{color:#d04437}~Build Apache Ignite~{color} [[tests 0 Exit Code , Compilation Error |https://ci.ignite.apache.org/viewLog.html?buildId=4475540]]

{color:#d04437}[Javadoc]{color} [[tests 0 Exit Code , Compilation Error |https://ci.ignite.apache.org/viewLog.html?buildId=4475591]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4475654&amp;buildTypeId=IgniteTests24Java8_RunAll]

{panel:title=Branch: [pull/6456/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4520011&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~amashenkov], [~pkouznet], guys, could you please review the patch.

[~jooger], looks good. Merged to master.

Thanks for contribution!

