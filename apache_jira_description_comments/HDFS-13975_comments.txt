Thanks [~jlowe] for putting this up.

But in this test I guess it was previously realized that it can fail with this exception and was considered fine as of then.

If you see the code it is explicitly mentioned there.

Â 
{code:java}
 // accept runtime if it is under 3.5 seconds, as we need to wait for
          // IN_PROGRESS report from DN, and some spare to be able to finish.
          // NOTE: This can be a source of flaky tests, if the box is busy,
          // assertion here is based on the following: Balancer is already set
          // up, iteration gets the blocks from the NN, and makes the decision
          // to move 2 blocks. After that the PendingMoves are scheduled, and
          // DataNode heartbeats in for the Balancer every second, iteration is
          // two seconds long. This means that it will fail if the setup and the
          // heartbeat from the DataNode takes more than 500ms, as the iteration
          // should end at the 3rd second from start. As the number of
          // operations seems to be pretty low, and all comm happens locally, I
          // think the possibility of a failure due to node busyness is low.
          assertTrue("Unexpected iteration runtime: " + runtime + "ms > 3.5s",
              runtime < 3500);
{code}
The timeout is for the best case scenario.For Average cases it doesn't provide any margin.IIUC Increasing that 3.5s limit is the only way to get this test a little ahead.Since all other factors which lead to this timeout seems beyond control.But not sure that going that way can take away the logic for this assertion.

JFYI:
It failed also in my build (https://github.com/apache/hadoop/pull/2598#issuecomment-756042823). I do not check the details yet, but if the main purpose of this test is to check if dfs.balancer.max-iteration-time takes in effect, it will be enough to check if Dispatcher.Source#isIterationOver has returned true.

[~touchida] I too need to check the test, But yes this assertion doesn't seems to be justified here. Not a things to do as part of unit tests. If you find an ALT do put up a patch/PR for it, else dropping this assertion also looks fine to me. 

[~ayushtkn] 
Thanks for your comments!
I understood.
Let me check the test in more details and fix it anyway.

Committed to all the active branches. Thank you [~touchida] for your contribution!

[~aajisaka]Â Thanks for your review and commit, too!

