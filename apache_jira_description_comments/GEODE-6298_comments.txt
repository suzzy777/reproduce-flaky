This same test also failed in this Windows run: [231|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/231]

New failure in CI on Windows: [https://concourse.gemfire-ci.info/teams/main/pipelines/gemfire-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/566]

seen again in https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/665

Failed again in ci runs:
https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/669

Failed again: [https://concourse.gemfire-ci.info/teams/main/pipelines/gemfire-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/583]

Failed again: [https://concourse.gemfire-ci.info/teams/main/pipelines/gemfire-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/588]

Failed in:
https://concourse.gemfire-ci.info/teams/main/pipelines/gemfire-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/591

Failed again: [https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsUnitTestOpenJDK11/builds/684]

Commit 25f47839a30755b3673c61426258bf63a0895956 in geode's branch refs/heads/develop from Aaron Lindsey
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=25f4783 ]

GEODE-6298: Fix flaky test LRUListWithAsyncSortingTest.scanMovesRecentlyUsedNodeToTail

There is a race condition within the test. A background thread calls unsetRecentlyUsed() on recentlyUsedNode before setting list.tail.previous() to recentlyUsedNode. Therefore, it's possible for the assertion on list.tail.previous() to fail if the background thread gets interrupted after calling unsetRecentlyUsed() but before setting list.tail.previous().


