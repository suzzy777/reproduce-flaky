[~gzh1992n] let me understand the issue. Are you saying that, the following is the bug? 
{code}
    return max - min + 1;	//bug? max - min
{code}

Here, max = replica_count - 1, and we are iterating with max inclusive:
{code}
    for (int id = min; id <= max; id++) {
{code}

Maybe not enough I've described in detail. I update the description.

bq. Maybe not enough I've described in detail. I update the description.
Thanks. I think you are right. In case of an Exception coming from all replicas of a scan, the scan might hang because submitted computation maybe off by one. Curious why we did not see in testing. 
Do you want to submit a patch? 

Yes,I'm learning workflow.

Yes,I'm learning workflow.

just change "max - min + 1" to "max - min"

bq. just change "max - min + 1" to "max - min"
Did you attach the patch? Also can you write a unit test for this? You can take a look at {{TestReplicasClient}}. 

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12743196/HBASE-13997.patch
  against master branch at commit 01482921271146ddd1e76aec957b2d9e3f64487d.
  ATTACHMENT ID: 12743196

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/14646//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/14646//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/14646//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/14646//console

This message is automatically generated.

sry,I have attached the patch.

Could you commit it?

I don't write a unit test,because TestReplicasClient.java already have(use testScanWithReplicas() can test the patch).

Thanks [~gzh1992n] for the patch. I was writing a unit test for this, but it turns out that that part was working and will not cause a client hang. The off-by-one error is definitely there, but it was not causing a problem because of a related but different issue. 

Some time ago (HBASE-11564), the semantics for {{ResultBoundedCompletionService}} got changed from being a blocking queue kind of data structure where you submit multiiple tasks and call take() multiple times, into one where you submit multiple tasks, and you only take once. The completed list does not get cleaned when {{take()}} returns. HBASE-11564 did the changes in Get code-path, but not in the scan code path it seems. 

For example, we are submitting 3 calls to the {{ResultBoundedCompletionService}}, but we had this off-by-one and {{submitted}} is 4. But, since as soon as the first result comes in, if it is an exception, we would call {{cs.take()}} 4 times, and each time it will return the same exception. This does not in fact cause a hang, but still a clean up in the code is needed. 

Attached v2 patch brings the scanner code path to be similar to the get code path ({{RpcRetryingCallerWithReadReplicas}}). [~devaraj] do you mind taking a look? 



{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12744374/hbase-13997_v2.patch
  against master branch at commit f5ad736282c8c9c27b14131919d60b72834ec9e4.
  ATTACHMENT ID: 12744374

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestFastFail

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/14711//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/14711//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/14711//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/14711//console

This message is automatically generated.

Thank you for your work.

{code}
-1 core tests. The patch failed these unit tests:
org.apache.hadoop.hbase.client.TestFastFail
{code}
This test is just flaky. 

Looks fine to me.

FAILURE: Integrated in HBase-TRUNK #6646 (See [https://builds.apache.org/job/HBase-TRUNK/6646/])
HBASE-13997 ScannerCallableWithReplicas cause Infinitely blocking (Zephyr Guo and Enis) (enis: rev 5e708746b8d301c2fb22a85b8756129147012374)
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java
* hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientScanner.java


SUCCESS: Integrated in HBase-1.2-IT #50 (See [https://builds.apache.org/job/HBase-1.2-IT/50/])
HBASE-13997 ScannerCallableWithReplicas cause Infinitely blocking (Zephyr Guo and Enis) (enis: rev 4b6f0149c15f1646bcfafc270d8c928a159651a6)
* hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientScanner.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java


SUCCESS: Integrated in HBase-1.3-IT #37 (See [https://builds.apache.org/job/HBase-1.3-IT/37/])
HBASE-13997 ScannerCallableWithReplicas cause Infinitely blocking (Zephyr Guo and Enis) (enis: rev 426bd097775dc9ed18b4f208429eeece0b472e95)
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java
* hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientScanner.java


FAILURE: Integrated in HBase-1.1 #582 (See [https://builds.apache.org/job/HBase-1.1/582/])
HBASE-13997 ScannerCallableWithReplicas cause Infinitely blocking (Zephyr Guo and Enis) (enis: rev 32537869f12dc3f1fe70ea087ebf97aac149e787)
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java
* hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientScanner.java


SUCCESS: Integrated in HBase-1.2 #65 (See [https://builds.apache.org/job/HBase-1.2/65/])
HBASE-13997 ScannerCallableWithReplicas cause Infinitely blocking (Zephyr Guo and Enis) (enis: rev 4b6f0149c15f1646bcfafc270d8c928a159651a6)
* hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientScanner.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java


SUCCESS: Integrated in HBase-1.3 #52 (See [https://builds.apache.org/job/HBase-1.3/52/])
HBASE-13997 ScannerCallableWithReplicas cause Infinitely blocking (Zephyr Guo and Enis) (enis: rev 426bd097775dc9ed18b4f208429eeece0b472e95)
* hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientScanner.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java


