GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/5391

    IGNITE-5115

    Problem was that coordinator fails when process the fail message about itself. Reproducer attached to PR.
    I have fixed this issue by disabling removing itself from the ring (like as on node leaving). When coordinator process message it will send verify message across ring and nodes will remove him from ring map. The new coordinator will send the discard message and ends the node fail process.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite ignite-5115

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5391.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5391
    
----
commit e8b41ba1886d736ee46be0559caa230e26e55936
Author: NSAmelchev <nsamelchev@...>
Date:   2018-11-14T09:09:14Z

    Fix coordinator fails

----


{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2317539&amp;buildTypeId=IgniteTests24Java8_RunAll]

Problem was that coordinator fails when process the fail message about itself. Reproducer attached to PR.
I have fixed this issue by disabling removing itself from the ring (like as on node leaving). When coordinator process message it will send verify message across ring and nodes will remove him from ring map. The new coordinator will send the discard message and ends the node fail process.

Could anyone review, please?

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}[Inspections] Core{color} [[tests 0 BuildFailureOnMetric |https://ci.ignite.apache.org/viewLog.html?buildId=2400898]]

{panel}
[TeamCity Run All Results|https://ci.ignite.apache.org/viewLog.html?buildId=2400902&amp;buildTypeId=IgniteTests24Java8_RunAll]

I have investigated the issue one more time and used the *segmentLocalNodeOnSendFail* method when the failing coordinator gets the message about itself. This is correct behavior if the network fails. TC tests are OK.

Looks good.

[~NSAmelchev],

Fix looks reasonable to me as well. Could you please improve a bit your test and add a check for EVT_NODE_FAILED to verify that event was received about expected node?

After that I believe we could proceed with merging this fix.

Thank you!

{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2452751&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~sergey-chugunov], [~voropava] Thanks for taking a look! 
I have improved test by adding some checks.

[~NSAmelchev], why do we fail the old coordinator if a non-verified message is received? From the explanation above I thought the message should have been verified by another node that already became a coordinator.

[~yzhdanov], can you take a look? The change seems a bit dangerous to me, because we fail the coordinator node when a non-verified message is received.

[~agoncharuk] [~voropava] [~NSAmelchev]

Overall idea seems to be absolutely valid. However, new code seems to fail if user configures NOOP segmentation policy - coordinator will not stop. So we need to have guaranteed way to stop coordinator.

Cancelling patch for now

Yakov

[~yzhdanov], Hi.
Could you explain why the coordinator should be stopped, please? In my case behavior the same as failing non-coordinator node. If the segmentation policy is NOOP the failing node close connections and will not be stopped.

I think we should only stop discovery SPI on coordinator in the aforementioned case. Then the coordinator should raise the {{SEGMENTED}} event and the node will stop if the corresponding policy is set.

[~agoncharuk],  In my fix, the behavior is the same, except for *disconnect discovery, not stopping*. 

I call the method _segmentLocalNodeOnSendFail()_. It notifies discovery with the _EVT_NODE_SEGMENTED_ event and then _DiscoveryWorker_ process it and call the _onSegmentation()_ method where discovery disconnecting from topology and applying segmentation policy. 

[~NSAmelchev] can you please add the same test with NOOP segmentation policy and check ee if it works correclty?

{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2485243&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~yzhdanov],
I have added the same test for NOOP segmentation policy ([see PR|https://github.com/apache/ignite/pull/5391/files]). It works fine. Also, I have tested on TC one more time. 

Changes and tests looks good for me. I think it can be merged. I have only one minor notes - perhaps it makes sense will add one more node to tests for checking  ring closing after coordinator segmented.

[~akalashnikov] , thanks for taking a look at changes! 
I'll add a one more node to test and I'll notify on done.

{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2574612&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~akalashnikov], I have added one more node to the test and added checks for the failed event and new discovery ring size. TC tests look good. Please, take a look one more time.

[~NSAmelchev] thanks, looks good. [~agoncharuk] could you help with merge, please.

Thanks to all guys, changes merged to master.

Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/5391


