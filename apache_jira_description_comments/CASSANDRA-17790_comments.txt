||Patch||CircleCI||
|[4.0|https://github.com/apache/cassandra/commit/68e259c23d17febe61b290bfdd4ec246530fe7f9]|[CI in progress|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1834/workflows/c5c61174-bfe2-4aa2-aac5-d52d816a9373]|
|[4.1|https://github.com/apache/cassandra/commit/0b2607e886af98a2bd946aa72067447142839e86]|[CI in progress|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17790-4.1] |
|[trunk|https://github.com/apache/cassandra/commit/c365fa65328570b473272c32e5942675e0dc50d3]|[CI in progress|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17790-trunk] |

I marked it as a blocker as we are running many Python dtests for example with default Config value and not reading full yaml. 

Some of the tests in 4.1 failed due to environmental issues. I restarted them.

Trunk has some new failure. I will verify tomorrow what is going on not to miss any failure due to this particular patch. 

4.0 CI run completed all green, the tests I restarted in 4.1 completed also fully green.

testCDCOnRepairIsEnabled failed with Java 8 with/without vnodes on trunk. The test doesn't fail for me locally. I will investigate now. I don't see direct relation between this patch and that test but let's see...

This test was added only to trunk in June so the issue is local only for trunk. It was added as part of  CASSANDRA-17666.

It seems it has some small flakiness  [with|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17790-trunk] (#1836) and [without|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=clean-trunk] my patch and also, this flakiness
was [there|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17666] when the test was introduced. 

I will open a follow up ticket for -CASSANDRA-17666 -   and ping the author.

 This is ready for review

CASSANDRA-17725 opened for the test flakiness on trunk

A quick look at documentation and it states that default is 16MB/s:

setcompactionthroughput
How fast compaction should run at most - defaults to 16MB/s, but note that it is likely not possible to reach this throughput.
 
https://cassandra.apache.org/doc/latest/cassandra/operating/compaction/index.html

Do we need to update the documentation as well? Which one is correct? 16MB/s or 64MB/s

You are right, I missed we have it in the docs (not only cassandra.yaml which updates automatically in the docs) and we need to update it, good catch! Thanks! I will push that in a bit.

The right one is 64MiB/s, it was missed to be updated in Config in the original ticket linked here - CASSANDRA-14902, I [confirmed|https://github.com/apache/cassandra/commit/8599f93d9a6b198913228c05accceba9398ba17a#r79275415] it also with [~mck] 

From the original ticket, there is linked a [dev mail thread with community agreement|https://lists.apache.org/thread/j2l3xhfdt88mk5hgo610cghmt5o5z30r] on changing the value and it was changed but only in cassandra.yaml.

I pushed [this|https://github.com/ekaterinadimitrova2/cassandra/commit/a75f23b86c9572603111f28f1cc0b257542b298f] follow-up commit to all branches.

I believe that should be enough for now. Other changes should be done when we get back to the docs migration/revision.

WDYT? 

+1 it looks good to me

Thanks!

Note to self on commit: CHANGES.txt plus Upgrade entry in NEWS.txt for people who might be relying on the internal value so we don't break anyone

+1

(had to search for the branches, as only the commits are referenced above…)

Thanks, [~mck] and I do apologize for not posting the branches. Normally I open a PR but I hit some bug these days when I try to close PRs so my intentions not to open new ones until the issue is fixed; to reduce the clutter.

I just rebased all branches and started new CI run, pending commit on it:
||Branch||CI run||
|[4.0|https://github.com/apache/cassandra/compare/trunk...ekaterinadimitrova2:cassandra:17790-4.0]|[CircleCI #1848|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17790-4.0]|
|[4.1|https://github.com/apache/cassandra/compare/trunk...ekaterinadimitrova2:cassandra:17790-4.1]|[CircleCI #1849|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17790-4.1]|
|[trunk|https://github.com/apache/cassandra/compare/trunk...ekaterinadimitrova2:cassandra:17790-trunk]|[CircleCI #1850|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17790-trunk]|

Good news, all branches are fully green! Starting commit soon :) 

Committed, thanks

To https://github.com/apache/cassandra.git

   821e7ab7bd..e5e13c02cc  cassandra-4.0 -> cassandra-4.0

   63231aa826..a7d7708976  cassandra-4.1 -> cassandra-4.1

   8691d9b6d7..61d9ba6dff  trunk -> trunk

 

Also, for the record, I checked whether we've been setting explicitly this parameter to the old value somewhere else in the test/conf yaml files and in-jvm tests, in the DTest or CCM repo - Only other values like 1 or 0 for corner cases. 

