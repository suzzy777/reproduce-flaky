First cut.
Introduces an alternative container that basically has an array. Initially that just stores context and all the un-serialized writables.
On access, it deserializes the writables. It knows the row count at that point and can determine row length from the first deserialized row (assumes its the same), so array represents a matrix with this row length.
For simple case of one row, it also serves as a list, so it can return itself as that "row". Otherwise it returns a readonly sublist.
Works for Tez, because Tez doesn't have to serialize/deserialize the hashtable. I am not sure the lazy part can be made to work for MR with its extra stage, probably not, so MR uses old container.

WIP:
Need to get rid of index stored in each row, since unless rowCount is made short it will round to 8 bytes I presume and it's really useless. 
Also need to run more tests, I ran some tez tests

[~gopalv] [~ashutoshc] fyi

oh, MJRC became an interface and I renamed the original one into "Eager" because I can't come up with a good interface name otherwise

Fix some issues. Need to figure out whether the "lazy" part provides benefits, now that it requires byte array copy. It would really depend on how many entries actually get used, perhaps it could be configurable

please ignore q file changes

https://reviews.apache.org/r/18061/


Added correct handling on 0-length rows (main issue), got rid of some array allocations when deserializing, other minor changes and fixes. I have run minitez tests and they passed except for mapjoin_mapjoin; with this patch, that passes, I am rerunning all tests now.


tiny fix to serde to make last tez tests pass



{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12628945/HIVE-6418.02.patch

{color:green}SUCCESS:{color} +1 5095 tests passed

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1321/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1321/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12628945

Added config setting

From applying this patch on my test, I get the following savings... HashMap with 1M entries, key is double, row is double and string (strings are short); one row per container (savings with multiple rows per key will be lower).
Lazy part is disabled.


Before (sorted by shallow size):
|Class|Objects|Shallow Size|Retained Size|
|java.lang.Object[]|3000000|80000000|232384000|
|org.apache.hadoop.hive.serde2.io.DoubleWritable|3000000|72000000|72000000|
|byte[]|1000000|32384000|32384000|
|java.util.HashMap$Entry|1000000|32000000|328384000|
|java.util.ArrayList|1000000|24000000|208384000|
|org.apache.hadoop.hive.ql.exec.persistence.MapJoinEagerRowContainer|1000000|24000000|232384000|
|org.apache.hadoop.hive.ql.exec.persistence.MapJoinEagerRowContainer$NoCopyingArrayList|1000000|24000000|160384000|
|org.apache.hadoop.io.Text|1000000|24000000|56384000|
|org.apache.hadoop.hive.ql.exec.persistence.MapJoinKey|1000000|16000000|64000000|
|java.util.HashMap$Entry[]|1|8388624|336772624|
|java.util.HashMap|1|48|336772672|


After:
|Class|Objects|Shallow Size|Retained Size|
|org.apache.hadoop.hive.serde2.io.DoubleWritable|3000000|72000000|72000000|
|java.lang.Object[]|2000000|56000000|184384000|
|byte[]|1000000|32384000|32384000|
|java.util.HashMap$Entry|1000000|32000000|264384000|
|org.apache.hadoop.hive.ql.exec.persistence.LazyFlatRowContainer|1000000|32000000|168384000|
|org.apache.hadoop.io.Text|1000000|24000000|56384000|
|org.apache.hadoop.hive.ql.exec.persistence.MapJoinKey|1000000|16000000|64000000|
|java.util.HashMap$Entry[]|1|8388624|272772624|
|java.util.HashMap|1|48|272772672|


Savings of 19~%



Lazy deserialization-enabled table (before any activity, so no rows are deserialized) looks like this:
|Class|Objects|Shallow Size|Retained Size|
|byte[]|1000000|49968000|49968000|
|java.lang.Object[]|2000000|48000000|121968000|
|java.util.HashMap$Entry|1000000|32000000|201968000|
|org.apache.hadoop.hive.ql.exec.persistence.LazyFlatRowContainer|1000000|32000000|105968000|
|org.apache.hadoop.hive.serde2.io.DoubleWritable|1000000|24000000|24000000|
|org.apache.hadoop.hive.ql.exec.persistence.MapJoinKey|1000000|16000000|64000000|
|java.util.HashMap$Entry[]|1|8388624|210356624|
|java.util.HashMap|1|48|210356672|

Savings of further 23% compared to fully eager table (at the cost of byte copying)


Remaining writable come from the key in that case, that is addressed in separate jira

Hmm, 8 more bytes per value can be shaved, it seems that new class inherits some useless member from abstractlist

Minor nitpicks on RB. Otherwise LGTM +1. Are you planning to provide a new patch for the 8 additional bytes?

will update this patch

update, remove abstractlist
one tez test passed, will run the rest



{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12630238/HIVE-6418.04.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 5175 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_mapjoin_mapjoin
{noformat}

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1457/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1457/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12630238

add changes to non-tez out file. I think someone forgot to update tez files cause there are small unrelated changes in all outputs (database name pre/post hook), but they all pass



{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12630604/HIVE-6418.05.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 5170 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_auto_sortmerge_join_16
org.apache.hive.service.cli.thrift.TestThriftHttpCLIService.org.apache.hive.service.cli.thrift.TestThriftHttpCLIService
{noformat}

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1488/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1488/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12630604

Cannot repro either query or test failure. It looks like the query is flaky, judging by failures in other jiras.

Looked at the changes since last review. Still looks good +1.

Will commit in 24 hours...

This introduces a new config parameter, *hive.mapjoin.lazy.hashtable*, which needs documentation.

But don't document it in hive-default.xml.template because that's going to be overwritten after HIVE-6037 commits.  You could document it in a comment in HiveConf.java but most of the parameter comments will go away with HIVE-6037 and the descriptions will be incorporated into the parameter definitions.

So maybe the best course is to document it here in a release note, then it can be added to HiveConf.java either before or after HIVE-6037 commits.  (I'll make a note there about this new parameter.)

committed to trunk

*hive.mapjoin.lazy.hashtable* is documented in the wiki here:

* [Configuration Properties:  hive.mapjoin.lazy.hashtable | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.mapjoin.lazy.hashtable]

