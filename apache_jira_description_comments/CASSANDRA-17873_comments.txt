[~bdeggleston] , do you mind to confirm my reasoning that we need Opcodes.ASM7 in 4.0 and 4.1, please? As you were updating it last time for JDK11, I want to be sure I didn't miss anything. 

Seems reasonable yes, I can't think of a reason we'd want to keep it at the old value

 
||Branch||CI run||
|[4.0|https://github.com/ekaterinadimitrova2/cassandra/tree/17873-4.0]|[CircleCI|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-4.0]|
|[4.1|https://github.com/ekaterinadimitrova2/cassandra/tree/17873-4.1]|[CircleCI|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-4.1]|
|[trunk|https://github.com/ekaterinadimitrova2/cassandra/tree/17873-trunk]|[CircleCI|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-trunk] #1878 is the full CI run|

 

All known flaky tests:

4.0:
 * testDropCompactStorage - CASSANDRA-17674

4.1:
 * test_multiple_repair - CASSANDRA-17005, known timeouts. Probably will reopen that ticket or open a new one but not related to this work
 * test_failed_bootstrap_wiped_node_can_join - CASSANDRA-17308

trunk: 
 * nodeDownDuringMove - CASSANDRA-15239, also in this case I suspect some Circle issue, I am spinning things in a loop to add more info to that ticket but I don't think this failure has anything to do with this particular work
 * test_failed_bootstrap_wiped_node_can_join - CASSANDRA-17308

[~bdeggleston] , do you mind to review this one if you have a few minutes, please?

I am not an expert here but the patches lgtm and if tests pass +1 from me bc that's all we can do. Failures seem flaky timeouts also.

Are you sure JDK8 supports this bytecode version?

 

[~benedict] , It's been some time since I dig that docs, I will look again whether I missed something by chance and post here for completeness.

On the other hand, looking now you use it with the simulator and run java 8 tests? I am no expert with the simulator but I assume if you run jdk8 tests and you use there already that opcode this was checked? I might be missing something though, so happy to be corrected.

PS ASM7 stands for the asm version and JDK11 official support was added in 7, experimental in 6, we had 5 here

In that case it's fine, yes :) 

I don't have a mental map of ASM version to Java version unfortunately, just wanted to check it had been confirmed.

{quote}I don't have a mental map of ASM version to Java version unfortunately, just wanted to check it had been confirmed.
{quote}
Same here and I looked into this like almost two months ago, appreciate you chiming in here! 

I am struggling to find official doc now on the opcodes and the Javadoc was not helpful but looking back into the Opcodes interface itself what I remembered is [ASM7 corresponds to minimum required ASM version|https://github.com/consulo/objectweb-asm/blob/master/asm/src/main/java/org/objectweb/asm/Opcodes.java#L44] which will support the jdk versions we need and 11 started official support in ASM7 as per the [changelog|https://asm.ow2.io/versions.html]. If we want to provide opcode  for particular JDK then we use the [V* opcodes|https://github.com/consulo/objectweb-asm/blob/master/asm/src/main/java/org/objectweb/asm/Opcodes.java#L268].  I hope I didn't somehow misunderstood this. Also, we will need to bump this further when we commit the JDK17 support bits, I keep a note on that myself. Which reminds me I might have to talk to you [~benedict]  about the jdk17 and the simulator so I do not miss anything there but I am not there yet. 
{quote}In that case it's fine, yes :)
{quote}
Thanks for confirming, I will add you both reviewers then :) I will rebase and rerun CI pre-commit as it has been a while.

Pushed rebased all branches to CI:
||Branch||CI run||
|[4.0|https://github.com/ekaterinadimitrova2/cassandra/tree/17873-4.0]|[CircleCI|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-4.0] #1977 is the full CI run|
|[4.1|https://github.com/ekaterinadimitrova2/cassandra/tree/17873-4.1]|[CircleCI|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-4.1] #1978 is the full CI run|
|[trunk|https://github.com/ekaterinadimitrova2/cassandra/tree/17873-trunk]|[CircleCI|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-trunk] #1979 is the full CI run|

Commit pending CI results

Am I seeing some new flaky failures like the compression opttions or the UUID restart one? wdyt [~e.dimitrova]?

4.0:
 * [testTruncationReleasesLogSpace|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1977/workflows/041331ac-fce0-47ac-b475-83759ac4e2c7/jobs/15701/tests#failed-test-0] - known issue from CASSANDRA-17884
 * testDropCompactStorage - CASSANDRA-17674

4.1:
 * test_compression_cql_options - CASSANDRA-16861
 * test_quorum_requirement - known problem from  CASSANDRA-17922 _I think_ (cc [~brandon.williams])

trunk:
 * testOutboundConnectionsAreInterruptedWhenAuthFails - seems like flaky test that has nothing to do with this patch; I ran it [500 times with latest trunk|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1980/workflows/65ac078b-cb6a-4eb9-b8f0-b650e2886c13/jobs/15771/tests#failed-test-0] and it fails in a few different ways:

{code:java}
junit.framework.AssertionFailedError: expected:<0> but was:<1> at org.apache.cassandra.distributed.test.InternodeEncryptionEnforcementTest.lambda$testOutboundConnectionsAreRejectedWhenAuthFails$776879b6$1(InternodeEncryptionEnforcementTest.java:113) at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:96) at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:61) at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:71) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.lang.Thread.run(Thread.java:748){code}
{code:java}
junit.framework.AssertionFailedError at org.apache.cassandra.distributed.test.InternodeEncryptionEnforcementTest.lambda$testOutboundConnectionsAreInterruptedWhenAuthFails$776879b6$1(InternodeEncryptionEnforcementTest.java:164) at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:96) at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:61) at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:71) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.lang.Thread.run(Thread.java:748){code}
{code:java}
junit.framework.AssertionFailedError: expected:<0> but was:<2> at org.apache.cassandra.distributed.test.InternodeEncryptionEnforcementTest.lambda$testOutboundConnectionsAreRejectedWhenAuthFails$776879b6$1(InternodeEncryptionEnforcementTest.java:113) at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:96) at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:61) at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:71) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.lang.Thread.run(Thread.java:748){code}
It is significantly more flaky on JDK8. The stack traces were from JDK8. (failed 115 times out of 500)

In JDK11 we see: (only 7 failures out of 500)
{code:java}
junit.framework.AssertionFailedError: Timeout occurred. Please note the time in the report does not reflect the time until the timeout. at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.util.Vector.forEach(Vector.java:1388) at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.util.Vector.forEach(Vector.java:1388) at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43){code}
{code:java}
junit.framework.AssertionFailedError: expected:<0> but was:<1> at org.apache.cassandra.distributed.test.InternodeEncryptionEnforcementTest.lambda$testOutboundConnectionsAreRejectedWhenAuthFails$776879b6$1(InternodeEncryptionEnforcementTest.java:113) at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:96) at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:61) at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:71) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.base/java.lang.Thread.run(Thread.java:829){code}
Now funny enough neither of those is the same timeout I see with my patch :D 

So I ran 500 times the test class with the patch(rebased again as there were a few commits from today, not affecting this patch but just to ensure we are on par with only this commit difference) in a loop to check "the state of the art": - [run 1981|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-trunk]

Similar results for trunk
 * testRestartWithUUIDDisabled - consistently failed with JDK8 and also JDK11; I do not see how it can be related to this patch; I also saw it failing in the last two Jenkins runs so I just opened a ticket and pinged the authors; CASSANDRA-17975

With all that in mind I'd say I commit this ticket and open one more follow up ticket for testOutboundConnectionsAreInterruptedWhenAuthFails. WDYT?

Yep makes sense to me +1. Thx!

> Which reminds me I might have to talk to you benedict  about the jdk17 and the simulator so I do not miss anything there but I am not there yet. 

Actually, the simulator doesn't even support JDK11 yet. I believe [~dcapwell] is looking into JDK11/17 support for the simulator soon.

I think it would be fine to leave the simulator on JDK8 for a little while anyway, as it is testing things that are orthogonal to the JDK version.

{quote}Actually, the simulator doesn't even support JDK11 yet. I believe [~dcapwell] is looking into JDK11/17 support for the simulator soon.
{quote}
 

That's really good to know, thanks! I will follow up with him when the time comes. I was actually about to ask why we don't test with jdk11. Now I actually  remember I also pushed the tests with jdk11 and some exports were required. So I had a TODO to ask

It seems I actually opened a ticket some time ago for testOutboundConnectionsAreInterruptedWhenAuthFails CASSANDRA-17708.

Not sure why my search didn't find it

Reran sanity check CI as there were commits yesterday and I preferred to be safe than sorry later. No heavy upgrade tests though.

4.0 [#1983|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-4.0]
 * [testMessageDeliveryOnReconnect|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1983/workflows/e4a63e37-c890-4cdb-8d52-7ad6e26e49b6/jobs/15843/tests#failed-test-0] - CASSANDRA-16677
 * [test_resume_stopped_build|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1983/workflows/2e4cf5a1-dd1e-4a45-bfa5-cb7a7d936b27/jobs/15828/tests#failed-test-0] - Not related. For completeness [this run|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=test-resume-stopped-build] shows it fails on current 4.0. I will open a new ticket 

4.1  [#1984|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-4.1] all green

trunk is green (please ignore the repeated test, the rest is green) [#1982|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17873-trunk]

To https://github.com/apache/cassandra.git

   a9df34c62a..ce1584ccc8  cassandra-4.0 -> cassandra-4.0

   f90148a344..1df5dd671e  cassandra-4.1 -> cassandra-4.1

   ac68f24512..6f709ca0ec  trunk -> trunk

 

CASSANDRA-17980 opened for the flaky test

Good one!

