FYI, you don't need to change the style here:

{code}
-      if (rst.isAlive()) liveServers.add(rst);
-      else LOG.info("Not alive " + rst.getName());
+      if (rst.isAlive()){
+        liveServers.add(rst);
+      }
{code}

Its ok having no curlies if statement fits one line.

In hbase code base, we have spaces around operators... i.e. this needs spaces {code} "+encodedName+" {code}

The refactoring that makes results int this method, {code}+    final List<ServerName> destServers = serverManager.createDestinationServersList(serverToExclude);{code} looks good.

Ditto for this change {code}+    this.serverManager.removeDeadNotExpiredServers(servers);{code} moving 'server' state out of AM and up into SM where it belongs.

Ugh.  There was a bunch of dup'd code that this patch removes.

createDestinationServersList and removeDeadNotExpiredServers do not need to be public methods (oh, hang on, createDestinationServersList needs to be so accessible from handlers.... does removeDeadNotExpiredServers also need to be?)

What does the big refactoring of TestDrainingServer do?

Patch looks good to me.












-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12526565/5992.v2.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster
                  org.apache.hadoop.hbase.TestDrainingServer

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/1851//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/1851//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/1851//console

This message is automatically generated.

bq. What does the big refactoring of TestDrainingServer do?
Hopefully it's now non flaky. Before both the test and the core code were a little bit flaky! :-).

bq. In hbase code base, we have spaces around operators... i.e. this needs spaces 
Done.

bq. does removeDeadNotExpiredServers also need to be?
It does compile if it's package protected. I didn't dare doing it in the first patch to maintain the existing interface, but since you're asking :-). Done.

TestDrainingServer failed for an unrelated reason in its setup. But well. Fixed (hopefully, I actually don't really reproduce the issue locally) as well in the next patch.


{code}
-    this.servers.entrySet();
+    this.servers.entrySet();   // todo: ?? very smart or copy paste error
{code}
Can we remove the above statement ?

In HMaster.java:
{code}
+        if (this.cpHost.preMove( hri , rp.getSource(), rp.getDestination())) {
{code}
Please remove the spaces around hri - minor.
{code}
+   * Creates a list of possible destination for a region. It contains the online servers, but not
{code}
'destination' -> 'destinations'
{code}
+  public List<ServerName> createDestinationServersList(){
{code}
Please add javadoc for the method above.

v5 with Stack's and Ted's comments taken into account. Thanks.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12526590/5992.v5.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 27 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/1854//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/1854//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/1854//console

This message is automatically generated.

Re-attaching patch v5.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12526617/5992.v5.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 27 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/1858//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/1858//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/1858//console

This message is automatically generated.

Still cannot find the hanging test from Jenkins console.
I am running test suite on Linux.

If there is no hanging test there, will integrate the patch.

It's org.apache.hadoop.hbase.TestDrainingServer.
I fixed the issue, I'm retesting before uploading the patch.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12526647/5992.v11.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 31 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestSplitLogManager

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/1863//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/1863//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/1863//console

This message is automatically generated.

I looped TestDrainingServer 4 times.

TestSplitLogManager passes locally on MacBook.

Integrated to trunk.

Thanks for the patch, N.

Thanks for the review, Stack.

Integrated in HBase-TRUNK #2881 (See [https://builds.apache.org/job/HBase-TRUNK/2881/])
    HBASE-5992 Generalization of region move implementation + manage draining servers in bulk assign (N Keywal) (Revision 1337641)

     Result = SUCCESS
tedyu : 
Files : 
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestDrainingServer.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManager.java


Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #3 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/3/])
    HBASE-5992 Generalization of region move implementation + manage draining servers in bulk assign (N Keywal) (Revision 1337641)

     Result = FAILURE
tedyu : 
Files : 
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java
* /hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestDrainingServer.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManager.java


Marking closed.

