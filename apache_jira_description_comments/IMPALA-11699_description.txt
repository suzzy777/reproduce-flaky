IMPALA-11469 makes FileSystemUtil depend on BackendConfig.INSTANCE to get the configured prefix list of ignored dirs. However, there are some FE tests that can't assure BackendConfig.INSTANCE is initiated, which cause failures like this:
{noformat}
[ERROR] Tests run: 16, Failures: 0, Errors: 14, Skipped: 0, Time elapsed: 0.257 s <<< FAILURE! - in org.apache.impala.util.AcidUtilsTest
[ERROR] testDeletesBeforeBase(org.apache.impala.util.AcidUtilsTest)  Time elapsed: 0.015 s  <<< ERROR!
java.lang.ExceptionInInitializerError
	at org.apache.impala.util.AcidUtils.filterFilesForAcidState(AcidUtils.java:471)
	at org.apache.impala.util.AcidUtilsTest.assertFiltering(AcidUtilsTest.java:75)
	at org.apache.impala.util.AcidUtilsTest.assertFiltering(AcidUtilsTest.java:64)
	at org.apache.impala.util.AcidUtilsTest.testDeletesBeforeBase(AcidUtilsTest.java:581)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
Caused by: java.lang.NullPointerException
	at org.apache.impala.common.FileSystemUtil.<clinit>(FileSystemUtil.java:868)
	... 28 more
{noformat}

We need to list such tests and make them extends FrontendTestBase as this fix does:
https://github.com/apache/impala/commit/c1610a16377ae1254943cf321440060a41531d24