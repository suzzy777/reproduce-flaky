This seems to be caused by switching to faster instances in internal Cloudera test infrastructure. The solution should be to change the query to be slower.

I think I understood what is happening here:  while https://github.com/apache/impala/blob/master/tests/custom_cluster/test_runtime_profile.py#L40 suggests that sampling happens every 50ms, if the node finishes faster than the full sample period (500ms), then we treat it as if no sample was collected at all;  https://github.com/apache/impala/blob/29a26a536c004e4d16fdb56e1bb5a41605ae4e30/be/src/util/streaming-sampler.h#L61

So the node has to take at least 500 ms to be present in the profile. I am not sure if this is the intended behavior, e.g. when there is no full sample, we could return the partial existing one.

The following patch makes the query slower to avoid flakyness: https://gerrit.cloudera.org/#/c/18825/
This is a short term solution, it would be much better to rely on the query's slowness.

Commit 308fda110758b0fc58e5b1f477d635aac29aea75 in impala's branch refs/heads/master from Csaba Ringhofer
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=308fda110 ]

IMPALA-11481: Make test_runtime_profile_aggregate slower to avoid flakyness

The recent flakyness was probably caused by the new faster instances used
for testing. For more information see the Jira.

Change-Id: Ia31abfdcd12a26a2340c89d312b0d3b9c9fa3014
Reviewed-on: http://gerrit.cloudera.org:8080/18825
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


