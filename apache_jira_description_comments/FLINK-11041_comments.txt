Another instance: https://api.travis-ci.org/v3/job/462744934/log.txt

StefanRRichter opened a new pull request #7268: [FLINK-11041][test] ReinterpretDataStreamAsKeyedStreamITCase source s…
URL: https://github.com/apache/flink/pull/7268
 
 
   ## What is the purpose of the change
   
   This test fixes the flaky behavior of `ReinterpretDataStreamAsKeyedStreamITCase`. the problem was that the test was changed to also test failover, but the source did not use the checkpointing lock.
   
   
   ## Brief change log
   
   Hold checkpointing lock in the test's source function.
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


tillrohrmann closed pull request #7268: [FLINK-11041][test] ReinterpretDataStreamAsKeyedStreamITCase source s…
URL: https://github.com/apache/flink/pull/7268
 
 
   

This is a PR merged from a forked repository.
As GitHub hides the original diff on merge, it is displayed below for
the sake of provenance:

As this is a foreign pull request (from a fork), the diff is supplied
below (as it won't show otherwise due to GitHub magic):

diff --git a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/ReinterpretDataStreamAsKeyedStreamITCase.java b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/ReinterpretDataStreamAsKeyedStreamITCase.java
index 6a1b9ee75f7..ff28dffff1d 100644
--- a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/ReinterpretDataStreamAsKeyedStreamITCase.java
+++ b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/ReinterpretDataStreamAsKeyedStreamITCase.java
@@ -122,7 +122,9 @@ public RandomTupleSource(int numEvents, int numKeys) {
 		public void run(SourceContext<Tuple2<Integer, Integer>> out) throws Exception {
 			Random random = new Random(42);
 			while (--remainingEvents >= 0) {
-				out.collect(new Tuple2<>(random.nextInt(numKeys), 1));
+				synchronized (out.getCheckpointLock()) {
+					out.collect(new Tuple2<>(random.nextInt(numKeys), 1));
+				}
 			}
 		}
 


 

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Fixed via
1.8.0: https://github.com/apache/flink/commit/70b2029f8a3d4ca2d3cb7bd7fddac9bb5b3e8f07
1.7.1: https://github.com/apache/flink/commit/ae2c29e234ea19387f88d070739168e553bcd400
1.6.3: https://github.com/apache/flink/commit/d6926664daed100fdefae0b875b5e4a291a0193b

Problem does not seem to be fixed:

https://api.travis-ci.org/v3/job/490569865/log.txt

Merged in:
master: 178fe6b678
release-1.7: b9f78bbe68

