For any new ReplicaState introduced in future, if we just append value after last one (TEMPORARY(4) as of today), it should work fine right?
{quote}add index checking in the read and getState function to avoid index out of bound error.
{quote}
Are you suggesting this so that we can throw simple error message, something like "Provided index should be in the range of: 0 to cachedValues.length-1"? If so, then it makes sense.

[~vjasani] yes, adding the index information is what I mean. Since if in the new version, a new value is appended, then the index will be the original length + 1, if it's sent to the old version, it will cause the arrayoutofbound error. 

[~jwjwyoung] Would you like to take a look at PR? In addition to small improvement, I have added this comment:
{code:java}
    // Since ReplicaState (de)serialization depends on ordinal, either adding
    // new value should be avoided to this enum or newly appended value should
    // be handled by NameNodeLayoutVersion#Feature.
{code}

[~vjasani] Looks perfect!

Committed to trunk and branch-3.3.

