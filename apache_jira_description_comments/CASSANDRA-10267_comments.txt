The remaining failures are caused by the upgrade problems CASSANDRA-9671 fixes

bq. The remaining failures are caused by the upgrade problems CASSANDRA-9671 fixes

According to the dtests results of that ticket, there is at least one paging test that still doesn't pass ({{test_failure_threshold_deletions}}). So if you don't mind I'll keep that ticket open as a reminded to check where we are once CASSANDRA-9761 is committed. If there is nothing more to do after that, I'll resolve it. 

No problem. Assuming it's not fixed by CASSANDRA-9761, just assign back to me, and I'll take care of it.

These tests also fail, though intermittently:

http://cassci.datastax.com/job/trunk_dtest-skipped-with-require/lastCompletedBuild/testReport/upgrade_tests.paging_test/TestPagingData/static_columns_paging_test/history/

http://cassci.datastax.com/job/trunk_dtest-skipped-with-require/lastCompletedBuild/testReport/upgrade_tests.paging_test/TestPagingWithDeletions/test_multiple_row_deletions/history/

[~bdeggleston] How did you want this managed in Jira? I can open a new ticket for these if you like, or did you want CASSANDRA-9761 reopened? I can also un-tag those tests so they run with normal dtest jobs if you like.

[~mambocab] let's just keep it in this ticket. Unfortunately, it looks like there are also a bunch of TestCQL tests which are now also failing consistently.

* {{upgrade_tests/paging_test.py: TestPagingWithDeletions.test_failure_threshold_deletions}} was failing because the dtest was broken. PR is [here|https://github.com/riptano/cassandra-dtest/pull/552] (I may have forgotten to open one when working on 9893)
* {{upgrade_tests/paging_test.py:TestPagingData.static_columns_paging_test}} is caused by CASSANDRA-10254
* {{upgrade_tests/paging_test.py:TestPagingWithDeletions.test_multiple_row_deletions}} is fixed by CASSANDRA-6237, but only for 3.0<->3.0, versions under 3.0 don't appear to be targeted. [~blerer], can that be removed from the upgrade tests, or should it be working with upgrades from 2.1 to  3.0?

Also, the following TestCQL tests are either re-broken, or newly broken:
* upgrade_tests.cql_tests:TestCQL.compact_metadata_test
* upgrade_tests.cql_tests:TestCQL.empty_in_test
* upgrade_tests.cql_tests:TestCQL.rename_test
* upgrade_tests.cql_tests:TestCQL.static_columns_cas_test
* upgrade_tests.cql_tests:TestCQL.static_columns_with_distinct_test
* upgrade_tests.cql_tests:TestCQL.test_v2_protocol_IN_with_tuples (this one can just be skipped for versions >=3.0)

{quote}
{{upgrade_tests/paging_test.py:TestPagingWithDeletions.test_multiple_row_deletions}} is fixed by {{CASSANDRA-6237}}, but only for 3.0<->3.0, versions under 3.0 don't appear to be targeted. Benjamin Lerer, can that be removed from the upgrade tests, or should it be working with upgrades from 2.1 to 3.0?
{quote}

The test can be removed. We were not supporting this type of deletion before 3.0.

Here's my progress so far on the new failures:

* {{upgrade_tests.cql_tests:TestCQL.compact_metadata_test}} only fails once per 8 runs or so, and looks like a problem with SerializationHeaders on tables with compact storage
* {{upgrade_tests.cql_tests:TestCQL.empty_in_test}} failing because paged range commands for tables with compact storage are always deserialized with partition limit of 1 [see here|       https://github.com/apache/cassandra/blob/cassandra-3.0/src/java/org/apache/cassandra/db/ReadCommand.java#L1062].
* {{upgrade_tests.cql_tests:TestCQL.rename_test}} fixed locally
* {{upgrade_tests.cql_tests:TestCQL.static_columns_cas_test}} this one's failing because the 2.1 read command is being deserialized as a SinglePartitionSliceCommand command, however, the info pertaining to the static column selection is lost when deserializing the bounds. I'm not too clear on exactly how to produce Bounds that select static columns just yet.
* {{upgrade_tests.cql_tests:TestCQL.static_columns_with_distinct_test}} looks like a problem with the 3.0 node interpreting the 2.1 paged range command

I've pushed a branch up [here|https://github.com/bdeggleston/cassandra/commits/10267] with fixes for {{TestCQL.static_columns_cas_test}} and {{TestCQL.empty_in_test}}, a dtest branch [here|https://github.com/bdeggleston/cassandra-dtest/commits/10267-2] which fixes problems with {{TestCQL.rename_test}}, and opened CASSANDRA-10370 which addresses the 2.1 bug causing {{TestCQL.static_columns_with_distinct_test}} to fail. I'm still working on {{TestCQL.compact_metadata_test}}.

Regarding the C* changes. [This commit|https://github.com/bdeggleston/cassandra/commit/3aba7ebcd522400c1cb50e83a877964db033594c] fixes {{TestCQL.static_columns_cas_test}}, but I have a feeling that it may have some unintended consequences, so any feedback on that from someone more experienced would be appreciated.

bq. a dtest branch here which fixes problems with {{TestCQL.rename_test}}

Can you open a PR for that? Haven't seen one.

bq.  This commit fixes {{TestCQL.static_columns_cas_test}}, but I have a feeling that it may have some unintended consequences

Yes, I'm pretty sure this breaks deletion of static collection columns. The handling of static in slice query command is indeed not fully correct, but I don't think we can't fix it in {{LegacyLayout.decodeBound()}}. I've pushed a commit [here|https://github.com/pcmanus/cassandra/commits/10267] that I think provide a more correct fix (the commit message attempts to explain a bit more precisely what's going on). As far as I can tell, this fixes {{TestCQL.static_columns_cas_test}} (and I say "as far as I can tell" because the test is flaky is the first place, so it's possible I've just be really lucky in the 5 run or so that I tried so far).

Awesome, thanks. I've pulled it into my branch, and haven't had any failures in 10 runs, so I'd say it's good to go. Dtest PR is [here|https://github.com/riptano/cassandra-dtest/pull/563]

Ok, so I'm good on your fix for {{empty_in_test}} and you seem fine with my fix for {{static_columns_cas_test}} so committed those and closing this ticket.

It seems we still have {{compact_metadata_test}} to look but I've created CASSANDRA-10373 for that (since I've just committed something for this).


