Uploaded my v1 patch for branch-2.3,  I would add more test code for it.

Please open a PR against the master branch on github? We use github PR to review patch now.

Thanks.

I have already made a [PR#1970|https://github.com/apache/hbase/pull/1970] agiainst the master.
In the PR, I added a new method  {{getSyncedLength}} to {{WriterBase}} interface to return the length which successfully synced to underlying fileSystem.
{code:java}
interface WriterBase extends Closeable {
    long getLength();
    /**
     * @return byteSize success synced to underlying filesystem.
     */
    long getSyncedLength();
  }
{code}

and {{AbstractFSWAL.getLogFileSizeIfBeingWritten}}  is relied on the added {{WriteBase.getSyncedLength}} method:

{code:java}
 @Override
  public OptionalLong getLogFileSizeIfBeingWritten(Path path) {
    rollWriterLock.lock();
    try {
      Path currentPath = getOldPath();
      if (path.equals(currentPath)) {
        W writer = this.writer;
        return writer != null ? OptionalLong.of(writer.getSyncedLength()) : OptionalLong.empty();
      } else {
        return OptionalLong.empty();
      }
    } finally {
      rollWriterLock.unlock();
    }
  }
{code}

[~zhangduo], I updated my PR,  would you help me have a review again ? Thank you very much.

To confirm, HBase 2.0+ with AsyncFSWAL enabled prior to this change may run into failures for the replication system, right?

Yes, it could cause the target cluster to have more data then source cluster.

What versions are impacted? All 2.x.y?

We'll need a release note that includes a downstream facing description of  what the failure looks like and a workaround if possible. (I think the workaround is to switch from the fan out wal to the filesystem wal)

[~busbey], yes, all 2.x.y versions are impacted.
Release note is added.

Pushed to branch-2.2+.

Thanks [~comnetwork] for contributing.

Results for branch branch-2
	[build #2733 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2733/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2733/General_20Nightly_20Build_20Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2733/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2733/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2733/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2.2
	[build #906 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/906/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/906//General_Nightly_Build_Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/906//JDK8_Nightly_Build_Report_(Hadoop2)/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/906//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch master
	[build #1777 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/master/1777/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/master/1777/General_20Nightly_20Build_20Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/master/1663//JDK8_Nightly_Build_Report_(Hadoop2)/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/master/1777/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://builds.apache.org/job/HBase%20Nightly/job/master/1777/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Reopening to apply patch to branch-2.3

I'd have reopened it because it is failing branch-2. See

 

[https://builds.apache.org/view/H-L/view/HBase/job/HBase-Find-Flaky-Tests/job/branch-2/lastSuccessfulBuild/artifact/dashboard.html]

 

See the bottom half of the screen where replication.regionserver.TestWALEntryStream fails since #6494.

 

Here is what happens when I try test locally:

 
{code:java}
[INFO]
[INFO] Results:
[INFO]
[ERROR] Errors:
[ERROR] org.apache.hadoop.hbase.replication.regionserver.TestWALEntryStream.null
[ERROR]   Run 1: TestWALEntryStream.testReplicationSourceWALReaderRecovered:442 » TestTimedOut ...
[ERROR]   Run 2: TestWALEntryStream »  Appears to be stuck in thread AsyncFSWAL-1-1
[INFO]
[ERROR]   TestWALEntryStream.testReplicationSourceWALReaderRecovered:442 » Interrupted
[INFO]
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0
 {code}
 

Will try and take a look later...

I'm seeing this on the 2.3 backport PR as well, https://github.com/apache/hbase/pull/2028

Running {{TestWALEntryStream}} on the branch-2.3 backport, I get

{noformat}
2020-07-06 12:59:42,360 DEBUG [Thread-184] regionserver.WALEntryStream(252): Reached the end of log hdfs://localhost:56832/Users/ndimiduk/repos/apache/hbase/hbase-server/target/test-data/d93766f2-8459-c5b2-fc20-bea78d16ff02/WALs/testReplicationSourceWALReaderRecovered/testReplicationSourceWALReaderRecovered.1594065581848
Exception in thread "Thread-184" java.lang.NullPointerException
        at org.apache.hadoop.hbase.regionserver.wal.AsyncProtobufLogWriter.getSyncedLength(AsyncProtobufLogWriter.java:237)
        at org.apache.hadoop.hbase.regionserver.wal.AbstractFSWAL.getLogFileSizeIfBeingWritten(AbstractFSWAL.java:1064)
        at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition(WALEntryStream.java:265)
        at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry(WALEntryStream.java:189)
        at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext(WALEntryStream.java:101)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries(ReplicationSourceWALReader.java:195)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run(ReplicationSourceWALReader.java:138)
{noformat}

From a thread dump of {{TestWALEntryStream}} when the test gets killed

{noformat}
"Time-limited test" 
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.4/java.lang.Object.wait(Native Method)
        at app//org.apache.hadoop.hbase.regionserver.wal.SyncFuture.get(SyncFuture.java:142)
        at app//org.apache.hadoop.hbase.regionserver.wal.AbstractFSWAL.blockOnSync(AbstractFSWAL.java:752)
        at app//org.apache.hadoop.hbase.regionserver.wal.AsyncFSWAL.sync(AsyncFSWAL.java:645)
        at app//org.apache.hadoop.hbase.regionserver.wal.AsyncFSWAL.sync(AsyncFSWAL.java:604)
        at app//org.apache.hadoop.hbase.replication.regionserver.TestWALEntryStream.appendToLogAndSync(TestWALEntryStream.java:581)
        at app//org.apache.hadoop.hbase.replication.regionserver.TestWALEntryStream.testDifferentCounts(TestWALEntryStream.java:161)
{noformat}

[~zghao] HBASE-24691 FYI see above.

[~ndimiduk] [~stack] [~zhangduo], 
I think the  {{TestWALEntryStream}} error in branch 2.x  is  caused by  following {{AsyncFSWAL.doShutdown}} method of branch-2.x, which is different from the master:
{code:java}
711    @Override
712    protected void doShutdown() throws IOException {
713           waitForSafePoint();
714           closeWriter();
715           closeExecutor.shutdown();
{code} 

After we invoke {{closeWriter()}}, we do not set the {{writer}} to null, which causes {{AbstractFSWAL.getLogFileSizeIfBeingWritten}} continues to invoke {{AsyncProtobufLogWriter.getSyncedLength}} in following line 1017 after the {{AsyncProtobufLogWriter}} is close.
{code:java}
1010    @Override
1011    public OptionalLong getLogFileSizeIfBeingWritten(Path path) {
1012        rollWriterLock.lock();
1013        try {
1014           Path currentPath = getOldPath();
1015           if (path.equals(currentPath)) {
1016               W writer = this.writer;
1017               return writer != null ? OptionalLong.of(writer.getSyncedLength()) : OptionalLong.empty();
1018        } else {
1019             return OptionalLong.empty();
1020        }
1021    } finally {
1022        rollWriterLock.unlock();
1023    }
1024  }
{code}

Why  {{TestWALEntryStream}} on the master is passed? That is because the  {{AsyncFSWAL.doShutdown}} code  in the master set the {{writer}} to null after  {{closeWriter()}} in
following line 780:
{code:java}
776     @Override
777     protected void doShutdown() throws IOException {
778          waitForSafePoint();
779          closeWriter(this.writer);
780          this.writer = null;
781          closeExecutor.shutdown();
{code}

The difference of {{AsyncFSWAL.doShutdown}} between master and 2.x is caused by HBASE-20456, which is a Synchronous replication patch did not applied to branch 2.x .

BTW.
After we set set the {{writer}} to null after  {{closeWriter()}} , the end of {{TestWALEntryStream.testReplicationSourceWALReaderRecovered}} should be modified as  master by
 HBASE-20456  :
{code:java}
  @@ -413,9 +413,7 @@ public class TestWALEntryStream {
     batch = reader.take();
     assertEquals(walPath, batch.getLastWalPath());
     assertEquals(5, batch.getNbEntries());
-    // Actually this should be true but we haven't handled this yet since for a normal queue the
-    // last one is always open... Not a big deal for now.
-    assertFalse(batch.isEndOfFile());
+    assertTrue(batch.isEndOfFile());
 
     assertSame(WALEntryBatch.NO_MORE_DATA, reader.take());
   }
{code}








So let's revert the 2.x commits first and open a new PR for 2.x?

Reverted from branch-2 and branch-2.2, seems I forgot to push to branch-2.3.

Please open a new PR [~comnetwork] against branch-2?

Thanks.

[~zhangduo], ok, I would make a PR for branch-2

[~zhangduo], the PR for branch-2 is  [PR#2034|https://github.com/apache/hbase/pull/2034]

Results for branch branch-2
	[build #2738 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2738/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2738/General_20Nightly_20Build_20Report/]




(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2738/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2738/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2738/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2.2
	[build #908 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/908/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/908//General_Nightly_Build_Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/908//JDK8_Nightly_Build_Report_(Hadoop2)/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/908//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


[~zhangduo], could you please help me review the  [PR#2034|https://github.com/apache/hbase/pull/2034]  for branch-2 ? The  {{TestWALEntryStream}} is passed.

[~ndimiduk] After reconsidering, I do not think AtomicLong.getAndAccumulate can perfectly replace AtomicLong.updateMax and updateMin, as for these two methods, we have an early quit logic when we find that the current value is already greater/less than the given value, but for AtomicLong.getAndAccumulate, we must finish a CAS before returning.

So let's keep it as is?

Results for branch branch-2
	[build #2742 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2742/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2742/General_20Nightly_20Build_20Report/]




(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2742/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2742/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/2742/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2.3
	[build #180 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/180/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/180/General_20Nightly_20Build_20Report/]




(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/180/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/180/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/180/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch branch-2.2
	[build #909 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/909/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/909//General_Nightly_Build_Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/909//JDK8_Nightly_Build_Report_(Hadoop2)/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/909//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Open an addendum [PR#2055|https://github.com/apache/hbase/pull/2055] to  incorporate [~ndimiduk]  's suggestions in [PR#2034|https://github.com/apache/hbase/pull/2034]  and other minor changes.
I did not  use the {{AtomicLong.getAndAccumulate}} to replace {{AtomicUtils.updateMax}} because 
https://issues.apache.org/jira/browse/HBASE-24625?focusedCommentId=17155993&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17155993

[~zhangduo] [~ndimiduk], please help me have a review, thanks.

Pushed the addendum to branch-2.2+.

Results for branch branch-2.3
	[build #205 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/205/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/205/General_20Nightly_20Build_20Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- Something went wrong running this stage, please [check relevant console output|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/205//console].


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/205/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.3/205/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch master
	[build #1809 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/master/1809/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/master/1809/General_20Nightly_20Build_20Report/]






(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/master/1809/JDK8_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(x) {color:red}-1 jdk11 hadoop3 checks{color}
-- For more information [see jdk11 report|https://builds.apache.org/job/HBase%20Nightly/job/master/1809/JDK11_20Nightly_20Build_20Report_20_28Hadoop3_29/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(x) {color:red}-1 client integration test{color}
--Failed when running client tests on top of Hadoop 2. [see log for details|https://builds.apache.org/job/HBase%20Nightly/job/master/1809//artifact/output-integration/hadoop-2.log]. (note that this means we didn't run on Hadoop 3)


Results for branch branch-2.2
	[build #931 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/931/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/931//General_Nightly_Build_Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/931//JDK8_Nightly_Build_Report_(Hadoop2)/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.2/929//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


