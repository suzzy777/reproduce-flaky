[~otis@apache.org] and [~simonwillnauer] agree, at least, on Twitter: [https://twitter.com/otisg/status/1273612913333415937]

¬†

Well, I know they both agree. They're both reasonable and kind.

Personally I like leader/follower, I've been using those terms for years in SolrCloud to disambiguate the number of replicas for a shard. Does "this shard has 5 replicas" mean there are 5 plus a leader or is one of those 5 the leader? "this shard has 1 leader and 4 followers" is clear that there are exactly 5.

As far as the repo is concerned, "trunk" rather than "master" works for me. IDK how to rename it though. On that topic, IDK whether Mark Miller's reference_impl is going to resolve, but it might be a good time to change when that is incorporated.



[~erickerickson]¬†Thanks for the contribution, I like leader/follower as well. My first pull request incorporated the change. The reason I have chose primary/secondary is to vocabulary conflict with the leader/follower usage already in the code base. I guess there is not much overlap but it could still be confusing for some.

For the repo, I think trunk would be fine, but I think that we should limit the scope for the first overhaul. The second one to remove such language can target the branch names and the build systems, for instance, or simply be included as a part of Mark's work. Non-voting contributor so leaving the concrete decisions to the committers. :)

I can adapt to whichever convention is most convenient....

I suggest we stick to one naming convention. leader follower (for both standalone and cluster modes)

>I suggest we stick to one naming convention. leader follower (for both standalone and cluster modes)

I think it is confusing. People won't know which is which, and one goes away, people will be less empowered and clueless. I think running with primary/secondary for the legacy system is good because it lets people know that they are using the standalone mode. I suspect that it could one day go away...although I know there are many in the community that think otherwise.

Whatever happens in the future, leader/follower refers to a different mechanism and something architecturally different than what's happening in standalone mode, hence the different names. They need to be tuned different, scaled differently, and managed differently.¬†

Thanks for taking this on.

There is a solr-user list thread on the topic here [https://lists.apache.org/thread.html/r23c685a79397b81c157f8d0d9cb4295a612f8eed387d0137e3b8d93f%40%3Csolr-user.lucene.apache.org%3E]¬†that I'm not sure if you are aware of. May I suggest reviving that thread now after the holiday and try to reach a conclusion on the actual terminology, as it touches soo many parts of Solr, documentation, user scripts, even names of metric keys that people parse out.

In that mail thread I voted for standardizing on leader/replica in both cloud and standalone since M/S mode is mostly equal to Cloud with PULL replicas. There are also great input from the community on what to call "master/slave" mode in the furure.

[~marcussorealheis] re: failing tests: See: http://fucit.org/solr-jenkins-reports/failure-report.html. That rolls up the test failures over a number of the Jenkins over the last 7 days. SOLR-12028 was an attempt some time ago to see if we could cut down on the test failure frequency.

I've been collecting these locally every week for quite a while. If you give me test names, I can see what the history is with them. Just the classes will do.

The problem with all of these is that the failure rate is low enough that they don't reproduce reliably. Siiigggh. I send a weekly BadApple report to the dev list with the info...

bq. There is a solr-user list thread on the topic here https://lists.apache.org/thread.html/r23c685a79397b81c157f8d0d9cb4295a612f8eed387d0137e3b8d93f%40%3Csolr-user.lucene.apache.org%3E that I'm not sure if you are aware of. May I suggest reviving that thread now after the holiday ...

[~janhoy], Even though I was not too eager for this change (as evident from the user list thread), I see, *for the first time*, some real intent and action to make this change happen. User list discussions are all talk, no action. [~marcussorealheis] is taking positive action here (an actual proposal and a PR), and the worst we can do to derail this effort would be to tell him to go back to the mailing list thread and keep discussing on and on. Since this JIRA is here and has the right context, IMHO all discussions on this topic should happen here.

bq. I suggest we stick to one naming convention. leader follower (for both standalone and cluster modes)
[~noble.paul] I'm -1 on this idea. In terms of terminlogy, I like primary server, secondary server because it doesn't conflict with anything to do with SolrCloud.

bq. Every time I read master and slave, I get pissed. [...] I'm sick of the garbage. 
[~marcussorealheis], on behalf of all the Solr committers, I apologize for the insensitive nomenclature we adopted. I hope we support your actions here to make Solr a welcoming project for all contributors.

I think we all appreciate Marcus vulunteering to help with the work. But since he was probably not ware of [~anshum]'s great contribution towards tackling this, by involving the entire user community on the dev list, I wanted to shed light on the existence of the existing discussion. Once that discussion converges, either through consensus or vote, then we can continue discussion on the implementation here and in the PR. If something else than primary/secondary is chosen, then it should be fairly quick to update the patch.

{quote}I think we all appreciate Marcus vulunteering to help with the work. But since he was probably not ware of¬†[~anshum]'s great contribution towards tackling this, by involving the entire user community on the dev list, I wanted to shed light on the existence of the existing discussion. Once that discussion converges, either through consensus or vote, then we can continue discussion on the implementation here and in the PR. If something else than primary/secondary is chosen, then it should be fairly quick to update the patch.
{quote}
Hi [~janhoy]¬†Thank you for making me aware of the discussion. I did not see it and wasn't made aware of it. I complained about this nomenclature as early of March of last year when I was still at Lucidworks. It received no traction or bias toward action then, so I took it upon myself to rip it out because over the past few weeks I have had the discomfort of focusing a lot more on the open source and had to read it over and over. It drives me mad. I will check out the discussion and share what I have already done. Since there is so much code in so many places, the effort was non-trivial purely because of volume, but I have done it 100% for primary/secondary, and 80% for leader/follower. Let me paste my PR into the user list. Just re-visiting and reviewing the PR gets me riled up so I hope we can find swift resolution on something that happened months ago. Some database technologies created at the same time as Solr never heavily used such nomenclature officially so I'm hopeful for a switft corrective action.¬†

¬†

[~janhoy] see this if you haven't:¬†[https://tools.ietf.org/id/draft-knodel-terminology-00.html]

Lots of work to do in the Solr and Lucene repos üôÉ

[~erickerickson] these are the tests:
 org.apache.solr.handler.TestReplicationHandler.testRateLimitedReplication
org.apache.solr.handler.TestReplicationHandler.doTestRepeater org.apache.solr.handler.TestReplicationHandler.doTestStressReplication org.apache.solr.handler.TestReplicationHandler.doTestIndexFetchWithPrimaryUrl

{quote}I suggest we stick to one naming convention. leader follower (for both standalone and cluster modes)
{quote}
+1
 Copying my reason from my email to the discussion thread in the users list:
{quote}I personally like to use "leader/follower". It's true that somewhat collides with SolrCloud terminology, but that's not a problem IMO, now that replica types exist, the ‚Äúrole‚Äù of the replica (leader vs. non-leader/follower) doesn‚Äôt specify the internals of how they behave, the replica type defines that. So, in a non-SolrCloud world, they would still be leader/followers regardless of how they perform that role.
{quote}

hey guys, I opened a PR for both but the longer we delay on merging the more trouble it will be to get it in. So I will update the leader/follower one (the first one actually) that fell behind a bit and didn't get as much love, but please don't hesitate to continue to work on whichever of the two PRs you prefer because I'm frankly sick of reading the words master and slave. It's really stressful. 

And [~tflobbe] I think your analysis sheds light on the fact that leader/follower is not what's happening in non-SolrCloud mode. Replicas are not replicas of a leader. They are replicas. If the "leader" fails the state of the cluster is very different for an end-user managing the cluster compared to when a leader goes down in SolrCloud. They are very different.

This is an aside: Can I ask why you support colliding terms for reasons other than you "personally like to use 'leader/follower?'"

As I said, I really don't care. I just want it to leave the code base so I never have to see it again, same with others who don't like to think about it.

bq. hey guys, I opened a PR for both
Ah! I didn't see that, sorry.
bq. Can I ask why you support colliding terms for reasons other than you "personally like to use 'leader/follower?'"
Like Noble said, it's the current terminology, so I'd rather stay with it, even if it collides with what's used in SolrCloud.

bq.  They are replicas. If the "leader" fails the state of the cluster is very different for an end-user managing the cluster compared to when a leader goes down in SolrCloud.
I don't fully understand what you mean here. In non-SolrCloud case, when the leader fails the followers won't have the latest index for some time, is that it? In SolrCloud, the replication may be delayed too (TLOG/PULL replicas). Yes, in the SolrCloud case, if the leader goes down there are leader elections and such, but about the fact that one replica "leads" and the other "follow", it's the same in both architecture IMO

{code}
Master and Slave

A Solr replication master is a single node which receives all updates initially and keeps everything organized. Solr replication slave nodes receive no updates directly, instead all changes (such as inserts, updates, deletes, etc.) are made against the single master node. Changes made on the master are distributed to all the slave nodes which service all query requests from the clients.
{code}
^ Quoting from https://lucene.apache.org/solr/guide/6_6/index-replication.html

I think this is the crux of my confusion. "master is a single node" makes it seem that master is a node level concept. In that case, it is incompatible with SolrCloud terminology. On the other hand, if "master/slave" is a core/collection level concept in standalone Solr (I see solrconfig.xml changes are needed, so this may be the case?), then I have -no- less problems renaming it to "leader/follower". In such a case, we shouldn't then call it "leader node", but a leader core. I don't know standalone Solr enough to know to clear my own confusion. I fully stand by primary/secondary to distinguish from SolrCloud terminology.

Again, I don't care I just want the words removed and curious about
 the technical basis for your objection. 

In non-SolrCloud, there is no indexing at all when the primary node goes down.

In SolrCloud, a follower can emerge as the leader without human intervention.

Those are different architectures in simple terms.





bq.  if "master/slave" is a core/collection level concept in standalone Solr 
Ah, it totally is per core. That documentation may be from the days before multi-core even existed? It's common for people to separate the hosts for masters and slaves because you will probably have some load balancer in front of them and it's easier to setup this way (among other reasons), but from the Solr perspective, it's just cores that take different roles.

[~marcussorealheis] This patch makes TestReplicationHandler run. Two problems:

1> one of the config files still referenced masterURL

2> typo in renaming a file, solrconfig-srecondary1.xml

I have _not_ run the full test suite with these changes, just TestReplicationHandler...

It's a good thing to address these details.¬† Even though I doubt any offense was intended, these terms have baggage and we should eliminate even the appearance of supporting that baggage.

I believe it's a mistake to use the same words for legacy and cloud.¬† I'm opposed to reusing leader/follower, which are terms already present in SolrCloud, for legacy replication.

We already have a difficult time getting users to understand the complexities involved, particularly because SolrCloud actually does utilize replication, in a way that's quite different than legacy.¬† If we use the same terms for the different things found in the two different modes, that confusion is going to get worse.

Supporting users becomes infinitely more difficult and time-consuming when you have to back up to clarify things because certain terms have different meanings depending on some context that hasn't been shared yet.

[~tflobbe] I view almost any comment that detracts from the goal of getting master/slave out of the codebase to a distraction from that which is imperative and of the utmost importance. If you have a really compelling reason other than you like it because I have demonstrated the architectures are different then I think you should drop it.

bq. We already have a difficult time getting users to understand the complexities involved, particularly because SolrCloud actually does utilize replication, in a way that's quite different than legacy.  If we use the same terms for the different things found in the two different modes, that confusion is going to get worse.

+1

[~erickerickson]Thanks for the help. The masterURL reference should be removed in the latest state of the master but I did not catch the secondary typo in the config. I looked and didn't see it. Thanks for helping out here. Pushing up the change.

Marcus, I'm not opposed to this change, but as with every change, we need to consider the impact it has to the project, in particular to usability and compatibility (which is what's being discussed here and in the PR). If done correctly, this change (or at least most of it) could even be backported to 8.x and get it out on the next release.
{quote}If you have a really compelling reason other than you like it
{quote}
"I like it" because I feel it makes it clearer to the user, not because I like the words.
{quote}because I have demonstrated the architectures are different
{quote}
I don't think that was ever in doubt?
{quote}We already have a difficult time getting users to understand the complexities involved, particularly because SolrCloud actually does utilize replication, in a way that's quite different than legacy.¬†
{quote}
At least since replica types, the way the data moves from "leaders" to "followers" depends on the type of replicas. If I create a SolrCloud cluster and have a collection with 1 TLOG (or NRT) and 1+ PULL Replicas, then how is that different than legacy mode?
 * Only the leader receives the update
 * followers copy indices from the leader (using the replication handler periodically)
 * If the leader dies, then nobody takes over, indexing will fail until a new leader starts.

My point is that the "leader" and the "follower" are terms that are at a higher level of abstraction than the implementation of how the leader leads and how the follower follows, and that depends on other factors (it does today for replica types, it'll now also depend on the deployment mode).
 If we introduce a new set of terms (primary/secondary) I feel the code may be cluttered (replicateFromLeader, is that from primary? or leader?) and I already see how discussing with team mates will become troublesome trying to find the right term.

Also, Is the secondary second to what? is there some order of things? If there is a repeater, the "secondary" is not actually the second to get the index.

Tomas,

¬†
{quote}because I have demonstrated the architectures are different

I don't think that was ever in doubt?
{quote}
These were your words a few hours ago brother:¬†
{quote}it's the same in both architecture IMO
{quote}
It's not the same architecture so glad we agree on it. I think because the support models are significant different, two different names could actually be beneficial as Shawn Heisey alluded to, especially for independent consultants like working with multiple Solr footprints of different versions and replication modes.¬†

{quote}Also, Is the secondary second to what? is there some order of things? If there is a repeater, the "secondary" is not actually the second to get the index.
{quote}
If there is a repeater it functions like both a secondary and primary. I included that in the PR. Do you have any more thoughts on what needs to change in the code beyond the name, to support backward compatibility? I'm really interested in that stuff because I have to do that at some point regardless of what the name is, ultimately.¬†

I also would like a firm commitment from the community on how we ensure that this doesn't linger beyond the initial version. I don't want to see master/slave ever again and I think others, some of whom I tried to recruit for the project, would like to see it either.¬†

bq. These were your words a few hours ago brother:¬†
"It's the same in both architectures" != "it's the same architecture". Please read the full comment, or at least this part:
bq. the fact that one replica "leads" and the other "follow(s)", it's the same in both architecture(s) IMO
I corrected the typos just in case that was the problem.

Ahhh. Thanks for the clarification. So, yeah. I guess you are in effect arguing in favor of Pager Duty alerts that read (for illustrative and rhetorical pruposes):

Hey, legacy leader went down in Leibniz cluster.

As opposed to -

Hey, the primary node went down in the Ramanujan cluster.

It's very clear in the second example which architecture was impacted and what action needs to be taken. In the Leibniz cluster are we talking about the master/slave legacy architecture or are we talking about the leader/follower implementation that came first as is the case of SolrCloud?

I understand you but I disagree with you. Are you willing to do the work to get the leader/follower branch up to back-compat?¬†

¬†

Btw, thanks for being so engaged in the ticket and driving it toward resolution. All constructive feedback is welcome, especially substantive feedback that supports a swift and robust resolution for the community. Very much appreciated. Usability is my top priority. 

bq. I guess you are in effect arguing in favor of Pager Duty alerts that read
I think this is really off? Definitely alerts will be different. As we both agreed, the architectures are different and so are the things to monitor/alert on. This is no different than having Solr in SolrCloud mode running in completely different infrastructure (say, Kubernetes vs bare metal), the alerts and actions to take are different. If you have enough clusters to need a "reminder" of the mode they are in running on you most likely have a tool to track it.

bq. particularly because SolrCloud actually does utilize replication
One the things that may be making this confusing is the fact that the ReplicationHandler/IndexFetcher code continuously log including "master" and "slave" that, in the context of both recoveries and replication for TLOG/PULL replicas, actually refer to leaders and followers. 


{quote}ReplicationHandler/IndexFetcher code continuously log including "master" and "slave" that, in the context of both recoveries and replication for TLOG/PULL replicas, actually refer to leaders and followers.
{quote}
Can you clarify? I think you are missing a word or clause here. I don't understand what you are saying.

Sure. In {{ReplicationHandler}} and {{IndexFetcher}} code, there are lots of log lines like:
{code:java}
log.info("Master's generation: {}", latestGeneration);
...
log.info("Slave's generation: {}", commit.getGeneration());
{code}
{{ReplicationHandler}} and {{IndexFetcher}} are used in Solr when running in SolrCloud mode for recoveries and for replication for TLOG/PULL replicas, so in those cases, the logs will still be printing that, however, in the context of SolrCloud, it should be "leader" and "follower". Someone who only knows about SolrCloud mode is probably confused when reading that.

{quote}I think this is really off? Definitely alerts will be different. As we both agreed, the architectures are different and so are the things to monitor/alert on. This is no different than having Solr in SolrCloud mode running in completely different infrastructure (say, Kubernetes vs bare metal), the alerts and actions to take are different. If you have enough clusters to need a "reminder" of the mode they are in running on you most likely have a tool to track it.
{quote}
My point was that people will take logical shortcuts to comprehend, looking for keywords and deductions. SolrCloud on Kubernetes vs bare metal is non-analagous, especially considering you can run Kubernetes on bare metal. Kubernetes is just server orchestration software. You can put it on EC2, baremetal, or wherever you can find 4 GB of RAM and 2 CPUs.¬†

Regardless of the tracking/alerting tool, the output of it should be as obvious as possible. Context switching with conflicting terms is a recipe for production outages.

bq. SolrCloud on Kubernetes vs bare metal is non-analagous, especially considering you can run Kubernetes on bare metal. Kubernetes is just server orchestration software. You can put it on EC2, baremetal, or wherever you can find 4 GB of RAM and 2 CPUs.
Are you suggesting that the actions to take are the same? because "you can run Kubernetes in bare metal"? 

This was not addressed here in the Jira but Tomas raised a really important point in the PR. I'm revisiting my initial PR (leader/follower) and finishing up for the first phase. I think the second phase should be backward compatibility. The third phase should be the build pipeline tools. I don't know how urgent it should be.

I plan to merge the PR soon, but there are followup tasks, so I won't close the Jira issue yet:
* Update upgrade notes
* Make 8.x version of the PR
* We probably want to rename the "master/slave mode" mentions with something else in the docs. Currently it says "leader/follower mode", which sounds weird now, since both modes have leaders and followers. There's been some proposals in the users list so we should look at that.

bq. We probably want to rename the "master/slave mode" mentions with something else in the docs. Currently it says "leader/follower mode", which sounds weird now, since both modes have leaders and followers. There's been some proposals in the users list so we should look at that.

I could also take a stab at this once you merge the PR if you want to wait until then? Some of the paragraphs might need a broader re-work, which I'd be happy to do in order to help here. Or I could do it before you merge, either way.

bq. Currently it says "leader/follower mode", which sounds weird now, since both modes have leaders and followers.

What about "coordinated mode, aka SolrCloud" and "uncoordinated mode"? Does that conflict with any nomenclature in the code? Does it make sense to others?

bq. I could also take a stab at this once you merge the PR if you want to wait until then? Some of the paragraphs might need a broader re-work, which I'd be happy to do in order to help here. Or I could do it before you merge, either way.
Thanks Cassandra, that would be great.  I'll merge this to master for now and you can do doc changes there?
bq. What about "coordinated mode, aka SolrCloud" and "uncoordinated mode"? Does that conflict with any nomenclature in the code? Does it make sense to others?
I like it. I don't know how others will feel about dropping the "SolrCloud" term, someone suggested in the past I think? Sometime back I suggested move the ZooKeeper interaction into a "coordination module", which would match perfectly with this new nomenclature, that said, I haven't been working on it (and given my current role, I'm not very likely to work on it soon)

Makes sense to me.

Sent via Superhuman iOS ( https://sprh.mn/?vip=me@marcuseagan.com )




Commit 7110118ad4f1a68f39a1db1caab374594098243e in lucene-solr's branch refs/heads/master from Marcus
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=7110118 ]

SOLR-14702: Remove oppressive language (part1) (#1711)

Replace references to "master" and "slave" with "leader" and "follower"

Commit 6752111be82681e9f97d7c092d8a0652623bbcee in lucene-solr's branch refs/heads/master from Tomas Eduardo Fernandez Lobbe
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=6752111 ]

SOLR-14702: doFetch reads legacy parameters too


Upgrade Notes PR: https://github.com/apache/lucene-solr/pull/1718

8.x PR: https://github.com/apache/lucene-solr/pull/1719

bq. I don't know how others will feel about dropping the "SolrCloud" term, someone suggested in the past I think? 

I didn't plan on wholesale replacing "SolrCloud" as a term, but this could be a first step is doing that. My thought was that I would try to make it clear that "SolrCloud" = "coordinated mode" and what we call SolrCloud really means that. A conceptual shift, as it were. Later when/if we get around to replacing the SolrCloud terminology in the code, we can eradicate the term from the docs.

Since I'll be doing this as a separate thing from this issue, I'll file a new Jira and we can discuss what I'm thinking in more detail there to agree on the terminology.

Thanks Cassandra. Then, the followup tasks are all in progress here:
* Update upgrade notes: https://github.com/apache/lucene-solr/pull/1718
* Make 8.x version of the PR: https://github.com/apache/lucene-solr/pull/1719. I'll wait to merge that one until we get some of the testing Marcus is working on: https://issues.apache.org/jira/browse/SOLR-14708
* Rename the "master/slave mode": https://issues.apache.org/jira/browse/SOLR-14716


Commit 2bf092b8ddc6cf8aadf727a3e30bd8e93ccb59c4 in lucene-solr's branch refs/heads/master from Tomas Eduardo Fernandez Lobbe
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=2bf092b ]

SOLR-14702: Add Upgrade Notes and CHANGES entry (#1718)



Commit f0eef2270cc5d2659a0f837760415dbb80fa0c2c in lucene-solr's branch refs/heads/branch_8x from Tomas Eduardo Fernandez Lobbe
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=f0eef22 ]

SOLR-14702: Remove Master and Slave from Code Base and Docs (8.x) (#1719)

This commit brings the changes from #1711 into 8.x and adds a commit to bring back compatibility. With this code change, a Solr instance running 8.7 should be able to replicate from a Solr instance running 8.x < 8.7, and a Solr instance running 9.0 should be able to replicate from an instance running 8.7

Co-authored-by: Marcus <marcuseagan@gmail.com>

Commit 790ea5ec1074a4adfba94e6cbf1c76b0baa292c7 in lucene-solr's branch refs/heads/branch_8x from Tomas Eduardo Fernandez Lobbe
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=790ea5e ]

SOLR-14702: Add CHANGES entry to 8.x branch


Thanks [~marcussorealheis] for driving this and everyone who contributed. This has been merged and backported. Lets take any followup tasks as new Jira issues.

Thanks everyone!  I'm late to the comment party.  I'm really glad to see "leader/follower" now used consistently in both SolrCloud and standalone mode for the reasons Tomas gave.

Closing after the 8.7.0 release

Commit 04327163f0d15ec99a1a1a0c6cc082c78b45c30e in solr's branch refs/heads/main from Houston Putman
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=0432716 ]

SOLR-14702: Fix ref-guide images to use leader-follower terms. (#149)



Commit 4ff5b21a59d191b6aeda7b65168330844f7e3fab in lucene-solr's branch refs/heads/branch_8x from Houston Putman
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=4ff5b21 ]

SOLR-14702: Fix ref-guide images to use leader-follower terms. (#149)



Commit 6e86bcb140f0749363df2e2dd2efdbc92ff7c785 in solr's branch refs/heads/main from Jan H√∏ydahl
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=6e86bcb ]

SOLR-14702 / SOLR-16128: Rename prometheus key solr_metrics_core_replication_master as solr_metrics_core_replication_leader (#781)



Commit c43d8a9740d3cf0b8fa5196f0fb40fa4a0a57e76 in solr's branch refs/heads/branch_9_0 from Jan H√∏ydahl
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=c43d8a9 ]

SOLR-14702 / SOLR-16128: Rename prometheus key solr_metrics_core_replication_master as solr_metrics_core_replication_leader (#781)

(cherry picked from commit 6e86bcb140f0749363df2e2dd2efdbc92ff7c785)


Commit 0a4d9c117554dd88a19fa64db2ae1bcbeb0157ca in solr's branch refs/heads/branch_9x from Jan H√∏ydahl
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=0a4d9c1 ]

SOLR-14702 / SOLR-16128: Rename prometheus key solr_metrics_core_replication_master as solr_metrics_core_replication_leader (#781)

(cherry picked from commit 6e86bcb140f0749363df2e2dd2efdbc92ff7c785)


