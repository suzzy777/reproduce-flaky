For some extra context Alexey found this one with a test that was failing because the teardown part of the DoFn took a long time but the thread execution on TestPipeline was finishing before completion. I tested this with other TestPipelines e.g.TestSparkPipeline and TestFlinkPipeline and it worked ok, so I suppose this is probably closer to the direct runner and junit thread creation/finalization.
We are a bit surprised of this behavior but it could be easily a source for other flaky tests.

Hi

started to hack on that in https://github.com/rmannibucau/incubator-beam/tree/fix/BEAM-3409_wait-for-teardown-execution-in-direct-runner

still need some enhancements to have all tests passing but guess the issue is at least identified

rmannibucau opened a new pull request #4372: BEAM-3409 starting to fix the wait of direct runner
URL: https://github.com/apache/beam/pull/4372
 
 
   Using the direct runner, p.run().waitUntilFinish() doesn't wait for the teardown execution
   
   This PR contains these fixes:
   
   1. for each dofn registered it will create a latch the execution will wait on for waitUntilFinish and guarantee
   the teardown methods are included into this "wait"
   2. For SDF it ensure the dofnmanager are released and therefore than teardown is called (propagating previous logic as well)

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


So teardown isn't being called, it's just that waitUntilFinish isn't properly waiting for tearDown in direct runner. Is that correct?

