vdiravka opened a new pull request, #2568:
URL: https://github.com/apache/drill/pull/2568

   # [DRILL-8242](https://issues.apache.org/jira/browse/DRILL-8242): Fix output for HttpHelperFunctions
   
   - add test to check the http_get function output
   - WIP for the fix
   
   ## Description
   
   [DRILL-8236](https://issues.apache.org/jira/browse/DRILL-8236) changed `HttpHelperFunctions` to use EVF based JSON v2 reader. But function output left old
   
   ## Documentation
   NA
   
   ## Testing
   `TestHttpUDFFunctions#testHttpGetWithNoParams` test updated to check the function output
   




jnturton commented on PR #2568:
URL: https://github.com/apache/drill/pull/2568#issuecomment-1148513297

   The JDK 8 test failure is the result of me not appreciating the flakiness of TestDrillSpnegoAuthenticator. I'll disable it again soon.




jnturton commented on PR #2568:
URL: https://github.com/apache/drill/pull/2568#issuecomment-1148553607

   I have a question relating to the earlier PR #2566 for this conversion. `JsonLoaderImpl` acquired a new `fromString` method, but it only needed to do that to accommodate the String returned by `SimpleHttp::makeSimpleGetRequest`. It seems to me that we can avoid copying scan data into a String on the heap here by making `SimpleHttp::makeSimpleGetRequest` return a stream instead.




vdiravka commented on PR #2568:
URL: https://github.com/apache/drill/pull/2568#issuecomment-1148554376

   > The JDK 8 test failure is the result of me not appreciating the flakiness of TestDrillSpnegoAuthenticator. I'll disable it again soon.
   
   I've checked the rebase onto latest master fixed `TestDrillSpnegoAuthenticator` locally. So it can be ignored for the review of this PR




jnturton commented on PR #2568:
URL: https://github.com/apache/drill/pull/2568#issuecomment-1148560258

   > I've checked the rebase onto latest master fixed `TestDrillSpnegoAuthenticator` locally. So it can be ignored for the review of this PR
   Yes `TestDrillSpnegoAuthenticator` does work locally, but I believe it still suffers from concurrency bugs when it runs in the full suite of tests.
   




cgivre commented on code in PR #2568:
URL: https://github.com/apache/drill/pull/2568#discussion_r891145801


##########
contrib/storage-http/src/main/java/org/apache/drill/exec/store/http/udfs/HttpHelperFunctions.java:
##########
@@ -75,9 +75,6 @@ public void eval() {
       // as an approximation of null-if-null handling.
       if (args == null) {
         // Return empty map
-        org.apache.drill.exec.vector.complex.writer.BaseWriter.MapWriter mapWriter = writer.rootAsMap();
-        mapWriter.start();

Review Comment:
   Do we still need the `writer` object in this class?





vdiravka commented on code in PR #2568:
URL: https://github.com/apache/drill/pull/2568#discussion_r891201812


##########
contrib/storage-http/src/main/java/org/apache/drill/exec/store/http/udfs/HttpHelperFunctions.java:
##########
@@ -75,9 +75,6 @@ public void eval() {
       // as an approximation of null-if-null handling.
       if (args == null) {
         // Return empty map
-        org.apache.drill.exec.vector.complex.writer.BaseWriter.MapWriter mapWriter = writer.rootAsMap();
-        mapWriter.start();

Review Comment:
   We don't need it. but isince t is `@Output` it is required for the UDF signature and can't be removed. It can be checked one more time again once `complexWriters` are removed from all UDFs.
   I've added todo to remove it. I can back to it, once migrating some other UDF to the new JSON parser





vdiravka commented on code in PR #2568:
URL: https://github.com/apache/drill/pull/2568#discussion_r891201812


##########
contrib/storage-http/src/main/java/org/apache/drill/exec/store/http/udfs/HttpHelperFunctions.java:
##########
@@ -75,9 +75,6 @@ public void eval() {
       // as an approximation of null-if-null handling.
       if (args == null) {
         // Return empty map
-        org.apache.drill.exec.vector.complex.writer.BaseWriter.MapWriter mapWriter = writer.rootAsMap();
-        mapWriter.start();

Review Comment:
   We don't need it. but since it is `@Output`, the field is required for the UDF signature and can't be removed. It can be checked one more time again once `complexWriters` are removed from all UDFs.
   I've added todo to remove it. I can back to it, once migrating some other UDF to the new JSON parser





vdiravka commented on PR #2568:
URL: https://github.com/apache/drill/pull/2568#issuecomment-1148729328

   Added minor fix for `TestHttpPlugin.testSlowResponse` test. Looks like sometimes the `mockwebserver` can return `DATA_READ ERROR: Read timed out` instead of `DATA_READ ERROR: timeout`:
   ```
   Error:  Failures: 
   Error:    TestHttpPlugin.testSlowResponse:1130 Not timeout exception, org.apache.drill.common.exceptions.UserRemoteException: DATA_READ ERROR: Read timed out
   ```
   https://github.com/apache/drill/runs/6774716231?check_suite_focus=true




jnturton commented on code in PR #2568:
URL: https://github.com/apache/drill/pull/2568#discussion_r891124891


##########
exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/project/ProjectRecordBatch.java:
##########
@@ -46,7 +51,9 @@ public class ProjectRecordBatch extends AbstractSingleRecordBatch<Project> {
   private static final Logger logger = LoggerFactory.getLogger(ProjectRecordBatch.class);
 
   protected List<ValueVector> allocationVectors;
+  @Deprecated // use new writer rsLoader

Review Comment:
   Just checking that I understand here: it's still possible for UDFs like `convert_fromJSON` to use org.apache.drill.exec.vector.complex.fn.JsonReader because it is only deprecated, not removed? But we could convert those in future too?





cgivre merged PR #2568:
URL: https://github.com/apache/drill/pull/2568




cgivre commented on code in PR #2568:
URL: https://github.com/apache/drill/pull/2568#discussion_r891397014


##########
exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/project/ProjectRecordBatch.java:
##########
@@ -46,7 +51,9 @@ public class ProjectRecordBatch extends AbstractSingleRecordBatch<Project> {
   private static final Logger logger = LoggerFactory.getLogger(ProjectRecordBatch.class);
 
   protected List<ValueVector> allocationVectors;
+  @Deprecated // use new writer rsLoader

Review Comment:
   Correct.  There are a bunch of things we need to remove before we can completely remove the `JsonReader`.





vdiravka commented on code in PR #2568:
URL: https://github.com/apache/drill/pull/2568#discussion_r891397926


##########
exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/project/ProjectRecordBatch.java:
##########
@@ -46,7 +51,9 @@ public class ProjectRecordBatch extends AbstractSingleRecordBatch<Project> {
   private static final Logger logger = LoggerFactory.getLogger(ProjectRecordBatch.class);
 
   protected List<ValueVector> allocationVectors;
+  @Deprecated // use new writer rsLoader

Review Comment:
   yes, you are right





