This exception is from [IGNITE-9114|https://issues.apache.org/jira/browse/IGNITE-9114]. May be it's enough to encrease queryTimeout? However 30 sec. for default retry timeout is more than enough, I suppose. 

[~ivandasch]

I haven't found any timeout usages in examples of .NET tests. Suppose default timeout used.
 I think any hardcoded timeouts for test will lead us to flaky cases. May be {{zero}} timeout should be used instead?

Hope javadocs says us true.
{code:java|title=SqlFieldsQuery.java:180}
    /**
     * Sets the query execution timeout. Query will be automatically cancelled if the execution timeout is exceeded.
     * @param timeout Timeout value. Zero value disables timeout.
     * @param timeUnit Time unit.
     * @return {@code this} For chaining.
     */
    public SqlFieldsQuery setTimeout(int timeout, TimeUnit timeUnit) {
        this.timeout = QueryUtils.validateTimeout(timeout, timeUnit);

        return this;
    }
{code}

[~vozerov],

Will you have time to take a look at? Which `timeout` is better to use here to avoid this exception?
I think we have some options here:
* `1000_000L` timeout as it used in JUnit tests, can be set it via environment variables
* Can use {{zero}} timeout via setting in for query
* Can increase defalut timeout in our java code part.
Â 

[~Mmuzaf], hardcoded timeouts is normal thing. We should not alter our tests and set values which will never be present in real life only to let test pass, unless it is absolutely needed. In this specific case we need to understand what causes query to be mapped for so long first. Do we know the reason?

