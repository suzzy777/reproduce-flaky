+1. This allows us to add new states more logically later. For example, when we add support for administrator approval of all certificates issued, a data node would be joined to the cluster but not operational since the administrator has not approved the datanode certificate yet. In that case, we could name that state as QUARANTINE, in other words, it will be easier for us to extend this matrix with this approach.

Â 

I have pushed some changes to the PR which could use a review at this stage to ensure I am on the correct track.

I have introduced a new object NodeStatus that is immutable and contains two ENums - NodeOperationalState (IN_SERVICE, DECOMMISSIONING etc) and NodeState (which we may want to rename to NodeHealth or something) (HEALTHY, STALE, DEAD).

I have then changed NodeStateMap, NodeStateManager and SCMNodeManager to use NodeStatus anywhere it previously used NodeState. However I stopped the changes at the boundary of SCMNodeManager, where it will return the original NodeState anywhere it currently does. My plan is to get this working well inside the SCMNodeManager boundary before attempting to move the states into other classes which interface with this.

I have also added a couple of test classes for NodeStateMap and NodeStateManager to help iterate on the changes without breaking things.

Please have a look and let me know if you think this is a good approach before I move much further.

[~sodonnell] Thank you for the contribution. I have committed this patch to the HDDS-1880-Decom branch.

