As a newdev I am enthusiastic to take this up. Hoping its something that I can manage. How should I proceed with this ?

Please do!

Find all of the solrconfig.xml files (unix find . -name solrconfig.xml) and replace the above with 
{code}
    <filterCache size="512"
                 initialSize="512"
                 autowarmCount="0"/>
{code}

Really, just remove the "class=" bits from all the cache entries. There should be 3-4 of them in each solrconfig.xml file.

You should run "gw check" on the code afterwards. If some tests fail, try rerunning the test with the commands that'll be printed out "reproduce with....". there are some tests that sometimes fail (we're working on it). The point here is don't automatically assume that your changes caused the failure unless it reproduces consistently.

Then create a patch or a PR if you're git-savvy and attach it to this JIRA. Git will automatically do the associations for a PR if you include "SOLR-14723: Rremove the class atribute for the caches in the _default/example configsets" in the title.

If you choose to attach a patch file, just call it SOLR-14723.patch. Subsequent patches should have the same name, the JIRA system will automatically handle it.

Then ping this JIRA asking for review/commit.

Thanks for volunttering! This will be a good thing to get your feet wet, understand the build system, how to run tests and all that.

Thanks for the detailed steps [~erickerickson] . I have forked the lucene-solr repo. I am not familiar with patches so planning to create a PR. Will keep this thread updated. 

 I have few questions: 
 # Should I do my changes on the master branch in my forked repo and raise a PR against the master in main repo?
 # Assuming answer to 1 is yes I should be able to import the project in my intellij as a gradle project and have nothing to do with ant. 

Well, at this point you _can't_ have anything to do with ant on master, that support was removed a few days ago, so the answer to <2> is easy ;)

<1>: yes. Although you shouldn't really have to do anything specific to raise a PR. If you title your PR "SOLR-14723: Remove the class atribute for the caches in the _default/example configsets", magic happens and a few minutes later the PR will automatically appear on this JIRA. It can be a little hard to find, I've overlooked a PR a bunch of times. If it doesn't occur, then you can go ahead and reference it in comments... Really, only the "SOLR-14723: " part is necessary in the title.

Oh, and it's usually the responsibility of the committer to backport changes to 8x so don't worry about that.







bq. Should I do my changes on the master branch in my forked repo and raise a PR against the master in main repo?
While this is usually the way to go, this Jira issue in particular is about removing the {{class}} attribute from the 8.x configsets (you won't find the attribute in master anymore). So you should work on your fork's {{branch_8x}}(or create a branch our of {{branch_8x}}) and then create a PR against {{branch_8x}} of the main Apache GH repo.

Thanks [~tflobbe] for pointing this out. Just checked and indeed the strings are present in the _branch_8x_ and not in _master_.  One question though, Once the strings are removed do I need to validate by running the tests using _ant?_ I was wishing I could use _gradle_ as I had set it up along with Java11 , jEnv etc. 

 

Yes, unfortunately branch 8x doesn't have gradle, so you need to run with {{ant}}. jdk11 is OK

So I do have the changes in my forked branch. I have removed _class_ attribute from 19 solrconfig.xml files. The commits in my forked repo can be viewed [here|[https://github.com/shshnk28/lucene-solr/commit/bc7b5d30f29f2ca9e6737d2e169bfca61740f383]] and [here|[https://github.com/shshnk28/lucene-solr/commit/bf8668c358340fe3c3ae49ca8b6b3b6cc18051c6]]. 

But I ran _ant clean test_ twice and one test is failing in the modified branch. The same does not fail in base branch which is without these commits. 
{code:java}
// org.apache.solr.search.json.TestJsonRequest.testLocalJsonRequest
{code}
I ran _ant clean test_ in base branch once and it did not fail there. 

Could it be because I have changed more _solrconfig.xmls_ than I was required to? 
 The suggestion was to change it in _default_ and _example_ configsets but I have also changed those which are under _test-files._  

PS: _ant clean test_ takes about an hr to run which does not help with rapid testing :)

 

Thanks for taking this [~shshnk28]. Your changes look good, but you should remove the "class" attribute from other caches, not only filterCache (look at {{queryResultCache}}, {{documentCache}} and {{fieldValueCache}})
bq. But I ran ant clean test twice and one test is failing in the modified branch. The same does not fail in base branch which is without these commits. 
Some tests are flaky, so they may be related for reasons unrelated to your change unfortunately. That said, I haven't seen this test be very flaky, could you paste the failure log here?
bq. The suggestion was to change it in default and example configsets but I have also changed those which are under test-files.  
Thanks, I think that's a good idea
bq. PS: ant clean test takes about an hr to run which does not help with rapid testing
Yes, our tests take a long time (there are some efforts to speed them up). Some things you can do to speedup is to run tests only in the components you want to test (i.e. inside {{solr/core}} or {{solr/contrib/dataimporthandler}}, etc). Also, when a test fails it'll print the exact command with which you can re-run the same test. It'll look something like:
{noformat}
NOTE: reproduce with: ant test  -Dtestcase=IndexSizeTriggerMixedBoundsTest -Dtests.seed=CC3BE9E659E38BB -Dtests.slow=true -Dtests.locale=ar-IQ -Dtests.timezone=America/St_Lucia -Dtests.asserts=true -Dtests.file.encoding=UTF-8
{noformat}
A good start after seeing a failure is to run that line again.

Cool, so I will remove the class attribute from the caches mentioned above by you. Then run the tests and proceed with debugging if the tests still fail on my modified branch. Thank-you for the debugging tips. I think these will definitely help. 

After a closer look on all the files to be edited I think editing the _xml_s via a python script makes more sense than manually editing them. There are close to 45 files to be edited. The script can parse the xml, remove the class attribute from the cache tags and write it back. 

Hello [~tflobbe] ,

I see there hasn't been activity on this ticket for a while, is it available for me to work on?

Hi [~trdillon],  I could not take it to completion. Okay from my side.

Thanks [~shshnk28]. I've removed the references to the class attribute in the config sets I could find them in, 32 in total.

I also found the cause of the failed {{org.apache.solr.search.json.TestJsonRequest}} and seemed to have resolved that.

I am now investigating a failing {{org.apache.solr.search.join.CrossCollectionJoinQueryTest}} and [the error log|https://pastebin.com/CCrfts5G] is making me think it might be caused by {{org.apache.solr.core.SolrConfig.PluginOpts.REQUIRE_CLASS}} but I'm not sure.

Also there was a failure in {{org.apache.solr.search.TestLFUCache}}, which along with {{org.apache.solr.search.TestLRUCache}} and {{org.apache.solr.search.TestFastLRUCache}} have not yet been deprecated it seems.

[~tflobbe] [~erickerickson] should I open a PR with what I've done already and try to sort these other issues out within that?

 

Thanks for working on this [~trdillon]. 
bq. I am now investigating a failing org.apache.solr.search.join.CrossCollectionJoinQueryTest and the error log is making me think it might be caused by org.apache.solr.core.SolrConfig.PluginOpts.REQUIRE_CLASS but I'm not sure.
I believe you are right. It seems like (Looking at the {{CacheConfig.getConfig}} method) could be optional, but we are requiring it for custom caches (not for the main caches though). I think you are right, and we should remove the {{org.apache.solr.core.SolrConfig.PluginOpts.REQUIRE_CLASS}} to the {{SolrCache}} plugin, since we anyway have a default for that attribute.
bq. Also there was a failure in org.apache.solr.search.TestLFUCache, which along with org.apache.solr.search.TestLRUCache and org.apache.solr.search.TestFastLRUCache have not yet been deprecated it seems.
You mean the tests aren't deprecated? What's the error?
bq. Tomas Eduardo Fernandez Lobbe Erick Erickson should I open a PR with what I've done already and try to sort these other issues out within that?
Yes. please do.

{quote}we should remove the {{org.apache.solr.core.SolrConfig.PluginOpts.REQUIRE_CLASS}} to the {{SolrCache}} plugin
{quote}
Doing this seems to have resolved the error.
{quote}You mean the tests aren't deprecated? What's the error?
{quote}
The error was {{org.apache.solr.search.CaffeineCache cannot be cast to class org.apache.solr.search.LFUCache}} which seems to be happening at {{org.apache.solr.search.TestLFUCache.testTimeDecayParams(TestLFUCache.java:66)}}.

There was a very similar error in {{org.apache.solr.search.json.TestJsonRequest}} that seemed to be fixed by removing the cast to LFUCache. I have not tried to fix the one in {{org.apache.solr.search.TestLFUCache}} as I wanted to see if these 3 cache tests should be deprecated first. Maybe we can continue to explore this in the PR? Thanks for your help!

Commit 196632d538a26b0c92a67941ad7c47e2f9cd2e1d in lucene-solr's branch refs/heads/branch_8x from Tomas Eduardo Fernandez Lobbe
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=196632d ]

SOLR-14723: Remove the class attribute for the caches in the _default/example configsets

This is an 8.x change only. Closes #2169

Squashed commit of the following:

commit c638cbcfdb58b57cde8c4be641a7847b8a37422a
Merge: b13011e97ae a22abe8ae0d
Author: Tomas Fernandez Lobbe <tflobbe@apache.org>
Date:   Tue Dec 29 23:33:38 2020 -0800

    Merge branch 'jira/SOLR-14723' of https://github.com/trdillon/lucene-solr into trdillon-jira/SOLR-14723

commit a22abe8ae0ddd5934dd8f74f4a48599e188ffc73
Author: Tim Dillon <tim@itsdits.com>
Date:   Wed Dec 30 15:34:34 2020 +0900

    Add SOLR-14723 to CHANGES.txt

commit 655bba5db63118c3055c30d331d1d082e0dd6050
Author: Tim Dillon <tim@itsdits.com>
Date:   Wed Dec 30 15:02:16 2020 +0900

    Fix TestSolr4Spatial2 test

commit 2d8544fc455de8b596c6fbf3ecd2feb2ca6a84fc
Author: Tim Dillon <tim@itsdits.com>
Date:   Tue Dec 29 20:40:03 2020 +0900

    Update doc to state default cache class

commit 3c5ee62d8fe87da080595822b46a3390510dea41
Author: Tim Dillon <tim@itsdits.com>
Date:   Tue Dec 29 19:51:57 2020 +0900

    Replaced the class attribute in solrconfig-caching

commit 2341eef4a63696068b010d8da51f2fa818790fc0
Author: Tim Dillon <tim@itsdits.com>
Date:   Sun Dec 27 15:52:07 2020 +0900

    Remove REQUIRE_CLASS from SolrCache plugin

commit 627995aba1a29dc4deaf726c0a49599224ea2de5
Author: Tim Dillon <tim@itsdits.com>
Date:   Sat Dec 26 11:14:03 2020 +0900

    Remove cast to FastLRUCache in TestJsonRequest

commit 11319c119570c861d62f09fc6b482a6993dd38ff
Author: Tim Dillon <tim@itsdits.com>
Date:   Sat Dec 19 16:53:07 2020 +0900

    Removed class attribute from caches


Thanks [~trdillon], merged the PR. And thanks [~shshnk28] for the initial contribution.

