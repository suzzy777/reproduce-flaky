Probably it's not the reason for the flakiness, but it's definitely not a good thing that we open a {{FileInputStream}} in {{XLogService.init}} but we don't close it. Spotbugs also reports this as a problem. We should fix this in this jira.

The tests creates a configuration file but later changes it to test the reload function of log4j. Log4j checks the last modified date of the configuration file and reloads it if the date changed ( in {{FileWatchdog}} class ). The test contains a {{sleep(1 * 1000);}} line between the two file writes to enforce that the new last modified date is different than the previous one. Although I was not able to reproduce the flakiness, printing out the last modified date shows that the system does not store milliseconds, only seconds, so I think the test fails if the file modification data is the same after the second write. Probably the sleep(1000) is not accurate enough in this case.

There are several ways to fix this problem:
 # Increase the 1000 to 2000 or 3000, so the last modified date will really be different after a longer wait.
 # Check the last modified date after writing the second config file, if it's the same as before, wait for a bit and write the file again. (Put it into a loop with a timeout of 10 000ms should be enough)
 # Manually set the last modified date of the config file after writing the file to a newer value.

I'd go for option 2, but I'm open for suggestions.

[~kmarton] What do you think, which option should we choose?

[~asalamon74] Option 2 is the most sympathetic to me.
Since only sometimes the 1000 ms is not enough, I don't think that we should force a bigger sleep value for every case.

Thanks, [~kmarton], I'll create a patch soon.

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3533

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [6] new bugs found below threshold in total that must be fixed.
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:red}-1{color} There are [6] new bugs found below threshold in [core] that must be fixed, listing only the first [5] ones.
.    You can find the SpotBugs diff here (look for the red and orange ones): core/findbugs-new.html
.    The top [5] most important SpotBugs errors are:
.    At BulkJPAExecutor.java:[line 206]: This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection
.    At BulkJPAExecutor.java:[line 176]: At BulkJPAExecutor.java:[line 175]
.    At BulkJPAExecutor.java:[line 205]: At BulkJPAExecutor.java:[line 199]
.    This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection: At BulkJPAExecutor.java:[line 206]
.    At BulkJPAExecutor.java:[line 111]: At BulkJPAExecutor.java:[line 127]
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [webapp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/git].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [docs].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3181
.    {color:orange}Tests failed at first run:{color}
TestCoordActionsKillXCommand#testActionKillCommandDate
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 
{color:green}+1 MODERNIZER{color}

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/1226/



Commit c96e2af5cb6618fb9a67c447c744de9f24c481fe in oozie's branch refs/heads/master from Kinga Marton
[ https://gitbox.apache.org/repos/asf?p=oozie.git;h=c96e2af ]

OOZIE-3533 Flaky test TestXLogService.testLog4jReload (asalamon74 via kmarton)


Thank you [~asalamon74] for the fix! +1, committed to master

Closing issue; Oozie 5.2.0 is released

