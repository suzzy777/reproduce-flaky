The result of a quick bisect:
{noformat}
git bisect start
# bad: [67592f3d062743907f8c5ae00dbbe1ae4f69e5af] HBASE-15748 update CHANGES.txt for additional changes in RC1.
git bisect bad 67592f3d062743907f8c5ae00dbbe1ae4f69e5af
# bad: [e382b2c9f48cd896d525025c3965fa252f344e08] HBASE-16662 Fix open POODLE vulnerabilities
git bisect bad e382b2c9f48cd896d525025c3965fa252f344e08
# bad: [ca1b49dd04db6d94b19dc097c52df763baa60f39] HBASE-16318 fail build while rendering velocity template if dependency license isn't in whitelist.
git bisect bad ca1b49dd04db6d94b19dc097c52df763baa60f39
# good: [244a6ad7df8e03bd10187e03b67d33d0ff381190] HBASE-16019 1.2.2RC2 passed; start 1.2.3-SNAPSHOT.
git bisect good 244a6ad7df8e03bd10187e03b67d33d0ff381190
# bad: [09d1a278c2cbf690069fd107c162f478979c0e57] HBASE-16288 HFile intermediate block level indexes might recurse forever creating multi TB files
git bisect bad 09d1a278c2cbf690069fd107c162f478979c0e57
# bad: [95221918c1abdbf0d5581cd6ac61f2b7ece57f9f] HBASE-15291 Revert due to race condition resulting in closed FileSystem
git bisect bad 95221918c1abdbf0d5581cd6ac61f2b7ece57f9f
# bad: [a729488ff632e3806b8cefe8e421434f5f0b5d78] HBASE-16189 [Rolling Upgrade] 2.0 hfiles cannot be opened by 1.x servers (Ram)
git bisect bad a729488ff632e3806b8cefe8e421434f5f0b5d78
# bad: [54f2d9df2d65d75d129bdf3bb5debaa20bd238f1] HBASE-16227 [Shell] Column value formatter not working in scans. Tested : manually using shell.
git bisect bad 54f2d9df2d65d75d129bdf3bb5debaa20bd238f1
# bad: [ab239afb67c8c5d7a3c359ec17d278b5f579f4a7] HBASE-16195 Should not add chunk into chunkQueue if not using chunk pool in HeapMemStoreLAB
git bisect bad ab239afb67c8c5d7a3c359ec17d278b5f579f4a7
# first bad commit: [ab239afb67c8c5d7a3c359ec17d278b5f579f4a7] HBASE-16195 Should not add chunk into chunkQueue if not using chunk pool in HeapMemStoreLAB

ab239afb67c8c5d7a3c359ec17d278b5f579f4a7 is the first bad commit
commit ab239afb67c8c5d7a3c359ec17d278b5f579f4a7
Author: Yu Li <liyu@apache.org>
Date:   Wed Jul 13 09:33:24 2016 +0800

    HBASE-16195 Should not add chunk into chunkQueue if not using chunk pool in HeapMemStoreLAB

:040000 040000 57de7f5e42f93e4febf68da683035263e1809754 bfcbda2cf824e7cedd6709a30612652f770e2a64 M	hbase-server
{noformat}

[~carp84] any idea what's going on here? 
/cc [~busbey] - this is what was consistently failing for me when testing 1.2.4 RC1

Let me dig into this sir, will ping back later when get a clue.

Checked and confirmed it passed in [post commit of HBASE-16195|https://issues.apache.org/jira/browse/HBASE-16195?focusedCommentId=15374492&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15374492], let me see what happened afterwards

Ok, here comes the analysis.

I could reproduce the failure in my local environment, but not consistently. {{testMultipleRows}} fails more frequently than {{testReadModifyWrite}}, and each time it fails, I could see {{RetriesExhaustedException}} caused by {{CallQueueTooBigException}}, like below:
{noformat}
Caused by: org.apache.hadoop.hbase.client.RetriesExhaustedException: Failed after attempts=2, exceptions:
Tue Nov 01 14:53:14 CST 2016, RpcRetryingCaller{globalStartTime=1477983194439, pause=100, retries=2}, org.apache.hadoop.hbase.ipc.RemoteWithExtrasException(org.apache.hadoop.hbase.CallQueueTooBigException): Call queue is full on localhost,59045,1477983189616, too many items queued ?
Tue Nov 01 14:53:14 CST 2016, RpcRetryingCaller{globalStartTime=1477983194439, pause=100, retries=2}, org.apache.hadoop.hbase.ipc.RemoteWithExtrasException(org.apache.hadoop.hbase.CallQueueTooBigException): Call queue is full on localhost,59045,1477983189616, too many items queued ?

	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:157)
	at org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel.callExecService(RegionCoprocessorRpcChannel.java:108)
	at org.apache.hadoop.hbase.ipc.CoprocessorRpcChannel.callBlockingMethod(CoprocessorRpcChannel.java:73)
	... 6 more
Caused by: org.apache.hadoop.hbase.ipc.RemoteWithExtrasException(org.apache.hadoop.hbase.CallQueueTooBigException): Call queue is full on localhost,59045,1477983189616, too many items queued ?
	at org.apache.hadoop.hbase.ipc.RpcClientImpl.call(RpcClientImpl.java:1267)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod(AbstractRpcClient.java:227)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(AbstractRpcClient.java:336)
	at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$BlockingStub.execService(ClientProtos.java:34118)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.execService(ProtobufUtil.java:1631)
	at org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel$1.call(RegionCoprocessorRpcChannel.java:104)
	at org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel$1.call(RegionCoprocessorRpcChannel.java:1)
	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:136)
	... 8 more
com.google.protobuf.ServiceException: Error calling method RowProcessorService.Process
	at org.apache.hadoop.hbase.ipc.CoprocessorRpcChannel.callBlockingMethod(CoprocessorRpcChannel.java:75)
	at org.apache.hadoop.hbase.protobuf.generated.RowProcessorProtos$RowProcessorService$BlockingStub.process(RowProcessorProtos.java:1631)
	at org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint.swapRows(TestRowProcessorEndpoint.java:272)
	at org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint.access$3(TestRowProcessorEndpoint.java:265)
	at org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint$SwapRowsRunner.run(TestRowProcessorEndpoint.java:258)
	at org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint$1.run(TestRowProcessorEndpoint.java:225)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

And when such exception happens, the design of the test cases could not assure the correctness, let's see them one by one:

For {{testMultipleRows}}, it will launch 100 threads to swap two rows in parallel, and since the thread number is even, finally the two rows will not be swapped, but only if *all operations succeeds* or *even number of operations failed*.

For {{testReadModifyWrite}} the similar reason, if any operation fails because of RetriesExhaustedException, the final check of {{assertEquals(numThreads + 1, finalCounter)}} will fail.

Currently there's a {{failures}} counter but in either {{IncrementRunner}} or {{SwapRowsRunner}} we catch {{Throwable}} but never increase it...

To improve the UT cases, we should
1) don't assert failures count to be zero;
2) count the failures for {{testReadModifyWrite}}
3) take {{swapped}} flag into account when assert result for {{testMultipleRows}}

Regarding why HBASE-16195 makes the case failed more frequently, I've no much clue... It seems to me below change is relative
{code}
-        this.chunkQueue.add(c);
+        if (chunkQueue != null && !this.closed && !this.chunkQueue.offer(c)) {
+          if (LOG.isTraceEnabled()) {
+            LOG.trace("Chunk queue is full, won't reuse this new chunk. Current queue size: "
+                + chunkQueue.size());
+          }
+        }
{code}
After HBASE-16195 it won't add the chunk into {{chunkQueue}} anymore, so it seems the {{chunkQueue!=null}} check is more expensive than {{this.chunkQueue.add(c)}}? Unlikely by theory though, right?...

Anyway I believe this is some UT case design issue and not that relative to HBASE-16195 change. Will upload a patch soon to reinforce the UT.

[~apurtell] and [~busbey] please let me know your thoughts. Thanks.

Assigning the issue to myself, btw.

I mean, it's possible to cause more CallQueueTooBigException if the speed of memstore operation is slower, but the HBASE-16195 changes should be irrelative because in TestRowProcessorEndpoint testing we're not using MemStoreChunkPool at all.

Attaching a patch for branch-1.2 first, and this should also apply to master branch.

After patch, TestRowProcessorEndpoint could pass stably in my local environment, and I could see logs like below indicating we still encounters RetriesExhaustedException but won't affect result anymore:
{noformat}
2016-11-01 15:26:46,698 DEBUG [main] coprocessor.TestRowProcessorEndpoint(246): row keyvalues:[d:e f:g ]
2016-11-01 15:26:46,700 DEBUG [main] coprocessor.TestRowProcessorEndpoint(248): row2 keyvalues:[a:bc b:def c:g ]
2016-11-01 15:26:46,700 DEBUG [main] coprocessor.TestRowProcessorEndpoint(252): We failed 9 times during test
{noformat}

Submit patch to check HadoopQA

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} docker {color} | {color:red} 0m 5s {color} | {color:red} Docker failed to build yetus/hbase:17b5022. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12836305/HBASE-16980.branch-1.2.patch |
| JIRA Issue | HBASE-16980 |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/4261/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.



Checking console output and found:
{noformat}
Err http://ppa.launchpad.net/webupd8team/java/ubuntu/ trusty/main oracle-java8-installer all 8u101+8u101arm-1~webupd8~2
  404  Not Found
[91mE: Failed to fetch http://ppa.launchpad.net/webupd8team/java/ubuntu/pool/main/o/oracle-java8-installer/oracle-java8-installer_8u101+8u101arm-1~webupd8~2_all.deb  404  Not Found

E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?
[0mThe command '/bin/sh -c apt-get -q install --no-install-recommends -y oracle-java8-installer' returned a non-zero code: 100

Total Elapsed time:   0m  5s

ERROR: Docker failed to build image.
{noformat}

Will retry to see whether this is occasional.

Retry HadoopQA

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 22m 55s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 9m 21s {color} | {color:green} branch-1.2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 51s {color} | {color:green} branch-1.2 passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 54s {color} | {color:green} branch-1.2 passed with JDK v1.7.0_80 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 21s {color} | {color:green} branch-1.2 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 30s {color} | {color:green} branch-1.2 passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 26s {color} | {color:green} branch-1.2 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 51s {color} | {color:green} branch-1.2 passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 53s {color} | {color:green} branch-1.2 passed with JDK v1.7.0_80 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 14s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 50s {color} | {color:green} the patch passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 51s {color} | {color:green} the patch passed with JDK v1.7.0_80 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 51s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 4s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 23m 5s {color} | {color:green} The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. {color} |
| {color:green}+1{color} | {color:green} hbaseprotoc {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 42s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 46s {color} | {color:green} the patch passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 49s {color} | {color:green} the patch passed with JDK v1.7.0_80 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 127m 38s {color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 46s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 201m 32s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster |
|   | hadoop.hbase.mapred.TestMultiTableSnapshotInputFormat |
|   | hadoop.hbase.client.TestAdmin1 |
| Timed out junit tests | org.apache.hadoop.hbase.io.encoding.TestChangingEncoding |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
|   | org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk |
|   | org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.1 Server=1.12.1 Image:yetus/hbase:17b5022 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12836312/HBASE-16980.branch-1.2.patch |
| JIRA Issue | HBASE-16980 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux edce4760e667 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1.2 / 67592f3 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_111 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/4264/artifact/patchprocess/patch-unit-hbase-server.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HBASE-Build/4264/artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/4264/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/4264/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.



Thanks for the analysis [~carp84], that's good work. Bisect is unreliable if the problem is not 100% reproducible at every step, it could have been misled at one of the steps. Your approach on making the test less flaky LGTM, let me try the patch locally. Anyway, +1, and we should commit this wherever appropriate, 1.2 and up I'd say, unless the test has been significantly changed.

Thanks for the quick reply boss [~apurtell], let me prepare the patch for master then. And will wait for your local check result to see whether more analysis required.

Patch for master branch

Uploading patch for branch-1 (could cleanly apply to branch-1.3)

Local tests applying this patch to 1.2.4RC1 looks good after 25 iterations, will commit later today if no objection.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 36s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green} 0m 0s {color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 57s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 20s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 23s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 20s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 40s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 14s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 19s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 47m 38s {color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 51s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 31s {color} | {color:green} hbase-endpoint in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 14s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 60m 43s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.1 Server=1.12.1 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12836382/HBASE-16980.patch |
| JIRA Issue | HBASE-16980 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 290003500db0 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b2d1e21 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/4269/testReport/ |
| modules | C: hbase-endpoint U: hbase-endpoint |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/4269/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 36s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 9m 12s {color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 4s {color} | {color:green} branch-1 passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 57s {color} | {color:green} branch-1 passed with JDK v1.7.0_80 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 22s {color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 29s {color} | {color:green} branch-1 passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 2m 37s {color} | {color:red} hbase-server in branch-1 has 2 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 56s {color} | {color:green} branch-1 passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 56s {color} | {color:green} branch-1 passed with JDK v1.7.0_80 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 20s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 58s {color} | {color:green} the patch passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 58s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 0s {color} | {color:green} the patch passed with JDK v1.7.0_80 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 0s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 22s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 28m 27s {color} | {color:green} The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. {color} |
| {color:green}+1{color} | {color:green} hbaseprotoc {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 44s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 42s {color} | {color:green} the patch passed with JDK v1.8.0_111 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 51s {color} | {color:green} the patch passed with JDK v1.7.0_80 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 158m 1s {color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 50s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 216m 16s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.mapreduce.TestMultiTableSnapshotInputFormat |
|   | hadoop.hbase.mapred.TestMultiTableSnapshotInputFormat |
| Timed out junit tests | org.apache.hadoop.hbase.quotas.TestQuotaTableUtil |
|   | org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.regionserver.TestClusterId |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.1 Server=1.12.1 Image:yetus/hbase:b2c5d84 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12836387/HBASE-16980.branch-1.patch |
| JIRA Issue | HBASE-16980 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 76916e2d901b 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 5fdddae |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_111 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | https://builds.apache.org/job/PreCommit-HBASE-Build/4271/artifact/patchprocess/branch-findbugs-hbase-server-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/4271/artifact/patchprocess/patch-unit-hbase-server.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HBASE-Build/4271/artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/4271/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/4271/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.



Committed to active branches. Thanks for digging in on this [~carp84]

Thanks for review, sanity check and help commit sir.

SUCCESS: Integrated in Jenkins build HBase-1.2-JDK8 #54 (See [https://builds.apache.org/job/HBase-1.2-JDK8/54/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev 8b7053fb392b621f62bfe2c4d47a7d03945d44bd)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


FAILURE: Integrated in Jenkins build HBase-1.4 #509 (See [https://builds.apache.org/job/HBase-1.4/509/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev 961b95217136c6fa41892eec693576ad3da113f9)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


SUCCESS: Integrated in Jenkins build HBase-1.2-JDK7 #60 (See [https://builds.apache.org/job/HBase-1.2-JDK7/60/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev 8b7053fb392b621f62bfe2c4d47a7d03945d44bd)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1893 (See [https://builds.apache.org/job/HBase-1.1-JDK8/1893/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev f22e0bb69e1d058f164a9a2a0160497d97040892)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1900 (See [https://builds.apache.org/job/HBase-Trunk_matrix/1900/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev 4bd85f98fef23bb71a47a7560bff42fd54cd7cf2)
* (edit) hbase-endpoint/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


FAILURE: Integrated in Jenkins build HBase-1.1-JDK7 #1809 (See [https://builds.apache.org/job/HBase-1.1-JDK7/1809/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev f22e0bb69e1d058f164a9a2a0160497d97040892)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


FAILURE: Integrated in Jenkins build HBase-0.98-matrix #413 (See [https://builds.apache.org/job/HBase-0.98-matrix/413/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev 5f9cd8633bdb2381395635f1bb9d28a0e67fc91c)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


FAILURE: Integrated in Jenkins build HBase-0.98-on-Hadoop-1.1 #1286 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1286/])
HBASE-16980 TestRowProcessorEndpoint failing consistently (Yu Li) (apurtell: rev 5f9cd8633bdb2381395635f1bb9d28a0e67fc91c)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java


Bulk closing issues after 1.1.8 release.

