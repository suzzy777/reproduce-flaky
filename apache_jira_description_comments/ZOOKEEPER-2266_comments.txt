-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12754470/jacoco-report-example.zip
  against trunk revision 1701505.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 908 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2857//console

This message is automatically generated.

ZOOKEEPER-2266-v2.patch: refactored


-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12754587/ZOOKEEPER-2266-v2.patch
  against trunk revision 1701505.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2860//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2860//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2860//console

This message is automatically generated.

Any thoughts?
This was actually helpful for me in debugging ZOOKEEPER-2080.

As discussed in dev ML, the community is now becoming interested in modern tool chains such as Yetus, mvn, and gradle.

I'd be glad to integrate my patch to new tool chains if my patch is acceptable.
(e.g., add a feature that reports test coverage on precommit, using Yetus)


I think it's reasonable to include support for this in the build.xml file. I'm of the mind to commit this, however I don't believe the license file is necessary/warranted given we won't be shipping this library along with our releases, it should be for testing purposes only. Can you update the patch to remove the license and ensure the lib is only pulled in when running a jacoco build.xml target?

[~phunt]

Thank you for the comment.
I update the patch (based on JaCoCo v0.7.6): ZOOKEEPER-2266-v3.patch.

The new patch doesn't contain the license file, but unfortunately I could not find how to ensure the lib is only pulled when a jacoco target is executed, without complicating the xml.

The lib is small, so can we pull the lib for all the test targets?

{panel}
$ du -hs
252K    build/test/lib/org.jacoco.agent-0.7.6.201602180812.jar
40K     build/test/lib/org.jacoco.ant-0.7.6.201602180812.jar
136K    build/test/lib/org.jacoco.core-0.7.6.201602180812.jar
140K    build/test/lib/org.jacoco.report-0.7.6.201602180812.jar
372K    build/test/lib/asm-debug-all-5.0.4.jar
{panel}

I will try again if needed.


-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12791389/ZOOKEEPER-2266-v3.patch
  against trunk revision 1733525.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3081//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3081//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3081//console

This message is automatically generated.

I think you mean to have jacoco enabled=false by default? See how we run the "clover" target by passing an argument (it's in the clover build.xml xml doc string)

I'm not familiar with jacoco I'm afraid. However it looks like it differs from clover in that it does (prefers) online instrumentation (clover does offline class file instrumentation). As a result you needed to update the junit.run- targets to add jacoco-init as a dependency. This will result in pulling the jacoco jars when running the unit tests. I think what you want to do is add a dependency in between junit and jacoco-init that checks whether jacoco is enabled. If it's not you shouldn't run the init code. If it is you should. I believe this will result in jacoco jars not being pulled when jacoco is not enabled, but you'll need to try it and verify.

can you replace stuff like this
	<classpath path="${ivy.test.lib}/org.jacoco.agent-0.7.6.201602180812.jar"/>
	<classpath path="${ivy.test.lib}/org.jacoco.ant-0.7.6.201602180812.jar"/>
	<classpath path="${ivy.test.lib}/org.jacoco.core-0.7.6.201602180812.jar"/>
	<classpath path="${ivy.test.lib}/org.jacoco.report-0.7.6.201602180812.jar"/>
	<classpath path="${ivy.test.lib}/asm-debug-all-5.0.4.jar"/>
with a fileset? (see other examples in the build.xml file) or at least move the version to a property if that's not possible

PS: you need to replace the tabs with spaces and fix the indentation. (we don't allow tabs for indentation)

Hello [~phunt],
Thank you for the comment.

Attached v4.patch:

 * Set {{jacoco.enabled}} to {{false}] by default
 * JaCoCo jars are pulled only when {{jacoco.enabled}} is {{true}}
 * Use fileset for JaCoCo jars in {{build.xml}}
 * Eliminated tabs

How to check {{jacoco.enabled}} is implemented as follows:

{code:xml}
<target name="junit.run-concurrent" if="ant.supports.concurrent.junit.processes" depends="junit.run-concurrent.nojacoco,junit.run-concurrent.jacoco" />
<target name="junit.run-concurrent.nojacoco" unless="${jacoco.enabled}">
..
</target>
<target name="junit.run-concurrent.jacoco" if="${jacoco.enabled}" depends="jacoco-init">
..
</target>
{code}


Unfortunately there is a {{<junit>}} code clone between {{junit.run-concurrent.nojacoco}} and {{junit.run-concurrent.jacoco}}, but I could not find a way to deduplicate this.

If I split the {{<junit>}} as an independent task, and put {{<antcall target="that-junit-task">}} in {{<jacoco:coverage>}}, I get an error {{antcall is not a valid child of the coverage task}}.
{{<macrodef>}} also throws a similar error as well.



-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12792196/ZOOKEEPER-2266-v4.patch
  against trunk revision 1733679.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3093//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3093//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3093//console

This message is automatically generated.

Hi [~suda], we wanted to do a code coverage report, and JaCoCo maven integration seemed the way to go (for example Apache Phoenix already integrated).
Before I created a jira and go ahead to implement, I found your Jira. Do you want to implement the maven integration for JaCoCo? 
If not, I can take over this jira.
Thanks!

