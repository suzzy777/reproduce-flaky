Code: [https://github.com/apache/cassandra/compare/trunk...jrwest:jwest/18023]

Test Runs: [j8|https://app.circleci.com/pipelines/github/jrwest/cassandra/110/workflows/b1b3c268-ebd7-468a-bd74-876ce176c7be] [j11|https://app.circleci.com/pipelines/github/jrwest/cassandra/110/workflows/e19e4309-a831-4674-be28-f001b39d50de]

Example output:
{code:java}
$ bin/nodetool getsstables foo bar 4
/home/jordanw/sbx/cass/oss/cassandra/data/data/foo/bar-a58b5910607011ed910347124b0dc061/nb-1-big-Data.db
/home/jordanw/sbx/cass/oss/cassandra/data/data/foo/bar-a58b5910607011ed910347124b0dc061/nb-2-big-Data.db
$ bin/nodetool getsstables foo bar 4 -l
0: /home/jordanw/sbx/cass/oss/cassandra/data/data/foo/bar-a58b5910607011ed910347124b0dc061/nb-1-big-Data.db
0: /home/jordanw/sbx/cass/oss/cassandra/data/data/foo/bar-a58b5910607011ed910347124b0dc061/nb-2-big-Data.db

$ bin/nodetool compact foo bar

$ bin/nodetool getsstables foo bar 4 -l
1: /home/jordanw/sbx/cass/oss/cassandra/data/data/foo/bar-a58b5910607011ed910347124b0dc061/nb-3-big-Data.db
 {code}

+1. LGTM. 

The only comment is in

src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java
public synchronized boolean isLeveledCompaction()
It might be better to use the readLock instead of the synchronized method to be consistent with rest of the file, and to have better performance because you can have multiple concurrent threads holding the read lock?  
 

Good catch. Updated my branch w/ the recommended change. the {{synchronized}} was a holdover from my original 3.0 implementation. 

In both runs JMXStandardsTest was broken.

Its mad about the use of the guava MultiMap. From the comment it looks like I need to find an alternative in java/javax.

 

I saw a lot more red than expected so planning to look at that before moving further. 

Talked to David and this patch needs to move off of Guava MultiMap to something in the standard library. I'm headed out of town for a week. Will pick this up and address when I return. 

Pushed a fix. Test runs linked below. The failing tests are related to describe which I don't think would be affected by this patch.

 

New test runs:  [j8|https://app.circleci.com/pipelines/github/jrwest/cassandra/115/workflows/603d5ca4-8f6a-49af-9dea-f95759d31f1c]  [j11|https://app.circleci.com/pipelines/github/jrwest/cassandra/115/workflows/ba9ed183-1ff0-4630-a5ef-87636f3d6b2b]

Unfortunately there are a lot of failures in those runs, I think you need to rebase to pick up some recent circle changes and resubmit.

Tests on the most recent trunk:  [j8|https://app.circleci.com/pipelines/github/jrwest/cassandra/122/workflows/b510c3f0-3d15-40a5-b377-dd4671fbc534] [j11|https://app.circleci.com/pipelines/github/jrwest/cassandra/122/workflows/ad1cab37-a8f5-48b7-8c30-099e9a33dad6]

Still a few failures that I don't believe are related / due to flaky tests. 

LGTM, +1.

Committed in [https://github.com/apache/cassandra/commit/279f284da5cfe8b4766921d3b1b4d6e299dbe66d]

 

Thanks for the review [~brandon.williams] [~superwangcheng] 

