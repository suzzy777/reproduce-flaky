Here is a patch that adds timeouts on the tests.  Might get us logs.  Currently none showing.

Version of the patch that includes HBASE-11517 to see if glean info on the zombie test in case it happens again.

This https://builds.apache.org/job/HBase-TRUNK/5304/changes build of trunk has the hang

Thanks Stack. I've noticed this too. I'll keep an eye out after this patch. +1. 

Ok.  I applied the attached timeouts.txt 'debugging' patch to see if we can get more info on why its hanging up.

FAILURE: Integrated in HBase-TRUNK #5306 (See [https://builds.apache.org/job/HBase-TRUNK/5306/])
HBASE-11517 TestReplicaWithCluster turns zombie -- ADDS TIMEOUTS SO CAN DEBUG ZOMBIE (stack: rev bb73791dade15f389dfc1bacd20ca8b177bd39e7)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java


Test times out now and we are getting logs: https://builds.apache.org/job/PreCommit-HBASE-Build/10070//testReport/org.apache.hadoop.hbase.client/TestReplicaWithCluster/testCreateDeleteTable/.  I see this:

{code}
2014-07-15 22:02:28,553 WARN  [PostOpenDeployTasks:235204d3d299a5047091fb4aed3d9b56] handler.OpenRegionHandler$PostOpenDeployTasksThread(326): Exception running postOpenDeployTasks; region=235204d3d299a5047091fb4aed3d9b56
java.lang.NullPointerException: No connection
	at org.apache.hadoop.hbase.MetaTableAccessor.getHTable(MetaTableAccessor.java:180)
	at org.apache.hadoop.hbase.MetaTableAccessor.getMetaHTable(MetaTableAccessor.java:193)
	at org.apache.hadoop.hbase.MetaTableAccessor.putToMetaTable(MetaTableAccessor.java:941)
	at org.apache.hadoop.hbase.MetaTableAccessor.updateLocation(MetaTableAccessor.java:1300)
	at org.apache.hadoop.hbase.MetaTableAccessor.updateRegionLocation(MetaTableAccessor.java:1278)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.postOpenDeployTasks(HRegionServer.java:1724)
	at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler$PostOpenDeployTasksThread.run(OpenRegionHandler.java:321)
{code}

How is this supposed to work might [~mantonov]? (Presuming the above came in w/ your recent change herein?)  Thanks.


Let me take a look.

It seems reproducible locally now.... taking a look too.

backed out locally last commit (seems to be obscuring actual error, which is server#shortCircuitConnection being in closed state), running locally.  Individual tests pass on my locally, having started from idea, but whole class failed with this exception you cited, so i suspect something wrong with before vs. beforeClass / tearDown (re)-initialization. Looking further.

So..if i comment out the last line in testReplicaAndReplication() test, which is HTU2.shutdownMiniCluster();, test works fine. Seems like something's wrong with the way we share hconnections in local hbase cluster - when we shutdown minicluster2, short circuit connection in master running in minicluster1 is also closed.

Also everything works and test passes if I do start/stop minicluster1 before and after each test. Something wrong with connection sharing.

[~mantonov] Good on you.  Want to change the test then?

Ah. MiniHBaseCluster#shutdown calls HConnectionManager.deleteAllConnections(false), which deletes all connections known to connection manager (which holds them in static collection, so it's shared across both miniclusters). 

I kind of recall having same sort of issue before in one of the tests, which created multiple miniclusters within one test and shut down one of them at the end of test, before the next test runs.

@stack so we can either change the test or, probably better, change MiniHBaseCluster#shutdown to now kill all connections, but just those matching the configuration of this minicluster. Going to try latter one tonight and make patch.

[~mantonov] You the man.

Attached patch.

Since the change in MiniHBaseCluster would have been more involving, I just ended up delaying minicluster2 shutdown up until afterClass (seems harmless). Also reverted finally {} blocks as they, imo, might obscure issues and added time constraint to 2 left tests.

Test now runs about  30second for me (from command line) and about 1m20s from idea.

[~stack] what do you think?

FAILURE: Integrated in HBase-1.0 #47 (See [https://builds.apache.org/job/HBase-1.0/47/])
HBASE-11517 TestReplicaWithCluster turns zombie -- ADDS TIMEOUTS SO CAN DEBUG ZOMBIE (stack: rev 7175f51f0817e93fe2c46aa39937fdff73e383d6)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java


Lets see what hadoopqa looks like.  Changing test seems good to me.  Thanks Mikhail

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12655995/HBASE-11517_v1-mantonov.patch
  against trunk revision .
  ATTACHMENT ID: 12655995

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10091//console

This message is automatically generated.

Mikhail's patch at p1 instead so applies.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12656081/11517v2.txt
  against trunk revision .
  ATTACHMENT ID: 12656081

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:red}-1 site{color}.  The patch appears to cause mvn site goal to fail.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10093//console

This message is automatically generated.

Retry.  And trying locally.  Some issue running hbase-server tests.

linked to another similar failure.

Retrying. Test passes locally when run isolated for me. Will try the whole suite (sorry for that p1 thing, exported patch from idea vs. 'git diff >')

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12656096/11517v2.txt
  against trunk revision .
  ATTACHMENT ID: 12656096

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.TestPerTableCFReplication

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10094//console

This message is automatically generated.

2014-07-16 20:04:35,667 INFO  [pool-1-thread-1] hbase.HBaseTestingUtility(394): Created new mini-cluster data directory: /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/target/test-data/3c686420-2e0f-485a-af8a-8057368ca634/dfscluster_d5f2234c-9c56-4672-8cc8-0171cd63ac74, deleteOnExit=true
2014-07-16 20:04:35,857 DEBUG [pool-1-thread-1] zookeeper.MiniZooKeeperCluster(171): Failed binding ZK Server to client port: 50997
java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)

Doesn't look related to this patch (may be another flaky test to look at)

I fear that with this patch we are eclipsing the problem by not closeing HBaseAdmins and HTables.  

Pushed to master and branch-1.  Thanks for digging in on this Mikhail.

Just saw [~enis] comment.  Reverted from master and branch-1.  Suggest that we commit these patches so builds pass again and open new issue to look into the connection issue.

Hm. [~enis] as I understand closing of table admins and tables (as well as adding timeouts) was added by [~stack] in that intermediate patch in order to get more debug information and stabilize the test. In my patch I reverted those changes as I believed that was not the root cause. We're not eclipsing the problem by not closeing hbase admins, we're bypassing the problem by delaying shutdown of second minicluster up until afterClass call (the same technique as used in TestPerTableCFReplication, for example?). What do you think?

The problem is that in MiniHBaseCluster#shutdown() we call HConnectionManager.deleteAllConnections(false); which deleted all hconnection in the JVM. Seems like all tests which run more than 1 minicluster now tend to shutdown all of them at the very end.

So what's the consensus to proceed?

FAILURE: Integrated in HBase-TRUNK #5314 (See [https://builds.apache.org/job/HBase-TRUNK/5314/])
HBASE-11517 TestReplicaWithCluster turns zombie (Mikhail Antonov) (stack: rev 688877606b10d80e4dede3c30deb4e922ad09a5a)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java
HBASE-11517 TestReplicaWithCluster turns zombie (Mikhail Antonov) -- REVERT (stack: rev 782b1456f240ad2fc95555b0f464e6a7e0c1e685)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java


I see, thanks for explaining. I did not have the full context. Does the test pass with keeping table and admin closes? While we have them we might as well keep them, no? If not, let's just apply the patch. 

Yes, it passes with close() statements returned back (see new patch attached). I just didn't put back try{} finally {} clauses, as I believe finally blocks in tests could sometimes obscure debugging, if code in try{} fails.

I applied [~mantonov]'s last patch to master and branch-1.  Thanks Mikhail.

Thanks Mikhail, Stack for bearing with this! 

FAILURE: Integrated in HBase-1.0 #49 (See [https://builds.apache.org/job/HBase-1.0/49/])
HBASE-11517 TestReplicaWithCluster turns zombie (Mikhail Antonov) (stack: rev 9092314c01c0646c93076d987584dc3986ac71d5)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java
HBASE-11517 TestReplicaWithCluster turns zombie (Mikhail Antonov) -- REVERT (stack: rev 68f34f82737c9d44901687b62c3309466805db39)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java


SUCCESS: Integrated in HBase-TRUNK #5315 (See [https://builds.apache.org/job/HBase-TRUNK/5315/])
HBASE-11517 TestReplicaWithCluster turns zombie (Mikhail Antonov) -- REAPPLY (stack: rev 3455065a75784d38fec348bd413c61dd316208f9)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java


FAILURE: Integrated in HBase-1.0 #50 (See [https://builds.apache.org/job/HBase-1.0/50/])
HBASE-11517 TestReplicaWithCluster turns zombie (Mikhail Antonov) -- REAPPLY (stack: rev 21f863528d8d27a2ef4a05dce6fe6948ddbff41b)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java


Closing this issue after 0.99.0 release. 

