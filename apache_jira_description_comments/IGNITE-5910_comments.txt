GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/2382

    IGNITE-5910 Method stopGrid(name) doesn't work in multiJvm mode

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-5910

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2382.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2382
    
----
commit fe0534f41ef994b644ec628435583bc79f0181fd
Author: daradurvs <daradurvs@gmail.com>
Date:   2017-08-03T07:46:14Z

    ignite-5910: fixed ClassCastException

----


{{ClassCastException}} was fixed by [1'st commit|https://github.com/apache/ignite/pull/2382/commits/fe0534f41ef994b644ec628435583bc79f0181fd], and I found one more bug after:
Nodes wich started in separate JVM sometimes couldn't stop properly and were staying freezed up in OS after test finished.
It relates to the methods: {{#stopAllGrid()}} and {{#stopGrid(name)}} in case of MultiJVM tests. It was fixed by [2'nd commit|https://github.com/apache/ignite/pull/2382/commits/4982dba06d5dc7d3c13e74536159164794b857d1].

[Ci.tests|http://ci.ignite.apache.org/viewLog.html?buildId=755961]

Hi, [~daradurvs], did this issue reflected on test fails?

[~dpavlov], 
I tested the PR-branch and the master-branch all weekends.
I found fails in the {{Ignite Basic}} build-plan which are absent in the master-branch.
At the same time {{Ignite Cache 2}} and {{Ignite Cache 3}} build-plans look better than in the master-branch.
I will investigate found issue more deeply. Moved the ticket to In-Progress.
Thanks!

I have investigated the issue and found that stopping node in separate JVM may stuck thread or leave system process alive after test finished.


 The main reason is {{StopGridTask}} that we send from node in local JVM to node in separate JVM via remote computing. We send job synchronously to be sure that node will be stopped, but job calls synchronously {{G.stop(igniteInstanceName, cancel))}} with {{cancel = false}}, that means node must wait to compute jobs before it goes down what leads to some kind of deadlock. Using of {{cancel = true}} would solve the issue but may break some tests’ logic, for this reason, I've reworked the method’s synchronization logic.


 We have not noticed that before because we use only {{stopAllGrids()}} in out tests which stop local JVM without waiting for nodes in other JVMs.


 I believe this fix should reduce the number of flaky tests on TeamCity, especially which fails because of a cluster from the previous test has not been stopped properly.

[Ci.tests|https://ci.ignite.apache.org/viewLog.html?buildId=1105939] look a bit better than in master.

[~dpavlov], could you please review [the prepared PR|https://github.com/apache/ignite/pull/2382]?

Please use JUnit assertion for tests,
and remove side-effect construction like assert latch.await()

PR looks good to me.

[~dpavlov], thank you for the notes, it's fixed now.

[~daradurvs] Looks good to me.
Please, do Run All and attach a link to it.

[~NIzhikov], here is [latest PR ci.build|https://ci.ignite.apache.org/viewLog.html?buildId=1141592] look good in comparison with [master branch's latest ci.tests|https://ci.ignite.apache.org/viewLog.html?buildId=1141111].

[~daradurvs] could you please check

https://ci.ignite.apache.org/viewLog.html?buildId=1141521&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteBinaryObjectsSimpleMapperBasic

https://ci.ignite.apache.org/viewLog.html?buildId=1141519&buildTypeId=IgniteTests24Java8_IgniteBasic&tab=buildResultsDiv

These 2 builds were not failing in master, as far as I remember

[~NIzhikov] thank you for paying attention to tests!

[~dpavlov], you are right, there was a problem with long-running tests since I've set synchronization timeout which hasn't existed before.

I've changed logic a bit, sent for testing once again.

[~daradurvs] Thank you for contribution.

Looking forward for your next patches!

Merged to master

 

https://github.com/apache/ignite/commit/5ccb5482e2acc9dff502a0df7390e320760fed8d

Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2382


