I've published my first pass of this to the post-split repo [here|https://github.com/apache/solr/pull/39].  Still TODO:
* refactoring of test code to mock out 'Storage' client object
* additional unit tests to better cover individual operations?
* ref-guide docs on usage and configuration parameters?

Reviewers will notice that the PR has the new BackupRepository packaged as a "contrib" in the main Solr repo.  There's good discussion on the pros/cons of this [here|https://issues.apache.org/jira/browse/SOLR-15089?focusedCommentId=17287128&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17287128], where it came up on another BackupRepository impl I suggested.  If anyone has thoughts on contrib vs plugin, it prob makes sense to continue that discussion there (or on SOLR-14688) rather than fracturing it further here.  I'll obey the outcome here either way - just looking to avoid yet another restart of the conversation when it exists elsewhere.

Some updates to the PR:

* test code has been modified to use a GCS-client "fake" that Google provides in its google-cloud-nio library.  We now have pretty solid unit tests for GCSBackupRepository.
* added configuration params for a handful of previously hardcoded constants.

The big remaining item is ref-guide documentation.  I'm working on that currently.  Hoping to have this PR fully ready to review by the end of the week.

I've added ref-guide docs and have precommit/check passing on {{main}}.  This should be ready for review!  Exciting.

----

In terms of time frame on this ticket...

On SOLR-15089 (a similar ticket for Amazon's S3 blob store) I volunteered to leave the S3 plugin contrib unmerged until either
# SOLR-14688 develops a consensus on firm boundaries between contribs and plugins, and what a "first-party" (i.e. ASF-maintained) plugin would actually look like. Or until...
# 8.9 or 9.0 draw near, and "getting solid answers on SOLR-14688" was forced to defer to getting the functionality out to users.

I was willing to do the legwork of keeping my BackupRepository PRs unmerged and up to date with {{main}} when it seemed possible a SOLR-14688 consensus might be reached prior to the next big release, but as that looks less likely the effort of repeatedly resolving those merge conflicts etc. feels like waste.  Instead I'm considering merging this as a contrib now-ish, with the promise that I'm more than happy to repackage or move the code as necessary if a SOLR-14688 consensus does materialize prior to 8.9/9.0.

Commit be681bd9e0d24085c78c63fe11914faa41f4b813 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=be681bd ]

SOLR-15090: Allow backup storage in GCS (#39)



Since my comment above didn't draw any objections I've gone ahead and merged this as a contrib.

Reopening to cover the backport of this ticket to branch_8x (hopefully in time for an upcoming 8.9 release).

I've linked a new [PR|https://github.com/apache/lucene-solr/pull/2501] for the backport of this code from master.  Most of this is a straight copy, the only exception being the switch from gradle to ant/ivy build code.

Since there were a few changes there I'm going to leave this open for a few days despite being "just" a backport.  Will merge at the end of the week though pending any feedback.

Commit ea4ce4edc2bda12e18f1231f7841b0ccefad0ca5 in lucene-solr's branch refs/heads/branch_8x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=ea4ce4e ]

SOLR-15090: Allow backup storage in GCS (#2501)



Commit 59a6b941507878522aa889367b74e8684cb2a46d in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=59a6b94 ]

SOLR-15090: Update CHANGES.txt to reflect 8.9 backport

With this tickets recent backport to branch_8x, its CHANGES.txt entry
needed moved from "9.0" to "8.9".

This also takes the opportunity to correct a misnamed parameter in the
GCSBackupRepository ref-guide docs.


I've merged the 8.9 backport; closing now as a result.

Reopening this temporarily to reflect a bug fix I'm currently working on.

The backport of this functionality to 8.9 breaks ant's "nightly-smoke" task, because I didn't add a pom template for the new contrib module, so our shadow maven build fails when it gets to that point.  See here for an example: https://ci-builds.apache.org/job/Lucene/job/Lucene-Solr-SmokeRelease-8.x/220/

I've pushed a fix of this to branch_8x and will port it back to branch_8_9 as soon as I see a passing run in Jenkins.

Commit 191ac8eda7633daf3077759240055e8280e2b6d9 in lucene-solr's branch refs/heads/branch_8x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=191ac8e ]

SOLR-15090: Ditch transitive dependency on javax.annotations


Commit 1f0c061c0a640c9f75cc17855a65de977a82e478 in lucene-solr's branch refs/heads/branch_8_9 from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=1f0c061 ]

SOLR-15090: Ditch transitive dependency on javax.annotations


Commit 158da4d4533c04c5d46a68138322529d46c989c1 in lucene-solr's branch refs/heads/branch_8_9 from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=158da4d ]

SOLR-15090: Ditch transitive dependency on jsr305


Commit 16d516c8ef03b3c05a5500a81c586bfed41d48d1 in lucene-solr's branch refs/heads/branch_8x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=16d516c ]

SOLR-15090: Ditch transitive dependency on jsr305


Closing after the 8.9.0 release

PR [https://github.com/apache/solr/pull/72] is still connected to this JIRA. Shall it be closed or merged? [~gerlowskija]Â 

