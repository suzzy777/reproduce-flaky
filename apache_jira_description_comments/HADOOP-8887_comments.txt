A word of explanation about the {{test-container-executor.c}} change: it seems that when launched directly from Maven rather than from a shell, {{SIGQUIT}} starts off blocked, causing the test to fail.  The change manually unblocks this signal-- always a good idea to do before you start using a signal.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548020/HADOOP-8887.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 2057 javac compiler warnings (more than the trunk's current 2053 warnings).

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 8 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 15 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in dev-support/cmake-maven-ng-plugin hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1566//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/1566//artifact/trunk/patchprocess/newPatchFindbugsWarningscmake-maven-ng-plugin.html
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/1566//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1566//console

This message is automatically generated.

Get rid of some warnings (none of them were actual bugs.)

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548065/HADOOP-8887.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 2057 javac compiler warnings (more than the trunk's current 2053 warnings).

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 8 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in dev-support/cmake-maven-ng-plugin hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1569//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/1569//artifact/trunk/patchprocess/newPatchFindbugsWarningscmake-maven-ng-plugin.html
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/1569//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1569//console

This message is automatically generated.

Clean up warnings.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548319/HADOOP-8887.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 2061 javac compiler warnings (more than the trunk's current 2053 warnings).

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 8 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in dev-support/cmake-maven-ng-plugin hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1577//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/1577//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1577//console

This message is automatically generated.

Need to explicitly set Maven findbugs plugin version to avoid javac warnings.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548345/HADOOP-8887.004.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 8 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in dev-support/cmake-maven-ng-plugin hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1584//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1584//console

This message is automatically generated.

This plugin looks general purpose and it's in the org.apache.maven package, so perhaps it should go in the Maven Plugins project?

It would be nice to spin it off as a separate project, but that seems like it would just make it more difficult to iterate on the design in the short term, which is what we will need to get it truly polished.  If it's a separate project, we'll have backwards compatibility constraints, and also need two changes (one to add a feature to it, another to update Hadoop to use the new version and features) for every change.

Does it make sense to put it in Hadoop for now, and then spin it off into another project later?

* plugin root package should be org.apache.hadoop if in Hadoop.

* source directory should be settable via an 'source' property which defaults to ${basedir}/src/main/native

* build directory should be settable via an 'outputDirectory' property which defaults to ${project.build.directory}/native if not set.

* what is the diff between the output and target params in the CompileMojo? Do we need both? see prev comment on naming.

* CleanMojo, why do we need this one? 'mvn clean' already takes care of it.

* what is the diff between cmake-generate and cmake-compile? Do we need 2 different Mojos? Do we gain something from it?


bq. plugin root package should be org.apache.hadoop if in Hadoop.

OK.

bq. source directory should be settable via an 'source' property which defaults to ${basedir}/src/main/native

It is, via GenerateMojo#source

bq. build directory should be settable via an 'outputDirectory' property which defaults to ${project.build.directory}/native if not set.

It is, via GenerateMojo#output and CompileMojo#output.

bq. what is the diff between the output and target params in the CompileMojo? Do  we need both? see prev comment on naming.

"Build target" would be something like Debug, Production, etc.  "output" is a
directory.  I will add a comment explaining this.

bq. CleanMojo, why do we need this one? 'mvn clean' already takes care of it.

'mvn clean' will delete the 'target' directory, but we don't enforce the concept that the CMake-ng output directory is inside that directory.  We could enforce this, and then make get rid of the clean target?  However, we also might need this for when we're supporting Windows, maybe?

bq. what is the diff between cmake-generate and cmake-compile? Do we need 2       different Mojos? Do we gain something from it?

cmake-generate runs the cmake application to create the Makefiles.  cmake-compile actually runs Make on these generated files.  It seems natural to separate these two steps.  However, I don't have a specific reason why it has to be implemented this way -- we could combine both steps into one.  I was trying to go with the spirit of Maven, which separates code generation and compilation.


* Unless I'm missing something, I don't see patch anything like the following to define defaults:

{code}
     * @parameter  expression="${source}" default-value="${basedir}/src/main/native"
     * @parameter  expression="${output}" default-value="${project.build.directory}/native"
{code}

* CleanMojo for windows, I don't see how, but if that is the case we should introduce it then if needed, not now just in case.

* generate/make, I'd merge them in a single Mojo as there are not usecases for using them apart, plus generate does not generate sources but make files.

* where test code lives? does compiled test stuff need to be segregated in target/test-native?

As an additional reason for removing clean & merging generate/make is that the amount of plugins config in the POMs are reduced from 3 to 1.

I have not run the patch yet, but I assume that ALL generated/created files are done under output and the source tree is not polluted with files created at build time.



bq. [defaults]

I'll add defaults for those parameters.

bq. CleanMojo for windows, I don't see how, but if that is the case we should introduce it then if needed, not now just in case.

My big concern is just that people will put their output directories somewhere other than in a directory that gets auto-cleaned.  I think if we skip the clean step, we have to somehow enforce the constraint that the output directory gets cleared by mvn clean; otherwise we're just creating hidden dangers for the future.

bq. generate/make, I'd merge them in a single Mojo as there are not usecases for using them apart, plus generate does not generate sources but make files.

OK.  I'm fine with merging the cmake and make steps.  It probably will make the pom.xml files shorter, which we can always use.

bq. I have not run the patch yet, but I assume that ALL generated/created files are done under output and the source tree is not polluted with files created at build time.

Yep.

got it, ok on clean. on the defaults, make sure you have tests for them.

You've missed one question from prev comment: where test code lives? does compiled test stuff need to be segregated in target/test-native?


bq. does compiled test stuff need to be segregated in target/test-native?

No.

bq. Does it make sense to put it in Hadoop for now, and then spin it off into another project later?

If we do that we should at least put it in a org.apache.hadoop package since the Hadoop PMC doesn't control the org.apache.maven namespace.

* move org.apache.maven.plugin.cmake.ng.* to org.apache.hadoop.cmake.maven.ng.*

* removed CleanMojo

* merged GenerateMojo and CompileMojo

* clearer test output.

By the way, one thing that's cool about this patch is that you can now run

{code}
mvn test -Pnative -Dtest=test_native_mini_dfs
{code}

and it will run the native test, just like you would expect.

oh, also, I added the default parameters as tucu suggested.

+1 pending jenkins.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548991/HADOOP-8887.005.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 2031 javac compiler warnings (more than the trunk's current 2030 warnings).

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 4 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in dev-support/cmake-maven-ng-plugin hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1641//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/1641//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1641//console

This message is automatically generated.

This new version should fix the javac warnings.

The javadoc warnings will be suppressed when the patch is actually checked in (I bumped {{OK_JAVADOC_WARNINGS}} to 14).  The source of the Javadoc warnings is that we're getting warnings about a few annotations which are necessary for Maven plugins (It warns about "@goal" and "@phase", but Maven needs these).

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12549601/HADOOP-8887.006.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 4 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in dev-support/cmake-maven-ng-plugin hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestInitializeSharedEdits
                  org.apache.hadoop.hdfs.server.balancer.TestBalancer

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1642//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1642//console

This message is automatically generated.

test failures are unrelated 

Thanks Colin. Committed to trunk and branch-2.

Integrated in Hadoop-trunk-Commit #2889 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/2889/])
    HADOOP-8887. Use a Maven plugin to build the native code using CMake. (cmccabe via tucu) (Revision 1399898)

     Result = FAILURE
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399898
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support/findbugsExcludeFile.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/pom.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/CompileMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/TestMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/Utils.java
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml


I reverted the branch-2 patch. Some build issues and version number issues have been identified with that merge. Perhaps you need a separate patch for branch-2.

How about the javadoc warnings?

Thanks Suresh, my bad, missed to tweak the POM versions when merging, I'll do it again (this time properly). Nicholas, as Colin indicated, javadoc warnings are taken care by the patch, just it does not show until the patch is committed (one of these days I'll try to tweak test-patch to do what we do in Oozie, we run javadoc twice, once without the patch and once with the patch, and we compare the warning numbers, less or equal good).

Committed to branch-2 after tweaking POM versions, did a full build and verified all generated JARs are the correct version. Apologies for the noise.

@Alejandro no worries.

I've just reverted both branch-2 and trunk, while the dist tarball is being built correctly, as Andrew pointed out site is not working, we have to fix that.

Integrated in Hadoop-trunk-Commit #2893 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/2893/])
    reverting commit 1399898 (HADOOP-8887) (Revision 1399972)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399972
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml


Integrated in Hadoop-Yarn-trunk #8 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/8/])
    reverting commit 1399898 (HADOOP-8887) (Revision 1399972)
HADOOP-8887. Use a Maven plugin to build the native code using CMake. (cmccabe via tucu) (Revision 1399898)

     Result = FAILURE
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399972
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399898
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support/findbugsExcludeFile.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/pom.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/CompileMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/TestMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/Utils.java
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml


Integrated in Hadoop-Hdfs-trunk #1200 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1200/])
    reverting commit 1399898 (HADOOP-8887) (Revision 1399972)
HADOOP-8887. Use a Maven plugin to build the native code using CMake. (cmccabe via tucu) (Revision 1399898)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399972
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399898
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support/findbugsExcludeFile.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/pom.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/CompileMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/TestMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/Utils.java
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml


Integrated in Hadoop-Mapreduce-trunk #1230 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1230/])
    reverting commit 1399898 (HADOOP-8887) (Revision 1399972)
HADOOP-8887. Use a Maven plugin to build the native code using CMake. (cmccabe via tucu) (Revision 1399898)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399972
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1399898
Files : 
* /hadoop/common/trunk/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/dev-support/findbugsExcludeFile.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/pom.xml
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/CompileMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/TestMojo.java
* /hadoop/common/trunk/dev-support/cmake-maven-ng-plugin/src/main/java/org/apache/hadoop/cmake/maven/ng/Utils.java
* /hadoop/common/trunk/dev-support/pom.xml
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-project/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* /hadoop/common/trunk/pom.xml


Here's a new version which fixes the problem with "mvn site".

* It also adds the ability to recognize native test failures to test-patch.sh.

* Also fix a bug with the test classpath that some native unit tests were getting.

after some consultation with the Maven experts, it seems that including a Maven plugin in the same repository you use it in is not supported.

I think the way forward here is to maintain cmake-maven-ng as its own Apache project.
In the meantime, I have put cmake-maven-ng on Apache Extras under http://code.google.com/a/apache-extras.org/p/cmake-maven-ng/.  Maven can make use of this repository in the meantime.

The following patch implements this.

I just came across https://code.google.com/p/cmake-maven-project/ today.

[~cmccabe], do you have any experience on the cmake-maven-project? Do you think it makes sense to adopt the plugin in the current POMs?

I did try to work with cmake-maven-project in the past.  I wasn't able to get it working.  The biggest issues were the lack of support for JDK6 (which would no longer be an issue, of course), and the fact that it was mainly tested and developed on Windows.  I wasn't able to get it to work on UNIX at all, after spending some time with it a few years ago.  It looks like the project has not been very active (last commit was more than a year ago), so I don't think there is a big benefit over just using cmake-maven-ng.  cmake-maven-ng also supported a mode which allowed all tests to be run, or just a specific native test, something that a large project like Hadoop really needs.  Now that we are bundling other maven plugins in the Hadoop repo, we should probably just bundle the cmake-maven-ng plugin there.

Either approach looks reasonable to me. The only benefit of the cmake-maven-project plugin is that it downloads cmake 2.8 automatically thus it is possible to remove a bunch of quirks for cmake 2.6 we have today.

Please, -1 on automatic downloading of cmake.  The build takes long enough as-is, and cmake takes forever to download and install.  Plus we would have to somehow find the correct version for each different Linux distribution / BSD / Mac OS release, which puts this firmly in Not Happening territory.  And building cmake from source takes a really long time, maybe almost as much as Hadoop itself!  I don't remember exactly how long it took last time I did it.

I think we could move off of supporting cmake 2.6 in branch-2 today if we wanted to.  We only supported it earlier because people wanted to run on Red Hat 5, but that is no longer a concern.  We could bump the minimum version up to 2.8 and get rid of a bunch of quirks code.

I rebased this on current trunk and removed some of the hacks that were needed for jdk6.  This now integrates with the code in hadoop-maven-plugins.

I think this JIRA is important because the current method of calling cmake via bash will not work for Windows.  Once this plugin is established, we will be able to add Windows support fairly easily in a follow-on JIRA, and no longer have to maintain a separate native build process for Windows.

The plugin also makes running native unit tests straightforward and natural.  We no longer have to duplicate the SKIPTESTS handling and the cmake 2.6 hack everywhere, but can have them in just one place-- the cmake plugin itself.

With the cmakebuilder maven plugin, you can now run all native unit tests via:
{code}
mvn test -Pnative -Dtest=allNative
{code}

or a specific native unit test via:
{code}
mvn test -Pnative -Dtest=test_bulk_crc32
{code}
(or whatever other native unit test name you have, clearly)  The stdout and stderr show up in .stdout and .stderr files, respectively.  Test timeouts are enforced and we track the exit codes.

This sounds so good to have! I felt the same pain and necessity during working on ISA-L integration, having been wondering if it's possible to unify the native building process for both Linux and Windows, provide much easier setup for adding new unit tests until finding this. Would very happily lend a hand in this aspect if necessary. Thanks!

uploaded v13: One small revision to take into account the fact that hadoop-hdfs-native-client wants its cmake directory in a non-standard location

Nice work here Colin! Just a few review comments:

* Rather than hardcoding 4, we could use this Java API to get the # of processors: https://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html#availableProcessors()
* Nit: validateSourceParams, switch the order of arguments? Left to right I'd normally read input then output.
* Would be good to update BUILDING.txt with your "-DallNative" and "-Dtest_bulk_crc32" invocations as documentation

Otherwise looks great. I ran the native tests, some Java tests that use the native libs, and did a sanity check on a dist tarball too (libs were in the right place).

+1 pending this and a Jenkins run.

bq. Rather than hardcoding 4, we could use this Java API to get the # of processors: https://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html#availableProcessors()

Cool.  I didn't know this API existed... will add.

bq. Nit: validateSourceParams, switch the order of arguments? Left to right I'd normally read input then output.

OK.

bq. Would be good to update BUILDING.txt with your "-DallNative" and "-Dtest_bulk_crc32" invocations as documentation

Added

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 1m 54s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 2s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 59s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 26s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 4s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 10m 18s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 54s {color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 21m 57s {color} | {color:red} root in trunk failed. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 7m 24s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 11m 5s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 1m 16s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 56s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 25s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:red}-1{color} | {color:red} cc {color} | {color:red} 18m 38s {color} | {color:red} root-jdk1.8.0_66 with JDK v1.8.0_66 generated 1 new issues (was 13, now 13). {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 8m 25s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 18m 38s {color} | {color:red} root-jdk1.8.0_66 with JDK v1.8.0_66 generated 2 new issues (was 730, now 732). {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 8m 25s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 38s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:red}-1{color} | {color:red} cc {color} | {color:red} 27m 17s {color} | {color:red} root-jdk1.7.0_91 with JDK v1.7.0_91 generated 3 new issues (was 23, now 23). {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 8m 38s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 27m 17s {color} | {color:red} root-jdk1.7.0_91 with JDK v1.7.0_91 generated 2 new issues (was 724, now 726). {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 8m 38s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 1m 15s {color} | {color:red} Patch generated 25 new checkstyle issues in root (total was 3, now 28). {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 11m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 46s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red} 0m 0s {color} | {color:red} The patch has 2 line(s) with tabs. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 3s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 22m 41s {color} | {color:red} root in the patch failed. {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red} 0m 17s {color} | {color:red} root in the patch failed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 9m 58s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 4m 37s {color} | {color:red} root in the patch failed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 88m 47s {color} | {color:red} root in the patch failed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 27s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 249m 49s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.7.0_91 Failed junit tests | hadoop.hdfs.TestDFSInputStream |
|   | hadoop.hdfs.server.namenode.TestNNThroughputBenchmark |
|   | hadoop.hdfs.server.namenode.TestStartup |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12782154/HADOOP-8887.014.patch |
| JIRA Issue | HADOOP-8887 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  findbugs  checkstyle  cc  |
| uname | Linux df59419dc9dc 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / fb64e60 |
| Default Java | 1.7.0_91 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_91 |
| findbugs | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/branch-findbugs-root.txt |
| cc | root-jdk1.8.0_66: https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/diff-compile-cc-root-jdk1.8.0_66.txt |
| javac | root-jdk1.8.0_66: https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/diff-compile-javac-root-jdk1.8.0_66.txt |
| cc | root-jdk1.7.0_91: https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/diff-compile-cc-root-jdk1.7.0_91.txt |
| javac | root-jdk1.7.0_91: https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/diff-compile-javac-root-jdk1.7.0_91.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/diff-checkstyle-root.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/whitespace-tabs.txt |
| findbugs | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/patch-findbugs-root.txt |
| javadoc | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/patch-javadoc-root-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/patch-unit-root-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/patch-unit-root-jdk1.7.0_91.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/artifact/patchprocess/patch-unit-root-jdk1.7.0_91.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/testReport/ |
| modules | C:  hadoop-common-project/hadoop-common   hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager   .   hadoop-hdfs-project/hadoop-hdfs-native-client   hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask   hadoop-maven-plugins   hadoop-tools/hadoop-pipes  U: . |
| Max memory used | 120MB |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8404/console |


This message was automatically generated.



Committed to 2.9, thanks.

Hey Colin, I think commit was a little premature, since precommit flagged a bunch of issues. Could you take a look?

So, the two issues from the plugin I saw were this deprecation warning:
{code}
[WARNING] /testptch/hadoop/hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/cmakebuilder/TestMojo.java:[207,30] [deprecation] getExecutionProperties() in MavenSession has been deprecated
[WARNING] /testptch/hadoop/hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/cmakebuilder/TestMojo.java:[225,29] [deprecation] getExecutionProperties() in MavenSession has been deprecated
{code}

and a complaint about the use of a hard tab in {{TestMojo.java}}.  I opened HADOOP-12712 to fix these warnings.

Aside from that, we have the usual Jenkins weirdness on one of the test runs.
{code}
java.lang.RuntimeException: Error while running command to get file permissions : ExitCodeException exitCode=127: /bin/ls: error while loading shared libraries: libdl.so.2: failed to map segment from shared object: Permission denied
{code}
{{libdl.so.2}} is a Linux system library-- nothing to do with anything in this patch.  Best guess is that someone ran "apt-get update" concurrently with Jenkins and hosed this particular unit test.

Does that cover all the issues?

There's a bunch of checkstyle stuff, and findbugs looks like it's broken because of some kafka stuff.

CC warnings, I'm guessing you're handling at HADOOP-12712 which I'll review.

Overall it seems okay, it's just there's a lot more "-1" than I'm used to in a precommit run, and it's not just flaky unit tests. The whitespace/checkstyle stuff is onerous, but one more precommit run will fix it.

If you want to take care of all this in HADOOP-12712, I'm okay with that. Nothing functionally wrong in what was committed, so okay to do it in a follow-on.

FAILURE: Integrated in Hadoop-trunk-Commit #9113 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/9113/])
HADOOP-8887. Use a Maven plugin to build the native code using CMake (cmccabe: rev b1ed28fa77cb2fab80c54f9dfeb5d8b7139eca34)
* hadoop-common-project/hadoop-common/pom.xml
* hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/cmakebuilder/TestMojo.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
* hadoop-hdfs-project/hadoop-hdfs-native-client/pom.xml
* BUILDING.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/cmakebuilder/CompileMojo.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/pom.xml
* hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/util/Exec.java
* hadoop-tools/hadoop-pipes/pom.xml


Yes, let's take care of the whitespace / etc. stuff on HADOOP-12712.  There are also some flaky native unit tests, which I also think should be fixed in a follow-on.

