GitHub user enothereska opened a pull request:

    https://github.com/apache/kafka/pull/3500

    KAFKA-5566: Atomic compare and set

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enothereska/kafka hotfix-queryable-state

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/kafka/pull/3500.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3500
    
----
commit a7d94a26500fc279bb24ae5bdd5fb3b1292003ee
Author: Eno Thereska <eno.thereska@gmail.com>
Date:   2017-07-07T10:59:07Z

    Atomic compare and set

----


Github user asfgit closed the pull request at:

    https://github.com/apache/kafka/pull/3500


Issue resolved by pull request 3500
[https://github.com/apache/kafka/pull/3500]

GitHub user mjsax opened a pull request:

    https://github.com/apache/kafka/pull/3504

    KAFKA-5566: fixed race condition between flush and commit

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mjsax/kafka kafka-5566-queryable-state-test

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/kafka/pull/3504.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3504
    
----
commit cf6e5793bfc84a67955560b19a1f92d5fde37296
Author: Matthias J. Sax <matthias@confluent.io>
Date:   2017-07-07T18:07:02Z

    KAFKA-5566: fixed race condition between flush and commit

----


Issue resolved by pull request 3504
[https://github.com/apache/kafka/pull/3504]

Github user asfgit closed the pull request at:

    https://github.com/apache/kafka/pull/3504


[https://builds.apache.org/job/kafka-pr-jdk11-scala2.13/2549/]
{quote}java.lang.RuntimeException: Could not find enough records. found 0, expected 1 at org.apache.kafka.connect.util.clusters.EmbeddedKafkaCluster.consume(EmbeddedKafkaCluster.java:306) at org.apache.kafka.connect.mirror.MirrorConnectorsIntegrationTest.testReplication(MirrorConnectorsIntegrationTest.java:234){quote}

