It seems to affect all versions since 2.1

It seems that some parts of the parsing of {{Sets}}, {{Lists}} and {{Maps}} literals are not taking into account that the type can be wrapped into a reversed type. The attached patch simply makes sure to unwrap any possible reversed collection type.

CI results:
||PR||utest||dtest||CircleCI j8||CircleCI j11||
|[2.2|https://github.com/apache/cassandra/pull/655]  |[149|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/149/]|[190|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/190/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/57/workflows/01ede702-aa0f-4ea3-876d-a2bafc4d748b/]|-|
|[3.0|https://github.com/apache/cassandra/pull/656]  |[150|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/150/]|[191|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/191/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/60/workflows/47613064-8889-4cef-9101-35b7b771c94f/]|-|
|[3.11|https://github.com/apache/cassandra/pull/657] |[151|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/151/]|[192|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/192/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/58/workflows/0a01db90-f6ad-40b8-a9bf-af3a5e65fd0a/]|-|
|[trunk|https://github.com/apache/cassandra/pull/658]|[152|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/152/]|[193|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/193/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/59/workflows/f8e9db8c-1da5-4e01-9798-cae982cbcc7a/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/59/workflows/33b79196-8dda-42ce-a95d-07a219444753]|



[~adelapena] I left a comment on the unit tests. Other than that I checked the circle links as the rest 404 me. Circle, besides the probably related wall of failures on 2.2, lgtm. I did run some of the failing ones that either passed locally or match the failures in ci-cassandra. LGTM pending resolving the comment in the PR.

[~Bereng] I'm adding the requested additional tests to the PR for 2.2, and also some additional tests for the related already existing tests that aren't verifying every collection type. If they look good to you I'll merge them up to the other PRs and run CI for them. 

The CircleCI run for the updated 2.2 PR is [here|https://app.circleci.com/pipelines/github/adelapena/cassandra/66/workflows/8314df8a-ebf4-4ba1-95ce-2e85aedb3851].

Ha great [~adelapena] yes this is what I meant. Now we test all the collection types :-) Despite the wall of failures, which I bet are env related in 2.2, I am +1 on that. Next you should _rebase_ >2.2 imo as I read yesterday about a commit fixing a ton of flaky failures in 3.X. Once that's merged forward, rebased and CI looks good that should be it. We can skip compression and upgrade tests imo?

Great. I've rebased and run CI:
||PR||utest||dtest||CircleCI j8||CircleCI j11||
|[2.2|https://github.com/apache/cassandra/pull/655]  |[193|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/193/]|[229|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/229/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/70/workflows/f69c8ddc-b243-438d-86a5-579c67b70091]|-|
|[3.0|https://github.com/apache/cassandra/pull/656]  |[194|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/194/]|[230|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/230/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/69/workflows/c5548c6d-da91-48c3-94f6-d171410a2337]|-|
|[3.11|https://github.com/apache/cassandra/pull/657] |[195|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/195/]|[231|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/231/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/68/workflows/54c2b6b0-5eb9-4561-95f6-9b68b834dddb]|-|
|[trunk|https://github.com/apache/cassandra/pull/658]|[196|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-test/196/]|[232|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/232/]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/67/workflows/76d504cc-b1d1-42a3-bc45-b0b183194d21]|[link|https://app.circleci.com/pipelines/github/adelapena/cassandra/67/workflows/556d39f6-80b4-4342-bfa9-ec7fd12a25cd]|


[~adelapena]:
- 2.2 has a wall of failures, impossible to tell. Let's assume it's ok.
- 3.0 is clean
- 3.11 utest is failing SASIIndexTests which on cassandra ci are solid as a rock. I'd run those locally a few times before merging to confim. dtests match ci-cassandra
- trunk looks ok. Just the latest flakies I know of showing up.

If you confirm the 3.11 SASIIndexTest failures are flaky I'm +1.

bq. 3.11 utest is failing SASIIndexTests which on cassandra ci are solid as a rock. I'd run those locally a few times before merging to confim
[~Bereng] All those tests have some failure in [ci-cassandra|https://ci-cassandra.apache.org/job/Cassandra-3.11/75/testReport/org.apache.cassandra.index.sasi/SASIIndexTest/], although it only has the 11 more recent runs.

I'm running the test multiplexer for {{SASIIndexTest}} at cassandra-3.11 and 15814-3.11:

||branch||run1||run2||
|cassandra-3.11|[664|https://jenkins-cassandra.datastax.lan/job/parameterized-testall/664/]|[666|https://jenkins-cassandra.datastax.lan/job/parameterized-testall/666/]|
|15814-3.11|[665|https://jenkins-cassandra.datastax.lan/job/parameterized-testall/665/]|[667|https://jenkins-cassandra.datastax.lan/job/parameterized-testall/667/]|

For the first pair of runs I've seen that the following tests fail in both branches:
* testIndexMemtableSwitching
* testPagination
* testIndexRedistribution
However, {{testTruncate}} only fails in 15814-3.11. Since it only has failed 2 in 100 times, it's likely that we haven't seen it failing in cassandra-3.11 due to it's relatively low flakiness, thereof the second round of multiplexer runs.

Also, none of the tables created in SASI tests uses collections, so everything suggests that those tests failures are not related. 



[~Bereng] The second run of the multiplexer has produced two failures in {{testTruncate}} for cassandra-3.11 and none for 15814-3.11, which is the opposite to the first run. That gives us a flakiness of 1% with and without the patch. With this and the lack of collections in the test I think it's safe to consider those failures unrelated, so I'd say we're ready to merge.

[~adelapena] thx for putting up with my OCD and your extensive research :-) +1 lgtm

Thanks for the review.

Committed to {{cassandra-2.2}} as [9f8d5b8d069a1db88e70deafff6c0edc23c896d0|https://github.com/apache/cassandra/commit/9f8d5b8d069a1db88e70deafff6c0edc23c896d0] and merged all the way up to {{trunk}}.

Created CASSANDRA-15974 for the flaky SASI tests.

