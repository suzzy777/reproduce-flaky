[https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/6392/console]

[https://builds.apache.org/blue/organizations/jenkins/kafka-trunk-jdk8/detail/kafka-trunk-jdk8/3808/tests]

[https://builds.apache.org/blue/organizations/jenkins/kafka-trunk-jdk8/detail/kafka-trunk-jdk8/3810/tests]

[https://builds.apache.org/blue/organizations/jenkins/kafka-trunk-jdk11/detail/kafka-trunk-jdk11/718/tests]

[https://builds.apache.org/blue/organizations/jenkins/kafka-trunk-jdk11/detail/kafka-trunk-jdk11/719/tests]

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/23744/consoleFull]

https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/6624/testReport/junit/kafka.api/SaslGssapiSslEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/23857/testReport/junit/kafka.api/SaslOAuthBearerSslEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/]

[https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/6661/testReport/junit/kafka.api/GroupEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/]

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/23991/testReport/junit/kafka.api/SaslPlainSslEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/]

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/24043/testReport/junit/kafka.api/SaslGssapiSslEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/]

Duplicate of KAFKA-8800.

I am re-opening this one, because increasing timeouts in KAFKA-8800 didn't help. Need to debug this more.
[https://builds.apache.org/job/kafka-trunk-jdk11/775/]

Can we reopen KAFKA-8800 instead? Btw, I think you did not actually reopen this ticket.

[~ijuma] sure, will re-open KAFKA-8800 instead.

anatasiavela commented on pull request #7267: [WIP] KAFKA-8677: Flaky test testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl
URL: https://github.com/apache/kafka/pull/7267
 
 
   [KAFKA-8800](https://github.com/apache/kafka/pull/7211) attempted to fix a flaky test, however the tests remained inconsistent even after the fix. Since this test is not reproducible locally, modifying the Jenkins builds and digging through the logs would help debug the cause of this issue.
   
   ### Committer Checklist (excluded from commit message)
   - [ ] Verify design and implementation 
   - [ ] Verify test coverage and CI build status
   - [ ] Verify documentation (including upgrade notes)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


This test is still failing: [https://builds.apache.org/blue/organizations/jenkins/kafka-trunk-jdk11/detail/kafka-trunk-jdk11/788/tests]

https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/25666/

This flaky test has been pretty frequent recently, [~anastasiavela] are you still working on that?

Just to bring a few more examples:

https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/26200/testReport/junit/kafka.api/DelegationTokenEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/

https://builds.apache.org/job/kafka-pr-jdk11-scala2.13/2992/testReport/junit/kafka.api/SaslPlainSslEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/

https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/8985/testReport/junit/kafka.api/SslEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/

And they all exposed the same error trace:

{code}
Stacktrace
org.junit.ComparisonFailure: expected:<[e2etopic]> but was:<[topic2]>
	at org.junit.Assert.assertEquals(Assert.java:117)
	at org.junit.Assert.assertEquals(Assert.java:146)
	at kafka.api.EndToEndAuthorizationTest$$anonfun$consumeRecords$1.apply$mcVI$sp(EndToEndAuthorizationTest.scala:535)
	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:160)
	at kafka.api.EndToEndAuthorizationTest.consumeRecords(EndToEndAuthorizationTest.scala:532)
	at kafka.api.EndToEndAuthorizationTest.consumeRecordsIgnoreOneAuthorizationException(EndToEndAuthorizationTest.scala:549)
	at kafka.api.EndToEndAuthorizationTest.testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl(EndToEndAuthorizationTest.scala:369)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:365)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:330)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:78)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:328)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:65)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:292)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:412)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.GeneratedMethodAccessor43.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
{code}

{code}
Standard Output
Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:57:29,818] ERROR [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:29,820] ERROR [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:29,988] ERROR [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:29,988] ERROR [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: * 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Create from hosts: * 

[2019-10-28 00:57:31,626] ERROR [Consumer clientId=consumer-group-2044, groupId=group] Topic authorization failed for topics [e2etopic] (org.apache.kafka.clients.Metadata:283)
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

[2019-10-28 00:57:32,181] ERROR [Consumer clientId=consumer-group-2044, groupId=group] Topic authorization failed for topics [topic2] (org.apache.kafka.clients.Metadata:283)
[2019-10-28 00:57:32,182] ERROR [Consumer clientId=consumer-group-2044, groupId=group] Topic authorization failed for topics [topic2] (org.apache.kafka.clients.Metadata:283)
Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:57:40,395] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:40,403] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2e, patternType=PREFIXED)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=gr, patternType=PREFIXED)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:PREFIXED:e2e`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Current ACLs for resource `Group:PREFIXED:gr`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:57:46,626] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:46,628] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:46,893] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:46,894] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:57:54,061] ERROR [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:54,063] ERROR [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:54,270] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:57:54,272] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:01,590] ERROR [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:01,593] ERROR [ReplicaFetcher replicaId=0, leaderId=1, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:01,800] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:01,802] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=topic2, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:topic2`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=topic2, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:topic2`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

[2019-10-28 00:58:02,494] ERROR [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Error for partition topic2-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:02,509] ERROR [ReplicaFetcher replicaId=0, leaderId=1, fetcherId=0] Error for partition topic2-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:08,996] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:08,996] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: *
	User:scram-user has Allow permission for operations: Write from hosts: * 

Current ACLs for resource `Group:LITERAL:*`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:18,040] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:18,044] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:18,253] ERROR [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:18,253] ERROR [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:25,598] ERROR [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:25,598] ERROR [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: * 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Create from hosts: * 

[2019-10-28 00:58:27,063] ERROR [Consumer clientId=consumer-group-2051, groupId=group] Topic authorization failed for topics [e2etopic] (org.apache.kafka.clients.Metadata:283)
Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:32,850] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:32,857] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:33,058] ERROR [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:33,058] ERROR [ReplicaFetcher replicaId=0, leaderId=1, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:41,349] ERROR [ReplicaFetcher replicaId=0, leaderId=1, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:41,351] ERROR [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:41,660] ERROR [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:41,661] ERROR [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:49,017] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:49,034] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:49,218] ERROR [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:49,222] ERROR [ReplicaFetcher replicaId=0, leaderId=1, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

[2019-10-28 00:58:49,686] ERROR [Producer clientId=producer-501] Topic authorization failed for topics [e2etopic] (org.apache.kafka.clients.Metadata:283)
[2019-10-28 00:58:49,732] ERROR [Consumer clientId=consumer-group-2053, groupId=group] Topic authorization failed for topics [e2etopic] (org.apache.kafka.clients.Metadata:283)
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=topic2, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:topic2`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=topic2, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:topic2`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

[2019-10-28 00:58:50,395] ERROR [Producer clientId=producer-501] Topic authorization failed for topics [e2etopic] (org.apache.kafka.clients.Metadata:283)
[2019-10-28 00:58:50,462] ERROR [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Error for partition topic2-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:50,464] ERROR [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Error for partition topic2-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:50,497] ERROR [Producer clientId=producer-501] Topic authorization failed for topics [e2etopic] (org.apache.kafka.clients.Metadata:283)
[2019-10-28 00:58:51,661] ERROR [Consumer clientId=consumer-group-2053, groupId=group] Topic authorization failed for topics [e2etopic] (org.apache.kafka.clients.Metadata:283)
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=CLUSTER, name=kafka-cluster, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=CLUSTER_ACTION, permissionType=ALLOW) 

Current ACLs for resource `Cluster:LITERAL:kafka-cluster`: 
 	User:scram-admin has Allow permission for operations: ClusterAction from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=*, patternType=LITERAL)`: 
 	(principal=User:scram-admin, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:*`: 
 	User:scram-admin has Allow permission for operations: Read from hosts: * 

Completed Updating config for entity: user-principal 'scram-admin'.
Completed Updating config for entity: user-principal 'scram-user'.
[2019-10-28 00:58:57,952] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:57,952] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition __consumer_offsets-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:58,124] ERROR [ReplicaFetcher replicaId=0, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
[2019-10-28 00:58:58,124] ERROR [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error for partition e2etopic-0 at offset 0 (kafka.server.ReplicaFetcherThread:76)
org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=WRITE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=CREATE, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Adding ACLs for resource `ResourcePattern(resourceType=TOPIC, name=e2etopic, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW)
	(principal=User:scram-user, host=*, operation=DESCRIBE, permissionType=ALLOW) 

Adding ACLs for resource `ResourcePattern(resourceType=GROUP, name=group, patternType=LITERAL)`: 
 	(principal=User:scram-user, host=*, operation=READ, permissionType=ALLOW) 

Current ACLs for resource `Topic:LITERAL:e2etopic`: 
 	User:scram-user has Allow permission for operations: Write from hosts: *
	User:scram-user has Allow permission for operations: Read from hosts: *
	User:scram-user has Allow permission for operations: Create from hosts: *
	User:scram-user has Allow permission for operations: Describe from hosts: * 

Current ACLs for resource `Group:LITERAL:group`: 
 	User:scram-user has Allow permission for operations: Read from hosts: * 
{code}

[https://builds.apache.org/job/kafka-pr-jdk11-scala2.13/3017/testReport/junit/kafka.api/SaslPlainSslEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/]

guozhangwang commented on pull request #7613: KAFKA-8677: Simplify the best-effort network client poll to never throw exception
URL: https://github.com/apache/kafka/pull/7613
 
 
   Within KafkaConsumer.poll, we have an optimization to try to send the next fetch request before returning the data in order to pipelining the fetch requests; however, this pollNoWakeup should NOT throw any exceptions, since at this point the fetch position has been updated. If an exception is thrown here, and the callers decides to capture and continue, those records would never be returned again, causing data loss.
   
   Also fix the flaky test itself.
   
   ### Committer Checklist (excluded from commit message)
   - [ ] Verify design and implementation 
   - [ ] Verify test coverage and CI build status
   - [ ] Verify documentation (including upgrade notes)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


https://builds.apache.org/job/kafka-pr-jdk11-scala2.12/9099/testReport/junit/kafka.api/DelegationTokenEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/

Since the bug causes data loss, adding this as blocker for 2.4 release.

https://builds.apache.org/job/kafka-pr-jdk8-scala2.11/26402/testReport/junit/kafka.api/GroupEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/

guozhangwang commented on pull request #7613: KAFKA-8677: Simplify the best-effort network client poll to never throw exception
URL: https://github.com/apache/kafka/pull/7613
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Reopening this ticket. Test failed again: [https://builds.apache.org/job/kafka-pr-jdk11-scala2.13/4226/testReport/junit/kafka.api/GroupEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/]
{code:java}
org.apache.kafka.common.protocol.types.SchemaException: Error reading field 'responses': Error reading array of size 131085, only 28 bytes available
	at org.apache.kafka.common.protocol.types.Schema.read(Schema.java:110)
	at org.apache.kafka.common.protocol.ApiKeys.parseResponse(ApiKeys.java:313)
	at org.apache.kafka.clients.NetworkClient.parseStructMaybeUpdateThrottleTimeMetrics(NetworkClient.java:719)
	at org.apache.kafka.clients.NetworkClient.handleCompletedReceives(NetworkClient.java:833)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:556)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:262)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:233)
	at org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1306)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1246)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1214)
	at kafka.utils.TestUtils$.pollUntilAtLeastNumRecords(TestUtils.scala:795)
	at kafka.utils.TestUtils$.consumeRecords(TestUtils.scala:1351)
	at kafka.api.EndToEndAuthorizationTest.consumeRecords(EndToEndAuthorizationTest.scala:537)
	at kafka.api.EndToEndAuthorizationTest.consumeRecordsIgnoreOneAuthorizationException(EndToEndAuthorizationTest.scala:556)
	at kafka.api.EndToEndAuthorizationTest.testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl(EndToEndAuthorizationTest.scala:376)
{code}

I'm going to investigate the newly reported error here, it's also been reported at least another time as

{code}
org.apache.kafka.common.protocol.types.SchemaException: Error reading field 'responses': Error reading array of size 65541, only 5 bytes available
at org.apache.kafka.common.protocol.types.Schema.read(Schema.java:110)
at org.apache.kafka.common.protocol.ApiKeys.parseResponse(ApiKeys.java:345)
at org.apache.kafka.clients.NetworkClient.parseStructMaybeUpdateThrottleTimeMetrics(NetworkClient.java:725)
at org.apache.kafka.clients.NetworkClient.handleCompletedReceives(NetworkClient.java:839)
at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:558)
at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:262)
at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:233)
at org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1310)
at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1250)
at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1218)
at kafka.utils.TestUtils$.$anonfun$pollRecordsUntilTrue$1(TestUtils.scala:819)
at kafka.utils.TestUtils$.pollUntilAtLeastNumRecords(TestUtils.scala:864)
at kafka.utils.TestUtils$.consumeRecords(TestUtils.scala:1382)
at kafka.api.EndToEndAuthorizationTest.consumeRecords(EndToEndAuthorizationTest.scala:537)
at kafka.api.EndToEndAuthorizationTest.consumeRecordsIgnoreOneAuthorizationException(EndToEndAuthorizationTest.scala:556)
at kafka.api.EndToEndAuthorizationTest.testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl(EndToEndAuthorizationTest.scala:376)
{code}

And in some soak test for 2.5, we saw not exactly, but similar error pattern:

{code}
[2020-03-30T15:32:21-07:00] (streams-soak-2-5_soak_i-002fe2f777065e280_streamslog) [2020-03-30 22:32:20,765] ERROR [stream-soak-test-7da4ed8b-dc6c-4fd4-b14c-5fe68c71559e-StreamThread-1] stream-thread [stream-soak-test-7da4ed8b-dc6c-4fd4-b14c-5fe68c71559e-StreamThread-1] Encountered the following unexpected Kafka exception during processing, this usually indicate Streams internal errors: (org.apache.kafka.streams.processor.internals.StreamThread)
[2020-03-30T15:32:21-07:00] (streams-soak-2-5_soak_i-002fe2f777065e280_streamslog) org.apache.kafka.common.protocol.types.SchemaException: Error reading field 'version': java.nio.BufferUnderflowException
        at org.apache.kafka.common.protocol.types.Schema.read(Schema.java:110)
        at org.apache.kafka.clients.consumer.internals.ConsumerProtocol.deserializeVersion(ConsumerProtocol.java:124)
        at org.apache.kafka.clients.consumer.internals.ConsumerProtocol.deserializeAssignment(ConsumerProtocol.java:304)
        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.onJoinComplete(ConsumerCoordinator.java:349)
        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:439)
        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:358)
        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:483)
        at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1275)
        at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1241)
        at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1216)
        at org.apache.kafka.streams.processor.internals.StreamThread.pollRequests(StreamThread.java:853)
        at org.apache.kafka.streams.processor.internals.StreamThread.runOnce(StreamThread.java:753)
        at org.apache.kafka.streams.processor.internals.StreamThread.runLoop(StreamThread.java:697)
        at org.apache.kafka.streams.processor.internals.StreamThread.run(StreamThread.java:670)
{code}

{code}
[2020-03-27T21:13:01-05:00] (streams-soak-2-5_soak_i-054b83e98b7ed6285_streamslog) [2020-03-28 02:13:00,513] INFO [stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1] [Consumer instanceId=ip-172-31-31-29.us-west-2.compute.internal-1, clientId=stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1-consumer, groupId=stream-soak-test] Successfully joined group with generation 3 (org.apache.kafka.clients.consumer.internals.AbstractCoordinator)
[2020-03-27T21:13:01-05:00] (streams-soak-2-5_soak_i-054b83e98b7ed6285_streamslog) [2020-03-28 02:13:00,513] ERROR [stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1] stream-thread [stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1] Encountered the following unexpected Kafka exception during processing, this usually indicate Streams internal errors: (org.apache.kafka.streams.processor.internals.StreamThread)
[2020-03-27T21:13:01-05:00] (streams-soak-2-5_soak_i-054b83e98b7ed6285_streamslog) org.apache.kafka.common.protocol.types.SchemaException: Error reading field 'version': java.nio.BufferUnderflowException
	at org.apache.kafka.common.protocol.types.Schema.read(Schema.java:110)
	at org.apache.kafka.clients.consumer.internals.ConsumerProtocol.deserializeVersion(ConsumerProtocol.java:124)
	at org.apache.kafka.clients.consumer.internals.ConsumerProtocol.deserializeAssignment(ConsumerProtocol.java:304)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.onJoinComplete(ConsumerCoordinator.java:349)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:439)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:358)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:483)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1275)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1241)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1216)
	at org.apache.kafka.streams.processor.internals.StreamThread.pollRequests(StreamThread.java:853)
	at org.apache.kafka.streams.processor.internals.StreamThread.runOnce(StreamThread.java:753)
	at org.apache.kafka.streams.processor.internals.StreamThread.runLoop(StreamThread.java:697)
	at org.apache.kafka.streams.processor.internals.StreamThread.run(StreamThread.java:670)
[2020-03-27T21:13:01-05:00] (streams-soak-2-5_soak_i-054b83e98b7ed6285_streamslog) [2020-03-28 02:13:00,514] INFO [stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1] stream-thread [stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1] State transition from RUNNING to PENDING_SHUTDOWN (org.apache.kafka.streams.processor.internals.StreamThread)
[2020-03-27T21:13:01-05:00] (streams-soak-2-5_soak_i-054b83e98b7ed6285_streamslog) [2020-03-28 02:13:00,514] INFO [stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1] stream-thread [stream-soak-test-bda42f54-3438-4e1e-8a40-8b3dffdcc23c-StreamThread-1] Shutting down (org.apache.kafka.streams.processor.internals.StreamThread)
{code}

This also happens for trunk, FYI: 

[2020-03-30T17:12:15-07:00] (streams-soak-trunk_soak_i-0f9c49376aaf33346_streamslog) [2020-03-31 00:12:14,667] ERROR [stream-soak-test-a3babca8-96ba-4db2-b378-730a1b9f7c0f-StreamThread-1] stream-thread [stream-soak-test-a3babca8-96ba-4db2-b378-730a1b9f7c0f-StreamThread-1] Encountered the following exception during processing and the thread is going to shut down:  (org.apache.kafka.streams.processor.internals.StreamThread)

[2020-03-30T17:12:15-07:00] (streams-soak-trunk_soak_i-0f9c49376aaf33346_streamslog) org.apache.kafka.common.protocol.types.SchemaException: Error reading field 'version': java.nio.BufferUnderflowException

        at org.apache.kafka.common.protocol.types.Schema.read(Schema.java:110)

        at org.apache.kafka.clients.consumer.internals.ConsumerProtocol.deserializeVersion(ConsumerProtocol.java:124)

        at org.apache.kafka.clients.consumer.internals.ConsumerProtocol.deserializeAssignment(ConsumerProtocol.java:304)

        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.onJoinComplete(ConsumerCoordinator.java:352)

        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:439)

        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:358)

        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:491)

        at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1264)

        at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1230)

        at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1205)

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.12/1519/testReport/junit/kafka.api/DelegationTokenEndToEndAuthorizationTest/testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl/]
{quote}org.apache.kafka.common.protocol.types.SchemaException: Error reading field 'responses': Error reading array of size 1380011309, only 22 bytes available at org.apache.kafka.common.protocol.types.Schema.read(Schema.java:110) at org.apache.kafka.common.protocol.ApiKeys.parseResponse(ApiKeys.java:319) at org.apache.kafka.clients.NetworkClient.parseStructMaybeUpdateThrottleTimeMetrics(NetworkClient.java:725) at org.apache.kafka.clients.NetworkClient.handleCompletedReceives(NetworkClient.java:839) at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:558) at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:262) at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:233) at org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1297) at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1237) at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1205) at kafka.utils.TestUtils$.$anonfun$pollRecordsUntilTrue$1(TestUtils.scala:795) at kafka.utils.TestUtils$.pollUntilAtLeastNumRecords(TestUtils.scala:840) at kafka.utils.TestUtils$.consumeRecords(TestUtils.scala:1355) at kafka.api.EndToEndAuthorizationTest.consumeRecords(EndToEndAuthorizationTest.scala:537) at kafka.api.EndToEndAuthorizationTest.consumeRecordsIgnoreOneAuthorizationException(EndToEndAuthorizationTest.scala:556) at kafka.api.EndToEndAuthorizationTest.testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl(EndToEndAuthorizationTest.scala:376){quote}

