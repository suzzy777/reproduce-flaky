Providing a mechanism to seed them is a good idea. I disagree with seeding them by default - I don't think a test is flaky just because its randomised. If tests are randomised they need to be written carefully so that they're only testing actual invariants of the code, but we have a bunch of tests that fit that category. If we have a product bug or a poorly-written test we'd rather know than masking it by derandomising the test.

I will provide a way to override the seed. That was something I had meant to do and forgot.

We were seeding with time before this latest change. All of our tests call InitCommonRuntime() (e.g. [IMPALA_TEST_MAIN()|https://github.com/apache/impala/blob/master/be/src/testutil/gtest-util.h#L55]), and that calls srand(time(NULL)):

 

[https://github.com/apache/impala/blob/master/be/src/common/init.cc#L201]

 

Gtest keeps some information in the singleton UnitTest class. This includes a random_seed() method, which I believe can be set via the commandline. I'll look into this; we could use this for all our srand calls.

