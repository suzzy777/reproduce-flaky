Just going to dump relevant logs/error messages here regarding different tests while I work on them... Some are flaky and take awhile to reproduce.

{{add_node_after_very_wide_mv_test}} fails on bootstrap of the fourth node due to:
{code}
INFO  [Stream-Deserializer-/127.0.0.1:7000-b69a2f59] 2017-11-21 03:31:33,964 StreamResultFuture.java:193 - [Stream #77f16cb0-ce6c-11e7-b953-bbf6c637c4ad] Session with /127.0.0.1 is complete
WARN  [Stream-Deserializer-/127.0.0.2:44789-46b17cc7] 2017-11-21 03:31:34,186 CompressedStreamReader.java:111 - [Stream 77f16cb0-ce6c-11e7-b953-bbf6c637c4ad] Error while reading partition DecoratedKey(-3248873570005575792, 00000002) from stream on ks='ks' and table='t'.
ERROR [Stream-Deserializer-/127.0.0.2:44789-46b17cc7] 2017-11-21 03:31:34,199 StreamSession.java:617 - [Stream #77f16cb0-ce6c-11e7-b953-bbf6c637c4ad] Streaming error occurred on session with peer 127.0.0.2
org.apache.cassandra.streaming.StreamReceiveException: java.lang.AssertionError: stream can only read forward.
        at org.apache.cassandra.streaming.messages.IncomingFileMessage$1.deserialize(IncomingFileMessage.java:63) ~[main/:na]
        at org.apache.cassandra.streaming.messages.IncomingFileMessage$1.deserialize(IncomingFileMessage.java:41) ~[main/:na]
        at org.apache.cassandra.streaming.messages.StreamMessage.deserialize(StreamMessage.java:55) ~[main/:na]
        at org.apache.cassandra.streaming.async.StreamingInboundHandler$StreamDeserializingTask.run(StreamingInboundHandler.java:178) ~[main/:na]
        at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
Caused by: java.lang.AssertionError: stream can only read forward.
        at org.apache.cassandra.streaming.compress.CompressedInputStream.position(CompressedInputStream.java:108) ~[main/:na]
        at org.apache.cassandra.streaming.compress.CompressedStreamReader.read(CompressedStreamReader.java:94) ~[main/:na]
        at org.apache.cassandra.streaming.messages.IncomingFileMessage$1.deserialize(IncomingFileMessage.java:58) ~[main/:na]
        ... 4 common frames omitted
INFO  [Stream-Deserializer-/127.0.0.2:44789-46b17cc7] 2017-11-21 03:31:34,201 StreamResultFuture.java:193 - [Stream #77f16cb0-ce6c-11e7-b953-bbf6c637c4ad] Session with /127.0.0.2 is complete
INFO  [Stream-Deserializer-/127.0.0.3:7000-099ad298] 2017-11-21 03:31:34,372 StreamResultFuture.java:179 - [Stream #77f16cb0-ce6c-11e7-b953-bbf6c637c4ad ID#0] Prepare completed. Receiving 2 files(49.251KiB), sending 0 files(0.000KiB)
INFO  [Stream-Deserializer-/127.0.0.3:7000-099ad298] 2017-11-21 03:31:35,575 StreamResultFuture.java:193 - [Stream #77f16cb0-ce6c-11e7-b953-bbf6c637c4ad] Session with /127.0.0.3 is complete
WARN  [Stream-Deserializer-/127.0.0.3:7000-099ad298] 2017-11-21 03:31:35,584 StreamResultFuture.java:220 - [Stream #77f16cb0-ce6c-11e7-b953-bbf6c637c4ad] Stream failed
ERROR [main] 2017-11-21 03:31:35,585 StorageService.java:1487 - Error while waiting on bootstrap to complete. Bootstrap will have to be restarted.
java.util.concurrent.ExecutionException: org.apache.cassandra.streaming.StreamException: Stream failed
        at com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:528) ~[guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:507) ~[guava-23.3-jre.jar:na]
        at org.apache.cassandra.service.StorageService.bootstrap(StorageService.java:1482) [main/:na]
        at org.apache.cassandra.service.StorageService.joinTokenRing(StorageService.java:932) [main/:na]
        at org.apache.cassandra.service.StorageService.initServer(StorageService.java:637) [main/:na]
        at org.apache.cassandra.service.StorageService.initServer(StorageService.java:569) [main/:na]
        at org.apache.cassandra.service.CassandraDaemon.setup(CassandraDaemon.java:373) [main/:na]
        at org.apache.cassandra.service.CassandraDaemon.activate(CassandraDaemon.java:566) [main/:na]
        at org.apache.cassandra.service.CassandraDaemon.main(CassandraDaemon.java:655) [main/:na]
Caused by: org.apache.cassandra.streaming.StreamException: Stream failed
        at org.apache.cassandra.streaming.management.StreamEventJMXNotifier.onFailure(StreamEventJMXNotifier.java:88) ~[main/:na]
        at com.google.common.util.concurrent.Futures$CallbackListener.run(Futures.java:1371) ~[guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:399) ~[guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.AbstractFuture.executeListener(AbstractFuture.java:1016) ~[guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.AbstractFuture.complete(AbstractFuture.java:867) ~[guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.AbstractFuture.setException(AbstractFuture.java:713) ~[guava-23.3-jre.jar:na]
        at org.apache.cassandra.streaming.StreamResultFuture.maybeComplete(StreamResultFuture.java:221) ~[main/:na]
        at org.apache.cassandra.streaming.StreamResultFuture.handleSessionComplete(StreamResultFuture.java:197) ~[main/:na]
        at org.apache.cassandra.streaming.StreamSession.closeSession(StreamSession.java:488) ~[main/:na]
        at org.apache.cassandra.streaming.StreamSession.complete(StreamSession.java:744) ~[main/:na]
        at org.apache.cassandra.streaming.StreamSession.messageReceived(StreamSession.java:564) ~[main/:na]
        at org.apache.cassandra.streaming.async.StreamingInboundHandler$StreamDeserializingTask.run(StreamingInboundHandler.java:191) ~[main/:na]
        at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_131]
WARN  [Stream-Deserializer-/127.0.0.3:7000-099ad298] 2017-11-21 03:31:35,585 StorageService.java:1477 - Error during bootstrap.
org.apache.cassandra.streaming.StreamException: Stream failed
        at org.apache.cassandra.streaming.management.StreamEventJMXNotifier.onFailure(StreamEventJMXNotifier.java:88) ~[main/:na]
        at com.google.common.util.concurrent.Futures$CallbackListener.run(Futures.java:1371) [guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:399) [guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.AbstractFuture.executeListener(AbstractFuture.java:1016) [guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.AbstractFuture.complete(AbstractFuture.java:867) [guava-23.3-jre.jar:na]
        at com.google.common.util.concurrent.AbstractFuture.setException(AbstractFuture.java:713) [guava-23.3-jre.jar:na]
        at org.apache.cassandra.streaming.StreamResultFuture.maybeComplete(StreamResultFuture.java:221) [main/:na]
        at org.apache.cassandra.streaming.StreamResultFuture.handleSessionComplete(StreamResultFuture.java:197) [main/:na]
        at org.apache.cassandra.streaming.StreamSession.closeSession(StreamSession.java:488) [main/:na]
        at org.apache.cassandra.streaming.StreamSession.complete(StreamSession.java:744) [main/:na]
        at org.apache.cassandra.streaming.StreamSession.messageReceived(StreamSession.java:564) [main/:na]
        at org.apache.cassandra.streaming.async.StreamingInboundHandler$StreamDeserializingTask.run(StreamingInboundHandler.java:191) [main/:na]
        at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
WARN  [main] 2017-11-21 03:31:35,595 StorageService.java:968 - Some data streaming failed. Use nodetool to check bootstrap state and resume. For more, see `nodetool help bootstrap`. IN_PROGRESS
INFO  [main] 2017-11-21 03:31:35,595 Gossiper.java:1650 - Waiting for gossip to settle...
{code}

AFAICT {{add_dc_after_mv_network_replication_test}} should have been failing since CASSANDRA-12681 because it relies on adding a DC to the RF before adding a node in that DC, and then it relies on that node bootstrapping and streaming from the existing DC and having the correct data. TBH CASSANDRA-12681 was not a good solution, it's quite useful to be able to set RF for a non-existent DC. I think it's still necessary to keep the previous behaviour available, in which case we could just add a "force\ignore" flag to alter/create if you want to add a DC that doesn't exist i.e maybe something like:
{code}CREATE KEYSPACE ... WITH replication = {...} UNSAFE{code} 

Or we could just revert CASSANDRA-12681 because it's not really helpful anyway. It's not like we verify the replication factor or stop people from using SimpleStrategy. Changing RF is a dangerous operation but still needs to be flexible. I don't think this is actually a significant pain point, any mistakes are quickly rectifiable, and I haven't really ever heard of anyone saying this is a problem.

Ran {{add_node_after_very_wide_mv_test}} around 300 times over the weekend with no failures, so pretty sure the AE has been fixed since November.

Hi [~KurtG],

I am doing triage of our Cassandra tickets and I was wondering whether you still have some plans about this one. I know it's been a while...

Currently I don't see Materialized views tests failing, at least in 4.0 and trunk.Â 

