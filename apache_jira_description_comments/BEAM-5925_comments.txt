To be clear, this is v6: {{:beam-sdks-java-io-elasticsearch-tests-6:test}}

I'm going to take a minute to see if I can just increase the timeout.

Looked into it, and I couldn't quite figure out what is going on, but I don't think adding a timeout (which would be to the ES RetryConfiguration I think) is the issue. Do {{:beam-sdks-java-io-elasticsearch-tests-2:test}}, {{:beam-sdks-java-io-elasticsearch-tests-5:test}}, and {{:beam-sdks-java-io-elasticsearch-tests-6:test}} have some accidental conflict in their clusters or teardown? I see they use different indices...

Thanks Kenn for pointing out. It has been a lot of flakiness lately with ESIO v6. I'll take a look at them

I have very little availability to work on ES6 [~dattran.vn01] can you take a look at this flaky test? I cannot assign you the ticket. CC [~timrobertson100]

Let me check [~echauchot]

CC [~wouts] too, a new ES contributor who is also looking at timeouts in his environment 

I'm certain the retryConfiguration does not take care of RestClient listener timeouts, as they still show up when trying to stream 40M documents with a retryConfig set.

[~timrobertson100] suggested me to try again with an increased timeout of the RestClient:
{code:java}
RestClient createClient() throws IOException {
...
...
return restClientBuilder
.setRequestConfigCallback(new RestClientBuilder.RequestConfigCallback() {
@Override
public RequestConfig.Builder customizeRequestConfig(RequestConfig.Builder requestConfigBuilder)

{ return requestConfigBuilder.setConnectTimeout(600000) .setSocketTimeout(600000); }

})
.setMaxRetryTimeoutMillis(600000)
.build();
}{code}
 

This worked for me. My elastic dev cluster consists of one node, and it took my dataflow job 1h45 min to stream 40M docs with 5 workers.
 Hope this helps

Another timeout here but from a different location: https://scans.gradle.com/s/33iongbzxsfy4/tests/fo2bghfaj5ysq-nxssse2hlcccy?openStackTraces=WzEsMl0

[~wouts] assigning to you as you started to work on that. Tell me is you need help. I'll take a look at the other test flakes

Waiting a week to close this ticket, just to see if PR [https://github.com/apache/beam/pull/7065] fixes the flakiness. It should fix it as the problem was a timeout.

 

[~kenn] I was waiting for some time to see if this flake is fixed with Wout's PR. It is indeed already fixed, I just forgot to close the ticket so I'm targeting 2.10.

