The IAuthenticator interface is already quite significantly changed by CASSANDRA-7653 and as there doesn't seem to be a really compelling use case for this, closing it as wontfix. Feel free to re-open if there's a genuine requirement.

[~beobal] there are multiple use cases where this would be beneficial and I think it would be good to get a change like this in before we ship 3.0. Being able to restrict login by ip is a very common thing to do in authentication. Besides that being able to track where login attempts are coming from is essential for many types of users.

It probably makes the most sense to update the IAuthenticator::newSaslNegotiator call and add a QueryState/ClientState parameter to it, and an authenticator can track it that way.

Would the {{InetAddress}} of the client attempting authentication be sufficient for the negotiator? QueryState & ClientState both also provide access to a bunch of things that an IAuthenticator probably has no business with: the tracing-related methods, login, authz functions etc.

True, the full ClientState or QueryState is a lot.  The InetSocketAddress from the ClientState.remoteAddress is enough for the use cases I am thinking of.

bq. QueryState & ClientState both also provide access to a bunch of things that an IAuthenticator probably has no business with: the tracing-related methods, login, authz functions etc.

This.

||3.0||trunk||
|[branch|https://github.com/beobal/cassandra/tree/8068-3.0]|[branch|https://github.com/beobal/cassandra/tree/8068-trunk]|
|[testall|http://cassci.datastax.com/view/Dev/view/beobal/job/beobal-8068-3.0-testall/]|[testall|http://cassci.datastax.com/view/Dev/view/beobal/job/beobal-8068-trunk-testall/]|
|[dtests|http://cassci.datastax.com/view/Dev/view/beobal/job/beobal-8068-3.0-dtest/]|[dtests|http://cassci.datastax.com/view/Dev/view/beobal/job/beobal-8068-trunk-dtest/]|

+1 that works for my use cases.

Ok then, CI looks reasonable with the exception of {{auth_test:TestAuth.system_auth_ks_is_alterable_test}}, which is marked as {{flaky}} anyway. So I've committed this as {{8a8427d73044646488d3700d2b967f0dfa3c7148}} and opened a [dtest pull request|https://github.com/riptano/cassandra-dtest/pull/639] to make it more reliable.

