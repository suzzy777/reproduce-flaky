TestApplicationLimits.testLimitsComputation() has the following two asserts:


{code:java}
    // should default to global setting if per queue setting not set
assertEquals((long)CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_APPLICATIONMASTERS_RESOURCE_PERCENT,
        (long)csConf.getMaximumApplicationMasterResourcePerQueuePercent(
            queue.getQueuePath()));
{code}

and


{code:java}
    assertEquals((long) 0.5,
        (long) csConf.getMaximumApplicationMasterResourcePerQueuePercent(
          queue.getQueuePath()));
{code}

In the current form neither of them make too much sense because getMaximumApplicationMasterResourcePerQueuePercent returns a float (between 0 and 1.0), so the only way this will fail is when the configuration is below 0 or above 1, but we're not testing invalid configurations here. This should be corrected.
