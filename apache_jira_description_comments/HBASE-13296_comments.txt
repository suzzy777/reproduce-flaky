Tested this on my local box with the following steps.
- Created namespace 
- Granted permissions to other users.
- Dropped namespace
- Verified that there namespace znodes are being deleted.

Looks good. 

Any chance of a test ?

Patch lgtm. Can we add a ut for this ?

ugh.. did not see Ted's comment before..

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707167/HBASE-13296.patch
  against master branch at commit e78aeb24e0cf9d27bc9a8ed17708567e8668a38c.
  ATTACHMENT ID: 12707167

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13408//console

This message is automatically generated.

bq. Any chance of a test ?
Sure. We don't have test coverage for deletion of table acl nodes. Let me put up a patch for covering these two scenarios.

Besides unit test, also did some cleanup. Tests passing on local box.

Looks ok to me.
minor nits,

Can we create local variables for the return values of this methods and avoid repetitive calls to this methods.
{code}
TEST_UTIL.getMiniHBaseCluster().getMaster()
table.getNameAsString()
convertToNamespace(ns)
{code}

Why not use assertNotEquals and assertEquals here
{code}
+    assertTrue(ZKUtil.checkExists(zkw, baseAclZNode + table.getNameAsString()) != -1);
+    assertTrue(ZKUtil.checkExists(zkw, baseAclZNode + convertToNamespace(ns)) != -1);
{code}

{code}
+    assertTrue(ZKUtil.checkExists(zkw, baseAclZNode + table.getNameAsString()) == -1);
+    assertTrue(ZKUtil.checkExists(zkw, baseAclZNode + convertToNamespace(ns)) == -1);
{code}


Extracted a local variable for master, as it saved 3 occurrences. We already have local variables for table name and namespace. I don't think creating again local variables for table.getNameAsString() and convertToNamespace(ns) can save us a lot, especially given the fact there are only 2 occurrences. 

If znode exists, the version number is returned. 
{code}
* @return version of the node if it exists, -1 if does not exist
{code}
Thought it would be easier to restrict ourselves to check for existence or not, in which case assertTrue would be better choice. For consistency sake, I used it for throughout. Let's see what other folks would suggest. If they have other opinions, I would be happy to change.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708029/HBASE-13296_v2.patch
  against master branch at commit ced0e324a190e75d8a93b8b09676781853819361.
  ATTACHMENT ID: 12708029

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13482//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13482//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13482//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13482//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708032/HBASE-13296_v2.patch
  against master branch at commit ced0e324a190e75d8a93b8b09676781853819361.
  ATTACHMENT ID: 12708032

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13483//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13483//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13483//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13483//console

This message is automatically generated.

Why master.createNamespace() instead of admin.createNamespace()?
if we change the master implementation to be async as other operation the test will be flaky

Agreed. Uploaded the patch for addressing this.

Agreed. Uploaded the patch for addressing this.

Hello Jenkins...

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708049/HBASE-13296_v3.patch
  against master branch at commit bfb04d26a757aa146c180710545b11856868f08a.
  ATTACHMENT ID: 12708049

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 9 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13484//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13484//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13484//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13484//console

This message is automatically generated.

+1 on v3
just curious, why did you change the sequence of put() in setup() with a since batch-put?

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708056/HBASE-13296_v3.patch
  against master branch at commit bfb04d26a757aa146c180710545b11856868f08a.
  ATTACHMENT ID: 12708056

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 9 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13485//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13485//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13485//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13485//console

This message is automatically generated.

bq. just curious, why did you change the sequence of put() in setup() with a since batch-put?
besides making the code compact, I thought all that unnecessary naming overhead(as the puts are being used elsewhere) could be avoided by using anonymous objects.

Thanks folks for the reviews!

FAILURE: Integrated in HBase-1.1 #347 (See [https://builds.apache.org/job/HBase-1.1/347/])
HBASE-13296 Fix the deletion of acl notify nodes for namespace. (ssrungarapu: rev a6ddcc8fa2b99d4c25b11d34270344954b286239)
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController2.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java


FAILURE: Integrated in HBase-1.0 #842 (See [https://builds.apache.org/job/HBase-1.0/842/])
HBASE-13296 Fix the deletion of acl notify nodes for namespace. (ssrungarapu: rev cada6fd87105c0f2eb2c74ee92d503fb9fd6f50c)
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController2.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java


FAILURE: Integrated in HBase-TRUNK #6332 (See [https://builds.apache.org/job/HBase-TRUNK/6332/])
HBASE-13296 Fix the deletion of acl notify nodes for namespace. (ssrungarapu: rev 485800830a58da1af31beaac859d99b56d823f99)
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController2.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java


SUCCESS: Integrated in HBase-0.98 #928 (See [https://builds.apache.org/job/HBase-0.98/928/])
HBASE-13296 Fix the deletion of acl notify nodes for namespace. (ssrungarapu: rev 5c3e567ffb96499a1fb3b7c2fec9f768b256abb0)
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController2.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java


FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #882 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/882/])
HBASE-13296 Fix the deletion of acl notify nodes for namespace. (ssrungarapu: rev 5c3e567ffb96499a1fb3b7c2fec9f768b256abb0)
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController2.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java


Closing this issue after 1.0.1 release.

