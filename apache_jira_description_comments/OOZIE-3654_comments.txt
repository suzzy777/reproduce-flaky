[~pj.fanning] Precommit failed to comment here but here is the output: [https://ci-hadoop.apache.org/job/PreCommit-OOZIE-Build/64/] There are several errors, can you please check it. 

The xerces issue looks unrelated to me, is it somehow connected to the httpclient version? If not, a separate Jira would be better to handle that.

uploaded an 002 patch with the xerces change removed

Precommit: https://ci-hadoop.apache.org/job/PreCommit-OOZIE-Build/67/

[~asalamon74] Maybe I misinterpreting the output but the failure appears to be spotbugs issues with JPA persistence - which are not related to the httpclient change - could you highlight any blocking issues that are related to httpclient?

This is the important part of the precommit and I agree we can ignore the spotbugs errors:

{noformat}
16:18:01 +1 PATCH_APPLIES
16:18:01 +1 CLEAN
16:18:01 -1 RAW_PATCH_ANALYSIS
16:18:01     +1 the patch does not introduce any @author tags
16:18:01     +1 the patch does not introduce any tabs
16:18:01     +1 the patch does not introduce any trailing spaces
16:18:01     +1 the patch does not introduce any star imports
16:18:01     +1 the patch does not introduce any line longer than 132
16:18:01     -1 the patch does not add/modify any testcase
16:18:01 +1 RAT
16:18:01     +1 the patch does not seem to introduce new RAT warnings
16:18:01 +1 JAVADOC
16:18:01     +1 Javadoc generation succeeded with the patch
16:18:01     +1 the patch does not seem to introduce new Javadoc warning(s)
16:18:01 +1 COMPILE
16:18:01     +1 HEAD compiles
16:18:01     +1 patch compiles
16:18:01     +1 the patch does not seem to introduce new javac warnings
16:18:01 -1 There are [7] new bugs found below threshold in total that must be fixed.
16:18:01     +1 There are no new bugs found in [examples].
16:18:01     +1 There are no new bugs found in [fluent-job/fluent-job-api].
16:18:01     +1 There are no new bugs found in [sharelib/hive].
16:18:01     +1 There are no new bugs found in [sharelib/hive2].
16:18:01     +1 There are no new bugs found in [sharelib/git].
16:18:01     +1 There are no new bugs found in [sharelib/distcp].
16:18:01     +1 There are no new bugs found in [sharelib/hcatalog].
16:18:01     +1 There are no new bugs found in [sharelib/sqoop].
16:18:01     +1 There are no new bugs found in [sharelib/spark].
16:18:01     -1 There are [1] new bugs found below threshold in [sharelib/oozie] that must be fixed.
16:18:01     You can find the SpotBugs diff here (look for the red and orange ones): sharelib/oozie/findbugs-new.html
16:18:01     The most important SpotBugs errors are:
16:18:01     At ShellMain.java:[line 93]: This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection
16:18:01     At ShellMain.java:[line 91]: At ShellMain.java:[line 90]
16:18:01     At ShellMain.java:[line 92]
16:18:01     +1 There are no new bugs found in [sharelib/pig].
16:18:01     +1 There are no new bugs found in [sharelib/streaming].
16:18:01     +1 There are no new bugs found in [server].
16:18:01     +1 There are no new bugs found in [docs].
16:18:01     +1 There are no new bugs found in [webapp].
16:18:01     -1 There are [6] new bugs found below threshold in [core] that must be fixed, listing only the first [5] ones.
16:18:01     You can find the SpotBugs diff here (look for the red and orange ones): core/findbugs-new.html
16:18:01     The top [5] most important SpotBugs errors are:
16:18:01     At BulkJPAExecutor.java:[line 206]: This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection
16:18:01     At BulkJPAExecutor.java:[line 176]: At BulkJPAExecutor.java:[line 175]
16:18:01     At BulkJPAExecutor.java:[line 205]: At BulkJPAExecutor.java:[line 199]
16:18:01     This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection: At BulkJPAExecutor.java:[line 206]
16:18:01     At BulkJPAExecutor.java:[line 111]: At BulkJPAExecutor.java:[line 127]
16:18:01     +1 There are no new bugs found in [tools].
16:18:01     +1 There are no new bugs found in [client].
16:18:01 +1 BACKWARDS_COMPATIBILITY
16:18:01     +1 the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
16:18:01     +1 the patch does not modify JPA files
16:18:01 +1 TESTS
16:18:01     Tests run: 3215
16:18:01     Tests failed at first run:
16:18:01     For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
16:18:01 +1 DISTRO
16:18:01     +1 distro tarball builds with the patch 
16:18:01 +1 MODERNIZER
{noformat} 


I wanted to commit this change but found this issue: OOZIE-2679 
{quote}Version 4.4 of HttpClient has issued with Hadoop: HADOOP-11859
It will be fixed in Hadoop 2.8.0, until we use that we should use 4.3 of HttpClient.
{quote}
And there is a followup jira for upgrading to 4.4: OOZIE-2680

Right now out default hadoop version is 2.6.0 which means that committing this could give us errors.

I think we could increase the minimum hadoop version to 2.8.0 (2.6.0 was released in 2014, 2.8.0 was released in 2017) but this would be a bigger change.

CC [~dionusos] 

 

I agree to increase the minimum Hadoop version to the latest 2.x when able. (Then change to 3.x soon)

Hadoop 1->2 transition may not be completed now. I just force-picked up OOZIE-2729. Maybe unrelated but I let it here.

[~dionusos] Let's wait till you check OOZIE-2729 maybe that will also change the minimum hadoop requirement. (I hope not, but it might)

If we found nothing else I would increase the minimum to 2.8.0, but the default might be the latest 2.x as you suggested. (Which is 2.10.1 now). If we run into some issues with the relatively new 2.10.1 we could use some older 2.x as a default (but >=2.8.0).

OOZIE-2729 does not change the pom.xml file. I think we can safely upgrade Hadoop version if tests pass.

I vote for Hadoop 2.10.1 in scope of another Jira. I expect everything pass then we can solve this one.

