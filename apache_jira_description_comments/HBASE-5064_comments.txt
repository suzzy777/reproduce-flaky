-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507827/5064.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestMasterFailover
                  org.apache.hadoop.hbase.util.TestMergeTool
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication
                  org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan
                  org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.replication.TestMasterReplication
                  org.apache.hadoop.hbase.TestHBaseTestingUtility
                  org.apache.hadoop.hbase.util.TestRegionSplitter

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/536//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/536//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/536//console

This message is automatically generated.

"java.lang.OutOfMemoryError: unable to create new native thread": hadoop-qa can't execute 3 tests in //
Let's try with 2.

hum, it was already set to 2. Let's retry, but hadoop-qa is not really oversized...

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507831/5064.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/537//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/537//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/537//console

This message is automatically generated.

This time is worked: I have the errors above on another patch as well.

Logs says: Total time: 1:13:18.269s
To be compared with prebuild #535: Total time: 1:49:04.397s
=>50 minutes faster.

However, we have some tests without results: Tests run: 771, Failures: 3, Errors: 1, Skipped: 9
To be compared with prebuild #535: Tests run: 785, Failures: 0, Errors: 3, Skipped: 9


-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507835/5064.v2.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildHole
                  org.apache.hadoop.hbase.client.TestFromClientSide
                  org.apache.hadoop.hbase.coprocessor.TestAggregateProtocol
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint
                  org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase
                  org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol
                  org.apache.hadoop.hbase.util.TestHBaseFsck
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/538//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/538//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/538//console

This message is automatically generated.

Nice improvement.  Should we up the heap size for maven when running tests in parallel?

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507849/5064.v3.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.client.TestFromClientSide
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/539//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/539//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/539//console

This message is automatically generated.

Tests run: 780, Failures: 4, Errors: 2, Skipped: 9
Total time: 1:05:24.474s

To be compared with prebuild #535:
Tests run: 785, Failures: 0, Errors: 3, Skipped: 9
Total time: 1:49:04.397s

Still faster (~45minutes)
Still some tests missing in the final report: (795 vs. 797). Don't know why yet.

TestInstantSchemaChange.testInstantSchemaJanitor: Too many open files
TestFromClientSide.testPoolBehavior: Fixed in v4.
TestTableMapReduce.testMultiRegionTable: NumberFormatException
TestHFileOutputFormat.testMRIncrementalLoad: NumberFormatException
TestHFileOutputFormat.testMRIncrementalLoadWithSplit: NumberFormatException
TestHFileOutputFormat.testExcludeMinorCompaction: NumberFormatException

NumberFormatException: seems to be unrelated, I've got it on other patches as well.

@stack: it's a parallelisation per process, so it should not be necessary: there is no added load on maven itself. However, the results of the first run seem to say that the hadoop-qa machine was overloaded. But it seems that the other runs went well.


-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507877/5064.v4.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/542//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507881/5064.v5.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestMultipleTimestamps
                  org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.client.TestInstantSchemaChangeFailover
                  org.apache.hadoop.hbase.client.TestTimestampsFilter
                  org.apache.hadoop.hbase.client.TestShell
                  org.apache.hadoop.hbase.client.TestHTableUtil
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication
                  org.apache.hadoop.hbase.client.TestHCM
                  org.apache.hadoop.hbase.TestGlobalMemStoreSize
                  org.apache.hadoop.hbase.client.TestInstantSchemaChangeSplit
                  org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.client.TestMetaScanner

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/544//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/544//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/544//console

This message is automatically generated.

Error while running command to get file permissions : java.io.IOException: Cannot run program "/bin/ls": 
java.lang.OutOfMemoryError: unable to create new native thread

=> undersized hadoop-qa

=> reducing the number of threads used didn't help much
=> that two failures for undersizing out of 5 tries. 

Let's do another one with only 1 thread to see if everything goes right when there is no //

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507902/5064.v6.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/546//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/546//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/546//console

This message is automatically generated.

We could up the heap for the parallel maven but if its OOME'ing because can't create native thread, thats more about too many threads running?

#535 (with previous version of surefire)
Total time: 1:49:04.397s
Tests run: 785, Failures: 0, Errors: 3, Skipped: 9

#537 (2 threads)
Total time: 1:13:18.269s
Tests run: 771, Failures: 3, Errors: 1, Skipped: 9

#539 (2 threads, thread min configuration)
Total time: 1:05:24.474s
Tests run: 780, Failures: 4, Errors: 2, Skipped: 9

#546 (1 threads, thread min configuration)
Tests run: 771, Failures: 3, Errors: 2, Skipped: 9
Total time: 2:07:01.697s

Seems that the missing tests are more or less random as well. Let's do another try with 3 threads.



@stack: yes,it should be that there are two many threads
- jvm limitation that we should manage with -Xmx or -Xss => but then we should reproduce it on our machine as well (asd far as I know no one does reproduce it locally), and we already set it to -Xmx1900m
- a limitation on the total number of thread on the machine => but it's quite strange
- the ulimit per process, but then running the tests on multiple processes should not change the probability to have an issue

The patch v2+ changed HBase configuration, On TestAdmin, we need 40 less threads, so the benefit is not high. And I saw no real impact.

There are some stuff to look at, as sysctl kernel.threads-max, i will check if it is printed in the default script.



I've seen something. If it's not the problem, it is a problem.

On hadoop QA, we have
max user processes              (-u) 2048

Try this on you computer:
ulimit -u 256
Then run a test such as TestAdmin
You will have a nice java.lang.OutOfMemoryError: unable to create new native thread


This because this limit controls not only the number of processes but as well the number of native threads.

We should have this set to a much bigger value.





-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507919/5064.v7.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.master.TestSplitLogManager

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/547//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/547//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/547//console

This message is automatically generated.

hadoopqa is at 1024 right?  It looks like its set to 60k but you found that once the process starts, its 1024?  And so the OOME.  I need to chase Giri, the fellow w/ access to these machines to dig in on this ulimit issue?

There are two issues:

1) open files (-n) 1024
This limit is per process
This is the cause for "too many open file"
This occurs when a test, for a reason or another, goes beyond this limit (some of the tests are very close)

2) max user processes (-u) 2048
This limit is per user/machine, not per process!
This is the cause for "unable to create new native thread"
This occurs when the machine runs multiple tests in parallel, and  when all tests happen to use a lot of threads.

Both must be changed. As we should limit the number of file descriptor used, it makes sense to set open files to something reasonable (like 2048 or 4096), but the number of max user processes could be set to unlimited without any issue, as when it fails it's because there are other processes using threads as well, and we don't control them.




For #547
NumberFormatException:
mapreduce.TestHFileOutputFormat.testExcludeMinorCompaction
mapreduce.TestHFileOutputFormat.testMRIncrementalLoadWithSplit
mapreduce.TestHFileOutputFormat.testMRIncrementalLoad
mapred.TestTableMapReduce.testMultiRegionTable

Too many open files
TestInstantSchemaChange.testInstantSchemaJanitor

??
TestSplitLogManager.testMultipleResubmits


Total time: 41:21.481s
Tests run: 733, Failures: 4, Errors: 2, Skipped: 6

Many tests hung or are not in the report, so the final result is not meaningfull.
But it will make more sense to try when the ulimit settings are updated.

@stack; the synthesis is at 19/Dec/11 17:26, and yes, we really need these values to be changed :-)

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508062/5064.v6.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/554//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/554//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/554//console

This message is automatically generated.

Apart from the 5 failed tests, TestReplication hung.

#554 (No //, min number of threads)
Total time: 1:55:37.351s
Tests run: 781, Failures: 3, Errors: 2, Skipped: 9

Too many open files
TestInstantSchemaChange.testInstantSchemaJanitor

NumberFormatException
TestTableMapReduce.testMultiRegionTable
TestHFileOutputFormat.testMRIncrementalLoad
TestHFileOutputFormat.testMRIncrementalLoadWithSplit
TestHFileOutputFormat.testExcludeMinorCompaction

Hung
TestReplication

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508218/5064.v6.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/565//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/565//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/565//console

This message is automatically generated.

#565 (No //, min number of threads)
Total time: 1:59:24.242s
Tests run: 788, Failures: 3, Errors: 3, Skipped: 9

Too many open files
TestInstantSchemaChange.testInstantSchemaJanitor

NumberFormatException
TestTableMapReduce.testMultiRegionTable
TestHFileOutputFormat.testMRIncrementalLoad
TestHFileOutputFormat.testMRIncrementalLoadWithSplit
TestHFileOutputFormat.testExcludeMinorCompaction

Hung
None it seems, and at it least not TestReplication

The directory is already locked.
TestLogRolling.testLogRollOnDatanodeDeath


So above tests are w/o //?  (I'm getting no response from Giri)

Yes, i execute these tests to compare the results with the ones with //.
The values for open files and max threads are still wrong on hadoopqa, i
will test the // when the value is right.
Le 21 déc. 2011 16:07, "stack (Commented) (JIRA)" <jira@apache.org> a



-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508235/5064.v6.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestInstantSchemaChange
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/566//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/566//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/566//console

This message is automatically generated.

#566 (No //, min number of threads)
Total time: 1:56:55.198s
Tests run: 789, Failures: 3, Errors: 2, Skipped: 9

Too many open files
TestInstantSchemaChange.testInstantSchemaJanitor

NumberFormatException
TestTableMapReduce.testMultiRegionTable
TestHFileOutputFormat.testMRIncrementalLoad
TestHFileOutputFormat.testMRIncrementalLoadWithSplit
TestHFileOutputFormat.testExcludeMinorCompaction

Hung
None

Build #566 looks good.
Shall we increase parallelism and run test suite again ?

No, we need the hadoopqa setting increased before activating //.
Here, I am launching multiple tests to identify most of the random issues
we can have, this will help to distinguish what is random vs. what is due
to //.
However, I can split this patch in smaller ones:
1) one to activate the lastest version of surefire
2) one for the minimal thread settings
3) one for the // itself.

From all the tests done so far, 1 & 2 seem ok today.

On Wed, Dec 21, 2011 at 6:49 PM, Zhihong Yu (Commented) (JIRA) <



-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508265/5064.v8.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestMasterObserver

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/571//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/571//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/571//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508506/5064.v7.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/585//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/585//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/585//console

This message is automatically generated.

#585 (3 processes, min number of threads)
Total time: 40:46.855s
Tests run: 788, Failures: 4, Errors: 1, Skipped: 9

Invalid result expected:<134> but was:<190>
TestCoprocessorEndpoint.testAggregation

NumberFormatException
TestTableMapReduce.testMultiRegionTable
TestHFileOutputFormat.testMRIncrementalLoad
TestHFileOutputFormat.testMRIncrementalLoadWithSplit
TestHFileOutputFormat.testExcludeMinorCompaction

Hung
None

Parallelization went well, nearly 100% linearility, as we're 3 times faster with 3 processes.
TestCoprocessorEndpoint.testAggregation failed as well in prebuild #584, so it could be unrelated to the //.

Let's try with 6 processes.


-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508546/5064.v9.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/586//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/586//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/586//console

This message is automatically generated.

For build #586:
Tests run: 775, Failures: 3, Errors: 1, Skipped: 9

So 13 tests were missing compared to those from build #585

For build #586, the following tests had no result:

Hanging test: Running org.apache.hadoop.hbase.master.TestRestartCluster
Hanging test: Running org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort
Hanging test: Running org.apache.hadoop.hbase.client.TestMetaScanner
Hanging test: Running org.apache.hadoop.hbase.client.TestMultiParallel
Hanging test: Running org.apache.hadoop.hbase.TestGlobalMemStoreSize

#586 (6 processes, min number of threads)
Total time: 22:54.145s
Tests run: 775, Failures: 3, Errors: 1, Skipped: 9

NumberFormatException
TestTableMapReduce.testMultiRegionTable
TestHFileOutputFormat.testMRIncrementalLoad
TestHFileOutputFormat.testMRIncrementalLoadWithSplit
TestHFileOutputFormat.testExcludeMinorCompaction

Hung
master.TestRestartCluster
regionserver.wal.TestLogRollAbort
client.TestMetaScanner
TestGlobalMemStoreSize
client.TestMultiParallel

Still nearly 100% linearility (5 times faster with 6 processes)
A lot of tests hung.
TestCoprocessorEndpoint.testAggregation didn't fail this time.

@ted
Yes, hopefully it just because the machine is overloaded and not because there are race conditions.

I will do multiple tries.
I think the right target is 3 processes -more we may hit randomly the number of process limit-
I will try to split this patch in 2: one for surefire update and parallelization, one for the configuration with less threads.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508548/5064.v10.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/587//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/587//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/587//console

This message is automatically generated.

#587 (7 processes, standard config)
Total time: 31:58.502s
Tests run: 782, Failures: 3, Errors: 1, Skipped: 9

NumberFormatException
TestTableMapReduce.testMultiRegionTable
TestHFileOutputFormat.testMRIncrementalLoad
TestHFileOutputFormat.testMRIncrementalLoadWithSplit
TestHFileOutputFormat.testExcludeMinorCompaction

Hung
replication.TestMasterReplication
master.TestMasterFailover
master.TestRollingRestart

As usual nearly 100% linearility
3 tests hung.
TestCoprocessorEndpoint.testAggregation didn't fail this time.



Wooooooohoooooo... 32mins.

And I can do the // locally N?

Good stuff.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508549/5064.v11.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/588//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/588//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/588//console

This message is automatically generated.

@stack: Yes, with the patch 5064.v10.patch and the parameter surefire.secondPartThreadCount (can be specified on the command line with the usual -D)

On a recent laptop, 2 or 3 should be ok. On a server something as 15 should be interesting and brings us near the 10 minutes (we need ~2Gb per process).

This said, I am worried by the hung processes... i will do multiple tries to see if it's random on if it's more or less always the same tests.

For build #588:
{code}
Hanging test: Running org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase
Hanging test: Running org.apache.hadoop.hbase.catalog.TestMetaReaderEditor
Hanging test: Running org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove
Hanging test: Running org.apache.hadoop.hbase.replication.regionserver.TestReplicationSink
Hanging test: Running org.apache.hadoop.hbase.replication.TestMasterReplication
{code}

On my MacBook, a lot of tests were not executed after I applied 5064.v11.patch:
{code}
Tests run: 522, Failures: 0, Errors: 0, Skipped: 1

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 13:49.006s
{code}

#588
Total time: 39:50.795s
Tests run: 768, Failures: 3, Errors: 1, Skipped: 9

Hanging test: Running org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase
Hanging test: Running org.apache.hadoop.hbase.catalog.TestMetaReaderEditor
Hanging test: Running org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove
Hanging test: Running org.apache.hadoop.hbase.replication.regionserver.TestReplicationSink
Hanging test: Running org.apache.hadoop.hbase.replication.TestMasterReplication

Gonna try with only 2 threads.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508551/5064.v12.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/589//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/589//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/589//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508592/5064.v7.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/594//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/594//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/594//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508593/5064.v7.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/595//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/595//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/595//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508595/5064.v8.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/596//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/596//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/596//console

This message is automatically generated.

Below a review of the tests on trunk & prebuild.

We have often, nearly always, hanging tests in hadoop-qa, while it's occurs only sometimes on main build.
It seems that it hangs more often when // is activated
It seems that we have this kind of behavior when we cannot start a thread.

I will look if we can enhance the reporting in surefire (i.e. it seems some errors are not reported today)


----
#2572
Tests run: 789, Failures: 0, Errors: 0, Skipped: 9

#2570
Tests run: 789, Failures: 0, Errors: 0, Skipped: 9

#2569
Tests run: 789, Failures: 0, Errors: 0, Skipped: 9

#2568
Tests run: 789, Failures: 0, Errors: 0, Skipped: 9

#2566
Tests run: 789, Failures: 0, Errors: 0, Skipped: 9

#2565 (marked as success, but there is a hanging test)
wal.TestLogRollAbort

#596 5064 1 processesn min number of threads
Tests run: 786, Failures: 3, Errors: 1, Skipped: 9

#595 5064.v7.patch - 3 processesn min number of threads
Tests run: 785, Failures: 3, Errors: 1, Skipped: 9
hbck.TestOfflineMetaRebuildOverlap
master.TestMasterRestartAfterDisablingTable
replication.TestMasterReplication

#594 5064.v7.patch - 3 processesn min number of threads
Tests run: 786, Failures: 3, Errors: 1, Skipped: 9
util.TestMiniClusterLoadParallel
coprocessor.TestMasterCoprocessorExceptionWithRemove

#593
Tests run: 779, Failures: 4, Errors: 2, Skipped: 9
util.TestMiniClusterLoadSequential

#592 - Data-block-encoding-2011-12-23.patch - fails, but with a clear message
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32756 bytes for ChunkPool::allocate
# An error report file with more information is saved as:
# /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hs_err_pid20773.log
Tests run: 739, Failures: 3, Errors: 1, Skipped: 9

#591 - scannerMVCC1.txt 
Tests run: 780, Failures: 3, Errors: 1, Skipped: 9
master.TestDistributedLogSplitting

#589 - 5064.v12.patch, 2 threads
Tests run: 783, Failures: 3, Errors: 1, Skipped: 9
coprocessor.TestMasterCoprocessorExceptionWithRemove
hbase.TestRegionRebalancing
master.TestDistributedLogSplitting

#588 - 5064 4 threads
Tests run: 768, Failures: 3, Errors: 1, Skipped: 9
util.hbck.TestOfflineMetaRebuildBase
catalog.TestMetaReaderEditor
coprocessor.TestMasterCoprocessorExceptionWithRemove
replication.regionserver.TestReplicationSink
replication.TestMasterReplication

#587 - 5064 (7 processes, standard config)
replication.TestMasterReplication
master.TestMasterFailover
master.TestRollingRestart

#586  - 5064  (6 processes, min number of threads)
Tests run: 775, Failures: 3, Errors: 1, Skipped: 9
master.TestRestartCluster
regionserver.wal.TestLogRollAbort
client.TestMetaScanner
TestGlobalMemStoreSize
client.TestMultiParallel

#585   - 5064 (3 processes, min number of threads)
Tests run: 788, Failures: 4, Errors: 1, Skipped: 9

#583 - HBASE-4720.trunk.v2.patch
Tests run: 788, Failures: 3, Errors: 1, Skipped: 9
replication.TestMasterReplication

#582 - Delta-encoding.patch-2011-12-22_11_52_07.patch
unable to create new native thread
replication.TestReplication: 
Tests run: 2, Failures: 0, Errors: 1, Skipped: 0

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508596/5064.v7.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/597//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/597//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/597//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508734/5064.v13.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/608//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/608//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/608//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508750/5064.v14.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestMasterObserver
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/609//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/609//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/609//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508754/5064.v14.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/610//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/610//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/610//console

This message is automatically generated.

once again a java.io.FileNotFoundException: /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/../logs/userlogs/job_20111228130003142_0001/attempt_20111228130003142_0001_m_000001_2/log.index (No such file or directory)

Will have to understand this. 

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508763/5064.v15.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.TestReplication
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/611//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/611//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/611//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508763/5064.v15.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/612//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/612//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/612//console

This message is automatically generated.

Looks like NumberFormatException is the cause of at least some failures.

Test failure isn't always associated with NumberFormatException.
I ran tests with patch 15 and saw the following in TestTableMapReduce-output:
{code}
2011-12-28 09:28:40,839 DEBUG [pool-1-thread-1] client.HConnectionManager$HConnectionImplementation(1228): Cached location for mrtest,rrr,1325093287841.463ef8c4d900c4b3c9f1d2df476e1bd9. is sea-lab-1:36329
2011-12-28 09:28:40,840 DEBUG [pool-1-thread-1] client.HConnectionManager$HConnectionImplementation(1228): Cached location for mrtest,sss,1325093287841.d4448f0cc9806499135566cb47630427. is sea-lab-1:36329
2011-12-28 09:28:40,840 DEBUG [pool-1-thread-1] client.HConnectionManager$HConnectionImplementation(1228): Cached location for mrtest,ttt,1325093287841.1ca6fb61e8ce69ce8505cfd7b157008c. is sea-lab-1:36329
2011-12-28 09:28:40,840 DEBUG [pool-1-thread-1] client.HConnectionManager$HConnectionImplementation(1228): Cached location for mrtest,uuu,1325093287841.b74b52fb22bea8b1fd100e225943ab58. is sea-lab-1:36329
2011-12-28 09:28:40,841 DEBUG [pool-1-thread-1] client.HConnectionManager$HConnectionImplementation(1228): Cached location for mrtest,vvv,1325093287841.f50b26a0272f89c2123d80b8d13592b8. is sea-lab-1:36329
2011-12-28 09:28:40,841 INFO  [pool-1-thread-1] mapred.TableInputFormatBase(142): split: 1->sea-lab-1:mmm,
2011-12-28 09:28:41,948 DEBUG [Finalizer] client.HConnectionManager$HConnectionImplementation(1859): The connection to null was closed by the finalize method.
2011-12-28 09:28:56,283 WARN  [JVM Runner jvm_20111228092823016_0001_m_1001648490 spawned.] mapred.DefaultTaskController(137): Exit code from task is : 1
2011-12-28 09:28:56,284 WARN  [Thread-368] mapred.TaskRunner(270): attempt_20111228092823016_0001_m_000000_0 : Child Error
java.io.IOException: Task process exit with nonzero status of 1.
  at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:258)
2011-12-28 09:29:03,464 WARN  [JVM Runner jvm_20111228092823016_0001_m_1912611626 spawned.] mapred.DefaultTaskController(137): Exit code from task is : 1
2011-12-28 09:29:03,465 WARN  [Thread-390] mapred.TaskRunner(270): attempt_20111228092823016_0001_m_000000_0 : Child Error
java.io.IOException: Task process exit with nonzero status of 1.
  at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:258)
java.lang.Throwable: Child Error
  at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:271)
Caused by: java.io.IOException: Task process exit with nonzero status of 1.
  at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:258)

java.lang.Throwable: Child Error
  at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:271)
Caused by: java.io.IOException: Task process exit with nonzero status of 1.
  at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:258)

2011-12-28 09:29:10,565 WARN  [1318497351@qtp-99120402-1] mapred.TaskLogServlet(111): Failed to retrieve stdout log for task: attempt_20111228092823016_0001_m_000000_0
java.io.FileNotFoundException: /home/hduser/trunk/../logs/userlogs/job_20111228092823016_0001/attempt_20111228092823016_0001_m_000000_0/log.index (No such file or directory)
{code}

Yep, may be the NumberFormatException was hiding the FileNotFoundException before (it's possible as well to have both error simultaneously). I haven't tried v16 on the whole suite test locally, but it seems to work on my subset. Let's see.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508793/5064.v16.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/614//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/614//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/614//console

This message is automatically generated.

fail: java.io.FileNotFoundException: /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/target/test-data/238434d5-7c45-413f-ba99-1440a560e1f1/hadoop-log-dir/userlogs/job_20111228220208254_0001/attempt_20111228220208254_0001_m_000002_0/log.index (No such file or directory)

enough for today

@N:
You didn't use System.[get/set]Property() for "hadoop.log.dir"

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508839/5064.v17.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.io.hfile.TestLruBlockCache

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/622//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/622//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/622//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508842/5064.v18.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/623//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/623//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/623//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508844/5064.v18.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/624//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/624//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/624//console

This message is automatically generated.

Trying out patch v18 on Linux I got:
{code}
Tests in error:
  loadTest[0](org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel): test timed out after 120000 milliseconds
{code}
open files limit is 32768 and max user processes are unlimited.

@ted: The 3 last tests seems ok on hadoop-qa, even if I'am sure that we will discover some issues. A 4th test is in progress. I will do a 5th also. Anything meaningful in the logs for TestMiniClusterLoadParallel?

Note that the v18 patch is with 4 tests in //, I believe we will need to commit it with 2 or 3 to be sure that a 1 year old laptop can run the tests smoothly. I use 4 here to maximize // and minimize test time. We can set a parameter to the hadoop-qa build to use 4 or more if we want to...

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508854/5064.v19.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/625//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/625//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/625//console

This message is automatically generated.

I saw patch v19 coming and started to run test suite with it - I didn't keep the output from TestMiniClusterLoadParallel

w.r.t. parameter for the hadoop-qa build, we should set default value (of 2) for surefire.secondPartThreadCount if the parameter isn't set.


You want 2 process in // only for hadoop-qa? It seems that the machine never runs two builds in //, so we should maximize the number of process. That makes the build last ~35 minutes instead of 2 hours.


TestMiniClusterLoadParallel failed again for patch v19.
From its output:
{code}
2011-12-29 09:24:49,249 WARN  [HBaseReaderThread_7] zookeeper.RecoverableZooKeeper(159): Possibly transient ZooKeeper exception: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hbase
2011-12-29 09:24:49,249 INFO  [HBaseReaderThread_7] util.RetryCounter(53): The 1 times to retry  after sleeping 2000 ms
...
{code}

There're 3 failures so far:
{code}
Running org.apache.hadoop.hbase.client.TestAdmin
Tests run: 35, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 885.494 sec <<< FAILURE!
--
Running org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel
Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 192.578 sec <<< FAILURE!
--
Running org.apache.hadoop.hbase.regionserver.TestRpcMetrics
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 5.106 sec <<< FAILURE!
{code}

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508863/5064.v19.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestFromClientSide
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/629//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/629//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/629//console

This message is automatically generated.

From the last 5 execution, it seems we have NumberFormatException + some random failure that I would tend to attribute to the usual flakiness (I may be wrong :-)). The FileNotFound exception was not reproduced.

@ted: from the time taken by TestAdmin (twice the time on hadoop-qa, and very close to the test timeout of 900 seconds), I think that the machine is heavily loaded, or lacks some memory and swaps. That makes me think that we should default the // degree to 2 (and keep 4 on hadoop-qa).

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508924/5064.v20.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 16 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/640//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/640//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/640//console

This message is automatically generated.

the v20 is "ok for commit" imho".

There are two processes by default, and 4 on hadoop-qa. It possible to change the number of processes used by specifying -Dsurefire.secondPartThreadCount=WhatYouWant on mvn command line.  Using -Dsurefire.secondPartThreadCount=1 means no parallelization.


I got the following running test suite on Linux:
{code}
Failed tests:   testLogRollOnDatanodeDeath(org.apache.hadoop.hbase.regionserver.wal.TestLogRolling): LowReplication Roller should've been disabled
  testMultipleResubmits(org.apache.hadoop.hbase.master.TestSplitLogManager): expected:<2> but was:<3>

Tests run: 781, Failures: 2, Errors: 0, Skipped: 9
{code}
where:
{code}
open files                      (-n) 32768
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) 8192
cpu time               (seconds, -t) unlimited
max user processes              (-u) unlimited
{code}
I think we can give v20 a chance on Jenkins.
At the moment test suite reliability is more important than speed, IMHO.

Integrated to TRUNK.

Thanks for the hard work, N.

Integrated in HBase-TRUNK #2597 (See [https://builds.apache.org/job/HBase-TRUNK/2597/])
    HBASE-5064 utilize surefire tests parallelization (N Keywal)

tedyu : 
Files : 
* /hbase/trunk/dev-support/test-patch.sh
* /hbase/trunk/pom.xml
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTimeRangeMapRed.java
* /hbase/trunk/src/test/resources/hbase-site.xml


Reverted from TRUNK due to missing TestMetaReaderEditor in build 2597

I wasn't able to find out the test that caused surefire plugin to report timeout.

The exact same test already timeouted in trunk in
https://builds.apache.org/job/HBase-TRUNK/2588/testReport/
I don't think it's related to this patch.

On Sat, Dec 31, 2011 at 4:28 PM, Zhihong Yu (Commented) (JIRA) <



TestLogRolling hung in build 2588.

I don't see it hanging in build 2597.

Anyway we need to find out why TestMetaReaderEditor wasn't executed.

Integrated in HBase-TRUNK #2599 (See [https://builds.apache.org/job/HBase-TRUNK/2599/])
    HBASE-5064 revert - need to figure out which test caused surefire to report timeout

tedyu : 
Files : 
* /hbase/trunk/dev-support/test-patch.sh
* /hbase/trunk/pom.xml
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTimeRangeMapRed.java
* /hbase/trunk/src/test/resources/hbase-site.xml


bq. Anyway we need to find out why TestMetaReaderEditor wasn't executed.

Likely because it belongs to the too long list of flaky tests. A test should not fail randomly. Here is the list, from 2974 to 2598, with a timeouted TestMetaReaderEditor 
https://builds.apache.org/job/HBase-TRUNK/2597/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/HBase-TRUNK/2588/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/HBase-TRUNK/2585/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/HBase-TRUNK/2584/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/HBase-TRUNK/2582/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/HBase-TRUNK/2577/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/HBase-TRUNK/2574/testReport/org.apache.hadoop.hbase.catalog/

It happens on hadoop-qa as well:
https://builds.apache.org/job/PreCommit-HBASE-Build/640/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/PreCommit-HBASE-Build/638/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/PreCommit-HBASE-Build/630/testReport/org.apache.hadoop.hbase.catalog/
https://builds.apache.org/job/PreCommit-HBASE-Build/622/testReport/org.apache.hadoop.hbase.catalog/

That's around 25% of the time for trunk. I can't get back before 2574. I will spend some time on it to see if there is anything simple  to do(you never know). If I find something I will create a separate jira.




Thanks for the digging, N.

I doubt that build 2588 would timeout on TestMetaReaderEditor which didn't appear in console log.
According to your finding, surefire version 2.11-TRUNK-HBASE-2 may also (mysteriously) skip test.

HBase TRUNK build has succeeded twice in a roll.
Let me apply your patch.

If we don't get a successful build after two attempts, I will roll back again.

Integrated to TRUNK and launched build 2603.

Integrated in HBase-TRUNK #2603 (See [https://builds.apache.org/job/HBase-TRUNK/2603/])
    HBASE-5064 utilize surefire tests parallelization, second attempt

tedyu : 
Files : 
* /hbase/trunk/dev-support/test-patch.sh
* /hbase/trunk/pom.xml
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTimeRangeMapRed.java
* /hbase/trunk/src/test/resources/hbase-site.xml


I found some issues in TestMetaReaderEditor, explaining at least why it timeouts instead of failing (I don't know what it fails sometimes, still looking).

For 2588, when the process timeouts (i.e. forkedProcessTimeoutInSeconds is reached), there is no entry in the jenkins report nor in the console. The only way to find out is that the test is missing, and you can see that TestMetaReaderEditor is actually missing in the list...

TestMetaReaderEditor is missing in build 2604.

I launched build 2606 which contains patch for HBASE-5114

Let's see what happens.

Integrated in HBase-TRUNK-security #58 (See [https://builds.apache.org/job/HBase-TRUNK-security/58/])
    HBASE-5064 utilize surefire tests parallelization, second attempt

tedyu : 
Files : 
* /hbase/trunk/dev-support/test-patch.sh
* /hbase/trunk/pom.xml
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTimeRangeMapRed.java
* /hbase/trunk/src/test/resources/hbase-site.xml


As https://builds.apache.org/job/PreCommit-HBASE-Build/647/console showed, 4 parallel processes seem to run well.
Going to try addendum on TRUNK.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509027/5064.addendum
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.regionserver.wal.TestHLog
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/648//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/648//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/648//console

This message is automatically generated.

Integrated in HBase-TRUNK #2609 (See [https://builds.apache.org/job/HBase-TRUNK/2609/])
    HBASE-5064 Addendum increases number of parallel processes to 4

tedyu : 
Files : 
* /hbase/trunk/pom.xml


Integrated in HBase-TRUNK-security #61 (See [https://builds.apache.org/job/HBase-TRUNK-security/61/])
    HBASE-5064 Addendum increases number of parallel processes to 4

tedyu : 
Files : 
* /hbase/trunk/pom.xml


Integrated in HBase-0.94-security #20 (See [https://builds.apache.org/job/HBase-0.94-security/20/])
    HBASE-5861 Hadoop 23 compile broken due to tests introduced in HBASE-5064 (Revision 1330071)

     Result = SUCCESS
jmhsieh : 
Files : 
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java


Integrated in HBase-0.94 #146 (See [https://builds.apache.org/job/HBase-0.94/146/])
    HBASE-5861 Hadoop 23 compile broken due to tests introduced in HBASE-5064 (Revision 1330071)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java


Integrated in HBase-TRUNK #2809 (See [https://builds.apache.org/job/HBase-TRUNK/2809/])
    HBASE-5861 Hadoop 23 compile broken due to tests introduced in HBASE-5064 (Revision 1330072)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java


Integrated in HBase-TRUNK-security #183 (See [https://builds.apache.org/job/HBase-TRUNK-security/183/])
    HBASE-5861 Hadoop 23 compile broken due to tests introduced in HBASE-5064 (Revision 1330072)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java


