\cc [~moon] [~jongyoul]

[~zjffdu] Good start. I suggest we divide classes which is used between zeppelin-server side and zeppelin interpreter. At the first time, zeppelin interpreter is launched and run in a same process of zeppelin-server, but nowadays, they become separate process but are still sharing those classes to run the interpreter and manage interpreters inside zeppelin-server. It makes us hard to refactor theses classes as some functions are used only in interpreters but server should take care while managing interpreters. How do you think of it?

Thanks [~zjffdu] for sharing design doc. Generally agrees on idea!

GitHub user zjffdu opened a pull request:

    https://github.com/apache/zeppelin/pull/2422

    [WIP] [ZEPPELIN-2627] Interpreter refactor

    ### What is this PR for?
    A few sentences describing the overall goals of the pull request's commits.
    First time? Check out the contributing guide - https://zeppelin.apache.org/contribution/contributions.html
    
    
    ### What type of PR is it?
    [Bug Fix | Improvement | Feature | Documentation | Hot Fix | Refactoring]
    
    ### Todos
    * [ ] - Task
    
    ### What is the Jira issue?
    * Open an issue on Jira https://issues.apache.org/jira/browse/ZEPPELIN/
    * Put link here, and add [ZEPPELIN-*Jira number*] in PR title, eg. [ZEPPELIN-533]
    
    ### How should this be tested?
    Outline the steps to test the PR here.
    
    ### Screenshots (if appropriate)
    
    ### Questions:
    * Does the licenses files need update?
    * Is there breaking changes for older versions?
    * Does this needs documentation?


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/zjffdu/zeppelin interpreter_refactor

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/2422.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2422
    
----
commit 8ee3f45dffa7feff4b95f0ac0cdf6ac3fc69f61b
Author: Jeff Zhang <zjffdu@apache.org>
Date:   2017-05-23T07:52:15Z

    save

commit 2ca2188cd157ec509b5b982ffeaaae2d3f954d07
Author: Jeff Zhang <zjffdu@apache.org>
Date:   2017-06-18T05:52:26Z

    fix Job race

----


Github user jongyoul commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    Wow ~ It changes pretty big including some code styles. Before reviewing it, How about reverting code style? It's not related to feature itself, then we can fix the style with minor pr. And can you describe what is the purpose of this PR? Which logic do you want to refactor? this kind of description will be help to review it. I glanced at it few minutes, and it seems to relocate some classes and introduce remoteFunction concept. Can you explain them more?


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    @jongyoul Thanks for the quick review. I didn't intended to make such large change at the beginning, but found many things are coupled together that I have to make such large change. Several suggestions for you how to review and read it. 
    
    * I didn't intended to make the code style change, this is due to I move some files in intellij and intellij automatically fix the code style issue. You can just ignore these code style changes
    * I move the interpreter package from `zeppelin-zengine` to `zeppelin-interpreter`, this is needed for this refactoring.
    * The overall change is the same as I described in the design doc. I would suggest you to read the unit test first. These unit test is very readable and easy to understand what the code is doing now.  `InterpreterFactoryTest`, `InterpreterGroupTest`, `InterpreterSettingTest`, `InterpreterSettingManagerTest`,  `RemoteInterpreterTest`, 
    * The RemoteFunction I introduced is for reducing code duplicates when we use RPC.
    * The changes in `Job.java` and `RemoteScheduler` is for fixing the race issue bug. This bug cause the flaky test we see often in ZeppelinSparkClusterTest.pySparkTest
    



Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    @Leemoonsoo @jongyoul @prabhjyotsingh @felixcheung Could you help review that ? 
    Here's some suggestion for you how to review it since it is a very large PR
    
    * The overall change is the same as I described in the design doc. I would suggest you to read the unit test first. These unit test is very readable and easy to understand what the code is doing now. InterpreterFactoryTest, InterpreterGroupTest, InterpreterSettingTest, InterpreterSettingManagerTest, RemoteInterpreterTest.
    * Remove the reference counting logic. Now I will kill the interpreter process as long as all the sessions in the same interpreter group is closed. (I plan to add another kind of policy for the interpreter process lifecycle control, ZEPPELIN-2197)
    * The RemoteFunction I introduced is for reducing code duplicates when we use RPC.
    * The changes in Job.java and RemoteScheduler is for fixing the race issue bug. This bug cause the flaky test we see often in ZeppelinSparkClusterTest.pySparkTest


Github user prabhjyotsingh commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    Tried this on my local cluster, tested it with simultaneously with multiple users. Looks good. Great improvement.


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    Thanks @prabhjyotsingh for testing this PR. 


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    Thanks @herval for the review. If you have time, you can also check the unit test which is much more readable and will easy for you to get what I done in this PR. (InterpreterFactoryTest, InterpreterGroupTest, InterpreterSettingTest, InterpreterSettingManagerTest, RemoteInterpreterTest)
    Thanks again for your kind review.



Github user zjffdu closed the pull request at:

    https://github.com/apache/zeppelin/pull/2422


GitHub user zjffdu reopened a pull request:

    https://github.com/apache/zeppelin/pull/2422

    [WIP] [ZEPPELIN-2627] Interpreter refactor

    ### What is this PR for?
    
    I didn't intended to make such large change at the beginning, but found many things are coupled together that I have to make such large change. Several suggestions for you how to review and read it.
    
    * I move the interpreter package from zeppelin-zengine to zeppelin-interpreter, this is needed for this refactoring.
    * The overall change is the same as I described in the design doc. I would suggest you to read the unit test first. These unit test is very readable and easy to understand what the code is doing now. `InterpreterFactoryTest`, `InterpreterGroupTest`, `InterpreterSettingTest`, `InterpreterSettingManagerTest`, `RemoteInterpreterTest`.
    * Remove the referent counting logic. Now I will kill the interpreter process as long as all the sessions in the same interpreter group is closed. (I plan to add another kind of policy for the interpreter process lifecycle control, ZEPPELIN-2197)
    * The `RemoteFunction` I introduced is for reducing code duplicates when we use RPC.
    * The changes in Job.java and RemoteScheduler is for fixing the race issue bug. This bug cause the flaky test we see often in `ZeppelinSparkClusterTest.pySparkTest`
    
    ### What type of PR is it?
    [Bug Fix | Refactoring]
    
    ### Todos
    * [ ] - Task
    
    ### What is the Jira issue?
    * https://issues.apache.org/jira/browse/ZEPPELIN-2627
    
    ### How should this be tested?
    Unit test is added
    
    ### Screenshots (if appropriate)
    
    ### Questions:
    * Does the licenses files need update? No
    * Is there breaking changes for older versions? No
    * Does this needs documentation? No


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/zjffdu/zeppelin interpreter_refactor

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/2422.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2422
    
----
commit ca60c5f3b33420ae48f2128daa4f4492301f083b
Author: Jeff Zhang <zjffdu@apache.org>
Date:   2017-05-23T07:52:15Z

    [ZEPPELIN-2627] Interpreter Component Refactoring

----


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    @Leemoonsoo @jongyoul I will commit if no more comments so that I can continue the other work. 


Github user asfgit closed the pull request at:

    https://github.com/apache/zeppelin/pull/2422


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2422
  
    Sorry, I found it conflicts with other PRs, will revert it now. 


GitHub user zjffdu opened a pull request:

    https://github.com/apache/zeppelin/pull/2553

    Revert "[ZEPPELIN-2627] Interpreter refactor"

    This reverts commit 8d4902e717ba2932ddb0f7110f2a669811f5d1af.
    
    ### What is this PR for?
    
    Just revert ZEPPELIN-2627
    
    
    ### What type of PR is it?
    [Refactoring]
    
    ### Todos
    * [ ] - Task
    
    ### What is the Jira issue?
    https://issues.apache.org/jira/browse/ZEPPELIN-2627
    
    ### Questions:
    * Does the licenses files need update? No
    * Is there breaking changes for older versions? No
    * Does this needs documentation? No


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/zjffdu/zeppelin Revert_2627

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/2553.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2553
    
----
commit 222d957b80fad0e0d9e998d739fce620a8021913
Author: Jeff Zhang <zjffdu@apache.org>
Date:   2017-08-28T05:51:57Z

    Revert "[ZEPPELIN-2627] Interpreter refactor"
    
    This reverts commit 8d4902e717ba2932ddb0f7110f2a669811f5d1af.

----


Github user asfgit closed the pull request at:

    https://github.com/apache/zeppelin/pull/2553


GitHub user zjffdu opened a pull request:

    https://github.com/apache/zeppelin/pull/2554

    [ZEPPELIN-2627] Interpreter Component Refactoring

    What is this PR for?
    
    I didn't intended to make such large change at the beginning, but found many things are coupled together that I have to make such large change. Several suggestions for you how to review and read it.
    
    I move the interpreter package from zeppelin-zengine to zeppelin-interpreter, this is needed for this refactoring.
    The overall change is the same as I described in the design doc. I would suggest you to read the unit test first. These unit test is very readable and easy to understand what the code is doing now. InterpreterFactoryTest, InterpreterGroupTest, InterpreterSettingTest, InterpreterSettingManagerTest, RemoteInterpreterTest.
    Remove the referent counting logic. Now I will kill the interpreter process as long as all the sessions in the same interpreter group is closed. (I plan to add another kind of policy for the interpreter process lifecycle control, ZEPPELIN-2197)
    The RemoteFunction I introduced is for reducing code duplicates when we use RPC.
    The changes in Job.java and RemoteScheduler is for fixing the race issue bug. This bug cause the flaky test we see often in ZeppelinSparkClusterTest.pySparkTest
    What type of PR is it?
    
    [Bug Fix | Refactoring]
    
    Todos
    
     - Task
    What is the Jira issue?
    
    https://issues.apache.org/jira/browse/ZEPPELIN-2627
    How should this be tested?
    
    Unit test is added
    
    Screenshots (if appropriate)
    
    Questions:
    
    Does the licenses files need update? No
    Is there breaking changes for older versions? No
    Does this needs documentation? No

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/zjffdu/zeppelin ZEPPELIN-2627-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/2554.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2554
    
----
commit 13fe8d04a8a33e5df761439141a8479b09480a9a
Author: Jeff Zhang <zjffdu@apache.org>
Date:   2017-05-23T07:52:15Z

    [ZEPPELIN-2627] Interpreter Component Refactoring

----


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    I can see some test cases are removed or commented out. for example zeppelin-zengine/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterTest.java and some other places.
    
    Is it intended or work in progress?


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    @Leemoonsoo I add more comments for the test case. Some testcase is not needed any more


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    @Leemoonsoo Do you mind if I commit it first to continue other works ?


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    Let me test this branch little more with some edge cases.


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    Thanks @zjffdu for great work.
    LGTM


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    Thanks @Leemoonsoo for the review, I will merge it if no more comments. And will do the change in the following PR as there's still remaining work for the refactoring. 


Github user asfgit closed the pull request at:

    https://github.com/apache/zeppelin/pull/2554


Github user prabhjyotsingh commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    @zjffdu  Just found out an issue which is a side effect of this PR, now I cannot delete an interpreter. 
    By that what I mean is now say if I delete angular interpreter from the interpreter setting page, and restart zeppelin it gets recreated.


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    hmm, I see. Because every time I will merge interpreter-setting.json into interpreter-setting.json. Mind to create a ticket ? I will fix it. 


Github user prabhjyotsingh commented on the issue:

    https://github.com/apache/zeppelin/pull/2554
  
    Sure here you go [ZEPPELIN-3029](https://issues.apache.org/jira/browse/ZEPPELIN-3029)


