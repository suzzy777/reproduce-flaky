jstack file

Found one Java-level deadlock:
=============================
"qtp1262542360-2050":
  waiting to lock monitor 0x00007f698c005be8 (object 0x00000000c06ff078, a java.util.HashMap),
  which is held by "DefaultQuartzScheduler_Worker-1"
"DefaultQuartzScheduler_Worker-1":
  waiting to lock monitor 0x00007f69e4006218 (object 0x00000000c0352440, a java.util.LinkedList),
  which is held by "DefaultQuartzScheduler_Worker-3"
"DefaultQuartzScheduler_Worker-3":
  waiting to lock monitor 0x00007f698c005be8 (object 0x00000000c06ff078, a java.util.HashMap),
  which is held by "DefaultQuartzScheduler_Worker-1"

Java stack information for the threads listed above:
===================================================
"qtp1262542360-2050":
	at org.apache.zeppelin.interpreter.InterpreterFactory.getNoteInterpreterSettingBinding(InterpreterFactory.java:724)
	- waiting to lock <0x00000000c06ff078> (a java.util.HashMap)
	at org.apache.zeppelin.notebook.NoteInterpreterLoader.getInterpreterSettings(NoteInterpreterLoader.java:62)
	at org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects(NotebookServer.java:1190)
	at org.apache.zeppelin.socket.NotebookServer.sendNote(NotebookServer.java:443)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:149)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:56)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:128)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:122)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:161)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:309)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:214)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:220)
	at org.eclipse.jetty.websocket.common.Parser.parse(Parser.java:258)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.readParse(AbstractWebSocketConnection.java:632)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:480)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:745)
"DefaultQuartzScheduler_Worker-1":
	at org.apache.zeppelin.notebook.Note.getParagraphs(Note.java:463)
	- waiting to lock <0x00000000c0352440> (a java.util.LinkedList)
	at org.apache.zeppelin.notebook.Paragraph.getInterpreterContext(Paragraph.java:346)
	at org.apache.zeppelin.notebook.Paragraph.jobAbort(Paragraph.java:330)
	at org.apache.zeppelin.scheduler.Job.abort(Job.java:239)
	at org.apache.zeppelin.interpreter.InterpreterFactory.stopJobAllInterpreter(InterpreterFactory.java:787)
	at org.apache.zeppelin.interpreter.InterpreterFactory.restart(InterpreterFactory.java:770)
	- locked <0x00000000c06ff078> (a java.util.HashMap)
	at org.apache.zeppelin.notebook.Notebook$CronJob.execute(Notebook.java:662)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:202)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
	- locked <0x00000000c03ca4e8> (a java.lang.Object)
"DefaultQuartzScheduler_Worker-3":
	at org.apache.zeppelin.interpreter.InterpreterFactory.getNoteInterpreterSettingBinding(InterpreterFactory.java:724)
	- waiting to lock <0x00000000c06ff078> (a java.util.HashMap)
	at org.apache.zeppelin.notebook.NoteInterpreterLoader.getInterpreterSettings(NoteInterpreterLoader.java:62)
	at org.apache.zeppelin.notebook.NoteInterpreterLoader.get(NoteInterpreterLoader.java:114)
	at org.apache.zeppelin.notebook.Note.runAll(Note.java:405)
	- locked <0x00000000c0352440> (a java.util.LinkedList)
	at org.apache.zeppelin.notebook.Notebook$CronJob.execute(Notebook.java:641)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:202)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
	- locked <0x00000000c0326210> (a java.lang.Object)

Found 1 deadlock.



GitHub user OopsOutOfMemory opened a pull request:

    https://github.com/apache/zeppelin/pull/1888

    [ZEPPELIN-1941] Fix deadlock in cron job

    ### What is this PR for?
    There is a deadlock in concurrent cron job execution with release resource option.
    Scenario:
    Two notebook run with cron job that release resource after job finished.
    In Notebook.CronJob.execute() method:
    T1. note.runAll(); // locked paragraphs(lock) and wait to interpreterSettings(lock)
    T2. notebook.getInterpreterFactory().restart() //locked(interpreterSettings) and wait for paragraphs(lock) during jobAbort.
    This will trigger a deadlock that cause zeppelin hang.
    
    ### What type of PR is it?
    [Bug Fix ]
    
    ### Todos
    * [ ] - Fix this by remove locking interpreterSettings in restart method
    
    ### What is the Jira issue?
    * Open an issue on Jira https://issues.apache.org/jira/browse/ZEPPELIN/
    * Put link here, and add [ZEPPELIN-*Jira number*] in PR title, eg. [ZEPPELIN-533]
    
    ### How should this be tested?
    Outline the steps to test the PR here.
    
    ### Screenshots (if appropriate)
    
    ### Questions:
    * Does the licenses files need update?
    * Is there breaking changes for older versions?
    * Does this needs documentation?


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/OopsOutOfMemory/zeppelin cronjob_dl

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/1888.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1888
    
----
commit 81de4055498bce9da44e381930a917c5f2565123
Author: victor.sheng <victorsheng@qiniu.com>
Date:   2017-01-12T00:15:25Z

    fix deadlock in cron job

----


GitHub user OopsOutOfMemory opened a pull request:

    https://github.com/apache/zeppelin/pull/1891

    [ZEPPELIN-1941] Fix cron job with release resource option dead lock

    ### What is this PR for?
    There is a deadlock in concurrent cron job execution with release resource option.
    `Scenario`:
    Two notebook run with cron job that release resource after job finished.
    
    In `Notebook.CronJob.execute()` method:
    
    `T1. note.runAll(); // locked paragraphs(lock) and wait to interpreterSettings(lock)`
    
    `T2. notebook.getInterpreterFactory().restart() //locked(interpreterSettings) and wait for paragraphs(lock) during jobAbort.`
    
    This will trigger a deadlock that cause zeppelin hang.
    
    ### What type of PR is it?
    [Bug Fix ]
    
    ### Todos
    * [x] - Fix this by avoid acquire lock in job abort method.
    
    ### What is the Jira issue?
    * Open an issue on Jira https://issues.apache.org/jira/browse/ZEPPELIN/
    * Put link here, and add [ZEPPELIN-*Jira number*] in PR title, eg. [ZEPPELIN-533]
    
    ### How should this be tested?
    Outline the steps to test the PR here.
    
    ### Screenshots (if appropriate)
    
    ### Questions:
    * Does the licenses files need update?
    * Is there breaking changes for older versions?
    * Does this needs documentation?


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/OopsOutOfMemory/zeppelin fix_dead_lock_cronjob

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/1891.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1891
    
----
commit 44e604323e09f8b2854b4031e6c1125015d66914
Author: victor.sheng <victorsheng@qiniu.com>
Date:   2017-01-12T06:54:26Z

    fix cron job with release resource option dead lock

----


Github user jongyoul commented on the issue:

    https://github.com/apache/zeppelin/pull/1891
  
    Thanks for the contribution. Can you make a test case for it?


Github user OopsOutOfMemory commented on the issue:

    https://github.com/apache/zeppelin/pull/1891
  
    we already a test case for this https://github.com/apache/zeppelin/blob/9e75f5b50ac1573d423fa937b801df77d6a36f3c/zeppelin-zengine/src/test/java/org/apache/zeppelin/notebook/NotebookTest.java#L734


Github user OopsOutOfMemory commented on the issue:

    https://github.com/apache/zeppelin/pull/1891
  
    It seems CI has a network issue
    ```
    [ERROR] Error requesting archive.
    [ERROR] Status: 503
    [ERROR] Request options: {
    [ERROR]   "uri": "https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2",
    [ERROR]   "encoding": null,
    [ERROR]   "followRedirect": true,
    [ERROR]   "headers": {
    [ERROR]     "User-Agent": "yarn/0.18.1 npm/? node/v6.9.1 linux x64"
    [ERROR]   },
    [ERROR]   "strictSSL": true
    [ERROR] }
    [ERROR] Response headers: {
    [ERROR]   "cache-control": "no-cache",
    [ERROR]   "connection": "close",
    [ERROR]   "content-type": "text/html"
    [ERROR] }
    [ERROR] Make sure your network and proxy settings are correct.
    ```


Github user jongyoul commented on the issue:

    https://github.com/apache/zeppelin/pull/1891
  
    Does this PR resolve flaky test that current master encounters?


Github user OopsOutOfMemory commented on the issue:

    https://github.com/apache/zeppelin/pull/1891
  
    I'm not sure, this PR is intent to fix the dead lock issue.


Github user jongyoul commented on the issue:

    https://github.com/apache/zeppelin/pull/1891
  
    LGTM, I saw your description and it makes sense to me.


Github user asfgit closed the pull request at:

    https://github.com/apache/zeppelin/pull/1891


Issue resolved by pull request 1891
[https://github.com/apache/zeppelin/pull/1891]

