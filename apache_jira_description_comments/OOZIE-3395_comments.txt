[~asasvari] actually we're using [FindSecBugs and Spotbugs|https://github.com/apache/oozie/blob/master/pom.xml#L1829-L1866] behind the curtain. Might be interesting checking whether there is a valid migration path between the FindBugs and Spotbugs Maven plugins, indeed.

We should also update [http://oozie.apache.org/Tools.html] 

PreCommit-OOZIE-Build started


Using Spotbugs 3.1.11 without Findbugs, shows more bugs than before the patch. However the difference is not so big. Below you can find the difference in the number of reported bugs:

 
||Module||Reported bugs with Spotbugs 3.1.1 via Findbugs||Reported bugs with Spotbugs 3.1.11 ||
|Oozie Client| 73|78|
|Oozie Sharelib Oozie| 40| 0|
|Oozie Sharelib HCatalog| 0 | 1|
|Oozie Core| 781| 792|
| Oozie Share Lib Pig| 4| 6 |
|Oozie Tools| 110| 110|

 

I will also update the Tools.html page separately, since that is in a different repository.

The bug number difference looks really good to me.

[~kmarton] Can you please upload the patch to the ReviewBoard?

Sure [~asalamon74].

[https://reviews.apache.org/r/69988/]

 


Testing JIRA OOZIE-3395

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:red}-1{color} the patch contains 6 line(s) longer than 132 characters
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3135
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/995/



PreCommit contains the following error message and the bugs session is missing from the summary.
{noformat}
bash: bin/test-patch-11-findbugs-diff: No such file or directory{noformat}

[~kmarton] Is it just temporary because of the findbugs - spotbugs switch?


PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3395

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:red}-1{color} the patch contains 6 line(s) longer than 132 characters
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3135
.    {color:orange}Tests failed at first run:{color}
TestPurgeXCommand#testPurgeableBundleUnpurgeableCoordinatorUnpurgeableWorkflow
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/1015/



[~asalamon74], 


{code:java}
20:34:59 bash: bin/test-patch-11-findbugs-diff: No such file or directory{code}
This file was renamed by the patch, this is why is missing and the report is not generated. The file structure is checked before the patch, and the filenames are taken from this phase. For the testing purpose I can rename it to its original name, to see the generated report. What do you think [~asalamon74]?

The long lines are from the shell script and I would not really split them, because splitting those will don't improve the readability.

[~kmarton] If this file rename only affects this Jira then the fact that you locally executed the script and got very similar numbers to the old findbugs are good enough for me. Thanks for checking this.

I've also checked the long lines and I agree splitting lines in a script and adding lots of \ characters does not improve the readability. Not to mention the fact, that these are no new long lines, they were already in the code.

I'll leave a few reviewboard comments soon.

Thanks [~asalamon74] for the review. I have fixed your new findings as well.

Locally it produced the same output as before (intentionally I have introduced some new bugs):
{code}
-1 There are [2] new bugs found below threshold in total that must be fixed.
    +1 There are no new bugs found in [client].
    +1 There are no new bugs found in [core].
    +1 There are no new bugs found in [docs].
    +1 There are no new bugs found in [examples].
    +1 There are no new bugs found in [fluent-job/fluent-job-api].
    +1 There are no new bugs found in [server].
    +1 There are no new bugs found in [sharelib/distcp].
    +1 There are no new bugs found in [sharelib/git].
    +1 There are no new bugs found in [sharelib/hcatalog].
    +1 There are no new bugs found in [sharelib/hive].
    +1 There are no new bugs found in [sharelib/hive2].
    +1 There are no new bugs found in [sharelib/oozie].
    +1 There are no new bugs found in [sharelib/pig].
    -1 There are [2] new bugs found below threshold in [sharelib/spark] that must be fixed.
    You can find the SpotBugs diff here (look for the red and orange ones): sharelib/spark/findbugs-new.html
    The most important SpotBugs errors are:
    At SparkOptionsSplitter.java:[line 141]: The regular expression "([a-zA-Z0-9.]+=)?".*".*"" is vulnerable to a denial of service attack (ReDOS)
    At SparkOptionsSplitter.java:[line 140]: The regular expression "([a-zA-Z0-9.]+=)?".+"" is vulnerable to a denial of service attack (ReDOS)
    +1 There are no new bugs found in [sharelib/sqoop].
    +1 There are no new bugs found in [sharelib/streaming].
    +1 There are no new bugs found in [tools].
    +1 There are no new bugs found in [webapp].
{code}
 

PreCommit-OOZIE-Build started


Thanks for the fixes [~kmarton]

+1 (pending Jenkins)


Testing JIRA OOZIE-3395

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:red}-1{color} the patch contains 6 line(s) longer than 132 characters
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3135
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/1017/



Thanks for the contribution, committed to master.

This is the first precommit using spotbugs: [https://builds.apache.org/job/PreCommit-OOZIE-Build/1018/consoleFull]

I'm afraid there is an error in the script:

{noformat}bin/test-patch-11-spotbugs-diff: line 201: [: : integer expression expected
{noformat}

[~kmarton] Can you please check it and create an amend patch if necessary.


Thank you [~asalamon74] for pointing this out!

I have uploaded an amend patch with the fix.

I have mixed feelings with the way we download and check the findbugs jar.
 Now we have in our repository the [md5 hash of the jar|https://github.com/apache/oozie/blob/master/bin/findbugs-diff-0.1.0-all.jar.md5] , we calculate the hash of the downloaded jar and we compare with this value.

I am wondering if anybody has any other nicer idea to solve this. [~asalamon74]?

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3395

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
.    {color:orange}WARNING{color}: the current HEAD has 100 Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/git].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [webapp].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [core].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3136
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}. There is at least one warning, please check{color}

The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/1021/



[findbugs-diff|https://github.com/AndersDJohnson/findbugs-diff] is not a very popular project so cannot assume that we will find it in a central maven repository. We should either include the jar, or download it before we the do the diff. In the latter case we need to check it of course.

One reason ( mentioned in OOZIE-1986 ) of not including the jar into the Oozie project was a licensing issue, this is not longer relevant. I understand that it's still not a popular idea. To be honest, storing the md5, hardwiring the jar address and downloading the jar again and again does not look much better to me.

Maybe we should try to eliminate the findbugs-diff tool. As mention here: [https://github.com/spotbugs/discuss/issues/55] spotbugs can create text outputs which are much easier to diff. Right now we need a special tool because we compare XML reports ( according to OOZIE-1793 that was the only option). This should addressed in a separate Jira of course.

+1 for replacing the diff tool. I will open a Jira for searching for alternatives.

Thanks for the fix [~kmarton] committed the amend patch to master.

Closing issue; Oozie 5.2.0 is released

