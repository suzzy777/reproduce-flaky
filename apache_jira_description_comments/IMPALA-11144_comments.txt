Hi [~csringhofer], I assigned the JIRA to you since you reviewed the patch by [~noemi] and thus may have more insight into the issue. Please re-assign the issue as you see appropriate. Thanks!



According to [~csringhofer]'s analysis, the estimate of cardinality is unlikely to be caused by the BE-only change IMPALA-10961, and the estimate is not deterministic.

According to [https://github.com/apache/impala/blob/master/fe/src/test/java/org/apache/impala/planner/CardinalityTest.java#L42], we have {{CARDINALITY_TOLERANCE}} that is used to tune how tolerant we are with respect to a given cardinality estimate. The value is currently set to 0.05. Maybe we could consider increasing this a bit, e.g., to 0.07.

I think that the test broke because 3-way quicksort (IMPALA-10961) is more stable than the old implementation, which leads to better encoding/compression of functional_parquet.alltypes, decreasing its size and thus the estimation.

Sort is relevant to table creation because we write the table with dynamic partitioning:
https://github.com/apache/impala/blob/fe04c500d7c32606c9024259a972f6843fab678e/testdata/datasets/functional/functional_schema_template.sql#L50

The size became more variable probably because the choice between 2-way and 3-partitioning is based on finding equals in the 3 pivots.

-I think that the test relies too much on the exact size and is prone to be flaky, so we should set a range of accepted estimations instead.-

The expected value could be lowered or the tolerance range could be increased to fix the flakyness.

Thanks [~csringhofer] for the detailed analysis and [~noemi] for the fix!

Commit f0d4afaff1e8ed93834f5198046d137bcd03a843 in impala's branch refs/heads/master from noemi
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=f0d4afa ]

IMPALA-11144: fix testAggregationNodeGroupByCardinalityCapping

IMPALA-10961 can decrease the size of the files in
functional_parquet.alltypes, which led to breaking the test that
rely on the file size.
Lowered the expected value, so it fits in the current tolerance range
of 0,05.
See the jira for more detailed analysis

Change-Id: I7956db444549c02fab3e56cb8bd281535f679776
Reviewed-on: http://gerrit.cloudera.org:8080/18264
Reviewed-by: Csaba Ringhofer <csringhofer@cloudera.com>
Reviewed-by: Fang-Yu Rao <fangyu.rao@cloudera.com>
Tested-by: Csaba Ringhofer <csringhofer@cloudera.com>


