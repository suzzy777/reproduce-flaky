Our workaround thus far have been to manually sideline the corrupted hfiles -- check them using 'hbase hfile' and if they aren't read properly, we set them aside.  This quarantining behavior is essentially the same but happens automatically.

So the quarantine should happen automatically, or is this an additional mode/flag for hbck? 

I've done ports to 0.92/0.94/trunk where it does it automatically and not part of hbck.  Its currently testing on all three branches locally, will post if they come back cleanly.

Maybe we should only do it automatically when a flag is enabled? Alternately, we could adds some metric or scary warning on the ui when this happens, but I'll leave for a follow on jira.



Automatically quarantining the files seems like a dangerous default. Quarantining the region in some way such that all calls to it would fail until the administrator fixes it seems like a better approach. My reasoning is that quarantining an HFile is "silent" data loss (or inconsistency). Data may reappear or revert to an old version. We can't accept that without a user confirming it.

I don't think this is related to HDFS-3731 -- the truncation we saw was not on a block boundary, and that bug would only cause the disappearance of an entire block.

I basically agree with the dangerous default argument -- which is why I'm suggesting a mode for it.  (Similar to upgrade mode in a hdfs nn).

Another alternate with what Andy suggested -- making it part of some hbck mode where all hfiles are checked.  Here is it is definitely admin initiated.

Another suggestion was to recover data from truncated HFiles -- which is something to consider (but likely won't come until we have an directed need for it).

WRT HDFS-3731 - I've done a few combos of running job that loads data, kill hbase/hdfs in safe and unsafe ways, and then upgrade but still haven't been able to duplicate same HFile error.  In these scenarios, I've had both log files and hfiles with block-being-written state problems.    I believe Jimmy has dealt with the hlog problems with a dist log splitting fix.  



I also think it's a bit dangerous to do without admin involvement. As a hbck option this would be great.

Related issue having to do with corrupted HFiles

The error has shown up here also in a unit test.

http://mail-archives.apache.org/mod_mbox/hbase-dev/201205.mbox/%3CCALte62z-+QGLGD4rr3tXVbHwTWK7aOrvARrsLtbQfbDMDS_59A@mail.gmail.com%3E

Can you loop that test until it fails, perhaps? I think getting full logs from a run is necessary to determine if it's an HDFS or HBase bug.

I looped the test on 0.92.2 repo and after about 1600 iterations it has not failed. (TestLocaHBaseCluster).


[~jmhsieh] Do you think it reasonable and worth it to add a HFile corruption detect-and-quarantine flag and mode to hbck?

Looks like if we go with the hbck approach instead of the autofix approach, we'll should to add yet another state for a region which I'll call something like QUARANTINED.  Currently, corrupted HFiles cause a region to go into RS_ZK_REGION_FAILED_OPEN, which eventually gets transitioned to M_ZK_REGION_OFFLINE which then transitions to RS_ZK_REGION_OPENING triggering another attempt to open the region (which fails and ...).  Ideally when we have a none-recoverable failure like corrupted hfiles, we'd transition to QUARANTINED instead of FAILED_OPEN and stay there until an admin fixes the problem.


[~apurtell] I do, I built it yesterday and am polishing up the test currently, and looking for more corner cases.  It is a separate phase (it ignores metadata) and is kind of analogous to "checking every block" on a file system.  The patch is about 2x the size of the previous "just fix" version.  

bq. I do, I built it yesterday and am polishing up the test currently, and looking for more corner cases. It is a separate phase (it ignores metadata) and is kind of analogous to "checking every block" on a file system

Sounds great! Thanks Jon.

bq. Ideally when we have a none-recoverable failure like corrupted hfiles, we'd transition to QUARANTINED instead of FAILED_OPEN and stay there until an admin fixes the problem.

+1 on this too.

Version for trunk.  Tested locally, seems to pass.  Will post on review board, and after it make it through there I plan to backport to 0.94/0.92.

Jon posted it on review board:  https://reviews.apache.org/r/6664/

I filed a follow-on issue HBASE-6600 for the QUARANTINED region state.

v2, adds checks/warning for deleted files.

v3, including backports to 92/94.  

Minor changes due to HBASE-5714 perms checks.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542006/hbase-6586-94-v3.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2650//console

This message is automatically generated.

trying again

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542008/hbase-6586-trunk-v3.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.

    -1 javadoc.  The javadoc tool appears to have generated 7 warning messages.

    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk's current 4 warnings).

    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.io.hfile.TestFixedFileTrailer

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/2651//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2651//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2651//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2651//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2651//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2651//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2651//console

This message is automatically generated.

interesting -- something on my internal builds didn't run this test to report failure.

v4, changes io exception to illegal argument exception in TestFixedFileTrailer.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542026/hbase-6586-trunk-v4.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.

    -1 javadoc.  The javadoc tool appears to have generated 7 warning messages.

    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk's current 4 warnings).

    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestAssignmentManager
                  org.apache.hadoop.hbase.master.TestSplitLogManager

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/2653//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2653//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2653//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2653//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2653//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2653//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2653//console

This message is automatically generated.

@Benoit:
What do you think of the proposed exception hierarchy in the patch ?

Thanks

v5, addresses ted's comments.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542046/hbase-6586-trunk-v5.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.

    -1 javadoc.  The javadoc tool appears to have generated 6 warning messages.

    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk's current 4 warnings).

    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/2654//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2654//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2654//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2654//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2654//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2654//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2654//console

This message is automatically generated.

fixed all spacing problems and other review concerns.

(previous version had part of another patch i was working on).

more spacing fixes and review updates.

Removed unused SchemaMetrics code from TestHFile

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542089/hbase-6586-trunk-v8.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.

    -1 javadoc.  The javadoc tool appears to have generated 5 warning messages.

    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk's current 4 warnings).

    -1 findbugs.  The patch appears to introduce 8 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/2656//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2656//console

This message is automatically generated.

Backported to 92 and 94.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542212/hbase-6586-92-v8.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2676//console

This message is automatically generated.

I believe I've addressed the review comments.  [~tedyu@apache.org], any more comments? If not can I get a +1 (to got with Jimmy's) or a tentative one unless Benoit chimes in?

[~tsuna], do you have any comments wrt to HBaseIOException?  I'm currently testing the backported versions of the patches (trivial changes -- removing Audience, other minor tweaks), and hope to commit over the weekend.


@Jon:
As long as Hadoop QA shows green build (barring flaky tests) and your test doesn't turn up surprises, I am fine with integration.

Not sure why {{HBaseIOException}} would be added in a JIRA about "Quarantine Corrupted HFiles", but yes that would be nice to have.

Previous run didn't pass but when tested locally it passed.  Trying again.

Previous 92 version was missing new HBaseIOException.java file.

Cleaned up some a merge conflict that was in a comment that I had missed.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542640/hbase-6586-92-v8b.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2704//console

This message is automatically generated.

Doing this again because hadoopqa picked up the wrong patch.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542628/hbase-6586-trunk-v8.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.

    -1 javadoc.  The javadoc tool appears to have generated 106 warning messages.

    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk's current 4 warnings).

    -1 findbugs.  The patch appears to introduce 14 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/2703//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2703//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2703//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2703//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2703//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2703//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2703//console

This message is automatically generated.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542644/hbase-6586-trunk-v8.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.

    -1 javadoc.  The javadoc tool appears to have generated 106 warning messages.

    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk's current 4 warnings).

    -1 findbugs.  The patch appears to introduce 14 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/2705//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2705//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2705//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2705//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2705//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/2705//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2705//console

This message is automatically generated.

On build 2703, two tests hung:

{code}
./findHangingTest.sh https://builds.apache.org/job/PreCommit-HBASE-Build/2703/console
Hanging test: Running org.apache.hadoop.hbase.master.TestDistributedLogSplitting
Hanging test: Running org.apache.hadoop.hbase.rest.TestScannersWithFilters
{code}

On build 2705, the test passes for me locally.  

I believe these are flakey.

I've run them all locally on 94/trunk and they all basically pass.  The 92 version sees to semi-frequently hangs/bails on TestMergeTool.  This has been taking >5 minutes in 94, and >8 mins in 92).  I don't think these are related.


Versions I've committed to trunk and 0.94.  Also the version I was planning on committing to 0.92 (Ted wants to run the suite before letting the patch in).

Jimmy found an unnecessary synchronized keyword in the code -- v9 removes it.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542711/hbase-6586-trunk-v9.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/2712//console

This message is automatically generated.

Integrated in HBase-0.94 #441 (See [https://builds.apache.org/job/HBase-0.94/441/])
    HBASE-6586 Quarantine Corrputed HFiles with hbck (Revision 1377942)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/DoNotRetryIOException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HBaseIOException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/CorruptHFileException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java


Integrated in HBase-TRUNK #3287 (See [https://builds.apache.org/job/HBase-TRUNK/3287/])
    HBASE-6586 Quarantine Corrupted HFiles with hbck (Revision 1377941)

     Result = SUCCESS
jmhsieh : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/DoNotRetryIOException.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseIOException.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CorruptHFileException.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java


0.92 version passes (TestSplitTranscationOnCluster flaky but passes on separate local run).

Ted, you cool with commit?

@Jon:
Please go ahead.

Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #152 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/152/])
    HBASE-6586 Quarantine Corrupted HFiles with hbck (Revision 1377941)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/DoNotRetryIOException.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseIOException.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CorruptHFileException.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java


Integrated in HBase-0.92 #544 (See [https://builds.apache.org/job/HBase-0.92/544/])
    HBASE-6586 Quarantine Corrupted HFiles with hbck (Revision 1378149)

     Result = SUCCESS
jmhsieh : 
Files : 
* /hbase/branches/0.92/CHANGES.txt
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/DoNotRetryIOException.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/HBaseIOException.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/CorruptHFileException.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java


Integrated in HBase-0.92-security #118 (See [https://builds.apache.org/job/HBase-0.92-security/118/])
    HBASE-6586 Quarantine Corrupted HFiles with hbck (Revision 1378149)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/branches/0.92/CHANGES.txt
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/DoNotRetryIOException.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/HBaseIOException.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/CorruptHFileException.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* /hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* /hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java


Integrated in HBase-0.94-security #51 (See [https://builds.apache.org/job/HBase-0.94-security/51/])
    HBASE-6586 Quarantine Corrputed HFiles with hbck (Revision 1377942)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/DoNotRetryIOException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HBaseIOException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/CorruptHFileException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java


Integrated in HBase-0.94-security-on-Hadoop-23 #7 (See [https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/])
    HBASE-6586 Quarantine Corrputed HFiles with hbck (Revision 1377942)

     Result = FAILURE
jmhsieh : 
Files : 
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/DoNotRetryIOException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HBaseIOException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/CorruptHFileException.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java


Fix up after bulk move overwrote some 0.94.2 fix versions w/ 0.95.0 (Noticed by Lars Hofhansl)

