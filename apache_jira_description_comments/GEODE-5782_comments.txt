Reproduced in CI: [https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/IntegrationTestOpenJDK11/builds/327]

[http://files.apachegeode-ci.info/builds/apache-develop-main/1.9.0-SNAPSHOT.0373/test-results/integrationTest/1548456327/]
{noformat}
org.junit.ComparisonFailure: expected:<1[9]> but was:<1[8]>
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at org.apache.geode.distributed.LauncherMemberMXBeanIntegrationTest.showJVMMetrics_returnsOJVMMetricsType(LauncherMemberMXBeanIntegrationTest.java:170)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:834)
{noformat}

Commit 6f3892fd50c905806ebcde54b1692c57e48c2671 in geode's branch refs/heads/develop from Jens Deppe
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6f3892f ]

GEODE-5782: Add some retry logic to retrieving metrics (#3152)

- Because metrics can change between retrievals, we're never guaranteed to be
  able to match exactly. If the upstream code is really broken then this retry
  approach should not hide that.

Commit 6f3892fd50c905806ebcde54b1692c57e48c2671 in geode's branch refs/heads/feature/GEODE-6291 from Jens Deppe
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6f3892f ]

GEODE-5782: Add some retry logic to retrieving metrics (#3152)

- Because metrics can change between retrievals, we're never guaranteed to be
  able to match exactly. If the upstream code is really broken then this retry
  approach should not hide that.

Observed in CI: [https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK8/builds/333]

 

CI failure:
https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/77


{code:java}
org.apache.geode.distributed.LauncherMemberMXBeanIntegrationTest > showOSMetrics_reconstructsOSMetricsFromCompositeDataType FAILED
    java.lang.AssertionError: 
    Expecting:
      <(1053347840,1053376512)>
    to match 'committed virtual memory size]' predicate.
        at org.apache.geode.distributed.LauncherMemberMXBeanIntegrationTest.showOSMetrics_reconstructsOSMetricsFromCompositeDataType(LauncherMemberMXBeanIntegrationTest.java:128)

{code}

Failed again on Windows...

https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK8/builds/186#A

SHA 	
c3c226a822538cb25e3945b75eef6977a985716e

{noformat}
org.apache.geode.distributed.LauncherMemberMXBeanIntegrationTest > showOSMetrics_reconstructsOSMetricsFromCompositeDataType FAILED
    java.lang.AssertionError: 
    Expecting:
      <(1027891200,1022967808)>
    to match 'committed virtual memory size]' predicate.
        at org.apache.geode.distributed.LauncherMemberMXBeanIntegrationTest.showOSMetrics_reconstructsOSMetricsFromCompositeDataType(LauncherMemberMXBeanIntegrationTest.java:128)
{noformat}


failed again on Windows:
{noformat}
LauncherMemberMXBeanIntegrationTest > showOSMetrics_reconstructsOSMetricsFromCompositeDataType FAILED
16:29:20    java.lang.AssertionError: 
16:29:20    Expecting:
16:29:20      <(1081712640,1081970688)>
16:29:20    to match 'committed virtual memory size]' predicate.
16:29:20        at org.apache.geode.distributed.LauncherMemberMXB 

{noformat}
[https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/356]

windows again...  

https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/365
 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Test Results URI =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0244/test-results/integrationTest/1595989147/
 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
 
Test report artifacts from this job are available at:
 
 
http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0244/test-artifacts/1595989147/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0244.tgz

Windows again...

 
 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Test Results URI =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0334/test-results/integrationTest/1600288900/
 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
 
Test report artifacts from this job are available at:
 
 
http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0334/test-artifacts/1600288900/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0334.tgz

Windows


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  Test Results URI =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.1-build.0380/test-results/integrationTest/1603282206/
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Test report artifacts from this job are available at:

http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.1-build.0380/test-artifacts/1603282206/windows-coreintegrationtestfiles-OpenJDK11-1.13.1-build.0380.tgz


Seen in [WindowsCoreIntegrationTestOpenJDK11 #23|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/23].

Seen in [WindowsCoreIntegrationTestOpenJDK11 #524|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/524] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0435/test-results/integrationTest/1603414109/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0435/test-artifacts/1603414109/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0435.tgz].

kirklund commented on a change in pull request #5648:
URL: https://github.com/apache/geode/pull/5648#discussion_r511141909



##########
File path: geode-core/src/integrationTest/java/org/apache/geode/distributed/LauncherMemberMXBeanIntegrationTest.java
##########
@@ -227,6 +227,8 @@ public void showJVMMetrics_returnsOJVMMetricsType()
         if (cdsValue.equals(osMetricValue)) {
           break;
         }
+        System.gc();
+        System.runFinalization();

Review comment:
       I'm really reluctant to add `gc()` or `runFinalization()`. Why do you think these will fix flakiness in this test?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jdeppe-pivotal commented on a change in pull request #5648:
URL: https://github.com/apache/geode/pull/5648#discussion_r512001303



##########
File path: geode-core/src/integrationTest/java/org/apache/geode/distributed/LauncherMemberMXBeanIntegrationTest.java
##########
@@ -227,6 +227,8 @@ public void showJVMMetrics_returnsOJVMMetricsType()
         if (cdsValue.equals(osMetricValue)) {
           break;
         }
+        System.gc();
+        System.runFinalization();

Review comment:
       Yes, I'm probably on the wrong track here. The test flakiness is around reporting memory stats. Since the underlying (volatile) values are retrieved from `VMStatsMonitor` would it then be better to reduce the stat sampling period so that values are updated more frequently?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dschneider-pivotal commented on a change in pull request #5648:
URL: https://github.com/apache/geode/pull/5648#discussion_r512149019



##########
File path: geode-core/src/integrationTest/java/org/apache/geode/distributed/LauncherMemberMXBeanIntegrationTest.java
##########
@@ -227,6 +227,8 @@ public void showJVMMetrics_returnsOJVMMetricsType()
         if (cdsValue.equals(osMetricValue)) {
           break;
         }
+        System.gc();
+        System.runFinalization();

Review comment:
       or can you change the test to be more patient to see an expected value? Do you know how often these values are currently being updated?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Seen in [WindowsCoreIntegrationTestOpenJDK11 #530|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/530] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0441/test-results/integrationTest/1603734450/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0441/test-artifacts/1603734450/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0441.tgz].

jdeppe-pivotal commented on a change in pull request #5648:
URL: https://github.com/apache/geode/pull/5648#discussion_r512349356



##########
File path: geode-core/src/integrationTest/java/org/apache/geode/distributed/LauncherMemberMXBeanIntegrationTest.java
##########
@@ -227,6 +227,8 @@ public void showJVMMetrics_returnsOJVMMetricsType()
         if (cdsValue.equals(osMetricValue)) {
           break;
         }
+        System.gc();
+        System.runFinalization();

Review comment:
       If I understand the code correctly, I believe they are being updated via a StatsMonitor, so I presume no more frequently than `statistic-sample-rate`. The test could retrieve that setting and try for at least that amount of time.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Seen in [WindowsCoreIntegrationTestOpenJDK11 #538|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/538] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0449/test-results/integrationTest/1603842190/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0449/test-artifacts/1603842190/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0449.tgz].

Seen in [WindowsCoreIntegrationTestOpenJDK11 #549|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/549] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0461/test-results/integrationTest/1604365259/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0461/test-artifacts/1604365259/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0461.tgz].

Seen in [WindowsCoreIntegrationTestOpenJDK11 #558|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/558] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0471/test-results/integrationTest/1604717474/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0471/test-artifacts/1604717474/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0471.tgz].

Seen in [WindowsCoreIntegrationTestOpenJDK11 #562|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/562] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0475/test-results/integrationTest/1605044248/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0475/test-artifacts/1605044248/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0475.tgz].

Seen in [WindowsCoreIntegrationTestOpenJDK11 #587|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/587] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0504/test-results/integrationTest/1605924953/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0504/test-artifacts/1605924953/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0504.tgz].

Seen in [WindowsCoreIntegrationTestOpenJDK11 #589|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/589] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0510/test-results/integrationTest/1606157418/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0510/test-artifacts/1606157418/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0510.tgz].

jdeppe-pivotal merged pull request #5648:
URL: https://github.com/apache/geode/pull/5648


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 70470897e2aa3bcd6f92e12231888f357d2b708c in geode's branch refs/heads/develop from Jens Deppe
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=7047089 ]

GEODE-5782: Try to improve memory reporting stats for Windows (#5648)

- In order to have a better chance to converge on values, reduce the
  sample rate and await for at most 5 sample periods before failing.

Please reopen if it happens again

Seen in [WindowsCoreIntegrationTestOpenJDK11 #593|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK11/builds/593] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0519/test-results/integrationTest/1606768270/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0519/test-artifacts/1606768270/windows-coreintegrationtestfiles-OpenJDK11-1.14.0-build.0519.tgz].

not sure why you reopened this [~burcham] ...  The failure #593 mentioned above was on a SHA 6 commits prior to [~jens.deppe] fix.  I don't see this failure in any run subsequent to the fix.

Seen on support/1.12 in [WindowsCoreIntegrationTestOpenJDK8 #18|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/WindowsCoreIntegrationTestOpenJDK8/builds/18] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.2-build.0191/test-results/integrationTest/1614665626/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.2-build.0191/test-artifacts/1614665626/windows-coreintegrationtestfiles-OpenJDK8-1.12.2-build.0191.tgz].

Seen on support/1.12 in [windows-core-integration-test-openjdk8 #18|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/windows-core-integration-test-openjdk8/builds/18] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.4-build.0263/test-results/integrationTest/1626121506/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.4-build.0263/test-artifacts/1626121506/windows-coreintegrationtestfiles-openjdk8-1.12.4-build.0263.tgz].

Seen on support/1.12 in [windows-core-integration-test-openjdk8 #34|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/windows-core-integration-test-openjdk8/builds/34] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0280/test-results/integrationTest/1631149143/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0280/test-artifacts/1631149143/windows-coreintegrationtestfiles-openjdk8-1.12.5-build.0280.tgz].

Seen on support/1.12 in [windows-core-integration-test-openjdk8 #63|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/windows-core-integration-test-openjdk8/builds/63] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.10-build.0383/test-results/integrationTest/1651638828/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.10-build.0383/test-artifacts/1651638828/windows-coreintegrationtestfiles-openjdk8-1.12.10-build.0383.tgz].

