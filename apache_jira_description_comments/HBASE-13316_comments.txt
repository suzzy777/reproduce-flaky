This is a patch to do a very simple version of this change. We basically change the sequence for a region move to be:
1. Warmup region (in the destination regionserver)
2. Close region in the source regionserver
3. Open region in the destination regionserver

Warmup region is the new step in the process. It basically opens the region and closes it (without adding it to the list of open regions). The open of a region reads the most common pages into the cache and then close doesn't throw them out. This means that after step #1, the destination regionserver has the common pages in cache and reduces the time for step #3. 

A more complete fix would involve tracking the most used pages and reading them in as part of warmup. This can be added later but is not in this patch

Is there a way to move the warm up call into a thread pool so that bulk assign doesn't have a blocking call done in serial?
Is there an issue if warm up is running while an open for that region is sent?

Nits:
There are a bunch of * imports. We generally try and stay away from those.
There are javadoc @params that aren't filled out. Either remove them or fill them out.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12706565/PlannedFailover.patch
  against master branch at commit 845f5de121e92a99b41b30dc86cb3f2898e0254f.
  ATTACHMENT ID: 12706565

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated 1925 checkstyle errors (more than the master's current 1918 errors).

    {color:red}-1 findbugs{color}.  The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13366//console

This message is automatically generated.

Elliott: 
- If we do the Warmup asynchronously, then we will need a way to wait in master for the warmup to be done. Otherwise we lose the benefit of the warmup since the open will end up happening sooner than the warmup can get done. Is there a convenient way to wait for this to happen in master or to send an asynchronous response back from the region server once warmup is done without blocking the thread?
- warmup and open happening concurrently should work. warmup doesn't add itself to regions in transition. So, a new open will simply proceed as normal and open its own files and do its start up. It may end up finding the data in cache or it may read it off disk. I have tried the moves concurrently with other activities happening but I dont have a test to actually run the warmup in parallel with open

Changes based on comments:
- Moved the warmup out of the balancer function to Admin.move. The warmup is synchronous and will take some time to complete. Having it in balance would affect the time it takes to do large scale balancing. move happens only one region at a time. This makes it slower but with less disruption
- Added a test to warmup a region and also move regions at the same time to see if there are no issues doing them simultaneously
- Also fixed Findbugs and Checkstyle issues


{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707340/PlannedFailover-v1.patch
  against master branch at commit 134b95579c0d02d54f477e437f03ca1a825256f4.
  ATTACHMENT ID: 12707340

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated 1930 checkstyle errors (more than the master's current 1929 errors).

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster
                  org.apache.hadoop.hbase.mapreduce.TestImportExport

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogsDuringFailover.testFailoverFinalizesAndReadsInProgress(TestEditLogsDuringFailover.java:135)
	at org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogsDuringFailover.testFailoverFinalizesAndReadsInProgressWithPartialTxAtEnd(TestEditLogsDuringFailover.java:189)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13431//console

This message is automatically generated.

{code}
+   * @param admin
+   * @param regionInfo
+   *
+   */
+  public static void warmupRegion(final AdminService.BlockingInterface admin,
+      final ServerName server, final HRegionInfo regionInfo) throws IOException  {
{code}
Javadoc for parameter server is missing.

In RequestConverter :
{code}
+  public static WarmupRegionRequest buildWarmupRegionRequest(ServerName server,
{code}
Parameter server is not used in the body of the above method.

In HMaster :
{code}
+      serverManager.sendRegionWarmup(rp.getDestination(), hri);
{code}
Since the above call is synchronous, should there be a config that allows user to select whether the warmup is carried out ?

It would be easier for reviewers if the patch is published on review board.

Thanks Ted for the comments. Fixed up the Javadoc issues and the unused variable. 

The synchronous call to warmup is happening in move which is an admin cmd. I am not sure it is worth adding a config option to do/not do warmup

Also adding https://reviews.facebook.net/differential/diff/187245/ for review. 

With revision
https://reviews.facebook.net/D35967

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707549/PlannedFailover-v2.patch
  against master branch at commit 69f6a2e7b44d33e01866928672700cde1366f429.
  ATTACHMENT ID: 12707549

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated 1930 checkstyle errors (more than the master's current 1929 errors).

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13445//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13445//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13445//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13445//console

This message is automatically generated.

Patch which corresponds to the latest version in the diff. This contains fixes to checkstyle in the last report as well as fixes per Ted's code review.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707788/PlannedFailover-v3.patch
  against master branch at commit 5d2c33158c47fc791d4973c5013d7ae50795d3bc.
  ATTACHMENT ID: 12707788

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13461//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13461//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13461//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13461//console

This message is automatically generated.

+1 lgtm

FAILURE: Integrated in HBase-1.1 #332 (See [https://builds.apache.org/job/HBase-1.1/332/])
HBASE-13316 Reduce the downtime on planned moves of regions (eclark: rev 2fd6f2a829a6ee3641d287aa713631027e512572)
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestWarmupRegion.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java
* hbase-protocol/src/main/protobuf/Admin.proto
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


FAILURE: Integrated in HBase-TRUNK #6311 (See [https://builds.apache.org/job/HBase-TRUNK/6311/])
HBASE-13316 Reduce the downtime on planned moves of regions (eclark: rev ba6345f7d15d540943825a2b6f2d2c2177ad1c8c)
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestWarmupRegion.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java
* hbase-protocol/src/main/protobuf/Admin.proto
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java


This seems to be unrelated. Is this test known to be flaky?

It's a large replication test; those are always a little flakey since it has to spin up two full clusters. I'll run it a few times locally to see if this changed with this commit.

Thanks Elliott

Closing issues released in 1.1.0.

