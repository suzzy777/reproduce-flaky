In my recent experience, these are no longer flaky, but simply red. I suggest disabling them and re-enabling as this issue is addressed.

Actually, I merged a fix last week on MqttIO that should fix the tests. Let me close this Jira,  I will  eventually reopen it if required.

Another example failure: https://builds.apache.org/job/beam_PreCommit_Java_GradleBuild/1032/

Failed:
org.apache.beam.sdk.io.mqtt.MqttIOTest.testRead
org.apache.beam.sdk.io.mqtt.MqttIOTest.testReadNoClientId

Logs:
org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds
Stacktrace

org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
	at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
	at org.apache.beam.runners.direct.ExecutorServiceParallelExecutor$QueueMessageReceiver.tryNext(ExecutorServiceParallelExecutor.java:357)
	at org.apache.beam.runners.direct.ExecutorServiceParallelExecutor$QueueMessageReceiver.access$300(ExecutorServiceParallelExecutor.java:328)
	at org.apache.beam.runners.direct.ExecutorServiceParallelExecutor.waitUntilFinish(ExecutorServiceParallelExecutor.java:241)
	at org.apache.beam.runners.direct.DirectRunner$DirectPipelineResult.waitUntilFinish(DirectRunner.java:334)
	at org.apache.beam.runners.direct.DirectRunner$DirectPipelineResult.waitUntilFinish(DirectRunner.java:309)
	at org.apache.beam.runners.direct.DirectRunner.run(DirectRunner.java:203)
	at org.apache.beam.runners.direct.DirectRunner.run(DirectRunner.java:63)
	at org.apache.beam.sdk.Pipeline.run(Pipeline.java:304)
	at org.apache.beam.sdk.testing.TestPipeline.run(TestPipeline.java:358)
	at org.apache.beam.sdk.testing.TestPipeline.run(TestPipeline.java:340)
	at org.apache.beam.sdk.io.mqtt.MqttIOTest.testReadNoClientId(MqttIOTest.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Standard Error

Jan 12, 2018 8:54:27 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Finding free network port
Jan 12, 2018 8:54:27 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Starting ActiveMQ brokerService on 33991
Jan 12, 2018 8:54:30 PM org.apache.activemq.broker.BrokerService doStartPersistenceAdapter
INFO: Using Persistence Adapter: MemoryPersistenceAdapter
Jan 12, 2018 8:54:31 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:1) is starting
Jan 12, 2018 8:54:31 PM org.apache.activemq.transport.TransportServerThreadSupport doStart
INFO: Listening for connections at: mqtt://localhost:33991
Jan 12, 2018 8:54:31 PM org.apache.activemq.broker.TransportConnector start
INFO: Connector mqtt://localhost:33991 started
Jan 12, 2018 8:54:31 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:1) started
Jan 12, 2018 8:54:31 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: For help or more information please see: http://activemq.apache.org
Jan 12, 2018 8:54:54 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:1) is shutting down
Jan 12, 2018 8:54:54 PM org.apache.activemq.broker.TransportConnection serviceTransportException
WARNING: Transport Connection to: tcp://127.0.0.1:50644 failed: java.io.IOException: Unexpected error occurred: org.apache.activemq.broker.BrokerStoppedException: Broker BrokerService[localhost] is being stopped
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.TransportConnector stop
INFO: Connector mqtt://localhost:33991 stopped
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:1) uptime 26.546 seconds
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:1) is shutdown
Jan 12, 2018 8:54:55 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Finding free network port
Jan 12, 2018 8:54:55 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Starting ActiveMQ brokerService on 38105
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.BrokerService doStartPersistenceAdapter
INFO: Using Persistence Adapter: MemoryPersistenceAdapter
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:2) is starting
Jan 12, 2018 8:54:55 PM org.apache.activemq.transport.TransportServerThreadSupport doStart
INFO: Listening for connections at: mqtt://localhost:38105
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.TransportConnector start
INFO: Connector mqtt://localhost:38105 started
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:2) started
Jan 12, 2018 8:54:55 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: For help or more information please see: http://activemq.apache.org
Jan 12, 2018 8:54:57 PM org.apache.beam.sdk.io.mqtt.MqttIOTest$2 run
INFO: Waiting pipeline connected to the MQTT broker before sending messages ...
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:2) is shutting down
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.TransportConnector stop
INFO: Connector mqtt://localhost:38105 stopped
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:2) uptime 5.353 seconds
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:2) is shutdown
Jan 12, 2018 8:55:00 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Finding free network port
Jan 12, 2018 8:55:00 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Starting ActiveMQ brokerService on 44050
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.BrokerService doStartPersistenceAdapter
INFO: Using Persistence Adapter: MemoryPersistenceAdapter
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:3) is starting
Jan 12, 2018 8:55:00 PM org.apache.activemq.transport.TransportServerThreadSupport doStart
INFO: Listening for connections at: mqtt://localhost:44050
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.TransportConnector start
INFO: Connector mqtt://localhost:44050 started
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:3) started
Jan 12, 2018 8:55:00 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: For help or more information please see: http://activemq.apache.org
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:3) is shutting down
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.TransportConnector stop
INFO: Connector mqtt://localhost:44050 stopped
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:3) uptime 2.885 seconds
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:3) is shutdown
Jan 12, 2018 8:55:03 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Finding free network port
Jan 12, 2018 8:55:03 PM org.apache.beam.sdk.io.mqtt.MqttIOTest startBroker
INFO: Starting ActiveMQ brokerService on 38757
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.BrokerService doStartPersistenceAdapter
INFO: Using Persistence Adapter: MemoryPersistenceAdapter
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:4) is starting
Jan 12, 2018 8:55:03 PM org.apache.activemq.transport.TransportServerThreadSupport doStart
INFO: Listening for connections at: mqtt://localhost:38757
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.TransportConnector start
INFO: Connector mqtt://localhost:38757 started
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:4) started
Jan 12, 2018 8:55:03 PM org.apache.activemq.broker.BrokerService doStartBroker
INFO: For help or more information please see: http://activemq.apache.org
Jan 12, 2018 8:55:04 PM org.apache.beam.sdk.io.mqtt.MqttIOTest$1 run
INFO: Waiting pipeline connected to the MQTT broker before sending messages ...
Jan 12, 2018 8:56:03 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:4) is shutting down
Jan 12, 2018 8:56:04 PM org.apache.activemq.broker.TransportConnector stop
INFO: Connector mqtt://localhost:38757 stopped
Jan 12, 2018 8:56:04 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:4) uptime 1 minute
Jan 12, 2018 8:56:04 PM org.apache.activemq.broker.BrokerService stop
INFO: Apache ActiveMQ 5.13.1 (localhost, ID:52.16.184.35.bc.googleusercontent.com-36581-1515790470484-0:4) is shutdown

lukecwik opened a new pull request #4406: [BEAM-3336] Fix thread safety issues of MqttIOTest
URL: https://github.com/apache/beam/pull/4406
 
 
   Ran the tests on my desktop 50 times with zero flakes.
   
   Follow this checklist to help us incorporate your contribution quickly and easily:
   
    - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/projects/BEAM/issues/) filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.
    - [ ] Each commit in the pull request should have a meaningful subject line and body.
    - [ ] Format the pull request title like `[BEAM-XXX] Fixes bug in ApproximateQuantiles`, where you replace `BEAM-XXX` with the appropriate JIRA issue.
    - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.
    - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.
    - [ ] If this contribution is large, please file an Apache [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).
   
   ---
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


lukecwik closed pull request #4406: [BEAM-3336] Fix thread safety issues of MqttIOTest
URL: https://github.com/apache/beam/pull/4406
 
 
   

This is a PR merged from a forked repository.
As GitHub hides the original diff on merge, it is displayed below for
the sake of provenance:

As this is a foreign pull request (from a fork), the diff is supplied
below (as it won't show otherwise due to GitHub magic):

diff --git a/sdks/java/io/mqtt/src/test/java/org/apache/beam/sdk/io/mqtt/MqttIOTest.java b/sdks/java/io/mqtt/src/test/java/org/apache/beam/sdk/io/mqtt/MqttIOTest.java
index d7baf3bf989..94ab0abc91f 100644
--- a/sdks/java/io/mqtt/src/test/java/org/apache/beam/sdk/io/mqtt/MqttIOTest.java
+++ b/sdks/java/io/mqtt/src/test/java/org/apache/beam/sdk/io/mqtt/MqttIOTest.java
@@ -22,9 +22,8 @@
 
 import java.net.ServerSocket;
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.Set;
-
+import java.util.concurrent.ConcurrentSkipListSet;
 import org.apache.activemq.broker.BrokerService;
 import org.apache.activemq.broker.Connection;
 import org.apache.beam.sdk.io.mqtt.MqttIO.Read;
@@ -53,9 +52,9 @@
 
   private static final Logger LOG = LoggerFactory.getLogger(MqttIOTest.class);
 
-  private static transient BrokerService brokerService;
+  private BrokerService brokerService;
 
-  private static int port;
+  private int port;
 
   @Rule
   public final transient TestPipeline pipeline = TestPipeline.create();
@@ -63,9 +62,9 @@
   @Before
   public void startBroker() throws Exception {
     LOG.info("Finding free network port");
-    ServerSocket socket = new ServerSocket(0);
-    port = socket.getLocalPort();
-    socket.close();
+    try (ServerSocket socket = new ServerSocket(0)) {
+      port = socket.getLocalPort();
+    }
 
     LOG.info("Starting ActiveMQ brokerService on {}", port);
     brokerService = new BrokerService();
@@ -81,11 +80,9 @@ public void startBroker() throws Exception {
   public void testReadNoClientId() throws Exception {
     final String topicName = "READ_TOPIC_NO_CLIENT_ID";
     Read mqttReader = MqttIO.read()
-    .withConnectionConfiguration(
-        MqttIO.ConnectionConfiguration.create(
-            "tcp://localhost:" + port,
-            topicName))
-  .withMaxNumRecords(10);
+        .withConnectionConfiguration(
+            MqttIO.ConnectionConfiguration.create("tcp://localhost:" + port, topicName))
+        .withMaxNumRecords(10);
     PCollection<byte[]> output = pipeline.apply(mqttReader);
     PAssert.that(output).containsInAnyOrder(
         "This is test 0".getBytes(),
@@ -122,7 +119,7 @@ public void run() {
           }
           for (int i = 0; i < 10; i++) {
             publishConnection.publish(topicName, ("This is test " + i).getBytes(),
-                QoS.AT_LEAST_ONCE, false);
+                QoS.EXACTLY_ONCE, false);
           }
         } catch (Exception e) {
           // nothing to do
@@ -136,7 +133,7 @@ public void run() {
     publisherThread.join();
   }
 
-  @Test(timeout = 5 * 1000)
+  @Test(timeout = 30 * 1000)
   public void testRead() throws Exception {
     PCollection<byte[]> output = pipeline.apply(
         MqttIO.read()
@@ -181,7 +178,7 @@ public void run() {
           }
           for (int i = 0; i < 10; i++) {
             publishConnection.publish("READ_TOPIC", ("This is test " + i).getBytes(),
-                QoS.AT_LEAST_ONCE, false);
+                QoS.EXACTLY_ONCE, false);
           }
         } catch (Exception e) {
           // nothing to do
@@ -191,14 +188,14 @@ public void run() {
     publisherThread.start();
     pipeline.run();
 
-    publishConnection.disconnect();
     publisherThread.join();
+    publishConnection.disconnect();
   }
 
   /**
    * Test for BEAM-3282: this test should not timeout.
    */
-  @Test(timeout = 5 * 1000)
+  @Test(timeout = 30 * 1000)
   public void testReceiveWithTimeoutAndNoData() throws Exception {
     pipeline.apply(MqttIO.read()
         .withConnectionConfiguration(
@@ -213,18 +210,19 @@ public void testReceiveWithTimeoutAndNoData() throws Exception {
 
   @Test
   public void testWrite() throws Exception {
+    final int numberOfTestMessages = 200;
     MQTT client = new MQTT();
     client.setHost("tcp://localhost:" + port);
     final BlockingConnection connection = client.blockingConnection();
     connection.connect();
-    connection.subscribe(new Topic[]{new Topic(Buffer.utf8("WRITE_TOPIC"), QoS.AT_LEAST_ONCE)});
+    connection.subscribe(new Topic[]{new Topic(Buffer.utf8("WRITE_TOPIC"), QoS.EXACTLY_ONCE)});
 
-    final Set<String> messages = new HashSet<>();
+    final Set<String> messages = new ConcurrentSkipListSet<>();
 
     Thread subscriber = new Thread() {
       public void run() {
         try {
-          for (int i = 0; i < 200; i++) {
+          for (int i = 0; i < numberOfTestMessages; i++) {
             Message message = connection.receive();
             messages.add(new String(message.getPayload()));
             message.ack();
@@ -237,7 +235,7 @@ public void run() {
     subscriber.start();
 
     ArrayList<byte[]> data = new ArrayList<>();
-    for (int i = 0; i < 200; i++) {
+    for (int i = 0; i < numberOfTestMessages; i++) {
       data.add(("Test " + i).getBytes());
     }
     pipeline.apply(Create.of(data))
@@ -251,8 +249,8 @@ public void run() {
 
     connection.disconnect();
 
-    assertEquals(200, messages.size());
-    for (int i = 0; i < 200; i++) {
+    assertEquals(numberOfTestMessages, messages.size());
+    for (int i = 0; i < numberOfTestMessages; i++) {
       assertTrue(messages.contains("Test " + i));
     }
   }


 

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


The PR has been merged.

