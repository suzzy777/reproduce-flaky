These seem similar:

{code}
FAILED TESTS
================================================
2 tests failed.
REGRESSION:  Impala.tests.custom_cluster.test_delegation.TestDelegation.test_effective_user_multiple_proxies

Error Message:
test setup failure

Stack Trace:
self = <test_delegation.TestDelegation object at 0x298c390>
method = <bound method TestDelegation.add_session of <test_delegation.TestDelegation object at 0x298c390>>

    def setup_method(self, method):
      cluster_args = list()
      for arg in [IMPALAD_ARGS, STATESTORED_ARGS, CATALOGD_ARGS]:
        if arg in method.func_dict:
          cluster_args.append("--%s=\"%s\" " % (arg, method.func_dict[arg]))
      # Start a clean new cluster before each test
>     self._start_impala_cluster(cluster_args)

common/custom_cluster_test_suite.py:83:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
common/custom_cluster_test_suite.py:106: in _start_impala_cluster
    check_call(cmd + options, close_fds=True)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

popenargs = (['/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/bin/start-impala-cluster.py', '--cluster_s...zed_proxy_user_config="jenkins=proxy_user_name/proxy_user,name_2"      --authorized_proxy_user_config_delimiter=/" '],)
kwargs = {'close_fds': True}, retcode = 1
cmd = ['/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/bin/start-impala-cluster.py', '--cluster_si...rized_proxy_user_config="jenkins=proxy_user_name/proxy_user,name_2"      --authorized_proxy_user_config_delimiter=/" ']

    def check_call(*popenargs, **kwargs):
        """Run command with arguments.  Wait for command to complete.  If
        the exit code was zero then return, otherwise raise
        CalledProcessError.  The CalledProcessError object will have the
        return code in the returncode attribute.

        The arguments are the same as for the Popen constructor.  Example:

        check_call(["ls", "-l"])
        """
        retcode = call(*popenargs, **kwargs)
        cmd = kwargs.get("args")
        if cmd is None:
            cmd = popenargs[0]
        if retcode:
>           raise CalledProcessError(retcode, cmd)
E           CalledProcessError: Command '['/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/bin/start-impala-cluster.py', '--cluster_size=3', '--log_dir=/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/logs/custom_cluster_tests', '--log_level=1', '--impalad_args="--authorized_proxy_user_config="jenkins=proxy_user_name/proxy_user,name_2"      --authorized_proxy_user_config_delimiter=/" ']' returned non-zero exit status 1

/usr/lib64/python2.6/subprocess.py:505: CalledProcessError

REGRESSION:  Impala.tests.custom_cluster.test_hdfs_fd_caching.TestHdfsFdCaching.test_scan_does_cache_fd[exec_option: {'disable_codegen': False, 'abort_on_error': 1, 'exec_single_node_rows_threshold': 0, 'batch_size': 0, 'num_nodes': 0} | table_format: text/none]

Error Message:
test setup failure

Stack Trace:
self = <test_hdfs_fd_caching.TestHdfsFdCaching object at 0x3971a10>
method = <bound method TestHdfsFdCaching.test_scan_does_cache_fd of <test_hdfs_fd_caching.TestHdfsFdCaching object at 0x3971a10>>

    def setup_method(self, method):
>     super(TestHdfsFdCaching, self).setup_method(method)

custom_cluster/test_hdfs_fd_caching.py:45:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
common/custom_cluster_test_suite.py:83: in setup_method
    self._start_impala_cluster(cluster_args)
common/custom_cluster_test_suite.py:106: in _start_impala_cluster
    check_call(cmd + options, close_fds=True)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

popenargs = (['/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/bin/start-impala-cluster.py', '--cluster_s...g_level=1', '--impalad_args="--max_cached_file_handles=5" ', '--catalogd_args="--load_catalog_in_background=false" '],)
kwargs = {'close_fds': True}, retcode = 1
cmd = ['/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/bin/start-impala-cluster.py', '--cluster_si...log_level=1', '--impalad_args="--max_cached_file_handles=5" ', '--catalogd_args="--load_catalog_in_background=false" ']

    def check_call(*popenargs, **kwargs):
        """Run command with arguments.  Wait for command to complete.  If
        the exit code was zero then return, otherwise raise
        CalledProcessError.  The CalledProcessError object will have the
        return code in the returncode attribute.

        The arguments are the same as for the Popen constructor.  Example:

        check_call(["ls", "-l"])
        """
        retcode = call(*popenargs, **kwargs)
        cmd = kwargs.get("args")
        if cmd is None:
            cmd = popenargs[0]
        if retcode:
>           raise CalledProcessError(retcode, cmd)
E           CalledProcessError: Command '['/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/bin/start-impala-cluster.py', '--cluster_size=3', '--log_dir=/data/jenkins/workspace/impala-external-gerrit-verify-merge/repos/Impala/logs/custom_cluster_tests', '--log_level=1', '--impalad_args="--max_cached_file_handles=5" ', '--catalogd_args="--load_catalog_in_background=false" ']' returned non-zero exit status 1

/usr/lib64/python2.6/subprocess.py:505: CalledProcessError
{code}

I added some logging and it looks like it is sometimes taking a long time waiting for the process that it just signalled:
{code}
17:51:01 custom_cluster/test_exchange_delays.py::TestExchangeDelays::test_exchange_large_delay[exec_option: {'disable_codegen': False, 'abort_on_error': 1, 'exec_single_node_rows_threshold': 0, 'batch_size': 0, 'num_nodes': 0} | table_format: text/none] MainThread: Found 3 impalad/1 statestored/1 catalogd process(es)
17:53:03 MainThread: Getting num_known_live_backends from impala-boost-static-burst-slave-09b1.vpc.cloudera.com:25000
17:53:03 MainThread: Waiting for num_known_live_backends=3. Current value: 0
17:53:04 MainThread: Getting num_known_live_backends from impala-boost-static-burst-slave-09b1.vpc.cloudera.com:25000
17:53:04 MainThread: Waiting for num_known_live_backends=3. Current value: 0
17:53:05 MainThread: Getting num_known_live_backends from impala-boost-static-burst-slave-09b1.vpc.cloudera.com:25000
17:53:05 MainThread: Waiting for num_known_live_backends=3. Current value: 2
17:53:06 MainThread: Getting num_known_live_backends from impala-boost-static-burst-slave-09b1.vpc.cloudera.com:25000
17:53:06 MainThread: Waiting for num_known_live_backends=3. Current value: 2
17:53:07 MainThread: Getting num_known_live_backends from impala-boost-static-burst-slave-09b1.vpc.cloudera.com:25000
17:53:07 MainThread: num_known_live_backends has reached value: 3
17:53:08 MainThread: Getting num_known_live_backends from impala-boost-static-burst-slave-09b1.vpc.cloudera.com:25001
17:53:08 MainThread: num_known_live_backends has reached value: 3
17:53:08 MainThread: Getting num_known_live_backends from impala-boost-static-burst-slave-09b1.vpc.cloudera.com:25002
17:53:08 MainThread: num_known_live_backends has reached value: 3
17:53:09 FOUND PROCESSES[<psutil.Process(pid=29762, name='statestored') at 28146576>, <psutil.Process(pid=29769, name='catalogd') at 28146256>, <psutil.Process(pid=29826, name='impalad') at 28146512>, <psutil.Process(pid=29862, name='impalad') at 28146768>, <psutil.Process(pid=29898, name='impalad') at 28146960>]
17:53:09 terminating  statestored 29762
17:53:09 terminating  catalogd 29769
17:53:09 terminating  impalad 29826
17:53:09 terminating  impalad 29862
17:53:09 terminating  impalad 29898
17:53:09 Took 0.007732 secs: Kill process statestored
17:53:09 Took 0.613243 secs: Kill process catalogd
17:53:09 Took 114.163230 secs: Kill process impalad
17:53:09 Took 0.000049 secs: Kill process impalad
17:53:09 Took 0.000027 secs: Kill process impalad
{code}

Committed this as a way to unblockbuilds:
{code}

  IMPALA-3433: increase cluster kill timeout

Sometimes it takes a while to kill Impala. We should understand why this
is the case, but in the meantime let's increase the timeout to reduce
build failures.

Change-Id: Idc309ecf1a6936fab5a80464888a8dec465706ad
Reviewed-on: http://gerrit.cloudera.org:8080/2878
Reviewed-by: Casey Ching <casey@cloudera.com>
Tested-by: Internal Jenkins

{code}

Need to continue investigation of why it's taking so long to shut down.

I hacked the start-impala-cluster.py script further to run some commands when it detects a 60-second timeout. The impalad process seems to be in a Dl state:
{code}
11:40:37 jenkins   3120 26.0  0.5 21198068 388836 ?     Dl   11:27   0:19 /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/build/latest/service/impalad --mem_limit=19206662826 -log_filename=impalad_node1 -log_dir=/data/jenkins/workspace/impala-private-build-and-test/repos/Impala/logs/custom_cluster_tests -v=1 -logbufsecs=5 -max_log_files=0 -beeswax_port=21001 -hs2_port=21051 -be_port=22001 -state_store_subscriber_port=23001 -webserver_port=25001 -llama_callback_port=28001 --idle_query_timeout=1
{code}

I got a core dump of some of the processes with gcore. I'm still looking through them, but I found this interesting stack that looks like maybe we hit the memtracker exception [~kwho]:
{code}
(gdb) bt
#0  0x00007f955d5778e5 in raise () from sysroot/lib64/libc.so.6
#1  0x00007f955d5790c5 in abort () from sysroot/lib64/libc.so.6
#2  0x00007f955ddd207d in __gnu_cxx::__verbose_terminate_handler () at ../../../../gcc-4.9.2/libstdc++-v3/libsupc++/vterminate.cc:95
#3  0x00007f955ddd00e6 in __cxxabiv1::__terminate (handler=<optimized out>) at ../../../../gcc-4.9.2/libstdc++-v3/libsupc++/eh_terminate.cc:47
#4  0x00007f955ddcf179 in __cxa_call_terminate (ue_header=0x9275640) at ../../../../gcc-4.9.2/libstdc++-v3/libsupc++/eh_call.cc:54
#5  0x00007f955ddcf93b in __cxxabiv1::__gxx_personality_v0 (version=<optimized out>, actions=6, exception_class=<optimized out>, ue_header=0x9275640, context=0x7f94958847b0) at ../../../../gcc-4.9.2/libstdc++-v3/libsupc++/eh_personality.cc:670
#6  0x00007f955d8e7f63 in _Unwind_RaiseException_Phase2 (exc=exc@entry=0x9275640, context=context@entry=0x7f94958847b0) at ../../../gcc-4.9.2/libgcc/unwind.inc:62
#7  0x00007f955d8e8487 in _Unwind_Resume (exc=0x9275640) at ../../../gcc-4.9.2/libgcc/unwind.inc:230
#8  0x00000000010b68d2 in boost::mutex::lock (this=0x4051a40 <impala::MemTracker::static_mem_trackers_lock_>) at /tmp/impala-deps/boost-1.57.0/include/boost/thread/pthread/mutex.hpp:119
#9  0x00000000010c01b4 in boost::lock_guard<boost::mutex>::lock_guard (this=0x7f9495884990, m_=...) at /tmp/impala-deps/boost-1.57.0/include/boost/thread/lock_guard.hpp:38
#10 0x000000000129ad99 in impala::MemTracker::~MemTracker (this=0x9d4e580, __in_chrg=<optimized out>) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/runtime/mem-tracker.cc:221
#11 0x00000000012829dc in boost::checked_delete<impala::MemTracker> (x=0x9d4e580) at /tmp/impala-deps/boost-1.57.0/include/boost/core/checked_delete.hpp:34
#12 0x0000000001280e0f in boost::scoped_ptr<impala::MemTracker>::~scoped_ptr (this=0x7f9495884a60, __in_chrg=<optimized out>) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/scoped_ptr.hpp:82
#13 0x00000000012813d9 in boost::scoped_ptr<impala::MemTracker>::reset (this=0x9c58f88, p=0x0) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/scoped_ptr.hpp:88
#14 0x00000000012cb9b2 in impala::BufferedBlockMgr::~BufferedBlockMgr (this=0x9c58f40, __in_chrg=<optimized out>) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/runtime/buffered-block-mgr.cc:584
#15 0x00000000012e0f92 in boost::checked_delete<impala::BufferedBlockMgr> (x=0x9c58f40) at /tmp/impala-deps/boost-1.57.0/include/boost/core/checked_delete.hpp:34
#16 0x00000000012e268e in boost::detail::sp_counted_impl_p<impala::BufferedBlockMgr>::dispose (this=0x101a1820) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78
#17 0x00000000010a7c7a in boost::detail::sp_counted_base::release (this=0x101a1820) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146
#18 0x00000000010a7d09 in boost::detail::shared_count::~shared_count (this=0x7f9495884dc8, __in_chrg=<optimized out>) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/detail/shared_count.hpp:443
#19 0x00000000012adec2 in boost::shared_ptr<impala::BufferedBlockMgr>::~shared_ptr (this=0x7f9495884dc0, __in_chrg=<optimized out>) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/shared_ptr.hpp:323
#20 0x00000000012aefa9 in boost::shared_ptr<impala::BufferedBlockMgr>::reset (this=0x8088088) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/shared_ptr.hpp:614
#21 0x00000000012a9642 in impala::RuntimeState::~RuntimeState (this=0x8087800, __in_chrg=<optimized out>) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/runtime/runtime-state.cc:100
#22 0x0000000001448062 in boost::checked_delete<impala::RuntimeState> (x=0x8087800) at /tmp/impala-deps/boost-1.57.0/include/boost/core/checked_delete.hpp:34
#23 0x00000000014437f5 in boost::scoped_ptr<impala::RuntimeState>::~scoped_ptr (this=0xf55bad0, __in_chrg=<optimized out>) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/scoped_ptr.hpp:82
#24 0x000000000189934c in impala::PlanFragmentExecutor::~PlanFragmentExecutor (this=0xf55b970, __in_chrg=<optimized out>) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/runtime/plan-fragment-executor.cc:72
#25 0x0000000001468331 in impala::FragmentMgr::FragmentExecState::~FragmentExecState (this=0xf55b700, __in_chrg=<optimized out>) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/service/fragment-exec-state.h:41
#26 0x00000000014697fc in boost::checked_delete<impala::FragmentMgr::FragmentExecState> (x=0xf55b700) at /tmp/impala-deps/boost-1.57.0/include/boost/core/checked_delete.hpp:34
#27 0x000000000146b262 in boost::detail::sp_counted_impl_p<impala::FragmentMgr::FragmentExecState>::dispose (this=0x1735b380) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78
#28 0x00000000010a7c7a in boost::detail::sp_counted_base::release (this=0x1735b380) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146
#29 0x00000000010a7d09 in boost::detail::shared_count::~shared_count (this=0x7f94958857d8, __in_chrg=<optimized out>) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/detail/shared_count.hpp:443
#30 0x00000000013f90b4 in boost::shared_ptr<impala::FragmentMgr::FragmentExecState>::~shared_ptr (this=0x7f94958857d0, __in_chrg=<optimized out>) at /tmp/impala-deps/boost-1.57.0/include/boost/smart_ptr/shared_ptr.hpp:323
#31 0x000000000146776e in impala::FragmentMgr::FragmentThread (this=0x8f66c80, fragment_instance_id=...) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/common/status.h:161
#32 0x000000000146b0e4 in boost::_mfi::mf1<void, impala::FragmentMgr, impala::TUniqueId>::operator() (this=0xf2c9020, p=0x8f66c80, a1=...) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/mem_fn_template.hpp:165
#33 0x000000000146aea1 in boost::_bi::list2<boost::_bi::value<impala::FragmentMgr*>, boost::_bi::value<impala::TUniqueId> >::operator()<boost::_mfi::mf1<void, impala::FragmentMgr, impala::TUniqueId>, boost::_bi::list0> (this=0xf2c9030, f=..., a=...)
    at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind.hpp:313
#34 0x000000000146a7cb in boost::_bi::bind_t<void, boost::_mfi::mf1<void, impala::FragmentMgr, impala::TUniqueId>, boost::_bi::list2<boost::_bi::value<impala::FragmentMgr*>, boost::_bi::value<impala::TUniqueId> > >::operator() (this=0xf2c9020)
    at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#35 0x000000000146a134 in boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void, boost::_mfi::mf1<void, impala::FragmentMgr, impala::TUniqueId>, boost::_bi::list2<boost::_bi::value<impala::FragmentMgr*>, boost::_bi::value<impala::TUniqueId> > >, void>::invoke
    (function_obj_ptr=...) at /tmp/impala-deps/boost-1.57.0/include/boost/function/function_template.hpp:153
#36 0x000000000127ff48 in boost::function0<void>::operator() (this=0x7f9495885c40) at /tmp/impala-deps/boost-1.57.0/include/boost/function/function_template.hpp:767
#37 0x000000000152c0af in impala::Thread::SuperviseThread(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*) (name=..., category=..., functor=..., thread_started=0x7f9496c8c970)
    at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/util/thread.cc:316
#38 0x00000000015337e0 in boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> >::operator()<void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list0&, int) (this=0x8f1f5c0, 
    f=@0x8f1f5b8: 0x152bdea <impala::Thread::SuperviseThread(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*)>, a=...) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind.hpp:457
#39 0x0000000001533723 in boost::_bi::bind_t<void, void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> > >::operator()() (this=0x8f1f5b8) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#40 0x00000000015336e6 in boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> > > >::run() (this=0x8f1f400) at /tmp/impala-deps/boost-1.57.0/include/boost/thread/detail/thread.hpp:116
#41 0x00000000019578fa in thread_proxy ()
#42 0x00007f955e08b851 in start_thread () from sysroot/lib64/libpthread.so.0
#43 0x00007f955d62d94d in clone () from sysroot/lib64/libc.so.6
{code}

I'll attach the full backtraces.

I think the only other interesting stack was this:

{code}
Thread 81 (LWP 10984):
#0  0x00007f955e09294c in recv () from sysroot/lib64/libpthread.so.0
#1  0x000000000275b47d in apache::thrift::transport::TSocket::read(unsigned char*, unsigned int) ()
#2  0x0000000002765882 in apache::thrift::transport::TBufferedTransport::peek() ()
#3  0x00000000027715df in apache::thrift::server::TThreadedServer::Task::run() ()
#4  0x000000000125ff35 in impala::ThriftThread::RunRunnable (this=0x8f8c200, runnable=..., promise=0x7f9509d4c4f0) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/rpc/thrift-thread.cc:61
#5  0x0000000001261685 in boost::_mfi::mf2<void, impala::ThriftThread, boost::shared_ptr<apache::thrift::concurrency::Runnable>, impala::Promise<unsigned long>*>::operator() (this=0x9c4b290, p=0x8f8c200, a1=..., a2=0x7f9509d4c4f0)
    at /tmp/impala-deps/boost-1.57.0/include/boost/bind/mem_fn_template.hpp:280
#6  0x000000000126151b in boost::_bi::list3<boost::_bi::value<impala::ThriftThread*>, boost::_bi::value<boost::shared_ptr<apache::thrift::concurrency::Runnable> >, boost::_bi::value<impala::Promise<unsigned long>*> >::operator()<boost::_mfi::mf2<void, impala::ThriftThread, boost::shared_ptr<apache::thrift::concurrency::Runnable>, impala::Promise<unsigned long>*>, boost::_bi::list0> (this=0x9c4b2a0, f=..., a=...) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind.hpp:392
#7  0x0000000001261267 in boost::_bi::bind_t<void, boost::_mfi::mf2<void, impala::ThriftThread, boost::shared_ptr<apache::thrift::concurrency::Runnable>, impala::Promise<unsigned long>*>, boost::_bi::list3<boost::_bi::value<impala::ThriftThread*>, boost::_bi::value<boost::shared_ptr<apache::thrift::concurrency::Runnable> >, boost::_bi::value<impala::Promise<unsigned long>*> > >::operator() (this=0x9c4b290) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#8  0x000000000126117a in boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void, boost::_mfi::mf2<void, impala::ThriftThread, boost::shared_ptr<apache::thrift::concurrency::Runnable>, impala::Promise<unsigned long>*>, boost::_bi::list3<boost::_bi::value<impala::ThriftThread*>, boost::_bi::value<boost::shared_ptr<apache::thrift::concurrency::Runnable> >, boost::_bi::value<impala::Promise<unsigned long>*> > >, void>::invoke (function_obj_ptr=...) at /tmp/impala-deps/boost-1.57.0/include/boost/function/function_template.hpp:153
#9  0x000000000127ff48 in boost::function0<void>::operator() (this=0x7f9496c8dc40) at /tmp/impala-deps/boost-1.57.0/include/boost/function/function_template.hpp:767
#10 0x000000000152c0af in impala::Thread::SuperviseThread(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*) (name=..., category=..., functor=..., thread_started=0x7f9509d4c2e0)
    at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/util/thread.cc:316
#11 0x00000000015337e0 in boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> >::operator()<void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list0&, int) (this=0x8c2a5c0, 
    f=@0x8c2a5b8: 0x152bdea <impala::Thread::SuperviseThread(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*)>, a=...) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind.hpp:457
#12 0x0000000001533723 in boost::_bi::bind_t<void, void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> > >::operator()() (this=0x8c2a5b8) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#13 0x00000000015336e6 in boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> > > >::run() (this=0x8c2a400) at /tmp/impala-deps/boost-1.57.0/include/boost/thread/detail/thread.hpp:116
#14 0x00000000019578fa in thread_proxy ()
#15 0x00007f955e08b851 in start_thread () from sysroot/lib64/libpthread.so.0
#16 0x00007f955d62d94d in clone () from sysroot/lib64/libc.so.6
{code}

It looks like it was blcocked on network I/O.

There were actually some other interesting stacks. It looks like the process was being shut down cleanly from the JVM calling exit() and in the process of running static destructors, but there may be a race between the static lock destructor and a different thread trying to access the lock. One of the static destructors tries to join a thread that may be sleeping for 500ms, so there is a pretty big window for a race here.

{code}
Thread 77 (LWP 10179):
#0  0x00007f955e08f43c in pthread_cond_wait@@GLIBC_2.3.2 () from sysroot/lib64/libpthread.so.0
#1  0x00000000010ba9bd in boost::condition_variable::wait (this=0x4e6c058, m=...) at /tmp/impala-deps/boost-1.57.0/include/boost/thread/pthread/condition_variable.hpp:73
#2  0x000000000195832c in boost::thread::join_noexcept() ()
#3  0x0000000001253887 in boost::thread::join (this=0x4dd5230) at /tmp/impala-deps/boost-1.57.0/include/boost/thread/detail/thread.hpp:767
#4  0x00000000014ef166 in impala::PeriodicCounterUpdater::~PeriodicCounterUpdater (this=0x4053d00 <impala::PeriodicCounterUpdater::state_>, __in_chrg=<optimized out>) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/util/periodic-counter-updater.cc:41
#5  0x00007f955d57ade2 in exit () from sysroot/lib64/libc.so.6
#6  0x00007f955f46c1c7 in vm_direct_exit(int) () from sysroot/opt/toolchain/sun-jdk-64bit-1.7.0.75/jre/lib/amd64/server/libjvm.so
#7  0x00007f955f819605 in VM_Operation::evaluate() () from sysroot/opt/toolchain/sun-jdk-64bit-1.7.0.75/jre/lib/amd64/server/libjvm.so
#8  0x00007f955f8179ca in VMThread::evaluate_operation(VM_Operation*) () from sysroot/opt/toolchain/sun-jdk-64bit-1.7.0.75/jre/lib/amd64/server/libjvm.so
#9  0x00007f955f817d4e in VMThread::loop() () from sysroot/opt/toolchain/sun-jdk-64bit-1.7.0.75/jre/lib/amd64/server/libjvm.so
#10 0x00007f955f8181c0 in VMThread::run() () from sysroot/opt/toolchain/sun-jdk-64bit-1.7.0.75/jre/lib/amd64/server/libjvm.so
#11 0x00007f955f68fb88 in java_start(Thread*) () from sysroot/opt/toolchain/sun-jdk-64bit-1.7.0.75/jre/lib/amd64/server/libjvm.so
#12 0x00007f955e08b851 in start_thread () from sysroot/lib64/libpthread.so.0
#13 0x00007f955d62d94d in clone () from sysroot/lib64/libc.so.6
{code}

{code}
Thread 70 (LWP 10168):
#0  0x00007f955d5f1bcd in nanosleep () from sysroot/lib64/libc.so.6
#1  0x00007f955d626da4 in usleep () from sysroot/lib64/libc.so.6
#2  0x00000000015338b9 in impala::SleepForMs (duration_ms=500) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/util/time.cc:23
#3  0x00000000014ef978 in impala::PeriodicCounterUpdater::UpdateLoop (this=0x4053d00 <impala::PeriodicCounterUpdater::state_>) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/util/periodic-counter-updater.cc:131
#4  0x00000000014fa243 in boost::_mfi::mf0<void, impala::PeriodicCounterUpdater>::operator() (this=0x4e6c1b8, p=0x4053d00 <impala::PeriodicCounterUpdater::state_>) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/mem_fn_template.hpp:49
#5  0x00000000014fa1a6 in boost::_bi::list1<boost::_bi::value<impala::PeriodicCounterUpdater*> >::operator()<boost::_mfi::mf0<void, impala::PeriodicCounterUpdater>, boost::_bi::list0> (this=0x4e6c1c8, f=..., a=...) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind.hpp:253
#6  0x00000000014fa151 in boost::_bi::bind_t<void, boost::_mfi::mf0<void, impala::PeriodicCounterUpdater>, boost::_bi::list1<boost::_bi::value<impala::PeriodicCounterUpdater*> > >::operator() (this=0x4e6c1b8) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#7  0x00000000014fa114 in boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, impala::PeriodicCounterUpdater>, boost::_bi::list1<boost::_bi::value<impala::PeriodicCounterUpdater*> > > >::run (this=0x4e6c000)
    at /tmp/impala-deps/boost-1.57.0/include/boost/thread/detail/thread.hpp:116
#8  0x00000000019578fa in thread_proxy ()
#9  0x00007f955e08b851 in start_thread () from sysroot/lib64/libpthread.so.0
#10 0x00007f955d62d94d in clone () from sysroot/lib64/libc.so.6
{code}

{code}
Thread 63 (LWP 10553):
#0  0x00007f955d5f1bcd in nanosleep () from sysroot/lib64/libc.so.6
#1  0x00007f955d5f1a40 in sleep () from sysroot/lib64/libc.so.6
#2  0x00000000013b0f38 in impala::ImpalaServer::LogFileFlushThread (this=0x7365600) at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/service/impala-server.cc:636
#3  0x00000000013f89c3 in boost::_mfi::mf0<void, impala::ImpalaServer>::operator() (this=0x7f950ed54c48, p=0x7365600) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/mem_fn_template.hpp:49
#4  0x00000000013f74f0 in boost::_bi::list1<boost::_bi::value<impala::ImpalaServer*> >::operator()<boost::_mfi::mf0<void, impala::ImpalaServer>, boost::_bi::list0> (this=0x7f950ed54c58, f=..., a=...) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind.hpp:253
#5  0x00000000013f4f61 in boost::_bi::bind_t<void, boost::_mfi::mf0<void, impala::ImpalaServer>, boost::_bi::list1<boost::_bi::value<impala::ImpalaServer*> > >::operator() (this=0x7f950ed54c48) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#6  0x00000000013f138d in boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void, boost::_mfi::mf0<void, impala::ImpalaServer>, boost::_bi::list1<boost::_bi::value<impala::ImpalaServer*> > >, void>::invoke (function_obj_ptr=...)
    at /tmp/impala-deps/boost-1.57.0/include/boost/function/function_template.hpp:153
#7  0x000000000127ff48 in boost::function0<void>::operator() (this=0x7f950ed54c40) at /tmp/impala-deps/boost-1.57.0/include/boost/function/function_template.hpp:767
#8  0x000000000152c0af in impala::Thread::SuperviseThread(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*) (name=..., category=..., functor=..., thread_started=0x7fff739bdb70)
    at /data/jenkins/workspace/impala-private-build-and-test/repos/Impala/be/src/util/thread.cc:316
#9  0x00000000015337e0 in boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> >::operator()<void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list0&, int) (this=0x97bd5c0, 
    f=@0x97bd5b8: 0x152bdea <impala::Thread::SuperviseThread(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*)>, a=...) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind.hpp:457
#10 0x0000000001533723 in boost::_bi::bind_t<void, void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> > >::operator()() (this=0x97bd5b8) at /tmp/impala-deps/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#11 0x00000000015336e6 in boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(std::string const&, std::string const&, boost::function<void ()>, impala::Promise<long>*), boost::_bi::list4<boost::_bi::value<std::string>, boost::_bi::value<std::string>, boost::_bi::value<boost::function<void ()> >, boost::_bi::value<impala::Promise<long>*> > > >::run() (this=0x97bd400) at /tmp/impala-deps/boost-1.57.0/include/boost/thread/detail/thread.hpp:116
#12 0x00000000019578fa in thread_proxy ()
#13 0x00007f955e08b851 in start_thread () from sysroot/lib64/libpthread.so.0
#14 0x00007f955d62d94d in clone () from sysroot/lib64/libc.so.6
{code}

It looks like pthread_mutex_destroy() has been called on the lock:

{code}
(gdb) p this
$3 = (boost::mutex * const) 0x4051a40 <impala::MemTracker::static_mem_trackers_lock_>
(gdb) p *this
$4 = {m = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = -1, __spins = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = '\000' <repeats 16 times>, "\377\377\377\377", '\000' <repeats 19 times>, __align = 0}}
{code}

__kind would be a positive value if the mutex was initialised.

I suspect this will solve the problem. Will reopen if it reoccurs.



commit 285a77554478170b0138cb96b11ab3c67c7d928b
Author: Tim Armstrong <tarmstrong@cloudera.com>
Date:   Wed Apr 27 15:25:55 2016 -0700

    IMPALA-3433: Simplify global destructors

    This patch aims to simplify process teardown by reducing the work that
    global destructors do and avoid potential delays and exceptions that
    could leave the process in a weird state.

    Don't try to tear down periodic counter thread: it will be terminated
    anyway and can cause delays in tearing down the process.

    Use a SpinLock instead of mutexes for global locks. Boost mutexes have a
    destructor that invalidates the lock, which can cause races if other
    threads try to lock or unlock the lock.

    Based on some limited testing, this speeds up process shutdown greatly
    and avoids exceptions being thrown. On a run before this patch, process
    shutdown frequently took 100+ seconds. After this patch, it completed
    consistently in < 1s.

    Change-Id: I2cc3a4c53811f6a18c2a6010c3541ca149e5672c
    Reviewed-on: http://gerrit.cloudera.org:8080/2892
    Reviewed-by: Dan Hecht <dhecht@cloudera.com>
    Tested-by: Internal Jenkins

