Slaves are still active if anyone has time to triage:

    [http://sandbox.jenkins.cloudera.com/job/impala-umbrella-build-and-test/4952/consoleFull]
    09:20:00 Started by upstream project "impala-asf-master-core" build number 554
    09:20:00 Building remotely on impala-boost-static-burst-slave-17c6.vpc.cloudera.com in workspace /data/jenkins/workspace/impala-umbrella-build-and-test

    [http://sandbox.jenkins.cloudera.com/job/impala-umbrella-build-and-test/5016/consoleFull]
    02:42:19 Started by upstream project "impala-asf-master-exhaustive" build number 90
    02:42:19 Building remotely on impala-boost-static-burst-slave-05c6.vpc.cloudera.com in workspace /data/jenkins/workspace/impala-umbrella-build-and-test 

Was able to grab a core dump from one of the running processes. Copying it to impala-desktop now. 

Backtraces are in [^gdb.txt] 

Looks like there's a recursive acquisition of static_block_mgrs_lock_, which would explain the hang. I don't think that code has been changed recently, so maybe there was a change in timing with the test code.

{code}
Thread 105 (Thread 0x7f4b85c44700 (LWP 18704)):
#0  0x00000000028164ca in sys_futex (a=0x4166250, o=128, v=46, t=0x7f4b85c435b0) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/gutil/linux_syscall_support.h:2713
#1  0x000000000281660b in base::internal::SpinLockDelay (w=0x4166250, value=46, loop=2202068) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/gutil/spinlock_linux-inl.h:88
#2  0x0000000002816397 in base::SpinLock::SlowLock (this=0x4166250) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/gutil/spinlock.cc:135
#3  0x000000000118bd41 in base::SpinLock::Lock (this=0x4166250) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/gutil/spinlock.h:75
#4  0x000000000118bdb6 in impala::SpinLock::lock (this=0x4166250) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/util/spinlock.h:34
#5  0x0000000001196c28 in boost::lock_guard<impala::SpinLock>::lock_guard (this=0x7f4b85c436e0, m_=...) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/boost-1.57.0/include/boost/thread/lock_guard.hpp:38
#6  0x000000000142c874 in impala::BufferedBlockMgr::~BufferedBlockMgr (this=0xa5eb000, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/runtime/buffered-block-mgr.cc:528
#7  0x0000000001441532 in std::_Sp_counted_ptr<impala::BufferedBlockMgr*, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x958aa60) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:373
#8  0x000000000119b0c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x958aa60) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:149
#9  0x0000000001196d51 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7f4b85c43968, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:666
#10 0x0000000001194790 in std::__shared_ptr<impala::BufferedBlockMgr, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7f4b85c43960, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:914
#11 0x00000000011947aa in std::shared_ptr<impala::BufferedBlockMgr>::~shared_ptr (this=0x7f4b85c43960, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr.h:93
#12 0x000000000142ca0e in impala::BufferedBlockMgr::~BufferedBlockMgr (this=0xa5e9c00, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/runtime/buffered-block-mgr.cc:546
#13 0x0000000001441532 in std::_Sp_counted_ptr<impala::BufferedBlockMgr*, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x958b740) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:373
#14 0x000000000119b0c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x958b740) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:149
#15 0x0000000001196d51 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7f4b85c43be8, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:666
#16 0x0000000001194790 in std::__shared_ptr<impala::BufferedBlockMgr, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7f4b85c43be0, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h:914
#17 0x00000000011947aa in std::shared_ptr<impala::BufferedBlockMgr>::~shared_ptr (this=0x7f4b85c43be0, __in_chrg=<value optimized out>) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/gcc-4.9.2/include/c++/4.9.2/bits/shared_ptr.h:93
#18 0x0000000001194879 in impala::BufferedBlockMgrTest::CreateDestroyThread (this=0xa0c9430, state=0x9411b00) at /data/jenkins/workspace/impala-umbrella-build-and-test/repos/Impala/be/src/runtime/buffered-block-mgr-test.cc:551
#19 0x00000000011ab27e in boost::_mfi::mf1<void, impala::BufferedBlockMgrTest, impala::RuntimeState*>::operator() (this=0x6335fb8, p=0xa0c9430, a1=0x9411b00) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/boost-1.57.0/include/boost/bind/mem_fn_template.hpp:165
#20 0x00000000011ab0e1 in boost::_bi::list2<boost::_bi::value<impala::BufferedBlockMgrTest*>, boost::_bi::value<impala::RuntimeState*> >::operator()<boost::_mfi::mf1<void, impala::BufferedBlockMgrTest, impala::RuntimeState*>, boost::_bi::list0> (this=0x6335fc8, f=..., a=...) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/boost-1.57.0/include/boost/bind/bind.hpp:313
#21 0x00000000011aac45 in boost::_bi::bind_t<void, boost::_mfi::mf1<void, impala::BufferedBlockMgrTest, impala::RuntimeState*>, boost::_bi::list2<boost::_bi::value<impala::BufferedBlockMgrTest*>, boost::_bi::value<impala::RuntimeState*> > >::operator() (this=0x6335fb8) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/boost-1.57.0/include/boost/bind/bind_template.hpp:20
#22 0x00000000011a9e38 in boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf1<void, impala::BufferedBlockMgrTest, impala::RuntimeState*>, boost::_bi::list2<boost::_bi::value<impala::BufferedBlockMgrTest*>, boost::_bi::value<impala::RuntimeState*> > > >::run (this=0x6335e00) at /data/jenkins/workspace/impala-umbrella-build-and-test/Impala-Toolchain/boost-1.57.0/include/boost/thread/detail/thread.hpp:116
#23 0x0000000001a5bc1a in thread_proxy ()
#24 0x000000325d607851 in start_thread () from /lib64/libpthread.so.0
#25 0x000000325d2e894d in clone () from /lib64/libc.so.6
{code}

I think the problem is that in the below code the 'mgr' shared_ptr may end up being the last reference to a BufferedBlockMgr, so when it's destroyed it ends up calling the destructor recursively.

{code}
  {
    lock_guard<SpinLock> lock(static_block_mgrs_lock_);
    BlockMgrsMap::iterator it = query_to_block_mgrs_.find(query_id_);
    // IMPALA-2286: Another fragment may have called Create() for this query_id_ and
    // saw that this BufferedBlockMgr is being destructed.  That fragement will
    // overwrite the map entry for query_id_, pointing it to a different
    // BufferedBlockMgr object.  We should let that object's destructor remove the
    // entry.  On the other hand, if the second BufferedBlockMgr is destructed before
    // this thread acquires the lock, then we'll remove the entry (because we can't
    // distinguish between the two expired pointers), and when the other
    // ~BufferedBlockMgr() call occurs, it won't find an entry for this query_id_.
    if (it != query_to_block_mgrs_.end()) {
      shared_ptr<BufferedBlockMgr> mgr = it->second.lock();
      if (mgr.get() == NULL) {
        // The BufferBlockMgr object referenced by this entry is being deconstructed.
        query_to_block_mgrs_.erase(it);
      } else {
        // The map references another (still valid) BufferedBlockMgr.
        DCHECK_NE(mgr.get(), this);
      }
    }
  }
{code}

[~tarmstrong] Can I abort these jobs and release the Jenkins slave?

Go for it, I got all the info I need I think



IMPALA-4274: hang in buffered-block-mgr-test

We started seeing hangs in CreateDestroyMulti() where a
thread was recursively acquiring static_block_mgrs_lock_.
This is only possible because a shared_ptr is destroyed
while holding the lock.

The fix is to reset the shared_ptr only after releasing
the lock.

Testing:
I was unable to reproduce the hang locally, but the
callstack in the JIRA was a strong enough smoking gun
to feel confident that this should fix the hang.

Change-Id: I21f3da1d09cdd101a28ee850f46f24acd361b604
Reviewed-on: http://gerrit.cloudera.org:8080/4690
Reviewed-by: Alex Behm <alex.behm@cloudera.com>
Reviewed-by: Marcel Kornacker <marcel@cloudera.com>
Tested-by: Internal Jenkins

