Failed again. [~ableegoldman] Could you help reviewing the PR?

And one more.

[~ableegoldman] [~mjsax] , It looks like the assignor assigned the partition "topic-0" to multiple consumers: consumer1 and consumer2. There should be a rare case in general assignor that causes this issue. As we know that the general assignor was complex and slow, I think it's a good chance to fix it. I'll work on in in KAFKA-12676. Thank you.

Hey [~showuon] just checking in since I saw this fail again, you're saying there's a bug in the generalAssign case that's causing it to assign the same partition to more than one consumer? If so, what's happening in this case – do we actually catch this bug somewhere in the assignor or coordinator, or would this actually result in the two consumers taking ownership of the same partition at the same time?

If the latter, that's a pretty severe bug and we should absolutely be trying to get a fix in possibly as a blocker for the next release (of course AFAICT the general case where consumers have unequal subscriptions is extremely rare, but it's still a correctness bug and thus critical).

Do you have any sense of whether this was a newly introduced bug or has it been there since the sticky assignment algorithm was first written? I'm pretty sure we haven't touched the general assignment algorithm so my guess it was always there, and thus maybe not a blocker, but just wondering

[~ableegoldman] ,

I agree with you that if this actually result in the two consumers taking ownership of the same partition at the same time, that would be a severe bug, and we should fix it soon!

I have this assumption is because log output in this Jira ticket's description. However, I also saw this failed test in jenkins after this ticket opened, but no similar error logs as this ticket showed. It's just slow. I'm stilling waiting to see a failed case and check the complete logs where there is assignment error.

> I'm pretty sure we haven't touched the general assignment algorithm

Right, we didn't touch or change the general assignment algorithm. So this bug is already there when first written.

 

Do you have the failed test jenkins link for me to check the complete log?

Thank you.

Hmm, I'm sure it was from one of the PRs I merged in the last week either by me or by Walker but now I don't see it – I should have included the link in my original comment :( But let me take another pass to see if I can find the logs again

Thanks as always for looking into this!

Happened again in {{StickyAsignor}} and {{CooperativeStickyAssignor}}:

{code:java}
[2022-08-12 11:23:40,486] ERROR Found multiple consumers consumer1 and consumer2 claiming the same TopicPartition topic-0 in the same generation -1, this will be invalidated and removed from their previous assignment. (org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor:151)
{code}

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-12497/7/testReport/org.apache.kafka.clients.consumer/CooperativeStickyAssignorTest/Build___JDK_8_and_Scala_2_12___testLargeAssignmentAndGroupWithNonEqualSubscription__/

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-12497/7/testReport/org.apache.kafka.clients.consumer/StickyAssignorTest/Build___JDK_8_and_Scala_2_12___testLargeAssignmentAndGroupWithNonEqualSubscription__/

