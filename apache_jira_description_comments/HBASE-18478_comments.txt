| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 58s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 35s{color} | {color:green} branch-1 passed with JDK v1.8.0_131 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 35s{color} | {color:green} branch-1 passed with JDK v1.7.0_131 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 58s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 18s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  1s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} branch-1 passed with JDK v1.8.0_131 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 36s{color} | {color:green} branch-1 passed with JDK v1.7.0_131 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} the patch passed with JDK v1.8.0_131 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 35s{color} | {color:green} the patch passed with JDK v1.7.0_131 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 16m  8s{color} | {color:green} The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} the patch passed with JDK v1.8.0_131 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 34s{color} | {color:green} the patch passed with JDK v1.7.0_131 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 97m 20s{color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}128m 24s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestSCVFWithMiniCluster |
|   | hadoop.hbase.client.TestClientScannerRPCTimeout |
|   | hadoop.hbase.master.TestAssignmentListener |
|   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery |
|   | hadoop.hbase.regionserver.TestRSKilledWhenInitializing |
|   | hadoop.hbase.security.visibility.TestVisibilityLabelsWithACL |
|   | hadoop.hbase.mapreduce.TestTableSnapshotInputFormat |
|   | hadoop.hbase.TestZooKeeper |
| Timed out junit tests | org.apache.hadoop.hbase.security.access.TestAccessController2 |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:6f1cc2c |
| JIRA Issue | HBASE-18478 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12879503/HBASE-18478.branch-1.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 2281bbf55468 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 9278037 |
| Default Java | 1.7.0_131 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_131 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_131 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/7839/artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7839/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7839/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Patch seems fine. This only use of RegionFinder in the code base? [~zyork]

I developed this on branch-1, so I checked there, but I will check in master as well.

Also, I would like to get this pushed to branch-1.4 and branch-2 as well (and maybe branch-1.3), would you like me to submit separate patches for each?

I think the code is very similar in all the branches. (Also we have too many branches :) )

[~stack] These are the only uses in the codebase besides the other loadbalancers using regionFinder to create the cluster which is the point of this patch, so we are good. 

It doesn't look like any of the unit test failures are related (most of them are timeouts and this is a configured setting so it should have no default change).

[~stack] Can you take another look please?

+1


[~stack] [~apurtell] Any chance we can get traction on this? It's a fairly simple change.

[~stack] [~apurtell] Ping?

Sorry [~zyork]. Queuing this up for commit. Let me test it first (again)

Pushed to branch-1.4 and up

Thanks [~apurtell]!

FAILURE: Integrated in Jenkins build HBase-1.5 #71 (See [https://builds.apache.org/job/HBase-1.5/71/])
HBASE-18478 Allow users to remove RegionFinder from LoadBalancer (apurtell: rev bafc6e523efba67b5829d2095500c134df1ae4ce)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java


FAILURE: Integrated in Jenkins build HBase-2.0 #543 (See [https://builds.apache.org/job/HBase-2.0/543/])
HBASE-18478 Allow users to remove RegionFinder from LoadBalancer (apurtell: rev d0a54352e8a4f27adaaa62447d1eef61e45922a7)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java


SUCCESS: Integrated in Jenkins build HBase-1.4 #926 (See [https://builds.apache.org/job/HBase-1.4/926/])
HBASE-18478 Allow users to remove RegionFinder from LoadBalancer (apurtell: rev cfbbcf5c14f1a5d5d473b390e21d50b88ccaabc4)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java


FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #3744 (See [https://builds.apache.org/job/HBase-Trunk_matrix/3744/])
HBASE-18478 Allow users to remove RegionFinder from LoadBalancer (apurtell: rev 8301734594011e7f94f992e6f8c815580a6b62d8)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java


We should ask Hadoop to add a way for us to query the FileSystem for this kind of information so that our users don't have to know to turn a configuration knob.

[~busbey] Do you mean something like what is proposed in https://issues.apache.org/jira/browse/HADOOP-9565?

yeah. or something analogous to the newer OutputStreamCapabilities stuff that notes if a stream can be synced.

This test fails consistently after this went in:

https://builds.apache.org/job/HBASE-Flaky-Tests/21513/testReport/junit/org.apache.hadoop.hbase.client/TestMultiRespectsLimits/testMultiLimits/

Zach:
Can you check ?

TestMultiRespectsLimits passes for me repeatedly. Test JRE is 8u131. Checked with master, branch-2, and branch-1. Not sure how that failure could be related to this change. I'm guessing something else is going on. Can you post detail sufficient for reproduction [~ted_yu]? 

I wouldn't have committed if the branch-1 suite had a failure due to this change, FWIW

Here is the version of Java on Linux where I can reproduce the test failure:

java version "1.8.0_131"
Java(TM) SE Runtime Environment (build 1.8.0_131-b11)
Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)

Flaky test board led me to this JIRA since the commit was the first build where the test failed - and it has been failing consistently on Apache Jenkins.

Ok I switched to a different dev box (Linux) and can repro, but the failure happens at bc790fe26acb9449afd7b3d316e6661933a86b40 on master which is the commit before this one, so you're barking up the wrong tree Ted. 

hmm
Would change to src/site/site.xml cause the test to fail ?

