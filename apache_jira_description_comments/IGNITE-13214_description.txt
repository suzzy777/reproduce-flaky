Next code runs fine:

{code:c#}
            var barier = new Barrier(2);
            var cache = Cache();
            cache.Put(1, 1);
            var task = Task.Factory.StartNew(() =>
            {
                var otherCache = Cache();
                barier.SignalAndWait();
                otherCache.Put(1, 10);
                barier.SignalAndWait();
            });
            using (var txscp = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions{IsolationLevel = IsolationLevel.Serializable}))
            {
                var before = cache.Get(1);
                barier.SignalAndWait();
                barier.SignalAndWait();
                txscp.Complete();
            }
            Task.WaitAll(task);
            barier.Dispose();
{code}

When I switch to Ignite transactions I get exception:

{code:c#}
            using (var tx = Transactions.TxStart(TransactionConcurrency.Optimistic, TransactionIsolation.Serializable))
            {
                var before = cache.Get(1);
                barier.SignalAndWait();
                barier.SignalAndWait();
                tx.Commit();
            }
{code}

{noformat}
Apache.Ignite.Core.Transactions.TransactionOptimisticException : Failed to prepare transaction (lock conflict): GridNearTxLocal [mappings=IgniteTxMappingsImpl [], 
{noformat}

_Cache_ is _IIgnite.Cache<int, int>()_  and _Transactions_ is _IIgnite.GetTransactions()_