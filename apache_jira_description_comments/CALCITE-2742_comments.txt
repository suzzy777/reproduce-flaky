Hello, I have partly implemented this on CALCITE-2194.

Hi [~ptrbojko], your approach still couples the setting of USER to a static object ([CalcitePrincipalFairy|https://github.com/apache/calcite/pull/647/files#diff-4107ae612825659338abc402883163d2]). We're looking to be able to set this through DataContext directly. You should be able to update your patch on top of mine to still behave as you prefer by setting the DataContext properties.

In general, I suggest you try to avoid using the static + thread local pattern as much as possible for this kind of thing as it assumes that all code will run within a single thread (which is definitely not necessarily the case for our use case).

Reviewing PR 1031 now it has been rebased.

[~siddteotia] One question: is the "Optional" stuff necessary? We can assume that USER and SYSTEM_USER are set in DataContext, right? I don't like over-defensive programming.

[~siddteotia] I've revised your change in https://github.com/julianhyde/calcite/commit/ac368460e188ed88d6fac420779374bbab9992f6; please review.

[~julianhyde], Thanks for reviewing the change and amending it. It looks good to me. 

Fixed in [https://github.com/apache/calcite/commit/a09fa1eeb7653c4868e0d3f239dc19591110e045;] thanks [~siddteotia] and [~jnadeau]!

Resolved in release 1.20.0 (2019-06-24)

