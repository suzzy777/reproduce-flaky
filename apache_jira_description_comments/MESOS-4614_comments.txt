The executor did not even send the {{Subscribe}} call after it connected with the agent. 

This is similar to the behavior that we have been observing with another flaky test in {{MESOS-3273}} in which the example test framework does not send the initial {{SUBSCRIBE}} call.

Patch: https://reviews.apache.org/r/43285/

commit 1af86559c3cf47159aa00c289208bbec50fd6df9
Author: Anand Mazumdar <mazumdar.anand@gmail.com>
Date:   Mon Feb 8 15:32:22 2016 -0800

    Fixed flakiness in SlaveRecoveryTest/0.CleanupHTTPExecutor.
    
    This change fixes the flakiness in this test. The issue was a race between the
    `connected` callback being called before we did `process::spawn` to start the
    process.
    
    The details of the race that lead to the failure are as follows:
    - We started the executor library inside the constructor of `TestExecutor`. The
      callback function did `process::defer(self(), &Self::connected)`
    - The `connected` callback can be invoked by the Executor library before we got
      a chance to actually invoke `process::spawn` on the `TestExecutor` process
    itself. This in can turn lead to the `dispatch` being silently dropped.
    
    This change now starts the library inside the `initialize` function that is
    gurranteed to be called after `process::spawn` is invoked.
    
    Review: https://reviews.apache.org/r/43285/


