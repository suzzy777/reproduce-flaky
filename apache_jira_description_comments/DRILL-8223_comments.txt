jnturton opened a new pull request, #2547:
URL: https://github.com/apache/drill/pull/2547

   # [DRILL-8223](https://issues.apache.org/jira/browse/DRILL-8223): Refactor auth modes dropping DRILL_PROCESS and allowing credential providers everywhere
   
   ## Description
   
   Remove the abstract CredentialedStoragePluginConfig (formerly AbstractSecuredStoragePluginConfig) class and promote the credential provider members to the parent StoragePluginConfig. Since having a credential provider provider is optional, there is no harm in giving the capability to every plugin's config.
   
   Drop the DRILL_PROCESS auth mode since this case is adequately covered by using SHARED_USER with no credentials specified.
   
   Bug fix. In storage-jdbc and when there are no JDBC credentials for the query user, only forgo an attempt to connect if the auth mode is USER_TRANSLATION. If it is SHARED_USER, proceed with an attempt to connect (examples of this case are unsecured DBs and BigQuery which requires OAuth tokens in the JDBC URL instead of a JDBC username and password).
   
   ## Documentation
   New auth mode documentation once the feature has stabilised.
   
   ## Testing
   TODO
   




vvysotskyi commented on code in PR #2547:
URL: https://github.com/apache/drill/pull/2547#discussion_r872035428


##########
exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/StorageResources.java:
##########
@@ -276,24 +280,24 @@ public Response updateAccessToken(@PathParam("name") String name, OAuthTokenCont
   public Response updateOAuthTokens(@PathParam("name") String name,
                                     OAuthTokenContainer tokenContainer) {
     try {
-      if (storage.getPlugin(name).getConfig() instanceof CredentialedStoragePluginConfig) {
-        DrillbitContext context = ((AbstractStoragePlugin) storage.getPlugin(name)).getContext();
-        OAuthTokenProvider tokenProvider = context.getoAuthTokenProvider();
-        PersistentTokenTable tokenTable = tokenProvider.getOauthTokenRegistry().getTokenTable(name);
-
-        // Set the access and refresh token
-        tokenTable.setAccessToken(tokenContainer.getAccessToken());
-        tokenTable.setRefreshToken(tokenContainer.getRefreshToken());
-
-        return Response.status(Status.OK)
-          .entity("Access tokens have been updated.")
-          .build();
-      } else {
+      StoragePluginConfig config = storage.getPlugin(name).getConfig();
+      if (config.getValue("type") != "http") {

Review Comment:
   The intention was to allow it not only for HTTP but for all other plugins that have `CredentialedStoragePluginConfig`, so they theoretically can also use OAuth and update tokens.





vvysotskyi commented on code in PR #2547:
URL: https://github.com/apache/drill/pull/2547#discussion_r872035895


##########
exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/StorageResources.java:
##########
@@ -276,24 +280,24 @@ public Response updateAccessToken(@PathParam("name") String name, OAuthTokenCont
   public Response updateOAuthTokens(@PathParam("name") String name,
                                     OAuthTokenContainer tokenContainer) {
     try {
-      if (storage.getPlugin(name).getConfig() instanceof CredentialedStoragePluginConfig) {
-        DrillbitContext context = ((AbstractStoragePlugin) storage.getPlugin(name)).getContext();
-        OAuthTokenProvider tokenProvider = context.getoAuthTokenProvider();
-        PersistentTokenTable tokenTable = tokenProvider.getOauthTokenRegistry().getTokenTable(name);
-
-        // Set the access and refresh token
-        tokenTable.setAccessToken(tokenContainer.getAccessToken());
-        tokenTable.setRefreshToken(tokenContainer.getRefreshToken());
-
-        return Response.status(Status.OK)
-          .entity("Access tokens have been updated.")
-          .build();
-      } else {
+      StoragePluginConfig config = storage.getPlugin(name).getConfig();
+      if (config.getValue("type") != "http") {

Review Comment:
   But looks like error message below should be fixed





vdiravka commented on code in PR #2547:
URL: https://github.com/apache/drill/pull/2547#discussion_r872117809


##########
contrib/storage-http/src/test/java/org/apache/drill/exec/store/http/TestHttpPlugin.java:
##########
@@ -1112,6 +1112,7 @@ public void testLimitPushdownWithFilter() throws Exception {
   }
 
   @Test
+  @Ignore("This test is flaky when run in CI")

Review Comment:
   #2548 should fix this





cgivre commented on code in PR #2547:
URL: https://github.com/apache/drill/pull/2547#discussion_r872465743


##########
exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/StorageResources.java:
##########
@@ -276,24 +280,24 @@ public Response updateAccessToken(@PathParam("name") String name, OAuthTokenCont
   public Response updateOAuthTokens(@PathParam("name") String name,
                                     OAuthTokenContainer tokenContainer) {
     try {
-      if (storage.getPlugin(name).getConfig() instanceof CredentialedStoragePluginConfig) {
-        DrillbitContext context = ((AbstractStoragePlugin) storage.getPlugin(name)).getContext();
-        OAuthTokenProvider tokenProvider = context.getoAuthTokenProvider();
-        PersistentTokenTable tokenTable = tokenProvider.getOauthTokenRegistry().getTokenTable(name);
-
-        // Set the access and refresh token
-        tokenTable.setAccessToken(tokenContainer.getAccessToken());
-        tokenTable.setRefreshToken(tokenContainer.getRefreshToken());
-
-        return Response.status(Status.OK)
-          .entity("Access tokens have been updated.")
-          .build();
-      } else {
+      StoragePluginConfig config = storage.getPlugin(name).getConfig();
+      if (config.getValue("type") != "http") {

Review Comment:
   @jnturton This is actually addressed in https://github.com/apache/drill/pull/2544.   I refactored the OAuth stuff so that if other plugins needed to use OAuth, they can reuse almost all of what Drill already does.





cgivre commented on PR #2547:
URL: https://github.com/apache/drill/pull/2547#issuecomment-1127089235

   @jnturton Thank you very much for this PR.  Could we merge [DRILL-8220](https://github.com/apache/drill/pull/2544) prior to merging this PR?   It has some modifications to the HTTP plugin that are relevant. 




jnturton commented on PR #2547:
URL: https://github.com/apache/drill/pull/2547#issuecomment-1129010432

   Now rebased on #2544.




cgivre commented on code in PR #2547:
URL: https://github.com/apache/drill/pull/2547#discussion_r875147774


##########
exec/java-exec/src/main/java/org/apache/drill/exec/server/rest/OAuthRequests.java:
##########
@@ -121,26 +106,19 @@ public static Response updateRefreshToken(String name, OAuthTokenContainer token
   public static Response updateOAuthTokens(String name, OAuthTokenContainer tokenContainer, StoragePluginRegistry storage,
                                            UserAuthEnabled authEnabled, SecurityContext sc) {
     try {
-      if (storage.getPlugin(name).getConfig() instanceof CredentialedStoragePluginConfig) {

Review Comment:
   @jnturton Thanks for this PR.  These functions used to have some checks to see if the storage plugin in question was using OAuth.  The prerequisite was that the plugin used the `CredentialedStoragePluginConfig`.  
   
   Now that is no longer an option, do you think it's worth adding some check to see if the plugin is in fact using OAuth?  If not, throw some sort of error saying you can't update tokens on a non-OAuth plugin?
   
   In theory a user would never really be given that choice because the UI takes care of that for them so I'm not sure if it is really necessary or not. 





cgivre merged PR #2547:
URL: https://github.com/apache/drill/pull/2547




jnturton opened a new pull request, #2559:
URL: https://github.com/apache/drill/pull/2559

   # [DRILL-8223](https://issues.apache.org/jira/browse/DRILL-8223): Change JDK 17 Docker base image from Oracle Linux to Debian.
   
   ## Description
   
   The change is made in order to remain consistent with the OS in the base images for JDK 8 and 11 since users may have derived
   from the Drill Dockerfile or written other scripts that assume a Debian-like OS inside the Docker image.
   
   ## Documentation
   No changes.
   
   ## Testing
   Build a Docker image using the new base image in this PR, then start it and run some queries.  
   




jnturton merged PR #2559:
URL: https://github.com/apache/drill/pull/2559




