Commit 444fedbfda6a8527d2136f4afe1a839cf278e2b5 in impala's branch refs/heads/master from Qifan Chen
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=444fedb ]

IMPALA-10927 TestFetchAndSpooling.test_rows_sent_counters is flaky in core-s3 based test

This fix removes the flakiness for test_rows_sent_counters test by
disabling it in S3 testing environment.

Testing:
1. Unit test in a non-S3 environment;
2. Ran core test successfully.

Change-Id: Ie6f1a8bc80c24c1368282be097aa8f943dd95d1e
Reviewed-on: http://gerrit.cloudera.org:8080/17862
Reviewed-by: Wenzhe Zhou <wzhou@cloudera.com>
Tested-by: Qifan Chen <qchen@cloudera.com>


Hit this issue in non s3 build. 

Saw this in a non-s3 build: [https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/5344]

Saw this in GVO scratch build: [https://jenkins.impala.io/job/ubuntu-16.04-from-scratch/15932/]

 

Saw this again in a build of an unrelated patch: [https://jenkins.impala.io/job/ubuntu-16.04-from-scratch/16448]

Saw this in the following builds:
https://jenkins.impala.io/job/ubuntu-16.04-from-scratch/16509/
https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/5700/
https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/5703/
https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/5705/

Encountered in https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/5805/

Saw this again in [https://jenkins.impala.io/job/ubuntu-16.04-from-scratch/16744]
{code:java}
query_test/test_fetch.py:103: in test_rows_sent_counters
    assert float(rows_sent_rate.group(1)) > 0
E   assert 0.0 > 0
E    +  where 0.0 = float('0')
E    +    where '0' = <built-in method group of _sre.SRE_Match object at 0x7f989c87f738>(1)
E    +      where <built-in method group of _sre.SRE_Match object at 0x7f989c87f738> = <_sre.SRE_Match object at 0x7f989c87f738>.group {code}

Commit df0a014e364854111368cf5756c4a01b3fb423d6 in impala's branch refs/heads/master from wzhou-code
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=df0a014e3 ]

IMPALA-10927: Deflaky TestFetchAndSpooling.test_rows_sent_counters

IMPALA-8957 fixed the flakiness for test by adding a delay via
DEBUG_ACTION BPRS_BEFORE_ADD_ROWS in BlockingPlanRootSink::Send().
test_rows_sent_counters uses DEBUG_ACTION BPRS_BEFORE_ADD_BATCH when
spool_query_results is on, and uses BPRS_BEFORE_ADD_ROWS when
spool_query_results is off with assumption that result spooling is
disabled by default.

IMPALA-9856 enabled result spooling by default.
Following two issues were introduced for the test when result spooling
was enabled by default.
1) spool_query_results as false is not covered in the test since
extended dimension is added with spool_query_results as true.
2) Since the test uses BPRS_BEFORE_ADD_ROWS if spool_query_results is
not specified as true, it makes DEBUG_ACTION BPRS_BEFORE_ADD_ROWS to be
used for spool_query_results as true. This causes the test flaky since
no delay to be added in BufferedPlanRootSink::Send().

There is another bug in the test. It uses bool() to convert string to
boolean value, but the function returns true for any non empty string.

This patch changed the extended dimension setting for
spool_query_results as false, and made the test to use the right
DEBUG_ACTION for spool_query_results as true and false.
Also reverted the previous fixing which disabled the test for S3
testing environment.

Testing:
  - Ran the test more than 10000 times without failure on Jenkins.

Change-Id: I790bbe1072357caf8ee11bb37644cf29dc8bea0f
Reviewed-on: http://gerrit.cloudera.org:8080/18671
Reviewed-by: Quanlong Huang <huangquanlong@gmail.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Commit df0a014e364854111368cf5756c4a01b3fb423d6 in impala's branch refs/heads/dependabot/pip/infra/python/deps/urllib3-1.26.5 from wzhou-code
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=df0a014e3 ]

IMPALA-10927: Deflaky TestFetchAndSpooling.test_rows_sent_counters

IMPALA-8957 fixed the flakiness for test by adding a delay via
DEBUG_ACTION BPRS_BEFORE_ADD_ROWS in BlockingPlanRootSink::Send().
test_rows_sent_counters uses DEBUG_ACTION BPRS_BEFORE_ADD_BATCH when
spool_query_results is on, and uses BPRS_BEFORE_ADD_ROWS when
spool_query_results is off with assumption that result spooling is
disabled by default.

IMPALA-9856 enabled result spooling by default.
Following two issues were introduced for the test when result spooling
was enabled by default.
1) spool_query_results as false is not covered in the test since
extended dimension is added with spool_query_results as true.
2) Since the test uses BPRS_BEFORE_ADD_ROWS if spool_query_results is
not specified as true, it makes DEBUG_ACTION BPRS_BEFORE_ADD_ROWS to be
used for spool_query_results as true. This causes the test flaky since
no delay to be added in BufferedPlanRootSink::Send().

There is another bug in the test. It uses bool() to convert string to
boolean value, but the function returns true for any non empty string.

This patch changed the extended dimension setting for
spool_query_results as false, and made the test to use the right
DEBUG_ACTION for spool_query_results as true and false.
Also reverted the previous fixing which disabled the test for S3
testing environment.

Testing:
  - Ran the test more than 10000 times without failure on Jenkins.

Change-Id: I790bbe1072357caf8ee11bb37644cf29dc8bea0f
Reviewed-on: http://gerrit.cloudera.org:8080/18671
Reviewed-by: Quanlong Huang <huangquanlong@gmail.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


