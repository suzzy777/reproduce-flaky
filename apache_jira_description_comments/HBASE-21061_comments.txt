This was broken by HBASE-20895, as well as several other "inconsistent synchronization" warnings on some of branches-1, essentially because all variables referenced both in readAndProcess and somewhere else became covered by the instance synchronization added there.

precommit on HBASE-20895 didn't run findbugs:

{code}
00:00:30.499 Step 20/46 : RUN mkdir -p /opt/findbugs &&     curl -L -s -S          https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download          -o /opt/findbugs.tar.gz &&     tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs
00:00:30.500  ---> Using cache
00:00:30.500  ---> 9fd52b187bc9
00:00:30.500 Step 21/46 : ENV FINDBUGS_HOME /opt/findbugs
00:00:30.500  ---> Using cache
00:00:30.500  ---> 302e9c623019
{code}

{code}
00:00:43.956 executable '/usr/bin/findbugs' for 'findbugs' does not exist.
00:00:43.956 executable '/usr/bin/computeBugHistory' for 'computeBugHistory' does not exist.
00:00:43.957 executable '/usr/bin/convertXmlToText' for 'convertXmlToText' does not exist.
00:00:43.958 executable '/usr/bin/filterBugs' for 'filterBugs' does not exist.
00:00:43.959 executable '/usr/bin/setBugDatabaseInfo' for 'setBugDatabaseInfo' does not exist.
{code}

{code}
0	findbugs	0m 0s	Findbugs executables are not available.
{code}

the nightly build on branch-1 that posted back included a findbugs failure that called the inconsistent use out ([results for build #395 if still up on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-1/395/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]. compared to no findbugs failure on [results for build #394 if still up on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-1/394/JDK8_20Nightly_20Build_20Report_20_28Hadoop2_29/]). But literally every sub-check on every branch that went up was red, as were all of the top-level build histories for branches-1, so I'd guess it was just noise.

Here's the first complaint on branch-1 in build #395

{code}

FindBugs	module:hbase-server
Inconsistent synchronization of org.apache.hadoop.hbase.ipc.RpcServer$Connection.connectionHeader; locked 81% of time Unsynchronized access at RpcServer.java:81% of time Unsynchronized access at RpcServer.java:[line 1371]
Inconsistent synchronization of org.apache.hadoop.hbase.ipc.RpcServer$Connection.service; locked 57% of time Unsynchronized access at RpcServer.java:57% of time Unsynchronized access at RpcServer.java:[line 422]
Inconsistent synchronization of org.apache.hadoop.hbase.ipc.RpcServer$Connection.useWrap; locked 75% of time Unsynchronized access at RpcServer.java:75% of time Unsynchronized access at RpcServer.java:[line 477]
{code}

No it wasn't broken, it was judiciously set aside. Feel free to fix these, though. Be careful, too much synchronization and tests will rather unexpectedly hang, maybe not a thread you want to pull, but should if you have the bandwidth...
Edit: Might just want to annotate these away for now, come back later.

Soem thoughts:

{noformat}
    public VersionInfo getVersionInfo() {
      if (connectionHeader.hasVersionInfo()) {
        return connectionHeader.getVersionInfo();
      }
      return null;
    }
{noformat}
Shouldn't this just be {{return connectionHeader.getVersionInfo();}} since if it doesn't have the version info we're going to be returning null anyway?



Looking at the other usages and unsynchronized instances... I don't think we care? I think they happen to be synchronized some of the time because they're in a big block, but otherwise they don't really matter.

I have a fix for branches-one that moves the variables that don't need synchronization out of the new block. waiting for the local test run on branch-1.2 to finish.

[~mihir6692] what branch would you need a patch for to see if your issue is still addressed?

since [builds.a.o and thus precommit is down|https://status.apache.org/incidents/4zl6mkyrg8qt] I'm planning to wait to upload the other branch-specific backports.

-branch-1 v0
  - move the critical block so that instead of being the entire {{readAndProcess}} method, it's just the section where we access the {{data}} member
  - create local variables for the member variables we access in the new critical block that we don't synchronize consistently (since it appears that they don't need to be)
 - reference the local variables instead of the member variables

N.B. it's easier to review this patch if you apply it locally and then use {{git diff -w}} to see the change.

tested by running findbugs locally (it still sees some other medium concern unrelated to the one I'm fixing here on branch-1, branch-1.4, and branch-1.3) and running the RPC related unit tests.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  2m  5s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} branch-1 Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 35s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 20s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  2s{color} | {color:green} branch-1 passed {color} |
| {color:red}-1{color} | {color:red} shadedjars {color} | {color:red}  0m 11s{color} | {color:red} branch has 10 errors when building our shaded downstream artifacts. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  1m 26s{color} | {color:blue} hbase-server in branch-1 has 4 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 29s{color} | {color:green} branch-1 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  6s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  1m  6s{color} | {color:red} hbase-server generated 1 new + 193 unchanged - 1 fixed = 194 total (was 194) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:red}-1{color} | {color:red} shadedjars {color} | {color:red}  0m  7s{color} | {color:red} patch has 10 errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green}  5m 25s{color} | {color:green} Patch does not cause any errors with Hadoop 2.7.1 2.7.2 2.7.3 2.7.4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 32s{color} | {color:green} hbase-server generated 0 new + 1 unchanged - 3 fixed = 1 total (was 4) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 38m 55s{color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 15s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 63m 12s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.balancer.TestRegionLocationFinder |
|   | hadoop.hbase.client.TestRollbackFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=18.06.1-ce Server=18.06.1-ce Image:yetus/hbase:date2018-08-30 |
| JIRA Issue | HBASE-21061 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12937720/HBASE-21061-branch-1.v0.patch |
| Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux ee51145da9f0 3.10.0-693.5.2.el7.x86_64 #1 SMP Fri Oct 20 20:32:50 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | hbase-personality.sh |
| git revision | branch-1 / fb74f215b4 |
| maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) |
| Default Java | 1.8.0_181 |
| shadedjars | artifact/patchprocess/branch-shadedjars.txt |
| findbugs | v3.1.0-RC1 |
| javac | artifact/patchprocess/diff-compile-javac-hbase-server.txt |
| shadedjars | artifact/patchprocess/patch-shadedjars.txt |
| unit | artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | testReport/ |
| Max. process+thread count | 666 (vs. ulimit of 1000) |
| modules | C: hbase-server U: hbase-server |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.



oh right, no flaky lists while asf jenkins is down. let me see what the logs say about those failures.

javac warning:
{code}
$ cat /tmp/yetus-27066.15542/diff-compile-javac-hbase-server.txt 
[WARNING] /testptch/hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java:[1713,28] [InputStreamSlowMultibyteRead] Please also override int read(byte[], int, int), otherwise multi-byte reads from this input stream are likely to be slow.
{code}

It's unrelated, just not recognized as a dup because of how many lines the method moved due to the patch. shows up above as one fixed and one new:
{code}
$ diff /tmp/yetus-27066.15542/branch-compile-javac-hbase-server.txt /tmp/yetus-27066.15542/patch-compile-javac-hbase-server.txt 
2c2
< [WARNING] /testptch/hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java:[1702,26] [InputStreamSlowMultibyteRead] Please also override int read(byte[], int, int), otherwise multi-byte reads from this input stream are likely to be slow.
---
> [WARNING] /testptch/hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java:[1713,28] [InputStreamSlowMultibyteRead] Please also override int read(byte[], int, int), otherwise multi-byte reads from this input stream are likely to be slow.
{code}

the shadedjars failure is because I used a docker image from master, which has jdk8, which results in an enforcer problem on the hbase-annotations module when {{-Prelease}} is present (which it is for checking the shaded jars).

I'll rerun that one with jdk7.

Hi [~busbey] I tested HBASE-20895 with branch-1.3. 

excellent. the current patch should apply to branch-1.3. could you try it out please?

{code}
      final boolean canUseRequestTooBig = headerAndPreambleRead ?
          VersionInfoUtil.hasMinimumVersion(connectionHeader.getVersionInfo(),
              RequestTooBigException.MAJOR_VERSION, RequestTooBigException.MINOR_VERSION)
          : false;
{code}
Isn't this the same as {code}
headerAndPreambleRead && 
          VersionInfoUtil.hasMinimumVersion(connectionHeader.getVersionInfo(),
              RequestTooBigException.MAJOR_VERSION, RequestTooBigException.MINOR_VERSION);
{code}
I'm assuming we have to include the check for {{headerAndPreambleRead}} because otherwise we get some exception or bad value on connectionHeader.getVersionInfo? Otherwise it's part of the check later...

Patch looks good otherwise.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 13s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:orange}-0{color} | {color:orange} test4tests {color} | {color:orange}  0m  0s{color} | {color:orange} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} branch-1 Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 38s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} branch-1 passed with JDK v1.8.0_181 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 37s{color} | {color:green} branch-1 passed with JDK v1.7.0_191 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 17s{color} | {color:green} branch-1 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  2m 37s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} branch-1 passed with JDK v1.8.0_181 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} branch-1 passed with JDK v1.7.0_191 {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} the patch passed with JDK v1.8.0_181 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} the patch passed with JDK v1.7.0_191 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  2m 34s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green}  1m 33s{color} | {color:green} Patch does not cause any errors with Hadoop 2.7.4. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed with JDK v1.8.0_181 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 34s{color} | {color:green} the patch passed with JDK v1.7.0_191 {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 44m 51s{color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 12s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 62m 35s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.balancer.TestRegionLocationFinder |
|   | hadoop.hbase.client.TestRollbackFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 |
| JIRA Issue | HBASE-21061 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12937720/HBASE-21061-branch-1.v0.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux f6f8495dc2c1 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1 / fb74f21 |
| maven | version: Apache Maven 3.0.5 |
| Default Java | 1.7.0_191 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/14272/artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/14272/testReport/ |
| Max. process+thread count | 711 (vs. ulimit of 10000) |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/14272/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



{quote}
Failed junit tests	hadoop.hbase.master.balancer.TestRegionLocationFinder
 	hadoop.hbase.client.TestRollbackFromClient
{quote}

Same unit test failures as my dedicated QA bot. Let me dig on that to make sure.

{quote}
{code}
 final boolean canUseRequestTooBig = headerAndPreambleRead ?
          VersionInfoUtil.hasMinimumVersion(connectionHeader.getVersionInfo(),
              RequestTooBigException.MAJOR_VERSION, RequestTooBigException.MINOR_VERSION)
          : false;
{code}
Isn't this the same as
{code}
headerAndPreambleRead && 
          VersionInfoUtil.hasMinimumVersion(connectionHeader.getVersionInfo(),
              RequestTooBigException.MAJOR_VERSION, RequestTooBigException.MINOR_VERSION);
{code}
I'm assuming we have to include the check for headerAndPreambleRead because otherwise we get some exception or bad value on connectionHeader.getVersionInfo? Otherwise it's part of the check later...
{quote}

Yeah I believe that's logically equivalent. Also clearer. It shouldn't change the unit test so I'll try to check on that before updating.

I'm presuming the same thing on {{headerAndPreambleRead}}. I didn't dig in to see if the existing check was needed for a specific reason.



{quote}
{code}
Failed junit tests	hadoop.hbase.master.balancer.TestRegionLocationFinder
hadoop.hbase.client.TestRollbackFromClient
{code}
Same unit test failures as my dedicated QA bot. Let me dig on that to make sure.
{quote}

These both *just* showed up in the branch-1 flaky list so maybe not related.

both tests show failure rates of 100% in the flaky list now:

https://builds.apache.org/view/H-L/view/HBase/job/HBase-Find-Flaky-Tests/job/branch-1/20/artifact/dashboard.html

Any objection to me pushing this?

I'm taking [~mdrob]'s "patch looks good otherwise." as a +1.

I'd like to see the ternary operator replaced with a simple boolean conditional, but not enough to argue about it.

Can you file a follow on JIRA to figure out why findbugs isn't running in precommit?

bq. I'd like to see the ternary operator replaced with a simple boolean conditional, but not enough to argue about it.

got it. I'm fixing this on commit unless something else requires an iteration on the patch.

bq. Can you file a follow on JIRA to figure out why findbugs isn't running in precommit?

Sure. probably the download of findbugs tools just failed.

filed HBASE-21151 for findbugs

pushed to relevant branches, with the fix Mike requested.

SUCCESS: Integrated in Jenkins build HBase-1.3-IT #469 (See [https://builds.apache.org/job/HBase-1.3-IT/469/])
HBASE-21061 Fix inconsistent synchronization in RpcServer (busbey: rev db45f2f4710eb53f979ab59a4939e423ac57ea4b)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java


Results for branch branch-1.2
	[build #459 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.2/459/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.2/459//General_Nightly_Build_Report/]


(x) {color:red}-1 jdk7 checks{color}
-- For more information [see jdk7 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.2/459//JDK7_Nightly_Build_Report/]


(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.2/459//JDK8_Nightly_Build_Report_(Hadoop2)/]




(/) {color:green}+1 source release artifact{color}
-- See build output for details.


SUCCESS: Integrated in Jenkins build HBase-1.2-IT #1156 (See [https://builds.apache.org/job/HBase-1.2-IT/1156/])
HBASE-21061 Fix inconsistent synchronization in RpcServer (busbey: rev f5a06e07eb841c6600337f01ad6b9ff80e41df52)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java


Results for branch branch-1
	[build #447 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-1/447/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1/447//General_Nightly_Build_Report/]


(x) {color:red}-1 jdk7 checks{color}
-- For more information [see jdk7 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1/447//JDK7_Nightly_Build_Report/]


(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1/447//JDK8_Nightly_Build_Report_(Hadoop2)/]




(x) {color:red}-1 source release artifact{color}
-- See build output for details.


Results for branch branch-1.3
	[build #455 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.3/455/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.3/455//General_Nightly_Build_Report/]


(x) {color:red}-1 jdk7 checks{color}
-- For more information [see jdk7 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.3/455//JDK7_Nightly_Build_Report/]


(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.3/455//JDK8_Nightly_Build_Report_(Hadoop2)/]




(/) {color:green}+1 source release artifact{color}
-- See build output for details.


Results for branch branch-1.4
	[build #450 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.4/450/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.4/450//General_Nightly_Build_Report/]


(x) {color:red}-1 jdk7 checks{color}
-- For more information [see jdk7 report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.4/450//JDK7_Nightly_Build_Report/]


(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-1.4/450//JDK8_Nightly_Build_Report_(Hadoop2)/]




(/) {color:green}+1 source release artifact{color}
-- See build output for details.


