IIRC it reproed with or without stats
First was discovered using:

{noformat}
cd /tmp
curl -ROL https://www.dropbox.com/s/bd6jm1nyis2onwv/sf1.zip
unzip sf1.zip
hdfs dfs -put sf1 /tmp
curl -ROL https://gist.githubusercontent.com/gregrahn/9c731947643be2817fc5048135a1420f/raw/25d908e4d7452f4c92a51b7cf0ea78880cdc9a23/tpcds-impala-date.ddl
impala-shell -f tpcds-impala-date.ddl
curl -ROL https://raw.githubusercontent.com/cloudera/impala-tpcds-kit/master/queries/query4.sql
impala-shell -d tpcds -f query4.sql
{noformat}

Looks like HdfsScanNode can produce a negative row size estimate, which would explain the negative memory estimate.
{noformat}
I0808 20:25:37.342036 110162 DistributedPlanner.java:498] 114bef3456667eb2:458377fe00000000] 36:SCAN HDFS [tpcds.customer
, RANDOM]
   HDFS partitions=1/1 files=1 size=12.50MB
   stored statistics:
     table: rows=100.00K size=12.50MB
     columns: all
   extrapolated-rows=disabled max-scan-range-rows=100.00K
   mem-estimate=invalid mem-reservation=invalid thread-reservation=invalid
   tuple-ids=78 row-size=-3B cardinality=100.00K
   in pipelines: <not computed>
{noformat}

{noformat}
[nightly6x-unsecure-1.nightly6x-unsecure.root.hwx.site:21000] default> describe tpcds.customer;
Query: describe tpcds.customer
+------------------------+-------------+---------+
| name                   | type        | comment |
+------------------------+-------------+---------+
| c_customer_sk          | int         |         |
| c_customer_id          | varchar(16) |         |
| c_current_cdemo_sk     | int         |         |
| c_current_hdemo_sk     | int         |         |
| c_current_addr_sk      | int         |         |
| c_first_shipto_date_sk | int         |         |
| c_first_sales_date_sk  | int         |         |
| c_salutation           | varchar(10) |         |
| c_first_name           | varchar(20) |         |
| c_last_name            | varchar(30) |         |
| c_preferred_cust_flag  | varchar(1)  |         |
| c_birth_day            | int         |         |
| c_birth_month          | int         |         |
| c_birth_year           | int         |         |
| c_birth_country        | varchar(20) |         |
| c_login                | varchar(13) |         |
| c_email_address        | varchar(50) |         |
| c_last_review_date_sk  | int         |         |
+------------------------+-------------+---------+
Fetched 18 row(s) in 0.01s
[nightly6x-unsecure-1.nightly6x-unsecure.root.hwx.site:21000] default> explain select c_customer_id from tpcds.customer;
Query: explain select c_customer_id from tpcds.customer
+------------------------------------------------------------+
| Explain String                                             |
+------------------------------------------------------------+
| Max Per-Host Resource Reservation: Memory=8.00MB Threads=3 |
| Per-Host Resource Estimates: Memory=48MB                   |
|                                                            |
| PLAN-ROOT SINK                                             |
| |                                                          |
| 01:EXCHANGE [UNPARTITIONED]                                |
| |                                                          |
| 00:SCAN HDFS [tpcds.customer]                              |
|    HDFS partitions=1/1 files=1 size=12.50MB                |
|    row-size=-1B cardinality=100.00K                        |
+------------------------------------------------------------+
Fetched 10 row(s) in 0.02s
[nightly6x-unsecure-1.nightly6x-unsecure.root.hwx.site:21000] default> show column stats tpcds.customer;
Query: show column stats tpcds.customer
+------------------------+-------------+------------------+--------+----------+-------------------+
| Column                 | Type        | #Distinct Values | #Nulls | Max Size | Avg Size          |
+------------------------+-------------+------------------+--------+----------+-------------------+
| c_customer_sk          | INT         | 100000           | 0      | 4        | 4                 |
| c_customer_id          | VARCHAR(16) | 100000           | 0      | 16       | 16                |
| c_current_cdemo_sk     | INT         | 91558            | 3438   | 4        | 4                 |
| c_current_hdemo_sk     | INT         | 7376             | 3431   | 4        | 4                 |
| c_current_addr_sk      | INT         | 42003            | 0      | 4        | 4                 |
| c_first_shipto_date_sk | INT         | 3754             | 3443   | 4        | 4                 |
| c_first_sales_date_sk  | INT         | 3734             | 3518   | 4        | 4                 |
| c_salutation           | VARCHAR(10) | 6                | 3410   | 4        | 3.241400003433228 |
| c_first_name           | VARCHAR(20) | 4013             | 3492   | 11       | 5.839499950408936 |
| c_last_name            | VARCHAR(30) | 4951             | 3497   | 13       | 6.124800205230713 |
| c_preferred_cust_flag  | VARCHAR(1)  | 2                | 3426   | 1        | 1                 |
| c_birth_day            | INT         | 31               | 3461   | 4        | 4                 |
| c_birth_month          | INT         | 12               | 3449   | 4        | 4                 |
| c_birth_year           | INT         | 67               | 3453   | 4        | 4                 |
| c_birth_country        | VARCHAR(20) | 207              | 3439   | 20       | 8.708800315856934 |
| c_login                | VARCHAR(13) | 0                | 100000 | 0        | 0                 |
| c_email_address        | VARCHAR(50) | 100000           | 3521   | 46       | 27.45219993591309 |
| c_last_review_date_sk  | INT         | 350              | 3484   | 4        | 4                 |
+------------------------+-------------+------------------+--------+----------+-------------------+
{noformat}

{noformat}
I0808 21:17:32.400616 125341 SingleNodePlanner.java:149] ae41fb6634771650:c91d6d4d00000000] desctbl: tuples:
TupleDescriptor{id=0, name=BaseTableRef tpcds.customer, tbl=tpcds.customer, byte_size=0, is_materialized=true, slots=[SlotDescriptor{id=0, path=tpcds.customer.c_customer_id, label=c_customer_id, type=VARCHAR(16),
 materialized=true, byteSize=0, byteOffset=-1, nullable=true, nullIndicatorByte=0, nullIndicatorBit=0, slotIdx=0, stats=ColumnStats{avgSerializedSize_=-1.0, maxSize_=16, numDistinct_=100000, numNulls_=0}}]}

{noformat}

So it looks like it only happens when stats are computed and the column is a VARCHAR.
{noformat}
[localhost:21000] tpcds> use tpcds_10000_text;
Query: use tpcds_10000_text
[localhost:21000] tpcds_10000_text> explain select c_customer_id from tpcds_10000_text.customer;
Query: explain select c_customer_id from tpcds_10000_text.customer
+------------------------------------------------------------+
| Explain String                                             |
+------------------------------------------------------------+
| Max Per-Host Resource Reservation: Memory=8.00MB Threads=3 |
| Per-Host Resource Estimates: Memory=48MB                   |
|                                                            |
| PLAN-ROOT SINK                                             |
| |                                                          |
| 01:EXCHANGE [UNPARTITIONED]                                |
| |                                                          |
| 00:SCAN HDFS [tpcds_10000_text.customer]                   |
|    HDFS partitions=1/1 files=1 size=12.50MB                |
|    row-size=-1B cardinality=100.00K                        |
+------------------------------------------------------------+
{noformat}

Here's a repro in my dev env:
{noformat}
[localhost:21000] tpcds> create external table repro_cust(c_customer_sk INT, c_customer_id VARCHAR(16)) row format delimited fields terminated by '|' WITH SERDEPROPERTIES ('field.delim'='|', 'serialization.format'='|')  STORED AS TEXTFILE LOCATION 'hdfs://localhost:20500/test-warehouse/tpcds.customer';
Query: create external table repro_cust(c_customer_sk INT, c_customer_id VARCHAR(16)) row format delimited fields terminated by '|' WITH SERDEPROPERTIES ('field.delim'='|', 'serialization.format'='|')  STORED AS TEXTFILE LOCATION 'hdfs://localhost:20500/test-warehouse/tpcds.customer'
+-------------------------+
| summary                 |
+-------------------------+
| Table has been created. |
+-------------------------+
Fetched 1 row(s) in 0.39s
[localhost:21000] tpcds> compute stats repro_cust;
Query: compute stats repro_cust
+-----------------------------------------+
| summary                                 |
+-----------------------------------------+
| Updated 1 partition(s) and 2 column(s). |
+-----------------------------------------+
Fetched 1 row(s) in 3.62s
[localhost:21000] tpcds> explain select c_customer_id from repro_cust;
Query: explain select c_customer_id from repro_cust
+------------------------------------------------------------+
| Explain String                                             |
+------------------------------------------------------------+
| Max Per-Host Resource Reservation: Memory=8.00MB Threads=3 |
| Per-Host Resource Estimates: Memory=48MB                   |
|                                                            |
| PLAN-ROOT SINK                                             |
| |                                                          |
| 01:EXCHANGE [UNPARTITIONED]                                |
| |                                                          |
| 00:SCAN HDFS [tpcds.repro_cust]                            |
|    HDFS partitions=1/1 files=1 size=12.60MB                |
|    row-size=-1B cardinality=100.00K                        |
+------------------------------------------------------------+
Fetched 10 row(s) in 0.01s
{noformat}

Reverting this commit fixed the issue for me

commit c2516d220da8e532b6ebdb6f3a12e7ad97c4f597
Author: Csaba Ringhofer <csringhofer@cloudera.com>
Date:   Wed Apr 17 15:01:07 2019 +0200

    IMPALA-8409: Fix row-size for STRING columns with unknown stats
    
    Explain returned row-size=11B for STRING columns without statistics.
    The issue was caused by adding -1 (meaning unknown) to the 12 byte
    slot size (sizeof(StringValue)). The code in TupleDescriptor.java
    tried to handle this by checking if the size is -1, but it was
    already 11 at this point.
    
    There is more potential for cleanup, but I wanted to keep this
    change minimal.
    
    Testing:
    - revived some tests in CatalogTest.java that were removed
      in 2013 due to flakiness
    - added an EE test that checks row size with and without stats
    - fixed a similar test, test_explain_validate_cardinality_estimates
      (the format of the line it looks for has changed, which lead to
      skipping the actual verification and accepting everything)
    - ran core FE and EE tests
    
    Change-Id: I866acf10b2c011a735dee019f4bc29358f2ec4e5
    Reviewed-on: http://gerrit.cloudera.org:8080/13190
    Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
    Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Commit c3a67b67faaebf18735fa36d35c80d8c11043f7f in impala's branch refs/heads/master from Tim Armstrong
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=c3a67b6 ]

IMPALA-8849: fix IllegalStateException with VARCHAR

The bug is that the serialized size wasn't populated
for VARCHAR in a case when it should have been.
It appears a condition was simply not updated when
VARCHAR was added.

Other code assumed that the serialized size was
populated when the other size field was populated,
which is a reasonable invariant. I documented the
invariant in the class and added validation that
the invariant held.

Defining and checking invariants led to discovering
various other minor issues where the sizes were
set incorrect for fixed-length types or not set for
variable-length types:
* CHAR was not consistently treated as a fixed-length type.
* avgSerializedSize_ was not always updated with avgSize_

Testing:
Added a regression test for this specific case. Adding
the assertions resulted in other cases showing up
related bugs.

Change-Id: Ie45e386cb09e31f4b7cdc82b7734dbecb4464534
Reviewed-on: http://gerrit.cloudera.org:8080/14062
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Reviewed-by: Csaba Ringhofer <csringhofer@cloudera.com>


