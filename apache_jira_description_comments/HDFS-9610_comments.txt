LastTest.log: output of errors.

Wow, thanks for reporting this [~aw].  Was this failure deterministic?  I'll try and poke around.

When I hit it, yes, it was.  Let me see if it is still failing for me.  I think I was playing around with testing HDFS-9325 against Yetus.

Adding patch 000.  Intentionally flipped an assert in the node_exclusion_test to force a failure in gmock and see if CI picks up on it.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 36s {color} | {color:green} HDFS-8707 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 53s {color} | {color:green} HDFS-8707 passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 55s {color} | {color:green} HDFS-8707 passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 15s {color} | {color:green} HDFS-8707 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} HDFS-8707 passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 50s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 3m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 52s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 3m 52s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 52s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 4m 28s {color} | {color:red} hadoop-hdfs-native-client in the patch failed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 4m 33s {color} | {color:red} hadoop-hdfs-native-client in the patch failed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 19s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 47m 7s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0cf5e66 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12781059/HDFS-9610.HDFS-8707.000.patch |
| JIRA Issue | HDFS-9610 |
| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  |
| uname | Linux 41b012175cb5 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | HDFS-8707 / 2f20790 |
| Default Java | 1.7.0_91 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_91 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14057/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-native-client-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14057/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-native-client-jdk1.7.0_91.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/14057/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-native-client U: hadoop-hdfs-project/hadoop-hdfs-native-client |
| Max memory used | 75MB |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/14057/console |


This message was automatically generated.



Looks like the gmock tests will properly fail.  I'll check out what's going on with the minidfscluster tests.

This is not a bug.  {{test_libhdfs_threaded_hdfs_static}} tests that things work properly when it tries to access a file that doesn't exist.  That's why you see {{java.io.FileNotFoundException: File does not exist: /tlhData0001/file1}}.

The error message about an illegal open mode comes from here:
{code}
    /* hdfsOpenFile should not accept mode = 3 */
    EXPECT_NULL(hdfsOpenFile(fs, paths->file1, 3, 0, 0, 0));
{code}

And so on, and so forth.

We do want to keep those stderr and stdout log messages, since they are needed to debug actual failures that might happen.  Maybe we can add a per-test option for the pom.xml to suppress stderr output on tests we know are noisy.

This reminds me... Yetus should be keeping the .stderr and .stdout files that the CMake test plugin generates... I should file a JIRA for that.

Also, the native unit tests in Hadoop include more than just ctest.  Most native unit tests are simple binaries that we just run directly.  ctest is just a special case of that.

bq. this is not a bug. test_libhdfs_threaded_hdfs_static tests that things work properly when it tries to access a file that doesn't exist. That's why you see java.io.FileNotFoundException: File does not exist: /tlhData0001/file1.
Oh, that makes a lot of sense.  Thanks for the explanation [~cmccabe]!

bq. We do want to keep those stderr and stdout log messages, since they are needed to debug actual failures that might happen. Maybe we can add a per-test option for the pom.xml to suppress stderr output on tests we know are noisy.
This seems like a good solution to make the log noise a little less disconcerting.  If a suppression flag was added would it be appropriate to discard stderr data when set and rely on someone to manually turn it off and rerun the test when there is a failure?  Or should the output currently going to stderr always be retained in a separate file for investigating failures?

bq. Also, the native unit tests in Hadoop include more than just ctest. Most native unit tests are simple binaries that we just run directly. ctest is just a special case of that.
Thanks for the pointer; I just checked out hadoop-common-project/hadoop-common/pom.xml and saw a few good examples of that.  I've been writing little sanity tests for HDFS-8765 and HDFS-9227 on my side already so it's good to know I can reuse them once I get around to finishing those patches.

The cmakebuilder maven plugin always puts stderr output in two places: a {{.stderr}} file, and in Maven's output.  (The cmakebuilder plugin also saves stdout to a {{.stdout}} file, but doesn't echo it to maven's output.)  I guess my idea is that the suppression flag would just be changing it so that the stderr output doesn't go to maven's stdout, but still continues to go to the {{.stderr}} file.  And we'd only need the suppression flag for "noisy" tests.

bq. Thanks for the pointer; I just checked out hadoop-common-project/hadoop-common/pom.xml and saw a few good examples of that. I've been writing little sanity tests for HDFS-8765 and HDFS-9227 on my side already so it's good to know I can reuse them once I get around to finishing those patches.

Yeah, it would be great to see more native tests.  And to fix some of the flaky ones we have (see YARN-4594)

Looks like this is starting to fail on the nightly qbt (is this an acronym?) runs after merging HDFS-8707 to trunk.Â  If I can't get a fix done in the next day or two I think it may be best to temporarily disable the test to cut down on noise in those reports.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 11s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} HDFS-8707 Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m  5s{color} | {color:green} HDFS-8707 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 20s{color} | {color:green} HDFS-8707 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  7m  2s{color} | {color:green} HDFS-8707 passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 55m 51s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 14m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  7m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 35s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 17m 23s{color} | {color:red} hadoop-hdfs-native-client in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}112m 32s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed CTEST tests | node_exclusion |
|   | memcheck_node_exclusion |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HDFS-9610 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12781059/HDFS-9610.HDFS-8707.000.patch |
| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  |
| uname | Linux 1b14ea4af737 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | HDFS-8707 / 8620d2b |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| CTEST | https://builds.apache.org/job/PreCommit-HDFS-Build/23672/artifact/out/patch-hadoop-hdfs-project_hadoop-hdfs-native-client-ctest.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/23672/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs-native-client.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/23672/testReport/ |
| Max. process+thread count | 440 (vs. ulimit of 10000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-native-client U: hadoop-hdfs-project/hadoop-hdfs-native-client |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/23672/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} docker {color} | {color:red}  7m 58s{color} | {color:red} Docker failed to build yetus/hadoop:8620d2b. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HDFS-9610 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12781059/HDFS-9610.HDFS-8707.000.patch |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/25373/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.



