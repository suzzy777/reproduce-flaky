Related question: Should be disable parallel hbcks permanently? A quick look at the code suggests this might cause inconsistencies as well. 

bq.Related question: Should be disable parallel hbcks permanently?
+1 for that.

I agree. hbck in parallel might create some mess... We might want to block that.

+1, would be a better fix to test in HBCK startup if another is running and error out if so

- Thanks for the +1s. I was thinking of writing a patch which creates an ephemeral znode /hbase/hbck-in-progress while starting hbck and deletes it while exiting. If a new hbck instance sees already existing znode, it aborts. However [~mbertozzi] says it is not a good approach to directly deal with ZK connections as the internal implementations might change breaking this feature and also since we are trying to remove ZK dependency (via other JIRAs) on HBase, implementations like this might make that transition difficult. So, In future when we have a lock() based system, each hbck should probably request a lock from master and the other hbcks should wait on it.

- Feel free to suggest any other approaches you have in mind.

Use a 0 length file in HDFS as the lock. Present an interactive option for the user to ignore the lock file and proceed.

This patch creates a file in <rootdir>/<tmpdir> and maintains a lease on it till hbck exits. Parallel instances of hbck check if such a file exists and bail out if necessary. Added a shutdownhook() to this class to clean up the lock file incase user kills hbck with a SIGTERM. I make sure that the cleanup is done only once using a flag.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12653590/HBASE-11405-trunk.patch
  against trunk revision .
  ATTACHMENT ID: 12653590

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileScanning(TestHRegion.java:3299)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/9937//console

This message is automatically generated.

{code}
+      HBCK_LOCK_PATH = new Path(new Path(FSUtils.getRootDir(getConf()), 
+          HConstants.HBASE_TEMP_DIRECTORY), BALANCER_LOCK_FILE);
{code}
The lock file is used by hbck. Should the name of lock file reflect this ?
{code}
+      // Make sure tmp dir exists, if not create it
+      fs.mkdirs(new Path(FSUtils.getRootDir(getConf()), HConstants.HBASE_TEMP_DIRECTORY));
{code}
Check the return value from mkdirs().
{code}
+      setRetCode(-1);
+      LOG.info("Another balancer is running - Exiting this instance");
{code}
log level should be error above.



bq. The lock file is used by hbck. Should the name of lock file reflect this ?

Agreed. Typo, will make this change.

bq. Check the return value from mkdirs().

Any particular reason why we should check that? It silently fails if the directory already exists. May be I can put a check like if(!fs.exists(dir)) {fs.mkdirs(dir);} ?

bq. log level should be error above.

Agreed, will make this change too.


If the return value from mkdirs() is false, directory isn't created successfully.
See javadoc of mkdirs():
{code}
   * @return true if the directory creation succeeds; false otherwise
   * @throws IOException
   */
  public static boolean mkdirs(FileSystem fs, Path dir, FsPermission permission)
{code}

If directory creation had problem, FSUtils.create() is likely to fail.
I think no extra action is needed for the mkdirs() call.

v1 addresses comments from Ted. 

{noformat}
busbey2-MBA:hbase busbey$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

nothing to commit, working directory clean
busbey2-MBA:hbase busbey$ git apply --check ~/Downloads/HBASE-11405-trunk.patch.1 
error: patch failed: hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java:105
error: hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java: patch does not apply
error: patch failed: hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java:36
error: hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java: patch does not apply
{noformat}

Patch no longer applies to master. [~bharathv] can you rebase?

Could you then also upload to ReviewBoard so it's easier to give review feedback?

Rebased the patch to trunk.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663629/HBASE-11405-trunk-rebased.patch
  against trunk revision .
  ATTACHMENT ID: 12663629

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10533//console

This message is automatically generated.

The unit test or the structure of the code likely needs to be modified -- I get this when I try to run the test and this is likely due to the shutdown hook.



{code}
jon@swoop:~/proj/hbase-trunk$ mvn clean test -Dtest=TestHBaseFsck
....
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.util.TestHBaseFsck

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0
...
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.17:test (default-test) on project hbase-server: ExecutionException: java.lang.RuntimeException: The forked VM terminated without properly saying goodbye. VM crash or System.exit called?
[ERROR] Command was /bin/sh -c cd /home/jon/proj/hbase-trunk/hbase-server && /opt/jdk1.7.0_25/jre/bin/java -enableassertions -XX:MaxDirectMemorySize=1G -Xmx1900m -XX:MaxPermSize=256m -Djava.security.egd=file:/dev/./urandom -Djava.net.preferIPv4Stack=true -Djava.awt.headless=true -jar /home/jon/proj/hbase-trunk/hbase-server/target/surefire/surefirebooter6944807203322450992.jar /home/jon/proj/hbase-trunk/hbase-server/target/surefire/surefire1768607263272388944tmp /home/jon/proj/hbase-trunk/hbase-server/target/surefire/surefire_084228475421972179tmp
[ERROR] -> [Help 1]
...
{code}

attached updated patch with minor imports fixes.


Let's tell the user where the lock file is in case it was left by an hbck instance terminated with kill -9 that left the tmp file behind.  Also say to delete if you are sure the other hbck is dead.
{code}
+    // Check if another instance of balancer is running
+    hbckOutFd = checkAndMarkRunningHbck(); 
+    if (hbckOutFd == null) {
+      LOG.error("Another balancer is running - Exiting this instance");
+      setRetCode(-1);
+      Runtime.getRuntime().exit(-1);
+    }
{code}

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668135/hbase-11405.rebase.140911.patch
  against trunk revision .
  ATTACHMENT ID: 12668135

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.http.TestHttpServerLifecycle.testStartedServerWithRequestLog(TestHttpServerLifecycle.java:92)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10842//console

This message is automatically generated.

[~bharathv] are you still working on this? would you mind if I took it over?

I ran TestHBaseFsck#testParallelHbck and was able to reproduce the error Jon mentioned above.
I think it was caused by the following statement:
{code}
+      Runtime.getRuntime().exit(-1);
{code}


Patch v3 removes the Runtime.getRuntime().exit() call.
IOE is thrown instead.

Test case is adjusted accordingly.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668161/11405-v3.txt
  against trunk revision .
  ATTACHMENT ID: 12668161

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestClassFinder

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10846//console

This message is automatically generated.

Thanks [~jon@cloudera.com] and [~tedyu@apache.org]. The tests fail because we abruptly kill the jvm. Ted's version fixes that. I just added a few log lines as per Jon's suggestion. [~busbey] Mind taking a look at this version? https://reviews.apache.org/r/25587

[~bharathv]:
Mind attaching patch here ?

[~tedyu@apache.org] Sorry, attached it now. Made some minor changes [Comments on review board]
[~busbey] Since we are throwing an IOEx , doFsck won't return an HBaseFsck object and hence it doesn't matter what return value we set. Since we are doing

{code:title=|borderStyle=solid}
          if (e.getMessage().contains("Duplicate hbck")) {
            fail = false;
          }
        }
        // If we reach here, then an exception was caught
        if (fail) fail();
        return null;
      }
{code}

It actually confirms that the issue is due to multiple hbcks. This approach looks good to me. What do you think?

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668717/11405-v5.patch
  against trunk revision .
  ATTACHMENT ID: 12668717

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint
                  org.apache.hadoop.hbase.util.TestHBaseFsck
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10884//console

This message is automatically generated.

I believe the issue with failing tests is probably because surefire is running tests in parallel (which is stopping parallel hbcks since they are all using the same cluster object). If I run the failed tests individually, they pass. There is a mvn profile "nonParallelTests" but it doesn't work for me either. Any ideas?

v6 summary

- Moved unlockHbck() from exec() to onlineHbck() method, since some of the tests directly call onlineHbck() rather than going via exec. This makes sure we cleanup the lock in tests
- Small bug in compareAndSet(), misread the doc, fixed it, also setting it to (false) inside the block to make sure tests using the same HBck object doesn't fail.

thanks bharath, and thanks sean and ted for reviews. committed to branch-1 and master.

Sorry, reverted and reopened since sean had more comments on review board.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668781/11405-v6.patch
  against trunk revision .
  ATTACHMENT ID: 12668781

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster
                  org.apache.hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication
                  org.apache.hadoop.hbase.security.access.TestTablePermissions

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10948//console

This message is automatically generated.

FAILURE: Integrated in HBase-TRUNK #5519 (See [https://builds.apache.org/job/HBase-TRUNK/5519/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Bharath Vissapragada) (jmhsieh: rev f4ecb1816b170e28d9afc96c137c9086222be456)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
Revert "HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Bharath Vissapragada)" (jmhsieh: rev 2e4218648ade93f6a0172c1d807f63b702064804)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java


FAILURE: Integrated in HBase-1.0 #194 (See [https://builds.apache.org/job/HBase-1.0/194/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Bharath Vissapragada) (jmhsieh: rev 3b30a104247e65b6443bc94545235d789cf13185)
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
Revert "HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Bharath Vissapragada)" (jmhsieh: rev 27eaba2539f5f09ba2cbd66f3c1c3bbe66403032)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java


v7
- Addressed Sean's comments on the RB.
- Few minor changes

[~ busbey]:
Have all of your comments been addressed ?

Yep. I'm +1 on the latest RB version, which I believe is the same as v7.

Integrated to branch-1 and master.

Thanks for the patch, bharath.

FAILURE: Integrated in HBase-1.0 #202 (See [https://builds.apache.org/job/HBase-1.0/202/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (bharath v) (tedyu: rev 5a0b2cfbf536a49963d55ffb1573eb45bcad5c9b)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java


The pull back to branch-1 broke compilation. Looks like hte imports are different in the test class there.

I've reverted this from branch-1 for the time being.  

Reminder,  please test before committing to branches!

FAILURE: Integrated in HBase-TRUNK #5529 (See [https://builds.apache.org/job/HBase-TRUNK/5529/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (bharath v) (tedyu: rev 4d29a21ff72edb0f24ae7f3747b7dcd25ab46da0)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java


Will pay attention next time.

FAILURE: Integrated in HBase-1.0 #203 (See [https://builds.apache.org/job/HBase-1.0/203/])
Revert "HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (bharath v)" (jmhsieh: rev 9121847555ec1768a6a44bcdc0889b1d6b80cd7c)
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java


With rebased patch for branch-1:
{code}
Running org.apache.hadoop.hbase.util.TestHBaseFsck
Tests run: 44, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 334.241 sec
{code}

Integrated to branch-1 again.

Is this not an issue in 0.94 and 0.98?

definitely present in both 0.94 and 0.98. Do you prefer a backport or known issues text? I can pull together either.

11405-1.0.txt applies cleanly on 0.98
[~apurtell]:
Do you want this ?

We can attach backport patches here since neither 0.99.1 nor 2.0.0 are released.

FAILURE: Integrated in HBase-1.0 #206 (See [https://builds.apache.org/job/HBase-1.0/206/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (bharath v) (tedyu: rev 0eba052ad6c198cee3e5f60aeb643beb3b60c704)
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java


+1 for 0.98
Why was this branch left out of consideration initially (along with 0.94)? 

Reopened and updated fix versions

Integrated to 0.98 as well.

I can prepare patch for 0.94 if Sean is busy.

I'm chasing down a failure on the hadoop-1 profile and working on 0.94.
Should be later tonight.

If someone else can get it done earlier, that'd be great.

-- 
Sean



You mean this one ?
{code}
testParallelHbck(org.apache.hadoop.hbase.util.TestHBaseFsck)  Time elapsed: 60.152 sec  <<< FAILURE!
java.lang.AssertionError
  at org.apache.hadoop.hbase.util.TestHBaseFsck.testParallelHbck(TestHBaseFsck.java:552)
{code}
Sigh - let me revert from 0.98 for now.

FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #504 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/504/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (bharath v) (tedyu: rev c8d018fbcbb8cfa6129aaf9030b252cfc81605cb)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
HBASE-11405 Revert due to TestHBaseFsck#testParallelHbck failure (tedyu: rev 77c04a176f55ca3cea69ac938308455dc089d97c)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java


FAILURE: Integrated in HBase-0.98 #529 (See [https://builds.apache.org/job/HBase-0.98/529/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (bharath v) (tedyu: rev c8d018fbcbb8cfa6129aaf9030b252cfc81605cb)
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
HBASE-11405 Revert due to TestHBaseFsck#testParallelHbck failure (tedyu: rev 77c04a176f55ca3cea69ac938308455dc089d97c)
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java


okay, the test failure is caused because on [hadoop 1 dfs client transparently retries the file create for up to 5 minutes|https://github.com/apache/hadoop/blob/release-1.2.1/src/hdfs/org/apache/hadoop/hdfs/DFSClient.java#L163].

Looking at the logs of the hadoop 1 run, I can see the second hbck instance fail to create the file. Then later after the first one cleans up, the second picks up again and keeps going. Thus both succeed and the assert fails. Same failure on 0.94.

I'd rather not insert a 5 minute sleep in the hbck to ensure the second instance fails. Anyone have some idea of a different way we can test for the branches that support hadoop 1?

Just a shot in the dark: Use mockito to swap in a different retry policy for creates? 

Here's an amended version specific to each of 0.98 and 0.94 that works under profiles for hadoop 1.0, 1.1, and 2.x. Due to the amount of change, I added an Amending-Author to the commit message.

I've run through {{-Dtest=TestHBaseFsck}} for the above profiles and {{-PrunSmallTests}} for whatever the default profile is on each branch. NB running TestHBaseFsck on 0.94 required {{-PlocalTests}}.

Fixing this involved exposing a previously private method for HBaseTestingUtility under 0.94. Since nothing else needed it in 0.98 I marked it deprecated with a note that it would disappear with Hadoop 1.x support. Since the method isn't in branch-1 or later, that should work out well.

One worry: some of the TestHBaseFsck tests get a bit flaky on 0.94 with this change on my laptop (which admittedly is underpowered). However, even leaving in a single retry period causes the parallel test to fail because the first invocation finished in < 1 sec.

The 0.98 patch lgtm

Rebased patch for 0.98

Integrated to 0.98

Running test for 0.94 now.

Integrated to 0.94 as well.

Thanks Sean and bharath

FAILURE: Integrated in HBase-0.94-security #529 (See [https://builds.apache.org/job/HBase-0.94-security/529/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Sean Busbey and bharath v) (tedyu: rev b65849bcde31a0c0c4c8eda0cc3678d441c9cd1c)
* src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java


FAILURE: Integrated in HBase-0.94 #1418 (See [https://builds.apache.org/job/HBase-0.94/1418/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Sean Busbey and bharath v) (tedyu: rev b65849bcde31a0c0c4c8eda0cc3678d441c9cd1c)
* src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java


FAILURE: Integrated in HBase-0.94-JDK7 #188 (See [https://builds.apache.org/job/HBase-0.94-JDK7/188/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Sean Busbey and bharath v) (tedyu: rev b65849bcde31a0c0c4c8eda0cc3678d441c9cd1c)
* src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java


FAILURE: Integrated in HBase-0.98 #542 (See [https://builds.apache.org/job/HBase-0.98/542/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Sean Busbey and bharath v) (tedyu: rev f73f18abbb26e37e955e77e1a7698d1a50aaa32c)
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java


SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #516 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/516/])
HBASE-11405 Multiple invocations of hbck in parallel disables balancer permanently (Sean Busbey and bharath v) (tedyu: rev f73f18abbb26e37e955e77e1a7698d1a50aaa32c)
* hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java


