The patch added a checking to make sure the region is not closing before returning ALREADY_OPENED.

+1 on commit.  You might address below on commit?

Add comment here because it is opaque that FALSE in this map means an ongoing close.

{code}
-            LOG.warn("Attempted open of " + region.getEncodedName()
+            Boolean closing = regionsInTransitionInRS.get(region.getEncodedNameAsBytes());
{code}

Why not just do if (!closing)? (Let autoboxing provide the rest? Maybe it don't work)

{code}
+            if (!Boolean.FALSE.equals(closing)) { // Only return ALREADY_OPENED if not closing
{code}

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12591310/trunk-8899.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:red}-1 site{color}.  The patch appears to cause mvn site goal to fail.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6254//console

This message is automatically generated.

FYI, just happened again so thanks for fixing this Jimmy: http://54.241.6.143/job/HBase-TRUNK/org.apache.hbase$hbase-server/414/testReport/org.apache.hadoop.hbase.master/TestAssignmentManagerOnCluster/testForceAssignWhileClosing/

The 'site' failures are interesting.  I've not seen this before (unrelated to your patch Jimmy):

{code}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 89928 bytes for Arena::Amalloc
# An error report file with more information is saved as:
# /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hs_err_pid20107.log
{code}

bq. Add comment here because it is opaque that FALSE in this map means an ongoing close.
Sure, will do.

bq. Why not just do if (!closing)? (Let autoboxing provide the rest? Maybe it don't work)
We don't do this because it could be null. :)  That means it is not in transition (really already_opened)

Integrated v2 into trunk and 0.95.  Thanks Stack for bringing the original unit test failure to my notice and reviewing the patch.

Integrated in hbase-0.95 #303 (See [https://builds.apache.org/job/hbase-0.95/303/])
    HBASE-8899 Could not open a region on a server where it is being closed (Revision 1501465)

     Result = SUCCESS
jxiang : 
Files : 
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java


Integrated in HBase-TRUNK #4231 (See [https://builds.apache.org/job/HBase-TRUNK/4231/])
    HBASE-8899 Could not open a region on a server where it is being closed (Revision 1501464)

     Result = SUCCESS
jxiang : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java


Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #606 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/606/])
    HBASE-8899 Could not open a region on a server where it is being closed (Revision 1501464)

     Result = FAILURE
jxiang : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java


Integrated in hbase-0.95-on-hadoop2 #172 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/172/])
    HBASE-8899 Could not open a region on a server where it is being closed (Revision 1501465)

     Result = FAILURE
jxiang : 
Files : 
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java


[~jxiang] I see this http://54.241.6.143/job/HBase-0.95-Hadoop-2/org.apache.hbase$hbase-server/601/testReport/org.apache.hadoop.hbase.master/TestAssignmentManagerOnCluster/testForceAssignWhileClosing/

Is it the same issue?  Should we reopen this?

A very similar issue.  The cause is a little different.  Let's reopen it.

For this failure, the region is closed but not removed from the online region list since something went wrong in updating the zk.

Integrated the addendum into trunk and 0.95. It is a racing issue between closing and opening the same region on the same region server.

Integrated in hbase-0.95 #316 (See [https://builds.apache.org/job/hbase-0.95/316/])
    HBASE-8899 Could not open a region on a server where it is being closed - ADDENDUM (Revision 1502318)

     Result = FAILURE
jxiang : 
Files : 
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java


Integrated in HBase-TRUNK #4244 (See [https://builds.apache.org/job/HBase-TRUNK/4244/])
    HBASE-8899 Could not open a region on a server where it is being closed - ADDENDUM (Revision 1502317)

     Result = SUCCESS
jxiang : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java


Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #610 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/610/])
    HBASE-8899 Could not open a region on a server where it is being closed - ADDENDUM (Revision 1502317)

     Result = FAILURE
jxiang : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java


FAILURE: Integrated in hbase-0.95-on-hadoop2 #176 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/176/])
HBASE-8899 Could not open a region on a server where it is being closed - ADDENDUM (jxiang: rev 1502318)
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java


Jimmy added addendum a while back.  Resolving again after his application a while back.

