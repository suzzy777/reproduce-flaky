N/m, it looks like the block mgr limit is as expected, but it's unclear why this test suddenly started failing.

This is indeed a cascading failure. One of the queries was run with memory limit of 150M and it  was expected to generate "memory limit exceeded" error but it passed without exceeding the memory limit:

http://sandbox.jenkins.cloudera.com/job/impala-CI-rhel7/183/testReport/junit/query_test.test_queries/TestQueries/test_analytic_fns_exec_option____disable_codegen___False___abort_on_error___1___exec_single_node_rows_threshold___100___batch_size___0___num_nodes___0____table_format__rc_none_/

{code}
query_test/test_queries.py:68: in test_analytic_fns
    self.run_test_case('QueryTest/analytic-fns', vector)
common/impala_test_suite.py:230: in run_test_case
    assert test_section['CATCH'].strip() == ''
E   assert 'Memory limit exceeded' == ''
E     - Memory limit exceeded
{code}

The memory limit (150M) somehow remained set for other tests which weren't meant to be run with 150M memory limit. Looks more like a test infrastructure issue to me.

The issue with the test infrastructure is that a test failure will stop executing the rest of statements in the test file
so the memory limit is never set to 0 again. One way to address this problem is to put the memory limit in the
SETUP section so appropriate clean up will always happen.

How much of impalad session sharing occurs?  Is the session ever shared between test cases, or just between different vectors of the same test case or what?


It appears that all tests within the same class share the same connection so in theory, the mem_limit set by a test may affect other tests
running concurrently with the same connection. It's unclear why we haven't hit this yet.

The test in question hasn't failed for a while. The problem with the test infrastructure is fixed with the following commit.
 
   IMPALA-2824: Restore query options after each test.

    A failed test case inside a test file will leave the rest of
    the test cases in the file unexecuted. Some test cases may
    modify some query options such as memory limit and then
    restore them in the subsequent test cases in the same file.
    The failure of those test cases will leave the query options
    modified, causing cascading failures to other test cases
    which aren't expected to be run with the modified query
    options (e.g. lowered memory limit). This problem may lead
    to broken builds which are recorded in IMPALA-2724 and
    IMPALA-2824.

    This change fixes the problem above by checking if a test
    case modifies any query option and if so, restore those
    modified query options to their default values. This change
    makes the assumption that a test should not modify an option
    specified in its test vector so it's safe to restore the
    modified query options to their default values.

    Change-Id: Ib88d1dcb6a65183e1afc8eef0c764179a9f6a8ce
    Reviewed-on: http://gerrit.cloudera.org:8080/1774
    Reviewed-by: Michael Ho <kwho@cloudera.com>
    Tested-by: Internal Jenkins

