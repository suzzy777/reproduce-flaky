Hi Clemens,

It doesn't fails it is *intended behavior.* I replicated your scenario on my system and it threw this stack trace:

{code}
Caused by: org.apache.solr.common.SolrException: A ValueSource isn't directly available from this field. Instead try a query using the distance as the score.
	at org.apache.solr.schema.AbstractSpatialFieldType.getValueSource(AbstractSpatialFieldType.java:334)
	at org.apache.solr.search.FunctionQParser.parseValueSource(FunctionQParser.java:384)
	at org.apache.solr.search.FunctionQParser.parseValueSourceList(FunctionQParser.java:227)
	at org.apache.solr.search.function.distance.GeoDistValueSourceParser.parse(GeoDistValueSourceParser.java:54)
	at org.apache.solr.search.FunctionQParser.parseValueSource(FunctionQParser.java:370)
	at org.apache.solr.search.FunctionQParser.parse(FunctionQParser.java:82)
	at org.apache.solr.search.QParser.getQuery(QParser.java:168)
	at org.apache.solr.search.SortSpecParsing.parseSortSpecImpl(SortSpecParsing.java:120)
	... 37 more
{code}

When I looked at: 	at org.apache.solr.schema.AbstractSpatialFieldType.getValueSource(AbstractSpatialFieldType.java:334)

{code}
  @Override
  public ValueSource getValueSource(SchemaField field, QParser parser) {
    //This is different from Solr 3 LatLonType's approach which uses the MultiValueSource concept to directly expose
    // the x & y pair of FieldCache value sources.
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
        "A ValueSource isn't directly available from this field. Instead try a query using the distance as the score.");
  }
{code}

_This function only implements this particular use-case and throws that particular exception._

You should keep using {{sfield=b4_location__geo_si&pt=47.36667,8.55&sort=geodist() asc}} as it is neat too, as comparison to geodist(...,...,...).

I am using solrClient and with LatLonType could coveniently use {code}SolrQuery#addSort(String field, ORDER order){code}
E.g:
{code}solrQuery.addSort( 'geodist(b4_location__geo_si,47.36667,8.55)', 'asc' ){code}

What is the best way to apply {code}sfield=b4_location__geo_si&pt=47.36667,8.55&sort=geodist() asc{code} to the SolrQuery


I am using SolrJ 6.6:

How about this:
{code}
        query.set("sfield","b4_location_geo_si");
        query.set("pt","47.36667,8.55");
        query.setSort( "geodist()", SolrQuery.ORDER.asc);
{code}

I don't any other way, to be honest.

thx! 
I guess we can close this issue -> feature-not-a-bug ;)

I edited this issue to be an "Improvement" of priority "minor", and adjusted the title.  We could improve the error message further to note that geodist() does not support most spatial fields when their names are listed in its arguments (requires {{sfield}} param instead).  Or perhaps improve {{GeoDistValueSourceParser}} to actually support this.  Unfortunately it's a bit tricky based on it's use of fp.parseValueSourceList() which will ask field references for their value sources, leading to an exception here.  Perhaps it could manually parse the first and insist the use of a spatial field be in this position.  But it'd be awkward to support it in the 3rd position which is possible with a couple older spatial fields.

note: you don't need to use "pt" if you'd rather keep the latitude,longitude order points within geodist().  It's up to you.

[~dsmiley], Sorry I missed your update. I would like to get your consensus on should we go after supporting spatial field in geodist() or just improving the error message is sufficient for now. I can work on either.

Really either.  I'd be happy to review but I don't have time.  

If you improve the error message the user sees, then this would probably involve the addition of a new try-catch where GeoDistValueSourceParser calls fp.parseValueSourceList to detect this situation and then advice specifically on what to do.

Thanks David, added improved error in patch and uploaded. Need to write tests still. 

Tests attached. The actual error: 
{{"sort param could not be parsed as a query, and is not a field that exists in the index: geodist(b4_location__geo_si,47.36667,8.55)"}} 

is coming from {{SortSpecParsing}} and I would not like to make any changes there as other components are dependent. Tests validates the same error being received and solr logs will point out what needs to be done.

[~dsmiley] really appreciate if you review.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 29s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Release audit (RAT) {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Check forbidden APIs {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Validate source patterns {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 25m  1s{color} | {color:red} core in the patch failed. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 30m  8s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | SOLR-11601 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12914932/SOLR-11601.patch |
| Optional Tests |  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  |
| uname | Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | ant |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh |
| git revision | master / d2ef38d |
| ant | version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 |
| Default Java | 1.8.0_144 |
| unit | https://builds.apache.org/job/PreCommit-SOLR-Build/8/artifact/out/patch-unit-solr_core.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-SOLR-Build/8/testReport/ |
| modules | C: solr/core U: solr/core |
| Console output | https://builds.apache.org/job/PreCommit-SOLR-Build/8/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



BTW [~steve_rowe] Thanks for working on patch validation :-)  Some work to do still: "core in the patch failed." is confusing and has a typo.  Core->code.  Even then, the failing test here is _not_ one modified by this patch; it's some other test.  

[~sarkaramrit2@gmail.com] please update the test to use {{assertQEx}} or if you prefer some similar test infrastructure facility for testing exceptions

bq. BTW Steve Rowe Thanks for working on patch validation  Some work to do still: "core in the patch failed." is confusing and has a typo.  Core->code.

This is not a typo: "core" is the (short) name of the module.  Unfortunately Yetus reduces module paths like ({{solr/core}}, {{lucene/analysis/icu}}) to ({{core}}, {{icu}}).

bq. Even then, the failing test here is not one modified by this patch; it's some other test.

Agreed, though fortunately this is getting better as the project makes inroads on reducing test flakiness.


[~dsmiley], thank you for your feedback, always. I see. Now I think I may have written number of tests using that flawed technique when {{assertQEx}} being available :), thank you for pointing that, will take care in future.

Updated tests, please note: the error which still gets emitted is:
{{"sort param could not be parsed as a query, and is not a field that exists in the index: geodist(b4_location__geo_si,47.36667,8.55)"}}
and solr logs will point to the actual problem.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 24s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Release audit (RAT) {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Check forbidden APIs {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Validate source patterns {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 49m 38s{color} | {color:red} core in the patch failed. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 54m 54s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | solr.update.processor.AtomicUpdateProcessorFactoryTest |
|   | solr.handler.admin.AutoscalingHistoryHandlerTest |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | SOLR-11601 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12915515/SOLR-11601.patch |
| Optional Tests |  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  |
| uname | Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | ant |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh |
| git revision | master / 2c4b78c |
| ant | version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 |
| Default Java | 1.8.0_144 |
| unit | https://builds.apache.org/job/PreCommit-SOLR-Build/9/artifact/out/patch-unit-solr_core.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-SOLR-Build/9/testReport/ |
| modules | C: solr/core U: solr/core |
| Console output | https://builds.apache.org/job/PreCommit-SOLR-Build/9/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 57s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Release audit (RAT) {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Check forbidden APIs {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} Validate source patterns {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 50m 26s{color} | {color:green} core in the patch passed. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 57m 18s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | SOLR-11601 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12915515/SOLR-11601.patch |
| Optional Tests |  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  |
| uname | Linux lucene1-us-west 4.4.0-137-generic #163~14.04.1-Ubuntu SMP Mon Sep 24 17:14:57 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | ant |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh |
| git revision | master / fe58b6f |
| ant | version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 |
| Default Java | LTS |
|  Test Results | https://builds.apache.org/job/PreCommit-SOLR-Build/413/testReport/ |
| modules | C: solr/core U: solr/core |
| Console output | https://builds.apache.org/job/PreCommit-SOLR-Build/413/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



Commit f335ac9bbc52fef3468ca69890bf9ba95053f8b5 in lucene-solr's branch refs/heads/master from David Smiley
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=f335ac9 ]

SOLR-11601: Improve geodist error message when using with LLPSF.


Commit cac4d012e1a8db4b3033bb902c92222fa932f10f in lucene-solr's branch refs/heads/branch_8x from David Smiley
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=cac4d01 ]

SOLR-11601: Improve geodist error message when using with LLPSF.

(cherry picked from commit f335ac9bbc52fef3468ca69890bf9ba95053f8b5)


Thanks for contributing the fix Amrit.  Feel free to prod us when we neglect to pay attention to your waiting patches :-)

Note I moved the test from TestGeoJSONResponseWriter to TestSolr4Spatial2 because it had nothing to do with geojson.

