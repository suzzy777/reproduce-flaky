Attached is a patch with a test that reproduces the issue.

I see two ways of fixing this:
* in {{NettyAvroRpcClient.toString()}} replace a call to {{getHostName()}} with {{getHostString()}} - this would show the host name if it was passed to the NettyAvroRpcClient.configure(), and the IP address otherwise.
* remove the {{NettyAvroRpcClient.toString()}} method, and remove {{this}} from messages passed to exceptions and loggers. This approach is more consistent with other clients in the package, but hides some useful info someone might rely on.

Can someone recommend which way is preferred here?

getHostString() is public only from JDK7, so we can use the InetSocketAddress toString() method, which essentially calls the InetAddress toString(), that prints the hostname, ip and port (and does not do the reverse lookup if hostname is not available)

Attached patch, which does the above.

Attaching a modified patch FLUME-2409-1.patch that also includes the test submitted by Roman Novachenko, with some little modifications.

The test seems hacky at best. What does it exactly test and how is the timeout selected to be 1400?

It is indeed a bit hacky. The test case tries to connect to a invalid host and  when it fails in NettyAvroRpcClient, the client constructs a FlumeException which uses the toString(). 
If the hostname lookup happens in toString(), and it crosses the timelimit for the test, then we get a timeout related exception rather than FlumeException. In this case, the testcase will fail due to timeout, which is valid. This is the idea behind Roman's testcase.
But the default connection timeout is 20 seconds, and because of which using the original testcase will always timeout. Hence I had to limit the connection timeout to 1 sec and include it in the total timeout for the testcase (1 sec will always be spent in trying to reconnect and 400 ms will be the allowed time to make sure toString() doesnot use expensive hostname lookup)

Lets not have this test, it will be flaky in slow networks etc, and cause a lot of false failures.

True, I wasn't able to see any other way of testing the change. 

