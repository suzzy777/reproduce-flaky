This might happen if a tablet is deleted and re-created quickly -- maybe something's still holding a reference to the old MemRowSet, thus keeping its MemTracker alive, and causing the duplicate error when the new one is created?

Perhaps KUDU-1294 is related

When creating a child tracker, the uniqueness check is scoped to the parent's children, that is, to the set of siblings. A quickly recreated tablet would have a tracker parent hierarchy with the same names (i.e. "tablet-xxx->server->root"), but if there was a collision because of that, you'd expect to see it in the server tracker, not the tablet tracker.

I had this long comment written up about how linked_list-test's PeriodicWebUIChecker is likely responsible, as some of the web UI pages can take very brief references on TabletComponents. But since then, I've dug through the code and I think I've proven to myself that these scenarios just aren't possible during tablet bootstrap. So I'm back to being at a loss, though the web UI is a likely culprit as that's the only in-parallel action happening during bootstrap in linked_list-test. I'm trying to reproduce the crash to learn more.

As far as fixes are concerned, I'm thinking more and more that the "avoid duplicate MemTrackers at all cost" semantic was the wrong move. Besides leading to situations like these, it pushes too many quirks onto the rest of the code (e.g. forcing components to destroy themselves before reallocating). I'll spend some more time thinking about how to undo this cleanly.

fwiw master_failover-itest TestWebUIDuringStartup is also now triggering this bug now that it uses PeriodWebUIChecker, so the above explanation seems reasonable

Hmm, I did see TestWebUIDuringStartup fail locally when it was restarting the tservers in addition to the masters, but the failures went away when I stopped restarted the tservers. Guess that was just luck then. Maybe the /metrics page takes a reference on the trackers?

Fixed in commit 4b9d2f6.

