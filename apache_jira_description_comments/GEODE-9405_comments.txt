mmartell opened a new pull request #826:
URL: https://github.com/apache/geode-native/pull/826


   Some of the legacy C++ tests use strncpy. This causes warnings in gcc when the length parameter depends on the length of the source parameter. To avoid such warnings, which we treat as errors, we can use memcpy in the test code where we know there is no buffer overrun issue.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r661123304



##########
File path: cppcache/integration-test/CMakeLists.txt
##########
@@ -205,7 +205,7 @@ set_tests_properties(
     testThinClientPoolAttrTest
     testThinClientPoolLocator
     testThinClientPoolRedundancy
-    testThinClientSecurityAuthentication
+    #testThinClientSecurityAuthentication

Review comment:
       Delete?

##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -138,7 +140,7 @@ DUNIT_TASK_DEFINITION(LOCATORSERVER, CreateServer1)
         printf("Input to server cmd is -->  %s",
                cmdServerAuthenticator.c_str());
         CacheHelper::initServer(
-            1, nullptr, locHostPort,
+            1, "cacheserver_notify_subscription.xml", locHostPort,

Review comment:
       Wouldn't this change the intent of the test now that it starts with a cache xml file?

##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -138,7 +140,7 @@ DUNIT_TASK_DEFINITION(LOCATORSERVER, CreateServer1)
         printf("Input to server cmd is -->  %s",
                cmdServerAuthenticator.c_str());
         CacheHelper::initServer(
-            1, nullptr, locHostPort,
+            1, "cacheserver_notify_subscription.xml", locHostPort,
             const_cast<char *>(cmdServerAuthenticator.c_str()));

Review comment:
       This should be fixed too. Really bad to be taking stripping the `const` off here. The funny thing is the method takes a `const`. The method should really be change to take a `const std::string&`. I know this might feel out of scope but it's right there!

##########
File path: cppcache/integration-test/testThinClientSecurityAuthorization.cpp
##########
@@ -54,13 +54,15 @@ const std::string locHostPort =
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Use `auto` on the lefthand side whenever you can. Almost all the new code should be corrected to use auto for all these local variables.

##########
File path: cppcache/integration-test/ThinClientSecurityHelper.hpp
##########
@@ -59,13 +59,15 @@ const char* regionNamesAuth[] = {"DistRegionAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char* path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));
+
+  int indexOfCppcache = path.find("cppcache");

Review comment:
       We use boost::filesystem elsewhere so using it here to make file path operations safe would be nice.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r661476785



##########
File path: cppcache/integration-test/CMakeLists.txt
##########
@@ -205,7 +205,7 @@ set_tests_properties(
     testThinClientPoolAttrTest
     testThinClientPoolLocator
     testThinClientPoolRedundancy
-    testThinClientSecurityAuthentication
+    #testThinClientSecurityAuthentication

Review comment:
       Actually forgot to uncomment this. I was trying to see if fixing getXmlPath() would fix this test. It doesn't, so I'll disable this test again.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on pull request #826:
URL: https://github.com/apache/geode-native/pull/826#issuecomment-871690085


   Converting to Draft for now. All but one of the files that fail to compile on rhel-8 due to strncpy warnings are disabled tests that use a bogus getXmlPath() function. This function not only uses an unsafe strncpy(), but uses an incorrect path to the Xml folder. Looks like this is an artifact of moving the Xml folder in native client 10, but not fixing up all the tests to use the new path.
   
   Rather than just fix the compile problem for tests that we never run, I think it is worth investigating whether we can reenable all these tests by using the correct path. Of course we will also fix the compile problem that's causing the build failure on rhel-8.
   
   The list of tests that experience this issue includes:
   
   testThinClientSecurityAuthentication.cpp (broken)
   testThinClientSecurityAuthenticationSetAuthInitialize.cpp
   testThinClientSecurityAuthorization.cpp (broken)
   testThinClientSecurityAuthorizationMU.cpp (broken)
   testThinClientSecurityCQAuthorizationMU.cpp (flaky)
   testThinClientSecurityDurableCQAuthorizationMU.cpp (broken)
   testThinClientWriterException.cpp (broken)
   ThinClientSecurityHelper.hpp (not a test)
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


gaussianrecurrence commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r662139036



##########
File path: cppcache/integration-test/ThinClientSecurityHelper.hpp
##########
@@ -59,13 +59,15 @@ const char* regionNamesAuth[] = {"DistRegionAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char* path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Be careful when assigning the output of std::getenv to an std::string. If the env var is not defined it will return a nullptr, and passing a nullptr to a std::string constructor result in a coredump. There is an utility function Utils::getEnv which acts safely by returning an empty string when the variable is not defined.

##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -34,13 +34,15 @@ const char *regionNamesAuth[] = {"DistRegionAck", "DistRegionNoAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Same comment as above regarding code safety for std::getenv

##########
File path: cppcache/integration-test/testThinClientSecurityAuthenticationSetAuthInitialize.cpp
##########
@@ -35,13 +35,15 @@ const char *regionNamesAuth[] = {"DistRegionAck", "DistRegionNoAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != NULL,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Same comment as above regarding code safety for std::getenv

##########
File path: cppcache/integration-test/testThinClientSecurityAuthorization.cpp
##########
@@ -54,13 +54,15 @@ const std::string locHostPort =
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Same comment as above regarding code safety for std::getenv

##########
File path: cppcache/integration-test/testThinClientSecurityAuthorizationMU.cpp
##########
@@ -65,13 +65,15 @@ std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 const char *exFuncNameSendException = "executeFunction_SendException";
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Same comment as above regarding code safety for std::getenv

##########
File path: cppcache/integration-test/testThinClientSecurityCQAuthorizationMU.cpp
##########
@@ -138,13 +138,15 @@ class MyCqListener : public CqListener {
 };
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Same comment as above regarding code safety for std::getenv

##########
File path: cppcache/integration-test/testThinClientSecurityDurableCQAuthorizationMU.cpp
##########
@@ -139,13 +139,15 @@ class MyCqListener : public CqListener {
 };
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Same comment as above regarding code safety for std::getenv

##########
File path: cppcache/integration-test/testThinClientWriterException.cpp
##########
@@ -52,13 +52,15 @@ const char *regionNamesAuth[] = {"DistRegionAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Same comment as above regarding code safety for std::getenv




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r662460657



##########
File path: cppcache/integration-test/ThinClientSecurityHelper.hpp
##########
@@ -59,13 +59,15 @@ const char* regionNamesAuth[] = {"DistRegionAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char* path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       Oh yes, good catch!!




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663076389



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -138,7 +140,7 @@ DUNIT_TASK_DEFINITION(LOCATORSERVER, CreateServer1)
         printf("Input to server cmd is -->  %s",
                cmdServerAuthenticator.c_str());
         CacheHelper::initServer(
-            1, nullptr, locHostPort,
+            1, "cacheserver_notify_subscription.xml", locHostPort,

Review comment:
       N/A. Test deleted.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663076674



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -138,7 +140,7 @@ DUNIT_TASK_DEFINITION(LOCATORSERVER, CreateServer1)
         printf("Input to server cmd is -->  %s",
                cmdServerAuthenticator.c_str());
         CacheHelper::initServer(
-            1, nullptr, locHostPort,
+            1, "cacheserver_notify_subscription.xml", locHostPort,
             const_cast<char *>(cmdServerAuthenticator.c_str()));

Review comment:
       N/A. Test deleted.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663076929



##########
File path: cppcache/integration-test/testThinClientSecurityAuthorization.cpp
##########
@@ -54,13 +54,15 @@ const std::string locHostPort =
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       N/A. Test deleted.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663078640



##########
File path: cppcache/integration-test/ThinClientSecurityHelper.hpp
##########
@@ -59,13 +59,15 @@ const char* regionNamesAuth[] = {"DistRegionAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char* path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       N/A. This function has been removed entirely, along with all the tests that use it, which were already disabled.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663085347



##########
File path: cppcache/integration-test/testThinClientSecurityAuthenticationSetAuthInitialize.cpp
##########
@@ -35,13 +35,15 @@ const char *regionNamesAuth[] = {"DistRegionAck", "DistRegionNoAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != NULL,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       N/A. getXmlPath() is unnecessary in this test and has been removed. Note: The initServer function's 4th arg is unused.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663085678



##########
File path: cppcache/integration-test/testThinClientSecurityAuthorization.cpp
##########
@@ -54,13 +54,15 @@ const std::string locHostPort =
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       N/A. Test removed.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663085841



##########
File path: cppcache/integration-test/testThinClientSecurityCQAuthorizationMU.cpp
##########
@@ -138,13 +138,15 @@ class MyCqListener : public CqListener {
 };
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       N/A. Test removed.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663086058



##########
File path: cppcache/integration-test/testThinClientWriterException.cpp
##########
@@ -52,13 +52,15 @@ const char *regionNamesAuth[] = {"DistRegionAck"};
 std::shared_ptr<CredentialGenerator> credentialGeneratorHandler;
 
 std::string getXmlPath() {
-  char xmlPath[1000] = {'\0'};
-  const char *path = std::getenv("TESTSRC");
-  ASSERT(path != nullptr,
+  std::string path = std::string(std::getenv("TESTSRC"));

Review comment:
       N/A. Test removed.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on pull request #826:
URL: https://github.com/apache/geode-native/pull/826#issuecomment-873077469


   This ticket originated from compile warnings on rhel-8 related to unsafe use of strncpy. In the course of fixing this, we discovered that all the tests that were using getXmlPath have been disabled for a very long time. These tests have now all been deleted.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Key learnings from investigating this issue:
 * These security related tests were likely broken by the test folder restructuring when moving to geode-native 10.
 * xml/Security was the old path. New path is templates/security. The path was never updated in the tests.
 * Another discovery was that the refactor of CacheHelper.cpp::initServer doesn't use the securityParams argument (marked as unused), but many of these security tests rely on that 4th argument to pass security parameters to the server.

pivotal-jbarrett commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663103405



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -1,501 +0,0 @@
-/*

Review comment:
       Do we have replacements for this test?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663112303



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -1,501 +0,0 @@
-/*

Review comment:
       I feel our security test coverage is pretty weak. Suggest we create a single new security test that covers what's in these tests that isn't covered by new framework tests.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663137531



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -1,501 +0,0 @@
-/*

Review comment:
       We have only a very basic test in the new framework (SimpleAuthInitialize). Agree that we need a new test for auth (including exceptions handling), multi-user auth, and CacheWriter.
   




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pivotal-jbarrett commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r663257653



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -1,501 +0,0 @@
-/*

Review comment:
       Can you open a ticket to address these deleted test scenarios. While they weren't running they did stand as a place holder that we needed to fix. Deleted now we won't see them and we will forget about them.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r664143575



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -1,501 +0,0 @@
-/*

Review comment:
       Good idea! Just created: https://issues.apache.org/jira/browse/GEODE-9414




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell commented on a change in pull request #826:
URL: https://github.com/apache/geode-native/pull/826#discussion_r664143575



##########
File path: cppcache/integration-test/testThinClientSecurityAuthentication.cpp
##########
@@ -1,501 +0,0 @@
-/*

Review comment:
       Good idea! Just created: https://issues.apache.org/jira/browse/GEODE-9414




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


mmartell merged pull request #826:
URL: https://github.com/apache/geode-native/pull/826


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@geode.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 76337f0130f67a941ccde4a6b00325bb52817455 in geode-native's branch refs/heads/develop from Michael Martell
[ https://gitbox.apache.org/repos/asf?p=geode-native.git;h=76337f0 ]

GEODE-9405: Remove broken security tests (#826)

* GEODE-9401: Remove broken security tests

Note: build warnings in the test code are not the issue with RHEL-8 builds.  This is the PR for the actual RHEL-8 crash fix: [https://github.com/apache/geode-native/pull/830]

As near as we can tell, we took a compiler/toolchain update on RHEL-8 about a month ago, and it changed the order in which some static initializers are run.  In the case of this `std::regex` variable, its ctor is run before an underlying dependency is initialized, and it segfaults.  Fix was to move the static var from global scope to method scope, so it gets initialized at first use, much later.

 

