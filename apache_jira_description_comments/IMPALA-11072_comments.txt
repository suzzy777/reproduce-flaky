The fix has been merged.

Commit 577fc2ee21a8cb6fc49f9df8367d63ebccc13e61 in impala's branch refs/heads/master from Riza Suminto
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=577fc2e ]

IMPALA-11072: Deflake TestSpillingDebugActionDimensions.test_spilling

The first test case in TestSpillingDebugActionDimensions.test_spilling
has been flaky for not spilling any partitions in its hash join node.
This patch fixes the flakiness by reducing the buffer_pool_limit from
215 MB to 110 MB, which is around double of the query Per Host Min
Memory Reservation.

Testing:
- Manually run the first test case of
  TestSpillingDebugActionDimensions.test_spilling. Verify that both of
  the hash joins are spilling and the test pass.

Change-Id: Ie8802505e0dcae1be5e855107436805bd10e0077
Reviewed-on: http://gerrit.cloudera.org:8080/18138
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Â Saw this again in an unrelated change: [https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/5248/]
{code:java}
query_test/test_spilling.py:75: in test_spilling
    self.run_test_case('QueryTest/spilling', vector)
common/impala_test_suite.py:743: in run_test_case
    update_section=pytest.config.option.update_results)
common/test_result_verifier.py:636: in verify_runtime_profile
    actual))
E   AssertionError: Did not find matches for lines in runtime profile:
E   EXPECTED LINES:
E   row_regex: .*SpilledPartitions: .* \([1-9][0-9]*\)
E   
E   ACTUAL PROFILE:
E   Query (id=6d47a6323a1d674b:133714c100000000):
E     DEBUG MODE WARNING: Query profile created while running a DEBUG build of Impala. Use RELEASE builds to measure query performance.
E      - InactiveTotalTime: 0.000ns
E      - TotalTime: 0.000ns
E     Summary:
E       Session ID: d446ae1fd4c1316d:f637b568190aa0ba
E       Session Type: BEESWAX
E       Start Time: 2022-02-10 14:08:19.382722000
E       End Time: 2022-02-10 14:08:39.128335000
E       Query Type: QUERY
E       Query State: FINISHED
E       Impala Query State: FINISHED
E       Query Status: OK
E       Impala Version: impalad version 4.1.0-SNAPSHOT DEBUG (build 4e3271faf44433c5d3f847a0f965ab4ef1b1a48d)
E       User: ubuntu
E       Connected User: ubuntu
E       Delegated User: 
E       Network Address: 172.18.0.1:41204
E       Default Db: tpch_parquet
E       Sql Statement: SELECT straight_join o_orderkey
E   FROM (
E     SELECT *
E     FROM orders
E       JOIN customer ON o_custkey = c_custkey
E       JOIN nation ON c_nationkey = n_nationkey
E       JOIN region ON n_regionkey = r_regionkey
E     WHERE  o_orderkey < 500000) o1
E     LEFT ANTI JOIN /*+broadcast*/ (
E     SELECT *
E     FROM orders
E       JOIN customer ON o_custkey = c_custkey
E       JOIN nation ON c_nationkey = n_nationkey
E       JOIN region ON n_regionkey = r_regionkey
E     WHERE  o_orderkey < 500000) o2 ON o1.o_orderkey = o2.o_orderkey
E         AND o1.o_custkey = o2.o_custkey
E         AND o1.o_orderstatus = o2.o_orderstatus
E         AND o1.o_totalprice = o2.o_totalprice
E         AND o1.o_orderdate = o2.o_orderdate
E         AND o1.o_orderpriority = o2.o_orderpriority
E         AND o1.o_clerk = o2.o_clerk
E         AND o1.o_shippriority = o2.o_shippriority
E         AND o1.o_comment = o2.o_comment
E         AND o1.c_custkey = o2.c_custkey
E         AND o1.c_name = o2.c_name
E         AND o1.c_address = o2.c_address
E         AND o1.c_nationkey = o2.c_nationkey
E         AND o1.c_phone = o2.c_phone
E         AND o1.c_acctbal = o2.c_acctbal
E         AND o1.c_mktsegment = o2.c_mktsegment
E         AND o1.n_nationkey = o2.n_nationkey
E         AND o1.n_name = o2.n_name
E         AND o1.n_regionkey = o2.n_regionkey
E         AND o1.n_comment = o2.n_comment
E         AND o1.r_name = o2.r_name
E         AND o1.r_comment = o2.r_comment
E         AND fnv_hash(o1.n_name) = fnv_hash(o2.n_name)
E         AND fnv_hash(o1.r_name) = fnv_hash(o2.r_name)
E         AND fnv_hash(o1.o_orderstatus) = fnv_hash(o2.o_orderstatus)
E         AND fnv_hash(o1.o_shippriority) = fnv_hash(o2.o_shippriority)
E         AND fnv_hash(o1.o_orderdate) = fnv_hash(o2.o_orderdate)
E         AND fnv_hash(o1.o_orderpriority) = fnv_hash(o2.o_orderpriority)
E         AND fnv_hash(o1.o_clerk) = fnv_hash(o2.o_clerk)
E   ORDER BY o_orderkey
E       Coordinator: 172.18.0.4:27000
E       Query Options (set by configuration): BUFFER_POOL_LIMIT=115343360,RUNTIME_FILTER_MODE=OFF,MT_DOP=0,DEFAULT_SPILLABLE_BUFFER_SIZE=262144,TIMEZONE=UTC,CLIENT_IDENTIFIER=query_test/test_spilling.py::TestSpillingDebugActionDimensions::()::test_spilling[protocol:beeswax|exec_option:{'mt_dop':0;'debug_action':None;'default_spillable_buffer_size':'256k'}|table_format:parquet/none]
E       Query Options (set by configuration and planner): BUFFER_POOL_LIMIT=115343360,RUNTIME_FILTER_MODE=OFF,MT_DOP=0,DEFAULT_SPILLABLE_BUFFER_SIZE=262144,TIMEZONE=UTC,CLIENT_IDENTIFIER=query_test/test_spilling.py::TestSpillingDebugActionDimensions::()::test_spilling[protocol:beeswax|exec_option:{'mt_dop':0;'debug_action':None;'default_spillable_buffer_size':'256k'}|table_format:parquet/none]
E       Plan:
...{code}
This is another query. We probably need to set another BUFFER_POOL_LIMIT for it. Should we reopen this Jira or create another one?

Hi [~stigahuang] ,
I've seen some flakiness in downstream build for this exact testcase.
There seems to be inconsistent number of fragments assigned to each impalad due to different parquet file count/size being created on each run.
I think it is better to investigate in separate JIRA.

