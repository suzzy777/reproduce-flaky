GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2990

    IGNITE-6839: delete binary meta before tests, PDS compatibility tests 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6839

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2990.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2990
    
----
commit e6dcb4af579aeb3e01bcd3555098e2ad49b28040
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-11-07T16:13:42Z

    IGNITE-6839: delete binary meta before tests, PDS compatibility tests improved

----


Hi [~daradurvs],
could you please advice on the follwing:
https://ci.ignite.apache.org/viewLog.html?buildId=933513&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCompatibility#testNameId-1418165996957466785

I've added cleanup of directory in my PR, put test is still flaky. I can see version of Ignite is correct:
{nofromat}
[2017-11-08 10:23:23,529][INFO ][Thread-20][jvm-07abff3d#2_1_0] >>> ver. 2.1.0
{nofromat}

but the same VM prints message introduced in Ignite 2.3
{noformat}
[2017-11-08 10:23:23,893][INFO ][Thread-20][jvm-07abff3d#2_1_0] [2017-11-08 10:23:23,892][INFO ][main][PdsFoldersResolver] Successfully created new persistent storage folder [/data/teamcity/work/820be461cd64b574/work/db/node00-4a55251f-725f-4f58-8605-34aa1efb5f3b]
{noformat}

Why classes from actual ignite code are come here?

Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2990


Hi [~daradurvs], did you have a chance to look through my comments above? Would you please assign issue to yourself if it is problem in framework code?

Hi [~daradurvs], [~avinogradov] pointed me to the reason of this problem:
{noformat}
Ignite ver. 2.2.0#20171010-sha1:f0c64e7288ef94c84984a5e7a70f7038a539c6cd
{noformat}

it is not problem in framework, but some local issue: Ignite having newer code is deployed as 2.2.0 version.

To fix this problem it will be required to implement maven-local cleanup step before compatiblity testing.

[~avinogradov], thank you!

Hi, [~dpavlov], [~avinogradov], sorry for the delay with the answer.
bq. it is not problem in framework, but some local issue: Ignite having newer code is deployed as 2.2.0 version.
It is the definitely bad situation. In my opinion artifacts of previously released versions should equal to artifacts in Maven central repo. Manual deploying should be forbidden.
If necessary to test updates of releases, we should add a new [repository in Maven settings|https://maven.apache.org/guides/mini/guide-multiple-repositories.html] on TeamCity agents with such artifacts, which must be named like 2.2.1, 2.2.2 etc.
The framework supports this feature by tuning of Maven system environment.

bq. To fix this problem it will be required to implement maven-local cleanup step before compatiblity testing.
There are two ways to implement it:
1) Add a new step of cleaning local repo to the build configuration in TeamCity.
2) Implement a new method of cleaning local repo in Framework, in {{MavenUtils}} class.
At first sight, both ways can be implemented by calling Maven command [{{mvn dependency:purge-local-repository}} |https://maven.apache.org/plugins/maven-dependency-plugin/examples/purging-local-repository.html]
Vote for the first way because it will be called once, before running all test suites from Framework.

Hi [~daradurvs], [~avinogradov],

I also like option
1) Add a new step of cleaning local repo to the build configuration in TeamCity.

[~avinogradov], do you know if there is some example of .m2 clearing step?

[~dpavlov],
We should avoid m2 repo cleanup, this will make compatibility tests time consuming.
Instead of this we should find reason of this situation and fix it. 

[~dpavlov], I also agree with [~avinogradov] that tests with cleaned repo will take significantly more time than now.
In my opinion, the best way of resolving this issue is the cleanup local repo at agents and prohibition of manual installation of artifacts in the local repo.
The framework works with artifacts: ignite-core-VERSION.jar and ignite-core-VERSION-tests.jar, you can just delete them and they will be downloaded from Maven central repo on demand.  

[~dpavlov]
Is it possible to clean all org.apache.ignite.* at agents m2? Only once :) 
I'm pretty sure that problem caused by incorrect 2.2 release tasks.

Hi [~avinogradov], [~daradurvs],

I guess if we implement clean all org.apache.ignite.* at agents m2 it will not affect task performance as it can be affected by whole repository clean.

What do you think about cleaning ignite related artifacts before PDS compatibility suite run?

[~dpavlov]
We should fix current problem. Lets clean all org.apache.ignite.* ONCE but everywhere.
Can we make such task and run it once?
There is no need to perform clean all org.apache.ignite.* until someone will install broken libs again :) 

Hi [~avinogradov], 

It will require us to run it manually 48 times with run on specific agent (binded at start). It is manual work. If someone in community can help with this I would be glad :)

From the developer's point of view it is simpler to insert cleanup as build step. Moreover, for some tests repo clean may be required also.

As result I suggest to insert clean for ignite.* at 1st step. If Ignite PDS Compatiblity will be come dramatically slower, we will return to this question again. What do you think?

GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/3700

    IGNITE-6839 Ignite Compatibility: flaky test testFoldersReuseCompatibility_2_1 & 2_2 & 2_3

    ….util.IgniteUtils.classLoaderUrls(Ljava/lang/ClassLoader;)[Ljava/net/URL;" was fixed; code cleanup

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-6839

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3700.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3700
    
----
commit 4a63069e026537fbecc4d33aca80a3ade25dbfd9
Author: Vyacheslav Daradur <daradurvs@...>
Date:   2018-03-26T13:31:40Z

    ignite-6839: "java.lang.NoSuchMethodError: org.apache.ignite.internal.util.IgniteUtils.classLoaderUrls(Ljava/lang/ClassLoader;)[Ljava/net/URL;" was fixed; code cleanup

----


Hi, [~dpavlov],

I did some research and found 2 issues:
 1) I suppose that the main reason of tests' flakiness was side effects of an issue which already fixed into IGNITE-7969
 2) There is a mistake introduced IGNITE-7070: {{dumpClasspath}} method use methods which absent in releases before 2.4 and can't properly work in case of exception at node startup.

I've prepared PR to resolve the 2'nd issue.

TC tests look good: [#1|https://ci.ignite.apache.org/viewLog.html?buildId=1183047], [#2|https://ci.ignite.apache.org/viewLog.html?buildId=1183040]

Please have a look if you have free time.

Also, I've filed a ticket for common improvements: IGNITE-8156

Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3700


[~daradurvs], thank you for your contribution.

Merged your changes to master (2.6).

I hope [~vveider] will implement cleaning ignite artifacts from local maven, so we mark issue as resolved now.

[~dpavlov] -- artifacts are cleaned from local maven repository before every build (relevant for new scheme builds). Is that enough?

