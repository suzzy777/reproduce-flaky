PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3192

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [3] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:red}-1{color} There are [3] new bugs found below threshold in [tools] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): tools/findbugs-new.html
. The most important FindBugs errors are:
. At OozieDBCLI.java:[line 619]: This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection
. At OozieDBCLI.java:[line 596]: At OozieDBCLI.java:[line 595]
. At OozieDBCLI.java:[line 598]: At OozieDBCLI.java:[line 597]
. This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection: At OozieDBCLI.java:[line 610]
. At OozieDBCLI.java:[line 595]: At OozieDBCLI.java:[line 620]
. {color:green}+1{color} There are no new bugs found in [server].
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [client].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2111
.    Tests failed: 1
.    Tests errors: 1

.    The patch failed the following testcases:

testCoordActionRecoveryServiceForWaitingRegisterPartition(org.apache.oozie.service.TestRecoveryService)

.    Tests failing with errors:
testConnectionRetry(org.apache.oozie.service.TestJMSAccessorService)

.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestStatusTransitService#testBundleStatusNotTransitionFromKilled
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/478/



[~andras.piros] Can you help me in reviewing this. Looks failed test cases are not related to this fix.

I did not recognize this as an issue myself yet, but services.destroy() is called in OozieSharelibCLI.run as well in the end, I guess calling it in OozieDBCLI could make sense. Anyhow, the Services constructor calls it every time, when there is an active instance.

[~matijhs] When Services A is active and Services B and C are created at same time using "new Services()" from OozieDBCLI, A will be destroyed by Services constructor and someone from B and C will become new active as init() does "SERVICES = this" and the other one will be lost without getting destroyed. 

OozieDBCLI does 4 times "new Services()" during Oozie Server startup, destroy() is not called for two Services object. Safer to do it from OozieDBCLI.

[~prabhujoseph] indeed!

Thanks for the improvement!
[~prabhujoseph], can you think of a way to add a test for this?

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3192

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [3] new bugs found below threshold in total that must be fixed.
. {color:green}+1{color} There are no new bugs found in [docs].
. {color:green}+1{color} There are no new bugs found in [webapp].
. {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive].
. {color:green}+1{color} There are no new bugs found in [sharelib/spark].
. {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
. {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
. {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
. {color:green}+1{color} There are no new bugs found in [sharelib/pig].
. {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
. {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
. {color:green}+1{color} There are no new bugs found in [examples].
. {color:green}+1{color} There are no new bugs found in [client].
. {color:green}+1{color} There are no new bugs found in [core].
. {color:red}-1{color} There are [3] new bugs found below threshold in [tools] that must be fixed.
. You can find the FindBugs diff here (look for the red and orange ones): tools/findbugs-new.html
. The most important FindBugs errors are:
. At OozieDBCLI.java:[line 619]: This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection
. At OozieDBCLI.java:[line 596]: At OozieDBCLI.java:[line 595]
. At OozieDBCLI.java:[line 598]: At OozieDBCLI.java:[line 597]
. This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection: At OozieDBCLI.java:[line 610]
. At OozieDBCLI.java:[line 595]: At OozieDBCLI.java:[line 620]
. {color:green}+1{color} There are no new bugs found in [server].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 2112
.    Tests failed: 1
.    Tests errors: 0

.    The patch failed the following testcases:

testHiveAction(org.apache.oozie.action.hadoop.TestHiveActionExecutor)

.    Tests failing with errors:


.    {color:orange}Tests failed at first run:{color}
TestJavaActionExecutor#testCredentialsSkip
TestJMSJobEventListener#testConnectionDrop
TestOozieDBCLI#testOozieDBCLI
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/479/



[~gezapeti] Looks testHiveAction is failed due to a different reason. Can you review the new patch with a test case checks if OozieDBCLI is deleting the runtime directory or not.

[~prabhujoseph], Yeah, testHiveAction is sad, but not related. 
Thanks for adding the test!
+1

committed to master!

Thanks [~gezapeti].

Closing issue; Oozie 5.1.0 is released.

