Will the HBase 1.2 compatibility module work fine with HBase 1.3.1?

[~poorna] or [~gokulavasan]?

[~jamestaylor] I think HBase 1.2 compatibility module should work with HBase 1.3.1. We will test it and make it available as part of 0.13.0-incubating Tephra release.

Any ETA on this yet, [~poorna]?

Ping [~anew].

Hi [~jamestaylor], 

I tried running the tests against HBase 1.3.1 and it fails to compile with: 
{noformat}
[ERROR] /Users/andreas/anew-tephra/tephra-hbase-compat-1.1-base/src/test/java/org/apache/tephra/hbase/coprocessor/TransactionProcessorTest.java:[572,26] method getWAL in class org.apache.hadoop.hbase.wal.WALFactory cannot be applied to given types;
{noformat}
It looks like that method was changed between 1.2 and 1.3, to take an additional argument (the namespace). We probably have to create a new compatibility module, or do you see a better option?

-Andreas


Looks like perhaps a test-only issue. Do you still need a new compat module even for that?

We could add reflection to the test class but the idea of a compat module is to avoid that... I could see that it is not a big deal for tests only. Let me see what else I find. 

GitHub user anew opened a pull request:

    https://github.com/apache/incubator-tephra/pull/50

    [TEPHRA-238] Support for HBase 1.3.x

    - Adds a new compat module using 1.3.1 as the HBase version.  I could not reuse the compat-1.1-base because HTable added four new methods in 1.3 (get/setOperation/RpcTimeout)
    - All the classes in the new src/ tree are the same as in the compat-1.1-base, except:
    1. implemented the four new methods in TransactionAwareHTable
    2. change to a TransactionProcessorTest.createRegion(), because WALFactory.getWAL() now takes an extra argument for the namespace. 
    3. Changing 1.1 to 1.3 in all comments etc. 
    


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/anew/incubator-tephra tephra-238

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/incubator-tephra/pull/50.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #50
    
----
commit 75fb6df59ad6a040d46d8fccea0be51454b56d56
Author: anew <anew@apache.org>
Date:   2017-09-05T20:44:08Z

    [TEPHRA-238] Support for HBase 1.3.x

----


I had to add a new compat module because the Table API also added new methods. Here is the pull request. 

- https://github.com/apache/incubator-tephra/pull/50

Please help review. Thanks -Andreas

Github user JamesRTaylor commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    +1. Thanks, @anew!


Github user anew commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    Thanks for the quick review, @JamesRTaylor. As an additional validation, could you run the Phoenix tests with this branch of Tephra? Thanks a lot!


Github user JamesRTaylor commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    Will do - I'll get back to you when finished.


Github user anew commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    Rebased on top of Tephra-252. Travis build should now pass. 


Github user JamesRTaylor commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    Verified that all test pass with usage of new HBase 1.3 compat module using this patch. Would be much appreciated if a Tephra release could be done with this patch so we can support transactions in our HBase 1.3 release for 4.12.


Github user anew commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    Thanks, @JamesRTaylor, for the verification. I am waiting for the Travis build to succeed. 
    What is your anticipated date for Phoenix 4.12? We have a few critical fixes that we would like to get done before the release, so a release in about 2 weeks seems realistic.  


Github user anew commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    The travis test run for Java 8 failed while it passed for Java 7. It fails in a test for HBase 1.2, which is not affected at all by this change. That indicates that the failing test case is flaky. I created a new Jira TEPHRA-253 to track the flaky test. 
    
    Since that failure is due to a flaky test, and it passed with Java 7, and the changes here do not have any influence on the failed test, I am confident that this change did not introduce the failure. Hence I will commit this.  


Github user JamesRTaylor commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    The sooner the better for a Tephra release. This is the critical issue for us as we have no Tephra support for HBase 1.3 currently.


Github user asfgit closed the pull request at:

    https://github.com/apache/incubator-tephra/pull/50


Github user anew commented on the issue:

    https://github.com/apache/incubator-tephra/pull/50
  
    We also want to do a release soon. But we must fix at least TEPHRA-239, 242 and 244 as they are show stoppers for people who use Tephra in production. 244 is definitely the most complex to fix. Anyway this is not the place to have a release discussion... let's discuss the release on the mailing list when 244 is fixed? For now, this issue is resolved, thanks for the help.


