ServerShutdownTest currently:
* Starts a KafkaServer
* Does stuff
* Stops the server
* Counts if there are any live kafka threads

This is fine on its own. But when running in a test suite (i.e gradle test), the test is very very sensitive to any other test freeing all resources. If you start a server in a previous test and forgot to close it, the ServerShutdownTest will find threads from the previous test and fail.

This makes for a flaky test that is pretty challenging to troubleshoot.

I suggest counting the threads at the beginning and end of each test in the class, and only failing if the number at the end is greater than the number at the beginning.
