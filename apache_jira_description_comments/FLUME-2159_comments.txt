Adding a small sleep before assertion, fixes the sporadic failures.

Seeing the sporadic failures again. This patch does not address the issue.

The failure was becase, in some runs, there was one extra thread that was running at the start, which was no longer running in the end (perhaps a gc thread?).  The test asserts to ensure that the number of threads  at the start== threads at end for detecting thread leaks.  

If the #start < #end , then indeed this can be considered a thread leak. However in some cases it can be that #start > #end. So relaxed the assertion accordingly.

I am thinking we should perhaps just drop this test. Its really flaky. Its really not accounting for the fact that threads are being spun up & terminated by other parts of the system. Its do not see a straightforward way  to fix this either..  it seems tricky to  exclude other threads in the count.

Here are some observations:
I see that sometimes (finalThreadCount > initialThreadCount), sometimes  it is (finalThreadCount < initialThreadCount) and at other times they are equal.

Here is an thread dump of a case where finalThreadCount =6 & initialThreadCount=5

{quote}
*Thread Dump Before*
    Thread: Reference Handler  ,Thd Id: 2
    Thread: Finalizer  ,Thd Id: 3
    Thread: Signal Dispatcher  ,Thd Id: 4
    Thread: main  ,Thd Id: 1
    Thread: pool-38-thread-1  ,Thd Id: 103
    Thread: Flume Avro RPC Client Call Invoker 1,Thd Id: 105


*Thread Dump After*       
    Thread: Reference Handler  ,Thd Id: 2
    Thread: Finalizer  ,Thd Id: 3
    Thread: Signal Dispatcher  ,Thd Id: 4
    Thread: main  ,Thd Id: 1
    Thread: Avro NettyTransceiver I/O Worker 1  ,Thd Id: 2106
{quote}



Here is another case where finalThreadCount =5 & initialThreadCount=5. But notice how the threads are not the same before/after.

{quote}
*Thread Dump Before*
    Thread: Reference Handler  ,Thd Id: 2
    Thread: Finalizer  ,Thd Id: 3
    Thread: Signal Dispatcher  ,Thd Id: 4
    Thread: main  ,Thd Id: 1
    Thread: pool-38-thread-1  ,Thd Id: 103

*Thread Dump After*   
    Thread: Reference Handler  ,Thd Id: 2
    Thread: Finalizer  ,Thd Id: 3
    Thread: Signal Dispatcher  ,Thd Id: 4
    Thread: main  ,Thd Id: 1
    Thread: Avro NettyTransceiver I/O Worker 1  ,Thd Id: 2105
{quote}



Agreed. I will commit this patch after running tests.

Looks like the patch does not remove the thread. Do you want to submit a patch removing the test?

removing flaky test    TestNettyAvroRpcClient.spinThreadsCrazily()

+1. 

Committed, rev: 68fe4d4. Thanks Roshan

FAILURE: Integrated in flume-trunk #513 (See [https://builds.apache.org/job/flume-trunk/513/])
FLUME-2159. Remove TestNettyAvroRpcClient.spinThreadsCrazily. (hshreedharan: http://git-wip-us.apache.org/repos/asf/flume/repo?p=flume.git&a=commit&h=68fe4d45123473adbef1077c5de20b4dd48d3a1d)
* flume-ng-sdk/src/test/java/org/apache/flume/api/TestNettyAvroRpcClient.java


