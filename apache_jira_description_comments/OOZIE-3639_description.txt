Trying to build Apache Oozie on Linux ARM64 fails due:
 # An old version of snappy-java library (transitive dependency of Apache Spark):

{code:java}
[ERROR] testMain(org.apache.oozie.action.hadoop.TestSparkMain)  Time elapsed: 3.512 s  <<< ERROR!
java.lang.IllegalArgumentException: org.xerial.snappy.SnappyError: [FAILED_TO_LOAD_NATIVE_LIBRARY] no native library is found for os.name=Linux and os.arch=aarch64
	at org.apache.spark.io.SnappyCompressionCodec$.liftedTree1$1(CompressionCodec.scala:171)
	at org.apache.spark.io.SnappyCompressionCodec$.org$apache$spark$io$SnappyCompressionCodec$$version$lzycompute(CompressionCodec.scala:168)
	at org.apache.spark.io.SnappyCompressionCodec$.org$apache$spark$io$SnappyCompressionCodec$$version(CompressionCodec.scala:168)
	at org.apache.spark.io.SnappyCompressionCodec.<init>(CompressionCodec.scala:152)
...
 Caused by: org.xerial.snappy.SnappyError: [FAILED_TO_LOAD_NATIVE_LIBRARY] no native library is found for os.name=Linux and os.arch=aarch64
	at org.xerial.snappy.SnappyLoader.findNativeLibrary(SnappyLoader.java:331)
	at org.xerial.snappy.SnappyLoader.loadNativeLibrary(SnappyLoader.java:171)
	at org.xerial.snappy.SnappyLoader.load(SnappyLoader.java:152)
	at org.xerial.snappy.Snappy.<clinit>(Snappy.java:46)
	at org.apache.spark.io.SnappyCompressionCodec$.liftedTree1$1(CompressionCodec.scala:169)
	... 80 more{code}
Adding a dependency management for snappy-java to use org.xerial.snappy:snappy-java:1.1.8.4 fixes it!

2. Test failure in TestPyspark:
{code:java}
[ERROR] testPyspark(org.apache.oozie.action.hadoop.TestPyspark)  Time elapsed: 59.513 s  <<< FAILURE!
junit.framework.ComparisonFailure: expected:<[SUCCEED]ED> but was:<[FAILED/KILL]ED>
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.Assert.assertEquals(Assert.java:107)
	at junit.framework.TestCase.assertEquals(TestCase.java:260)
	at org.apache.oozie.action.hadoop.TestPyspark.testPysparkHelper(TestPyspark.java:107)
	at org.apache.oozie.action.hadoop.TestPyspark.testPyspark(TestPyspark.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   ... {code}