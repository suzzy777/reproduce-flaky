The tests are getting less and less useful all the time. Devs break things and just assume any tests that might now randomly fail have nothing to do with them.  You can only meaningful run tests with BadApples off, which means test coverage is minimal and shrinking and new problems are being added, the tests are slow and often inefficient and lazily implemented.

It's time to change the tide.

Hey Mark,

100% agreed the tests are a problem.  But can you clarify what you're opening this issue for.  Just asking as someone interested in the problem.

Are you proposing a new approach to solving the test flakiness?  Is this a Jira mainly intended to stoke more discussion on things, or as a place to brainstorm. Or is this an umbrella Jira to track all the smaller things you think are contributing to the larger problem?  Or something else altogether?

{quote}You can only meaningful run tests with BadApples off, which means test coverage is minimal and shrinking and new problems are being added,
{quote}
Not exactly true. BadApple=true is the default, you have to deliberately disable those tests. Of course if you do in your environment, then the above is totally true.

What is also totally true is that the noise is such that I can break something and never see it because I haven't waded through each and every failure in BadApple'd tests to see if I introduced a legitimate failure in one of them.

I would be _thrilled_ if all the BadApple nonsense were no longer useful. As it is, what it's mainly recording is whether we're annotating more than we un-annotate as well as whether tests come and go over longer time frames. There are tests that fail for 4 weeks in a row, then succeed for 5 weeks, then fail for 6 weeks etc. That's the purpose of leaving the comments in when tests were annotated/unannotated.

The BadApple thrashing is not doing much of anything towards actually _fixing_ the issues. About all it's doing is making the extent of the problem more visible if anyone bothers to read the weekly e-mails.

I guess the net-net here is that I don't like the BadApple process much and would be glad to stop dealing with it altogether if we define a better process.

Sounds like a hot topic at Activate ;)

This is an umbrella issue to track a variety of things I'll be pushing.

* Improve system mock-ability.
* Add useful out of the box mocks.
* Separate unit and integrations tests logically in the src structure.
* Add doc for writing good tests, using mocks, unit vs integration, beasting, etc.
* Fix the current tests.
* Generate a very regular automated beast report.
* etc

My first patch includes the first 3 sub issues I've linked. It's a little more work than it's worth to break them up at this point. While working on those items, I've also done the work needed to 'usually'  get a passing ant test to work on my two primary machines without using badapples=false. That is a big improvement for me because for months I've not been able to get ant test by itself to pass.

bq. BadApple=true is the default, you have to deliberately disable those tests. 

Because badapples=true is almost impossible to get a clean test run with, I can't imagine any dev using that recently with any success, making it a terrible default. I'm going to side step that issue by getting ant test able to pass sometimes again though.

I'm going to start addressing tests by package (search package is first). Once I have some more tools and info and code to share, hopefully some others can join. Regardless, I may be trying to call people in for specific tests.

There is a good chance beasting test reports will be back eventually and more useful than ever as well.

I'll post my first patch (mainly focused on making the Overseer queue mockable) very soon.

{quote}I'm going to start addressing tests by package (search package is first).
{quote}
I think today a lot of tests get lumped in the search package or cloud package when it perfectly deserves it's own package. We could address that in a separate Jira as well ( SOLR-12793 is one such example )

I want to start having a place for unit tests and integration tests - maybe we can work on both at once?

{quote}I want to start having a place for unit tests and integration tests - maybe we can work on both at once?
{quote}
I didn't quite follow this. Is there anything particular that you wanted me to look into while i'm working on SOLR-12793  . Happy to help move some tests to their own packages if that would help here

We currently have a complete mix of integration and unit tests. People add one or the other based on ease, usually just integration tests for a lot of stuff, maybe a test is even a hybrid of both.

I think it would help a lot to separate out unit tests and integration tests - you should be able to run them separately and they should live in different paths.

We should encourage developers to write both for new work, and push back for reasons when one or the other is left out.

Part of making that a full reality will mean making it much easier to write unit tests, but we could start organizing.


I've been interested in making tests easier to maintain and write -- SOLR-11872 (managed SolrClient instead of TestHarness stuff)  I suppose it doesn't fit within the scope of this issue though.  One relationship however is the idea that you could run tests globally but indicate you only want to run tests that, say, can work for standalone (not SolrCloud) and/or which can use just one shard.  Many tests could be either-or -- the test doesn't fundamentally care either way.  With some adjustments in that issue, they could be written that way.  I did this for a specific client but it could have been upstreamed to Solr.

Another FYI that I think is hugely important to test maintenance is SOLR-10229 concerning preventing proliferation of one-off test files.  The "how" is debatable but the goal is important.

bq. I suppose it doesn't fit within the scope of this issue though.

I think it's very much in scope! TestHarness would be great to lose IMO.

Also in scope is finishing moving cloud tests off the old inheritance pattern and using MiniSolrCloudCluster.

[~dsmiley] - I've linked both those issues.

They are probably outside the scope of what I'd focus on in my flurry of issues, because I'm going to own getting to a finish line so to speak and that is a deep well, but that is part of why I need a lot of help - there is a lot we have done and need to continue to do in terms of simplifying test development.

I'm focusing more directly on the test failure rate issue here, but everything is really directly influencing that.

My plan is to kind of be the super nova in the center of addressing the flaky tests, but I'll burn out long before I address everything we would like to be in a really ideal test land situation. What everyone else has been doing around tests and is currently doing is still going to be hugely important.

Once I get my patch in for SOLR-12804, I'll fix or help fix any test someone posts in SOLR-12932 after seeing it fail locally.

Wow. The tests were in very rough shape. We *have* to execute on a plan of test defense. Things had gotten so bad that newer tests were getting even worse because obviously no one minds if ant test fails because of any change because ant test will fail practically 100% of 100 runs anyway.

This is heading towards non reversible.

I just spent all weekend doing what I could for ant test sanity. I'll share later today.

Still coming.

FYI, I'm turning off most tlog replica testing until SOLR-12313 is fixed.

Okay, here is my current work: https://github.com/apache/lucene-solr/pull/486

Please check it out and try 'ant clean test' in the solr directory. Report your fails in SOLR-12932.

I'll work on those fails. If you want to help, you could do the same.


I get a compilation error: 

{quote}
compile-core:
 [mkdir] Created dir: /Users/Erick/apache/solrJiras/master/solr/build/solr-test-framework/classes/java
 [javac] Compiling 53 source files to /Users/Erick/apache/solrJiras/master/solr/build/solr-test-framework/classes/java
 [javac] /Users/Erick/apache/solrJiras/master/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java:398: error: variable numOtherReplicas is already defined in method createJettys(int)
 [javac] int numOtherReplicas = numJettys - getPullReplicaCount() * sliceCount;
 [javac] ^
 [javac] Note: /Users/Erick/apache/solrJiras/master/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java uses or overrides a deprecated API.
 [javac] Note: Recompile with -Xlint:deprecation for details.
 [javac] Note: Some input files use unchecked or unsafe operations.
 [javac] Note: Recompile with -Xlint:unchecked for details.
 [javac] 1 error
{quote}

Trivially fixable, I'm mostly wondering if there's something in your pull request that got messed up.... Or if I didn't apply it correctly. I fetched it to a patch file and applied the patch FWIW.

Running tests now.

[https://patch-diff.githubusercontent.com/raw/apache/lucene-solr/pull/486.patch] didn't apply cleanly on a fresh checkout last night, had a bunch of hunks not applied (intellij's VCS > Apply Patch...).

 

Edit: Issue was that I didn't notice the patch was against branch_7x ... applied without conflicts there.

{quote}
  [junit4] Tests with failures [seed: 9F83A474D27F5826]:
  [junit4]   - org.apache.solr.cloud.ZkSolrClientTest.testMakeRootNode
  [junit4]   - org.apache.solr.cloud.ZkSolrClientTest (suite)
{quote}

I'm finally ready to commit my first pull request for branch 7x. I have to get something working for 8x now. Going to be a sludge crawl to cherry pick I bet.

To answer a bit of the above:

Sometimes you may have to reset the branch to the origin due to a force push. I'd also do an ant clean top level between runs.

It's easiest to just check the whole branch out of github vs applying a patch.

Anyway, I'm pretty much wrapped up like I said. More work in future pull requests.

Commit 75b183196798232aa6f2dcaaaab117f309119053 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=75b1831 ]

SOLR-12801: Make massive improvements to the tests.

SOLR-12804: Remove static modifier from Overseer queue access.

SOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)

SOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)

SOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)

SOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)

SOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)

SOLR-12933: Fix SolrCloud distributed commit.


Commit eb652b84edf441d8369f5188cdd5e3ae2b151434 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb652b8 ]

SOLR-12801: Make massive improvements to the tests.

SOLR-12804: Remove static modifier from Overseer queue access.

SOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)

SOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)

SOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)

SOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)

SOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)

SOLR-12933: Fix SolrCloud distributed commit.


Commit a3ec5b5fdfa59197fb8a36a29cc158b69835afd8 in lucene-solr's branch refs/heads/master from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a3ec5b5 ]

SOLR-12801: Wait for executor to finish shutdown.


Commit 7f88bfa11234a2ad4c688d131c94db574dc6e516 in lucene-solr's branch refs/heads/master from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7f88bfa ]

SOLR-12801: Wait for collections properly.


Commit 79d7efe811a4e9e672d1a55e8b30683a927c1f4d in lucene-solr's branch refs/heads/branch_7x from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=79d7efe ]

SOLR-12801: Wait for executor to finish shutdown.


Commit 0e6b29c3e19fd86d7fa4cef805c1e797935cc46a in lucene-solr's branch refs/heads/branch_7x from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0e6b29c ]

SOLR-12801: Wait for collections properly.


Commit 9b0b9032e2571b3a37aef93d823161b1b934381e in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9b0b903 ]

SOLR-12801: Fix thread leak in test.


Commit 3f8b3b20a22f95f2824f585c6742a248e85bc5f7 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3f8b3b2 ]

SOLR-12801: Fix thread leak in test.


Commit 755044b58f984ecadca3096a3572ee261cd96cdf in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=755044b ]

SOLR-12801: Wait for collection creation in test.


Commit 2454f6c2b54ee55468f5340f13dda4f638f20669 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2454f6c ]

SOLR-12801: Wait for collection creation in test.


Commit cbe9f82202c481a98d0f455758e6741f6c13ddcc in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cbe9f82 ]

SOLR-12801: Don't possibly block forever in this test.


Commit aeae27ee0895bebf98083ba813554fa0e02ee967 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aeae27e ]

SOLR-12801: Don't possibly block forever in this test.


Commit a3ec5b5fdfa59197fb8a36a29cc158b69835afd8 in lucene-solr's branch refs/heads/jira/http2 from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a3ec5b5 ]

SOLR-12801: Wait for executor to finish shutdown.


Commit 7f88bfa11234a2ad4c688d131c94db574dc6e516 in lucene-solr's branch refs/heads/jira/http2 from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7f88bfa ]

SOLR-12801: Wait for collections properly.


Commit 9b0b9032e2571b3a37aef93d823161b1b934381e in lucene-solr's branch refs/heads/jira/http2 from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9b0b903 ]

SOLR-12801: Fix thread leak in test.


Commit 755044b58f984ecadca3096a3572ee261cd96cdf in lucene-solr's branch refs/heads/jira/http2 from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=755044b ]

SOLR-12801: Wait for collection creation in test.


Commit cbe9f82202c481a98d0f455758e6741f6c13ddcc in lucene-solr's branch refs/heads/jira/http2 from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cbe9f82 ]

SOLR-12801: Don't possibly block forever in this test.


Commit b5a9cca1685108655cda111c798fd99cbbc1f5d0 in lucene-solr's branch refs/heads/master from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b5a9cca ]

SOLR-12801: Raise THREAD_POOL_MAX_IDLE_TIME_MS.


Commit ec4aca435e35ecb15e9346088319f70c7a620a8e in lucene-solr's branch refs/heads/branch_7x from [~markrmiller@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ec4aca4 ]

SOLR-12801: Raise THREAD_POOL_MAX_IDLE_TIME_MS.


Commit b294d8460f85d53bfe5ed57a7aa44911ab851aa2 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b294d84 ]

SOLR-12801: Don't possibly block forever in this test in another spot.


Commit 7e8e97b4d83006131cc27bc8ded2f8c5ae32a148 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7e8e97b ]

SOLR-12801: Don't possibly block forever in this test in another spot.


Commit e5281ef3d5e36f5ad8a871818dd511fb9fbee74f in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e5281ef ]

SOLR-12801: Don't possibly block forever in this test in remaining spots.


Commit 76f20bfe1a30919ef4ce28a7d56bee82844a4c4f in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=76f20bf ]

SOLR-12801: Don't possibly block forever in this test in remaining spots.


[~markrmiller@gmail.com], based on the changes you made to TimeRoutedAliasUpdateProcessorTest I believe you have broken the intended functionality with [https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a3ec5b5] 

The specific intention in that test is that we are verifying that the request does not wait for the executor to finish before returning. Where you changed the collection count from 3 to 4 the test was explicitly testing that a new collection was not yet visible. The test expects that it won't be visible until after we wait for it to appear, which generally safe since collection creation typically takes 1-2 seconds, and the listing of aliases is typically very fast.

Also your change creates a serious bug wherein pre-emptive collection creation will always be triggered for every doc potentially preemptively creating an indefinite number of collections, this bug masked the fact you changed later tests to higher than expected numbers and should have failed.

I'm going to revert that commit to restore correct functionality, and add additional assertions that need to pass.

If this test/technique seems to be a source of instability (the assumptions about timing could be bad under high load), then we'll need to find a solution that also passes the additional assertions

Commit cf4d7494101f48cc77a0b4fa182c789101854f6a in lucene-solr's branch refs/heads/master from [~gh_at]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cf4d749 ]

SOLR-12801 Revert breaking commit a3ec5b5fdf and improve test
to be more complete. Also, add comments to make it easier for
others to understand TimeRoutedAliasUpdateProcessorTest


Commit b6b9f9554e6a30d92afd2b277554e1d1f81ede5d in lucene-solr's branch refs/heads/master from [~gh_at]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b6b9f95 ]

SOLR-12801 fix cut/paste oops in comment


Linking the issue I discovered WRT the retry logic when jetty ports clash.

{quote}

If this test/technique seems to be a source of instability (the assumptions about timing could be bad under high load), then we'll need to find a solution that also passes the additional assertions

{quote}

Yes, this feature is a problem, you cannot create executors and then not shut them down and wait for them, its a leak. I'll AwaitsFix that test.

Commit 1408f5255fbcde6e843845375349a694f783d247 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1408f52 ]

SOLR-12801: Disable TimeRoutedAliasUpdateProcessorTest because the feature leaks threads.


Commit a55b9959cddf8d393ce1a8e54b31fde759b80c8c in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a55b995 ]

SOLR-12801: Disable TimeRoutedAliasUpdateProcessorTest because the feature leaks threads.


{quote}
Yes, *this feature is a problem*, you cannot create executors and then not shut them down and wait for them, its a leak. I'll AwaitsFix that test. _(emphasis added)_
{quote}

If the functionality itself (not just the test) has a bug w/thread leaks, then that certainly seems like it should be it's own issue for tracking/fixing purposes ... and the AwaitsFix should cite that new jira number.

FWIW the test passed 90 of 90 beasting 3 rounds by 30, and never showed up on over a dozen subsequent full core runs and a couple top level runs. The 2 sec wait at the end of the test, while ugly does seem to work. The feature does not leak threads any time other than if a test shuts down too quickly. The threads are shutdown, just not awaited.

I believe such an await can be achieved with a close hook, at which point we can hold onto the executor and save some tiny amount of GC & processing too. [~dsmiley] had convinced me that such a close hook was just added complexity (hence the large comment in the code clarifying the decision on that point).  Will you be satisfied if a close hook is added to ensure the test can't end without closing the executor?

Code with Comment for reference:

[https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=blob;f=solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java;h=cc1ddb893b9e5dad5e0c3a22613248ef9e67dc96;hb=cf4d749#l244]

Commit e14432efd8dda81c86cba557255652cfaa377a28 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e14432e ]

SOLR-12801: Wait for thread on close and add AwaitsFix annotation - most of these sim tests can fail to elect shard leaders.


Commit 7ff6c68744ea058e290ebdd982d533da4fb49c94 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7ff6c68 ]

SOLR-12801: Wait for thread on close and add AwaitsFix annotation - most of these sim tests can fail to elect shard leaders.


Commit 40432cdfbcfba7e94a7de1eaf28e30e42bd6d4be in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=40432cd ]

SOLR-12801: tweak shard count specificiation


Commit a9a5cdc34dc2333455401510b9518767534c56b8 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a9a5cdc ]

SOLR-12801: raise jetty idle socket timeout


Commit 3f1b75ab82b1924ab124f0e19be4603a7975d70b in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3f1b75a ]

SOLR-12801: harden MultiThreadedOCPTest


Commit f6063a14611da106aae4fe218cd0943c7d61af29 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f6063a1 ]

SOLR-12801: boost wait to try and harden


Commit 0824f7b045f4f9b1376de7f6707ae37bf7a48d74 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0824f7b ]

SOLR-12801: use waitForActiveCollection call


Commit 5d529802c45cc5651ad1c09aafbff00e35ddecd6 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5d52980 ]

SOLR-12801: harden DocValuesNotIndexedTest


Commit 1d5ae9857fc3bb267dcbfee7d7de1d2f3f1c117e in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1d5ae98 ]

SOLR-12801: Raise timeout in CollectionsAPIAsyncDistributedZkTest.


Commit 665517d3bff736e356643f5c7978c0e10b1ce18b in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=665517d ]

SOLR-12801: Harden CollectionsAPISolrJTest#testCreateCollWithDefaultClusterPropertiesOldFormat.


Commit 6f8d598781bed64d17d077040a4afd9f51a32b98 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6f8d598 ]

SOLR-12801: Harden CollectionsAPISolrJTest#testCreateCollWithDefaultClusterPropertiesNewFormat.


Commit 6cd755f4be77b7009bae51107ac7b96c806ea682 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6cd755f ]

SOLR-12801: harden MultiThreadedOCPTest


Commit a8ed80a8fdd2d8af3e45f06ed69f19d630a47979 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a8ed80a ]

SOLR-12801: boost wait to try and harden


Commit 99def054fef6f766980a2f1d0f34bd9322bdc5b0 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=99def05 ]

SOLR-12801: use waitForActiveCollection call


Commit e9e3ca3cefab919b2109aaec669b70c361556dd4 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e9e3ca3 ]

SOLR-12801: harden DocValuesNotIndexedTest


Commit 83f11400e28f9644ca430a981f116a19db626517 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=83f1140 ]

SOLR-12801: Raise timeout in CollectionsAPIAsyncDistributedZkTest.


Commit 9af24fc8be5abffecc84dac7d0fa6995f7df76fd in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9af24fc ]

SOLR-12801: Harden CollectionsAPISolrJTest#testCreateCollWithDefaultClusterPropertiesOldFormat.


Commit 0f8cb21a003d057c8047753a91c0789486a80256 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0f8cb21 ]

SOLR-12801: Harden CollectionsAPISolrJTest#testCreateCollWithDefaultClusterPropertiesNewFormat.


Commit f47976a219a823460cad655f151eeb3a2cd4606d in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f47976a ]

SOLR-12801: Try to harden SolrRrdBackendFactoryTest.


Commit 5405b2f1c3bfca7762b16fc07179f27543904be6 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5405b2f ]

SOLR-12801: Try to harden TestReplicatinHandler#doTestIndexFetchOnMasterRestart.


Commit 815f26d65678ff541da1aaaa9a4042fff3f6c8cb in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=815f26d ]

SOLR-12801: Try to harden SolrRrdBackendFactoryTest.


Commit 77bf9cd3f98ce355acc4ac2027fcd27777cb32ea in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=77bf9cd ]

SOLR-12801: Try to harden TestReplicatinHandler#doTestIndexFetchOnMasterRestart.


{quote}The 2 sec wait at the end of the test, while ugly does seem to work.
{quote}
Probably a better solution is the thread leak annotation with a longer timeout. The problem with this approach is that other tests that use this feature in the future will introduce this rare random fail without a dev knowing.

It can be a pain, but the rule is that we have to close and clean and wait for threads unless we really can't for some reason. Exceptions and hacks end up hurting us over time as tests and devs evolve.

We need close to wait for any outstanding executors to finish shutting down.

Commit 56b959141fa3e06db2ea6c079adb01bdab87c003 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=56b9591 ]

SOLR-12801: Try to harden closing of zk db in TestConfigSetsAPIZkFailure.


Commit bf0e9b367aaa50f2c13159d7a2b79ab97bf5291b in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bf0e9b3 ]

SOLR-12801: Relax specific test permissions to help harden tests.


re: DocValuesNotIndexedTest. See: SOLR-9843.

 

Especially this is probably something to do with commits not happening synchronously, but that's a guess.

Commit 1885899e15dd4387fe4871b0d7b558b04537883e in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1885899 ]

SOLR-12801: Try to harden closing of zk db in TestConfigSetsAPIZkFailure.


Commit 4d582732368bc167c120a5467a2574c17abdb2fa in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d58273 ]

SOLR-12801: Relax specific test permissions to help harden tests.


Commit d96475a0bb9e41b285c273e1b70d984208d6fd3a in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d96475a ]

SOLR-12801: Fix TestSolrCloudWithKerberosAlt.


Commit 2f8ad008f7bb547c9b70dc9fbd04fd0df8464d35 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2f8ad00 ]

SOLR-12801: Fix TestSolrCloudWithKerberosAlt.


Commit d96475a0bb9e41b285c273e1b70d984208d6fd3a in lucene-solr's branch refs/heads/jira/http2 from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d96475a ]

SOLR-12801: Fix TestSolrCloudWithKerberosAlt.


Commit 7605427481d853b1cc4281e868f7f96fc43d9d3e in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7605427 ]

SOLR-12801: Harden BasicDistributedZk2Test.


Commit 496c627882ca43f74307350c74be30b06fc0df74 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=496c627 ]

SOLR-12801: Raise this test socket timeout to 30 seconds.


Commit ab891fa4728e53c0ee308b670659ac47ddc49a7c in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ab891fa ]

SOLR-12801: Harden TestCloudRecovery.


Commit 05d728f57a28b9ab83208eda9e98c3b6a51830fc in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=05d728f ]

SOLR-12801: Add @AwaitsFix to TestHierarchicalDocBuilder#testThreeLevelHierarchy.


Commit 3bc5dbce0122c3c99b3c4c50441a813bc5cd25c3 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3bc5dbc ]

SOLR-12801: Harden BasicDistributedZk2Test.


Commit 85cfc8861c696e38a043cb668f2830577e6f137c in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=85cfc88 ]

SOLR-12801: Raise this test socket timeout to 30 seconds.


Commit b1a8553fa8e1053d873faa294ed64cb6c1471bca in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b1a8553 ]

SOLR-12801: Harden TestCloudRecovery.


Commit 2e6bf936ae6778c3355cad26f3fdc7d2de0251fe in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2e6bf93 ]

SOLR-12801: Add @AwaitsFix to TestHierarchicalDocBuilder#testThreeLevelHierarchy.


Commit 11895e6e4ad9c3ad7bd3eb0b7ea4c1e3745a24be in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11895e6 ]

SOLR-12801: Harden InfixSuggestersTest#testShutdownDuringBuild.


Commit a25ddcd4f3df0f09509d1b36f843e5530b57b342 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a25ddcd ]

SOLR-12801: Harden InfixSuggestersTest#testShutdownDuringBuild.


Commit 19d968dc3d9b239657d6efc69f5866fb843bac59 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=19d968d ]

SOLR-12801: Harden OverseerTaskQueueTest and DistributedQueueTest.


Commit 274a6eba901e1181ace413003e31e3ae888ffc8c in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=274a6eb ]

SOLR-12801: Try to harden CdcrBootstrapTest.


Commit 5ebbfbb91d29849d015f1ab443dd1761a92084ca in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5ebbfbb ]

SOLR-12801: Harden OverseerTaskQueueTest and DistributedQueueTest.


Commit 2b62f8be407eaeece98411efc3ded5184af478ec in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2b62f8b ]

SOLR-12801: Try to harden CdcrBootstrapTest.


Commit c852418148d69a35116c07f0ab11b27b701e4256 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c852418 ]

SOLR-12801: Harden TestSimLargeCluster.


Commit 84abb24886832dbd3aec32bf8acfe3d9de3b9d4f in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=84abb24 ]

SOLR-12801: Harden TestSimLargeCluster.


Commit 19d968dc3d9b239657d6efc69f5866fb843bac59 in lucene-solr's branch refs/heads/jira/http2 from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=19d968d ]

SOLR-12801: Harden OverseerTaskQueueTest and DistributedQueueTest.


Commit 274a6eba901e1181ace413003e31e3ae888ffc8c in lucene-solr's branch refs/heads/jira/http2 from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=274a6eb ]

SOLR-12801: Try to harden CdcrBootstrapTest.


Commit c852418148d69a35116c07f0ab11b27b701e4256 in lucene-solr's branch refs/heads/jira/http2 from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c852418 ]

SOLR-12801: Harden TestSimLargeCluster.


Commit 1e687268316369102306085f8c5410d62b5dafaf in lucene-solr's branch refs/heads/master from [~jbernste]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1e68726 ]

SOLR-12801: Suppress SSL and older codecs


Commit 7ac559df9add1beac4d5c4102a0c48895ce074ef in lucene-solr's branch refs/heads/branch_7x from [~jbernste]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7ac559d ]

SOLR-12801: Suppress SSL and older codecs


Commit 42f13731b3a037ee9682df49bb946ca0b4ca8544 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=42f1373 ]

SOLR-12801: Harden SimSolrCloudTests.


Commit 3d6a09e9d96a57637293ccde795bf170ec410621 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3d6a09e ]

SOLR-12801: Harden SimSolrCloudTests.


Commit afcc4fd5d3b80dfcb86ce64fc45315013ddb1d3e in lucene-solr's branch refs/heads/branch_7x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=afcc4fd ]

SOLR-12801: completely prevent tlog replicas from being used.

This follows the spirit of the change Mark intended in his previous commit to this test, but his solution wasn't covering all cases on backcompat to branch_7x

(see also: SOLR-12313)

(cherry picked from commit e2b8b0e5b1f36e6ecedbeca50263cc6c263d7909)


Commit 0ba2233eea05a35ea9b25187c6a96fbdb865eaf3 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=0ba2233 ]

SOLR-12801: completely prevent tlog replicas from being used.

This follows the spirit of the change Mark intended in his previous commit to this test, but his solution wasn't covering all cases on backcompat to branch_7x

(see also: SOLR-12313)

(cherry picked from commit e2b8b0e5b1f36e6ecedbeca50263cc6c263d7909)


Commit e2b8b0e5b1f36e6ecedbeca50263cc6c263d7909 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=e2b8b0e ]

SOLR-12801: completely prevent tlog replicas from being used.

This follows the spirit of the change Mark intended in his previous commit to this test, but his solution wasn't covering all cases on backcompat to branch_7x

(see also: SOLR-12313)


Hello [~markrmiller@gmail.com]

In FacetStream.java, open() method Socket timeout 30 seconds & connection timeout 15 seconds has been added in Version #7.7 onward which is hard-coded and not configurable. 
These numbers are very low when dealing with large number of documents for complex Streaming facet query and if we try to retrieve large number of records or starting Offset value is high, Timeout exception is occurring while waiting response from server.

How can we deal with this issue?

[~aninditagupta] this issue is about fixing the unit tests. SOLR-13457 is probably a better place to discuss issues with hard coded timeouts.

[~aninditagupta] that was a mistake that got in, we should only lower those timeouts for tests and leave a system property safety valve, JIRA and fix is the right approach.

This issue still has some sub issues, but I won't necessarily be tackling them under this issue. This issue was about me not being able to run ant test on my desktop. There is now a follow up issue based on test speed: SOLR-13796 Fix Solr Test Performance. Beyond that, there are some critical system fixes and improvements we will need before tests can possibly be solid for real.

I can solve all of the open issues under this JIRA, but it will be from the tests and system angles.

It's a little tricky to do a small part at a time because when the system hits a certain speed, things start to fail due to a variety of problems with non thread safe code, bad recover logic, bad leader election code, misused zk code , bugs, etc.



