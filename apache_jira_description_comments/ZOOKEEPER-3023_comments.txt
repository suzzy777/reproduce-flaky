quick comment:
this test is flaky obviously.If we change 50 to a bigger num(e.g. 100),the symptoms of issue will be lighter.It seems that a sync operation miss between leader and follower i guess

 

Reproducible in current branch-3.5?

Hi [~maoling], do you have a fix for this? I was also working on this as we had issues with this, pretty flaky for us.
If you don't have a fix I'll push my patch if it's OK with you?

edit: we are running 3.4.x but same problems exist on master and 3.5 as well.

Edit: nevermind, mine is a different error in the same test. I'll probably create another jira.

[~nkalmar] please go ahead

I had remembered this flaky frequently happened, but disappear these days.

 

The line context is dated. I think it is [following assertion|https://github.com/apache/zookeeper/blob/2173c92a2b054e2fa55fd69d0d9ea892b7cc7e66/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/Zab1_0Test.java#L790] that failed.
{code:java}
assertEquals(createSessionZxid, f.fzk.getLastProcessedZxid());
{code}

Beside above assertion, this test also [failed|https://github.com/apache/zookeeper/runs/5525199467?check_suite_focus=true] with following message and assertion.
{code:none}
[ERROR] testNormalFollowerRunWithDiff  Time elapsed: 0.045 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: expected: <4294967296> but was: <4294967298>
	at org.apache.zookeeper.server.quorum.Zab1_0Test$5.converseWithFollower(Zab1_0Test.java:778)
	at org.apache.zookeeper.server.quorum.Zab1_0Test.testFollowerConversation(Zab1_0Test.java:445)
	at org.apache.zookeeper.server.quorum.Zab1_0Test.testNormalFollowerRunWithDiff(Zab1_0Test.java:706)
{code}
{code:java}
                    // Read the uptodate ack
                    readPacketSkippingPing(ia, qp);
                    assertEquals(Leader.ACK, qp.getType());
                    assertEquals(ZxidUtils.makeZxid(1, 0), qp.getZxid());

                    // Get the ack of the new leader
                    readPacketSkippingPing(ia, qp);
                    assertEquals(Leader.ACK, qp.getType());
                    assertEquals(ZxidUtils.makeZxid(1, 0), qp.getZxid());
                    assertEquals(1, f.self.getAcceptedEpoch());
                    assertEquals(1, f.self.getCurrentEpoch());
{code}

I think this test becomes flaky after ZOOKEEPER-2678, and ZOOKEEPER-3911 introduces new flaky path. Before ZOOKEEPER-2678 and ZOOKEEPER-3911, following condition holds:
1. Txn logs are synced to disk and committed to memory. ZOOKEEPER-2678 breaks this, and ZOOKEEPER-3911 tried but failed to fix as {{FollowerZooKeeperServer.logRequest}} logs txn asynchronous.
2. No ack before {{Leader.NEWLEADER}} ack.  ZOOKEEPER-3911 breaks this.

I think we can fix this flaky test by bring back above conditions by synchronously sync txn to disk and commit to memory without go through asynchronous request processor. This way we build invariant that after ack for {{NEWLEADER}}, followers are in sync with leader. This is consistent with pre ZOOKEEPER-2678 and easy to test.

Happens to have save assertion failure as description in [my fork|https://github.com/kezhuw/zookeeper/runs/5789422853?check_suite_focus=true].

{code:none}
org.apache.zookeeper.server.quorum.Zab1_0Test
[ERROR] testNormalFollowerRunWithDiff  Time elapsed: 0.1 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: expected: <4294967298> but was: <0>
	at org.apache.zookeeper.server.quorum.Zab1_0Test$5.converseWithFollower(Zab1_0Test.java:790)
	at org.apache.zookeeper.server.quorum.Zab1_0Test.testFollowerConversation(Zab1_0Test.java:445)
	at org.apache.zookeeper.server.quorum.Zab1_0Test.testNormalFollowerRunWithDiff(Zab1_0Test.java:706)
{code}

Git commit is [2173c92a2b054e2fa55fd69d0d9ea892b7cc7e66|https://github.com/apache/zookeeper/blob/2173c92a2b054e2fa55fd69d0d9ea892b7cc7e66/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/Zab1_0Test.java#L790].

