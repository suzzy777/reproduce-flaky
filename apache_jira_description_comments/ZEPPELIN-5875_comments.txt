jongyoul opened a new pull request, #4556:
URL: https://github.com/apache/zeppelin/pull/4556

   ### What is this PR for?
   Fixing flaky test in `core-modules (hadoop[2|3])`. 
   
   
   ### What type of PR is it?
   Bug Fix
   
   ### Todos
   * [ ] - Fix `testTimeout_2`
   
   ### What is the Jira issue?
   * ZEPPELIN-5875
   
   ### How should this be tested?
   * All CI should pass
   
   ### Screenshots (if appropriate)
   <img width="868" alt="image" src="https://user-images.githubusercontent.com/3612566/212483837-888c0f34-6a16-41b5-b77e-e2a3074aa7ee.png">
   
   
   ### Questions:
   * Does the license files need to update? No
   * Is there breaking changes for older versions? No
   * Does this needs documentation? No
   




jongyoul commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070563685


##########
zeppelin-interpreter-shaded/pom.xml:
##########
@@ -117,6 +117,8 @@
                 <exclude>org/w3c/dom/**/*</exclude>
                 <exclude>org/xml/sax/*</exclude>
                 <exclude>org/xml/sax/**/*</exclude>
+
+                <exclude>org/eclipse/sisu/**</exclude>

Review Comment:
   It's because
   
   ```
   [INFO] -------------------------------------------------------------
   [ERROR] COMPILATION ERROR :
   [INFO] -------------------------------------------------------------
   [ERROR] Bad service configuration file, or exception thrown while constructing Processor object: javax.annotation.processing.Processor: jar:file:/Users/jl/Works/Projects/zeppelin/zeppelin-interpreter-shaded/target/zeppelin-interpreter-shaded-0.11.0-SNAPSHOT.jar!/META-INF/services/javax.annotation.processing.Processor:1: Illegal provider-class name: org/apache/zeppelin/shaded/org.apache.zeppelin.shaded.org.eclipse.sisu.space.SisuIndexAPT6
   ```





jongyoul commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070564606


##########
zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/PooledRemoteClient.java:
##########
@@ -44,6 +45,7 @@ public PooledRemoteClient(SupplierWithIO<T> supplier, int connectionPoolSize) {
     GenericObjectPoolConfig poolConfig = new GenericObjectPoolConfig();
     poolConfig.setMaxTotal(connectionPoolSize);
     poolConfig.setMaxIdle(connectionPoolSize);
+    poolConfig.setEvictionPolicyClassName(DefaultEvictionPolicy.class.getName());

Review Comment:
   It's similar to the above case. We can add ignore rule for shade as well but I think it's better to set up the class name explicitly
   
   ```
   Error: Exception in thread "main" java.lang.IllegalArgumentException: Unable to create EvictionPolicy instance of type org/apache/zeppelin/shaded/org.apache.zeppelin.shaded.org.apache.commons.pool2.impl.DefaultEvictionPolicy
   ```





jongyoul commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070608092


##########
zeppelin-interpreter-parent/pom.xml:
##########
@@ -113,6 +113,7 @@
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-shade-plugin</artifactId>
           <configuration>
+            <createDependencyReducedPom>false</createDependencyReducedPom>

Review Comment:
   It's a bit complicated but let me explain it.
   
   When we install jar, `maven-instll-plugin` tries to install the file under `/target/*.jar` into `.m2` but our shade script store shaded jars under /interpreter`/{interpreter.name}` so the file under /target directory is an original file which is not shaded. so maven-install-plugin copy the original file into .m2 directly as a result. BTW, in case of pom file, dependency-reduced-pom should be copied into .m2 directory even if the jar is not shaded. In our old version of shade plugin, the default setting didn't create dependency-reduced-pom when using `outputFile` configuration but the latest one, the plugin creates even if we use `outputFile` setting. So I disabled to create it.





jongyoul commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070608092


##########
zeppelin-interpreter-parent/pom.xml:
##########
@@ -113,6 +113,7 @@
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-shade-plugin</artifactId>
           <configuration>
+            <createDependencyReducedPom>false</createDependencyReducedPom>

Review Comment:
   It's a bit complicated but let me explain it.
   
   When we install jar, `maven-instll-plugin` tries to install the file under `/target/*.jar` into `.m2` but our shade script store shaded jars under `/interpreter/{interpreter.name}` so the file under `/target` directory is an original file which is not shaded. so `maven-install-plugin` copies the original file into `.m2` directly as a result. BTW, in case of pom file, `dependency-reduced-pom` would be copied into `.m2` directory even if the jar is not shaded. In our old version of shade plugin, the default setting didn't create `dependency-reduced-pom` when using `outputFile` configuration but in the latest one, the plugin creates it even if we use `outputFile` setting. So I disabled to create it.





jongyoul commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070608092


##########
zeppelin-interpreter-parent/pom.xml:
##########
@@ -113,6 +113,7 @@
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-shade-plugin</artifactId>
           <configuration>
+            <createDependencyReducedPom>false</createDependencyReducedPom>

Review Comment:
   It's a bit complicated but let me explain it.
   
   When we install jar, `maven-instll-plugin` tries to install the file under `/target/*.jar` into `.m2` but our shade script store shaded jars under `/interpreter/{interpreter.name}` so the file under `/target` directory is an original file which is not shaded. so `maven-install-plugin` copies the original file into `.m2` directly as a result. BTW, in case of pom file, `dependency-reduced-pom` would be copied into `.m2` directory even if the jar is not shaded. In our old version of shade plugin, the default setting didn't create `dependency-reduced-pom` when using `outputFile` configuration but in the latest one, the plugin creates it even if we use `outputFile` setting. So I disabled creating it.





jongyoul commented on PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#issuecomment-1383291254

   CI is all green now. 




zjffdu commented on PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#issuecomment-1383400648

   Thanks @jongyoul 




jongyoul merged PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556




Reamer commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070943224


##########
.github/workflows/core.yml:
##########
@@ -59,7 +59,8 @@ jobs:
             !~/.m2/repository/org/apache/zeppelin/
             ~/.spark-dist
             ~/.cache
-          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
+            ~/conda_pkgs_dir
+          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('testing/env_python_3.7_with_R.yml') }}

Review Comment:
   Why `${{ hashFiles('testing/env_python_3.7_with_R.yml') }}`? We do not have a conda environment in the CI cache.



##########
zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/PooledRemoteClient.java:
##########
@@ -44,6 +45,9 @@ public PooledRemoteClient(SupplierWithIO<T> supplier, int connectionPoolSize) {
     GenericObjectPoolConfig poolConfig = new GenericObjectPoolConfig();
     poolConfig.setMaxTotal(connectionPoolSize);
     poolConfig.setMaxIdle(connectionPoolSize);
+    // ZEPPELIN-5875 maven-shade-plugin issue
+    // `org/apache/zeppelin/shaded/org.apache.zeppelin.shaded.org.apache.commons.pool2.impl.DefaultEvictionPolicy`

Review Comment:
   I think we still have a shade problem.
   `org/apache/zeppelin/shaded/org.apache.zeppelin.shaded.org.apache.commons.pool2.impl.DefaultEvictionPolicy` does not look like a good class name. 





jongyoul commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070950816


##########
zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/PooledRemoteClient.java:
##########
@@ -44,6 +45,9 @@ public PooledRemoteClient(SupplierWithIO<T> supplier, int connectionPoolSize) {
     GenericObjectPoolConfig poolConfig = new GenericObjectPoolConfig();
     poolConfig.setMaxTotal(connectionPoolSize);
     poolConfig.setMaxIdle(connectionPoolSize);
+    // ZEPPELIN-5875 maven-shade-plugin issue
+    // `org/apache/zeppelin/shaded/org.apache.zeppelin.shaded.org.apache.commons.pool2.impl.DefaultEvictionPolicy`

Review Comment:
   Yes, correct. It's a kind of shade configuration issue. We need to change it but I thought we should make it normal at first. and Then, we could improve it.





jongyoul commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1070951485


##########
.github/workflows/core.yml:
##########
@@ -59,7 +59,8 @@ jobs:
             !~/.m2/repository/org/apache/zeppelin/
             ~/.spark-dist
             ~/.cache
-          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
+            ~/conda_pkgs_dir
+          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('testing/env_python_3.7_with_R.yml') }}

Review Comment:
   Oh? really? I didn't check the time carefully but felt like it reduce the whole time to setup conda but didn't it?





jongyoul commented on PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#issuecomment-1383660284

   > Since the shading still creates weird classes, I will continue to work on #4545 .
   
   Agreed. It would be great if we could handle all thing this time.




Reamer commented on code in PR #4556:
URL: https://github.com/apache/zeppelin/pull/4556#discussion_r1071467869


##########
.github/workflows/core.yml:
##########
@@ -59,7 +59,8 @@ jobs:
             !~/.m2/repository/org/apache/zeppelin/
             ~/.spark-dist
             ~/.cache
-          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
+            ~/conda_pkgs_dir
+          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('testing/env_python_3.7_with_R.yml') }}

Review Comment:
   I'm afraid I don't have numbers, do you have numbers?
   In order not to confuse others we should remove the suffix again.





