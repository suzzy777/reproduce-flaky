Thanks [~jxiang] I was going to start looking.  Will look at another failing test instead.

This one also failed here:

http://54.241.6.143/job/HBase-0.95-Hadoop-2/614/org.apache.hbase$hbase-server/testReport/junit/org.apache.hadoop.hbase.regionserver/TestSplitLogWorker/testPreemptTask/


and here:


http://54.241.6.143/job/HBase-0.95/org.apache.hbase$hbase-server/595/testReport/org.apache.hadoop.hbase.regionserver/TestSplitLogWorker/testPreemptTask/



This looks similar:

http://54.241.6.143/job/HBase-0.95/616/org.apache.hbase$hbase-server/testReport/junit/org.apache.hadoop.hbase.regionserver/TestSplitLogWorker/testMultipleTasks/




Again this is a thread racing issue. The log split task is already picked up before taskReadySeq is increased by the ZK event process thread.

That means it is a test issue, not a code issue.

Attached two patches. V1 just removed the taskReadySeq checking.  V2 added a counter so that we do the taskReadySeq checking after SplitLogWorker#taskLoop already runs the grabTask once and is waiting on taskReadyLock.  Which should we go with?

+1 on v2 for now.  Leave issue open to see if it fixes it. 

Committed v2 to trunk and 0.95, minor test change.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592432/trunk-8954-v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6351//console

This message is automatically generated.

SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #617 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/617/])
HBASE-8954 TestSplitLogWorker#testPreemptTask failed (jxiang: rev 1503512)
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitLogWorker.java


FAILURE: Integrated in hbase-0.95-on-hadoop2 #180 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/180/])
HBASE-8954 TestSplitLogWorker#testPreemptTask failed (jxiang: rev 1503513)
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitLogWorker.java


SUCCESS: Integrated in hbase-0.95 #328 (See [https://builds.apache.org/job/hbase-0.95/328/])
HBASE-8954 TestSplitLogWorker#testPreemptTask failed (jxiang: rev 1503513)
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitLogWorker.java


SUCCESS: Integrated in HBase-TRUNK #4257 (See [https://builds.apache.org/job/HBase-TRUNK/4257/])
HBASE-8954 TestSplitLogWorker#testPreemptTask failed (jxiang: rev 1503512)
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitLogWorker.java


This failed again.  Any chance taking a look [~jxiang]?

http://54.241.6.143/job/HBase-0.95/660/org.apache.hbase$hbase-server/testReport/junit/org.apache.hadoop.hbase.regionserver/TestSplitLogWorker/testPreemptTask/

Seems like a short time to wait on a box that often has a load in the hundreds Jimmy?   Maybe just up all the wait times?

Here too... http://54.241.6.143/job/HBase-0.95-Hadoop-2/org.apache.hbase$hbase-server/662/testReport/junit/org.apache.hadoop.hbase.regionserver/TestSplitLogWorker/testPreemptTask/

The first link is not available any more.  For the second one, it is a different issue: the worker could not stop in time. Yes, it is very likely because of too many threads.  I attached a patch to increase the thread join timeout time.  I also added a checking of exitWorker, just in case.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593414/trunk-8954-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6419//console

This message is automatically generated.

Looked the trace again.  The log split worker wasn't started at all at that moment.

Attached patch 3, removed creating hconnection when starting the worker.  At least this is not needed for distributed log splitting.  It's introduced for log replay (HBASE-8680).  It means each worker will hold a HConnection even it is not needed all the time.  Can we just create it on demand?

[~jeffreyz], do we really need to create the connection in starting the worker for log replay?

[~jxiang] I think you're referring to the following code 
{code}
      // initialize a new connection for splitlogworker configuration
      HConnectionManager.getConnection(conf);
{code}

This reason to do a pre-initialization is that during test I found it take about 3+ seconds to initialize a connection. Since we want to recovery happen immediately, so we make the connection ready ASAP. The connection is cached for a configuration instance so there will be only one connection instance for the region server.

While you can add a boolean to skip the pre-initialization if distributedLogReplay is turn off. Thanks. 

  

bq. While you can add a boolean to skip the pre-initialization if distributedLogReplay is turn off.
Yes, that's my second choice in my mind.

bq. This reason to do a pre-initialization is that during test I found it take about 3+ seconds to initialize a connection.
Do we have a breakdown on where the time was spent?


Attached v4 which just skips hconnection init in case of distributed log splitting instead of replay.

+1 looks good as long as log replay is turned off by default. Otherwise, the test would become flaky again.

{code}
Do we have a breakdown on where the time was spent?
{code}
No, I didn't profile the connection creation call.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593581/trunk-8954-4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6425//console

This message is automatically generated.

+1 for now.

Patch v4 integrated into trunk and 0.95.  Leave the issue open in case the test is still flaky.

Committed to trunk and 0.95.  Thanks Jimmy.

