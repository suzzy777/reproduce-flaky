[~hxbks2ks] I checked in master. Both test cases of YARNFileReplicationITCase have passed. How can I reprocess the error?

This is probably a rare test failure. Have you checked the logs uploaded to Azure to understand why it failed on CI?

[~rmetzger]
The log in Azure is exactly the same as what is reported in the ticket. Is there a way for me to access more environment info in Azure container?

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=11304&view=logs&j=5cae8624-c7eb-5c51-92d3-4d2dacedd221&t=420bd9ec-164e-562e-8947-0dacde3cec91

[~hxbks2ks] [~xintongsong]
Looks like the issue doesn't happen in each build. Do you have any suggestions to debug in the azure environment?

[~hpeter] The frequency of this test case is not high, you can trigger it by multiple push in Private Azure Pipeline. Regarding the method of Debugging in Azure Pipeline, I only know the way of printing logs.

[~hpeter],

Is this related to the Azure environment? If not, one thing you can try is to loop this locally in IDE. IntelliJ has a feature to repeat a test until failure.
 [https://httpain.com/blog/debugging-flaky-tests-in-intellij-idea/#:~:text=Retry%20test%20until%20failure&text=Let's%20edit%20a%20Run%20Configuration,Launch%20the%20test%20again]. 

If this is related to the Azure environment, the only thing I can think of is to modify the azure test scripts to only run/repeat this single test case. Unfortunately, I don't find any docs instructing how to do that, you may need to look into `azure-pipelines.yml` and `tools/azure-pipelines/`.

[~xintongsong] [~hxbks2ks]
Tried run the test class 100 times in IntelliJ, none of them failed. I will try to change the azure-pipelines to run/repeat this single test.



New instance: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=13222&view=logs&j=f450c1a5-64b1-5955-e215-49cb1ad5ec88&t=ea63c80c-957f-50d1-8f67-3671c14686b9

[~hpeter] did you have luck reproducing the problem?

failed on 1.11 as well:

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=13325&view=logs&j=245e1f2e-ba5b-5570-d689-25ae21e5302f&t=02d88c1a-f1b3-5a8c-4b4a-cf43c70f99e1

[~trohrmann][~dwysakowicz]
I am not able to reproduce locally yet. For changing azure-pipeline, I haven't got the chance to work on it now.

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=15302&view=logs&j=fc5181b0-e452-5c8f-68de-1097947f6483&t=62110053-334f-5295-a0ab-80dd7e2babbf&l=28982


{code:java}
[ERROR] testPerJobModeWithDefaultFileReplication(org.apache.flink.yarn.YARNFileReplicationITCase)  Time elapsed: 26.797 s  <<< ERROR!
java.io.FileNotFoundException: File does not exist: hdfs://localhost:40564/user/agent07_azpcontainer/.flink/application_1616528383248_0001/flink-dist_2.11-1.13-SNAPSHOT.jar
	at org.apache.hadoop.hdfs.DistributedFileSystem$27.doCall(DistributedFileSystem.java:1441)
	at org.apache.hadoop.hdfs.DistributedFileSystem$27.doCall(DistributedFileSystem.java:1434)
	at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)
	at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:1434)
	at org.apache.flink.yarn.YARNFileReplicationITCase.extraVerification(YARNFileReplicationITCase.java:165)
	at org.apache.flink.yarn.YARNFileReplicationITCase.deployPerJob(YARNFileReplicationITCase.java:128)
	at org.apache.flink.yarn.YARNFileReplicationITCase.lambda$testPerJobModeWithDefaultFileReplication$1(YARNFileReplicationITCase.java:78)
	at org.apache.flink.yarn.YarnTestBase.runTest(YarnTestBase.java:286)
	at org.apache.flink.yarn.YARNFileReplicationITCase.testPerJobModeWithDefaultFileReplication(YARNFileReplicationITCase.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.apache.flink.util.TestNameProvider$1.evaluate(TestNameProvider.java:45)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)


{code}


This issue is assigned but has not received an update in 7 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

another cases
https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=16998&view=logs&j=fc5181b0-e452-5c8f-68de-1097947f6483&t=62110053-334f-5295-a0ab-80dd7e2babbf&l=28148

This issue was marked "stale-assigned" 7 ago and has not received an update. I have automatically removed the current assignee from the issue so others in the community may pick it up. If you are still working on this ticket, please ask a committer to reassign you and provide an update about your current status.


I am the [Flink Jira Bot|https://github.com/apache/flink-jira-bot/] and I help the community manage its development. I see this issues has been marked as Major but is unassigned and neither itself nor its Sub-Tasks have been updated for 30 days. I have gone ahead and added a "stale-major" to the issue". If this ticket is a Major, please either assign yourself or give an update. Afterwards, please remove the label or in 7 days the issue will be deprioritized.


This issue was labeled "stale-major" 7 ago and has not received any updates so it is being deprioritized. If this ticket is actually Major, please raise the priority and ask a committer to assign you the issue or revive the public discussion.


https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=18946&view=logs&j=fc5181b0-e452-5c8f-68de-1097947f6483&t=62110053-334f-5295-a0ab-80dd7e2babbf&l=28714

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=19500&view=logs&j=a5ef94ef-68c2-57fd-3794-dc108ed1c495&t=9c1ddabe-d186-5a2c-5fcc-f3cafb3ec699&l=28263

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=19797&view=logs&j=8fd975ef-f478-511d-4997-6f15fe8a1fd3&t=ac0fa443-5d45-5a6b-3597-0310ecc1d2ab&l=31002

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=19856&view=logs&j=f450c1a5-64b1-5955-e215-49cb1ad5ec88&t=ea63c80c-957f-50d1-8f67-3671c14686b9&l=28127

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=21330&view=logs&j=8fd975ef-f478-511d-4997-6f15fe8a1fd3&t=494f6362-8ffa-5ff8-9158-c7f00e541279&l=31906

[~gaborgsomogyi] Would you like to take a look at this issue at your convenience?

[~guoyangze] Just finishing a relatively big task and intended to have a look.
As I see this is a rare bug so hopefully I can reproduce it.

[~gaborgsomogyi] Thanks a lot for offering your help! Wish you good luck to reproduce this problem :)

I think the problem could be that we are looking for the Flink dist jar after the job has terminated. This also means that we are looking for this file while Yarn will clean up the directory of the submitted Yarn application. Hence, I think we are looking at a classic race condition. I'll try to verify this suspicion.

Thanks for checking it too, added my findings to the PR. I think we're on track :)

Fixed via

1.14.0: b82acf9352896a1cd0b1371fbdd6c4439d5c8c6c
1.13.3: e75679d2635e859a6a5f97419777c857ba5321df
1.12.6: f00ce56ca283bc6acce6230a2ea8d3bba3942548

