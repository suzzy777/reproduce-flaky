The output could contains lines like "22/05/16 10:49:51 INFO util.JvmPauseMonitor: Starting JVM pause monitor". It can be at any position including the middle of an expected line. E.g.
{code}
22/05/16 10:19:44 INFO util.JvmPauseMonitor: Starting JVM pause monitor
Minidump in thread [27550] running query 0000000000000001:0000000000000002, fragment instance 0000000000000003:0000000000000004
Wrote minidump to /tmp/arbitrary/path/429f6f1b-57ca-41c7-e04bcebf-ef7246c5.dmp

{code}
or
{code}
Minidump in thread [14692] running query 0000000000000001:000000000000000222/05/16 10:49:51 INFO util.JvmPauseMonitor: Starting JVM pause monitor
, fragment instance 0000000000000003:0000000000000004
Wrote minidump to /tmp/arbitrary/path/0a3930a4-f95e-4d27-faa1f1a6-beacd4a1.dmp

{code}

Uploaded patch for review: https://gerrit.cloudera.org/c/18529/

Commit 9f2447b1b382538404057fa9572a693f2215378c in impala's branch refs/heads/master from stiga-huang
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=9f2447b1b ]

IMPALA-11291: deflake minidump-test by not starting JVM

minidump-test is unified into unified-be-test which will always init the
JVM and start the JVM pause monitor. It will print the following log to
stdout:
22/05/16 11:35:46 INFO util.JvmPauseMonitor: Starting JVM pause monitor

It's printed concurrently with the minidump output, which makes the test
flaky since it's verifying the output lines.

This patch moves minidump-test out of unified-be-test and explicitly
invokes InitCommonRuntime with init_jvm=false. So it won't be disrupted
by the above log.

Tests
 - The issue occurs when I run minidump-test several times repeatedly.
   After the fix, I can run minidump-test more than 2000 times without
   errors.

Change-Id: I89f81d408a2e905d5dfdd7f87177ebe2079d4d27
Reviewed-on: http://gerrit.cloudera.org:8080/18529
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


