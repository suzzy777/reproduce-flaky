Patch for QA. Creates an executor service at the HRS level and the handler is created inside the Chore Service and submitted to the executor service. Tested the patch - seems to work fine. 

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12779021/HBASE-15027.patch
  against master branch at commit 6e2c5d216eb1f4cacad7c5d7ed43b67785cabb67.
  ATTACHMENT ID: 12779021

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated new checkstyle errors. Check build console for list of new errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.io.TestHeapSize

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/16970//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/16970//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/16970//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/16970//console

This message is automatically generated.

Corrected TestHeapSize.

lgtm
{code}
2312	      if(this.getHRegion().getRegionServerServices() != null) {
2313	      CompactedHFilesDischargeHandler handler =
{code}
Indentation is off.

Please add annotation for audience in CompactedHFilesDischargeHandler

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12779037/HBASE-15027_1.patch
  against master branch at commit 95a13b51ee052eb73882682e8f009bfa1e914866.
  ATTACHMENT ID: 12779037

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated new checkstyle errors. Check build console for list of new errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.io.util.TestLRUDictionary
                  org.apache.hadoop.hbase.io.TestBoundedByteBufferPool
                  org.apache.hadoop.hbase.io.TestTagCompressionContext

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/16972//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/16972//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/16972//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/16972//console

This message is automatically generated.

Updated patch since the last QA run failed due to unable to create native thread issue. 

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12779209/HBASE-15027_2.patch
  against master branch at commit 1af98f255132ef6716a1f6ba1d8d71a36ea38840.
  ATTACHMENT ID: 12779209

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}. The applied patch does not generate new checkstyle errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestRegionReplicas
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/16990//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/16990//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/16990//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/16990//console

This message is automatically generated.

Updated patch correcting the failed test cases. Just noticed them.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12779288/HBASE-15027_3.patch
  against master branch at commit 8e0854c64be553595b8ed44b9856a3d74ad3005f.
  ATTACHMENT ID: 12779288

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 8 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}. The applied patch does not generate new checkstyle errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestLeaseRenewal
                  org.apache.hadoop.hbase.security.access.TestNamespaceCommands
                  org.apache.hadoop.hbase.client.TestSnapshotFromClient
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas
                  org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove
                  org.apache.hadoop.hbase.security.access.TestAccessController2
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorEndpoint
                  org.apache.hadoop.hbase.security.token.TestGenerateDelegationToken
                  org.apache.hadoop.hbase.client.TestScannersFromClientSide
                  org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient
                  org.apache.hadoop.hbase.client.TestMetaWithReplicas
                  org.apache.hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas
                  org.apache.hadoop.hbase.client.TestMobRestoreSnapshotFromClient
                  org.apache.hadoop.hbase.client.TestSnapshotFromClientWithRegionReplicas
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient
                  org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient
                  org.apache.hadoop.hbase.security.access.TestCellACLs
                  org.apache.hadoop.hbase.client.TestMobSnapshotFromClient
                  org.apache.hadoop.hbase.client.TestAdmin1
                  org.apache.hadoop.hbase.client.TestHCM

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/16997//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/16997//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/16997//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/16997//console

This message is automatically generated.

Resubmitting for QA. Not sure why these many tests failed.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12779380/HBASE-15027_3.patch
  against master branch at commit 6fc2596ab37614fe35ccfebda0564e4721bd4b95.
  ATTACHMENT ID: 12779380

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 8 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}. The applied patch does not generate new checkstyle errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/17009//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/17009//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/17009//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/17009//console

This message is automatically generated.

Ping for reviews!!! This failing test case should be a timing issue. Will look into it. But is the overall approach now fine?

Test failure in TestHRegionReplayEvents is reproducible. Please investigate.
{code}
2307	    processCompactedfiles(copyCompactedfiles);
{code}
Suggest camel casing the 'f' in files.
{code}
2326	      LOG.debug("Removing the compacted store files " + compactedfiles);
{code}
The above wouldn't log each file in the collection, right ?

Overall, approach looks good.

Thanks for the heads up. Will check the failure. Actually in windows the test case does not fail at all and then realised there is a check in the test case which does not allow the test to run fully in windows.

Updated patch. Now the test case passes. It was an issue with the mocking after the new executor. 

bq.LOG.debug("Removing the compacted store files " + compactedfiles);
This log should be enough I thought.

Ping for further reviews so that I can rebase the branch-1 patch based on this and commit in branch-1 also.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12779775/HBASE-15027_4.patch
  against master branch at commit 6868c6366002d5b4e25980f37ede8839e7a7e92d.
  ATTACHMENT ID: 12779775

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 8 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}. The applied patch does not generate new checkstyle errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/17055//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/17055//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/17055//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/17055//console

This message is automatically generated.

+1

nit:
{code}
173	    es.startExecutorService(
174	      string+"-"+string, 1);
{code}
Same string is used before and after the dash. Suggest reducing to one, without dash.

Can the 2 second sleep be replaced with better mechanism ?

CompactedHFilesDischarger  is started per Region now and this patch seems not removing that code?  It starts the chore newly in RS level but not removed the old code.

Based on internal discussion the latest patch creates the scheduler chore thread as part of the Region Server and it iterates over the list of regions in that table and does the clean up and this clean up is gain performed by the Executor threads created at the RegionServer level. 

The HStore.close() flow calls the processCompactedfiles(List) method which just submit all files close to another thread. An async call and close flow not waiting for this. Seems not correct. The close flow can close these compacted away files and archive in a sync way?

The choreService which runs in every 2mins call a method on store and that seems getting the Thread pool from RS and submit a new job. Can we just change it like that the CHoreService loop only will create a handler job for the pool and within the job u call the store method closeAndArchiveCompactedFiles?  So HStore wont have any async way of close of files at all. You can use same method for STore close flow also.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12780675/HBASE-15027_5.patch
  against master branch at commit 073e00c0053cb351dbba265112a6e756c932f875.
  ATTACHMENT ID: 12780675

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated new checkstyle errors. Check build console for list of new errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +                  "Exception while trying to close and archive the comapcted store files of the store  "
+    String string = org.apache.hadoop.hbase.executor.EventType.RS_COMPACTED_FILES_DISCHARGER.toString();
+      List<RegionServerThread> regionServerThreads = TEST_UTIL.getHBaseCluster().getRegionServerThreads();
+        CompactedHFilesDischarger cleaner = new CompactedHFilesDischarger(100, null, rs.getRegionServer());

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/17139//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/17139//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/17139//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/17139//console

This message is automatically generated.

Other than the fixes on the comments, 
I moved the CompactedHFileDischarger and CompactedHFilesDischargerHandler to the regionserver package. Earlier it was in regionserver.compactions package. This was done so that the getRegionserverServices() need not be exposed outside. (currently it is default). Also found that the tests are some times flaky hence now the CompactedHFileDischarger will also allow you to execute the close and archival in sync way rather than the executor way. How ever that is only for tests. 

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12780737/HBASE-15027_6.patch
  against master branch at commit 893a54c3a40e08b6f50d753fca01688f491893d0.
  ATTACHMENT ID: 12780737

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated new checkstyle errors. Check build console for list of new errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/17145//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/17145//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/17145//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/17145//console

This message is automatically generated.

Some more suggestions
{code}
Set<TableName> onlineTables = regionServerServices.getOnlineTables();
81	    for (TableName tableName : onlineTables) {
82	      List<Region> onlineRegions = null;
83	      try {
84	        onlineRegions = regionServerServices.getOnlineRegions(tableName);
85	      } catch (IOException e) {
86	        // Will not happen TODO : Remove this exception from the OnlineRegions
87	        // interface
88	      }
{code}
This way of 2 looping will be very less efficient.  getOnlineRegions(tableName) API will iterate over all regions every time.  So can we have an API to get all online regions (across all tables) in this RS and use that?   Or else can we make this ChoreService class as an inner one in HRS so that u can directlt access the onlineRegions data structure there? Like the CompactionChecker, FLush cheker etc.

Now in every 2 mins this chore will submit work for each of the Store in an async way and not worry abt its completion.  Can we make it such that the chore will wait for the completion of all stores and then only mark itself as done for this period.  Normally when the next run comes (after 2 mins) all work would have been completed.  But if by any chance it is not (Like NN is too busy or so)  may be we can just skip that attempt.  This is just like how the balancer works.

Checking the Executor framework code, I can not see we say alloChoreThreadsToDie.  So even if no work all these threads (by def 10) will hang in there.  Not your patch.  Not sure why we did not add there.. May be discuss in another jira.

U can just ignore 2nd comment..  Checking whether files can be closed/archived is very quick op as it is just boolean check.  So np.

{code}
public static final String HBASE_HSTORE_COMPACTION_DISCHARGER_THREAD_COUNT =
68	      "hbase.hstore.compaction.discharger.thread.count";
{code}
This name make sense now? As it is not at store level

{code}
CompactedHFilesDischargeHandler handler = new CompactedHFilesDischargeHandler(
100	                    (Server) ((HRegion) region).getRegionServerServices(),
101	                    EventType.RS_COMPACTED_FILES_DISCHARGER, (HStore) store);
102	                ((HRegion) region).getRegionServerServices().getExecutorService().submit(handler);
{code}
U have the RS ref in this class. No need to get from region right?


Updated patch addressing the comments and our internal discussions.  Also there was on issue with the secondary region replica not clearing the compactedfiles from the StoreFileManager which is done now. 

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12780951/HBASE-15027_7.patch
  against master branch at commit d65978fceb85dd59e7fd66e2a93832a452e4c648.
  ATTACHMENT ID: 12780951

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 30 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated new checkstyle errors. Check build console for list of new errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/17159//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/17159//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/17159//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/17159//console

This message is automatically generated.

Test case correction had to be done. I keep forgetting that this test case TestHRegionReplayEvents does not run fully in Windows. This time verified in linux it passes. 

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12780988/HBASE-15027_8.patch
  against master branch at commit 5266b0770843c57e977385d7ea1d0ea40273668a.
  ATTACHMENT ID: 12780988

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 30 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated new checkstyle errors. Check build console for list of new errors.

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 zombies{color}. No zombie tests found running at the end of the build.

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/17161//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/17161//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/17161//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/17161//console

This message is automatically generated.

No failures now. Good to commit?

bq.hbase.hfile.compactions.discharger.thread.count 
The config name can be hbase.hfile.compaction.discharger.thread.count   
Similar way other new config also.
This can be changed on commit.  +1
Pls add release notes as we have changed the config name and possible total threads etc.
Thanks for the nice work.


Thanks for thorough reviews and comments [~anoopsamjohn]. Lot of discussions happened before coming up with this refactoring model. 

FAILURE: Integrated in HBase-Trunk_matrix #620 (See [https://builds.apache.org/job/HBase-Trunk_matrix/620/])
HBASE-15027 Refactor the way the CompactedHFileDischarger threads are (ramkrishna: rev 28c2b18d30de4ce9564e328e5fdf42188e83fb63)
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestSnapshotFromMaster.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/OnlineRegions.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactedHFilesDischarger.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicas.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/executor/ExecutorType.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestCompactedHFilesDischarger.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/backup/example/TestZooKeeperTableArchiveClient.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactedHFilesDischarger.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransactionOnCluster.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactedHFilesDischargeHandler.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionReplayEvents.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/executor/EventType.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionConfiguration.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/MockRegionServerServices.java


Fixing the findbug warning introduced by this patch. 

Pushed addendum to master.

FAILURE: Integrated in HBase-Trunk_matrix #624 (See [https://builds.apache.org/job/HBase-Trunk_matrix/624/])
HBASE-15027 - Findbug fix (addendum) (ramkrishna: rev 894ce84b8330f9e3b1ca5b04e591c7a77cd2ce13)
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactedHFilesDischarger.java


"The property 'hbase.hfile.compactions.discharger.interval' has been renamed to 'hbase.hfile.compaction.discharger.interval' "
This issue is fixed only in 2.0 and originally the config was introduced by HBASE-13082 which is there in 1.3 also.   So the config name is old in 1.3 and branch-1?   This issue is not marked as incompatible also.  
[~ram_krish]

[~anoop.hbase]
Thanks for checking this. If you see HBASE-14970 - the patch was committed only after this refactoring was done for trunk.
so we have the same config only in trunk and branch-1.3.

