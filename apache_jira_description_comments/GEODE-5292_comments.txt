Commit 69c871091d570312264c4e7e5060109cab4c8d64 in geode's branch refs/heads/develop from Bradford Boyle
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=69c8710 ]

GEODE-5292: Fix memory leak for off heap regions with overflow

For a region that has been configured with off-heap storage and overflow
to disk, memory can be leaked if

- region clear
- region destroy
- region replace

all happen concurrently. The root cause appears to be region clear
modifying entries for values stored on disk without synchronizing the
entries. This prevents replace from freeing the off-heap memory for the
new value when the replace fails because the region is being destroyed.

This commit adds an integration test that uses spies on a region entry
to trigger the concurrent events during a replace operation and checks
for orphaned off-heap memory.

The proposed fix is to not modify the region entries on disk while
performing a clear operation.

Signed-off-by: Dan Smith <dsmith@pivotal.io>

Commit 2d97c22e3bab7fe0b7d25efb2fb842969dfde5fb in geode's branch refs/heads/develop from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=2d97c22 ]

GEODE-5292: Ignoring flaky ConcurrentRegion... test until we can fix it

This test has failed twice in CI for different reasons. Disabling it
until we can fix it.


Commit 2d97c22e3bab7fe0b7d25efb2fb842969dfde5fb in geode's branch refs/heads/GEM-1722-1629 from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=2d97c22 ]

GEODE-5292: Ignoring flaky ConcurrentRegion... test until we can fix it

This test has failed twice in CI for different reasons. Disabling it
until we can fix it.


Commit 9037d42bf291b504fea98bff4c851aac15e0625c in geode's branch refs/heads/develop from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=9037d42 ]

[GEODE-5292] Actually destroy the region instead of pretending to.

Signed-off-by: Dan Smith <dsmith@pivotal.io>


This test failed again in CI

 
{noformat}
org.apache.geode.cache.ConcurrentRegionOperationIntegrationTest > replaceWithClearAndDestroy FAILED
    java.lang.AssertionError:
    Expecting:
      <java.lang.IllegalStateException: retain failed addr=140497939066896 addr2=140497939066896 100 times history=null>
    to be an instance of:
      <org.apache.geode.cache.RegionDestroyedException>
    but was:
      <"java.lang.IllegalStateException: retain failed addr=140497939066896 addr2=140497939066896 100 times history=null
        at org.apache.geode.internal.offheap.OffHeapRegionEntryHelper._getValueRetain(OffHeapRegionEntryHelper.java:397)
        at org.apache.geode.internal.cache.entries.VersionedThinDiskLRURegionEntryOffHeapIntKey.getValueRetain(VersionedThinDiskLRURegionEntryOffHeapIntKey.java:134)
        at org.apache.geode.internal.cache.entries.DiskEntry$Helper.getValueOffHeapOrDiskWithoutFaultIn(DiskEntry.java:1016)
        at org.apache.geode.internal.cache.entries.AbstractOplogDiskRegionEntry.getValueOffHeapOrDiskWithoutFaultIn(AbstractOplogDiskRegionEntry.java:97)
        at org.apache.geode.internal.cache.map.RegionMapPut.setOldValueEvenIfFaultedOut(RegionMapPut.java:204)
        at org.apache.geode.internal.cache.map.RegionMapPut.setOldValueInEvent(RegionMapPut.java:171)
        at org.apache.geode.internal.cache.map.AbstractRegionMapPut.doPutOnSynchronizedRegionEntry(AbstractRegionMapPut.java:269)
        at org.apache.geode.internal.cache.map.AbstractRegionMapPut.doPutOnRegionEntryInMap(AbstractRegionMapPut.java:261)
        at org.apache.geode.internal.cache.map.AbstractRegionMapPut.addRegionEntryToMapAndDoPut(AbstractRegionMapPut.java:239)
        at org.apache.geode.internal.cache.map.AbstractRegionMapPut.doPutRetryingIfNeeded(AbstractRegionMapPut.java:204)
        at org.apache.geode.internal.cache.map.AbstractRegionMapPut.doWithIndexInUpdateMode(AbstractRegionMapPut.java:186)
        at org.apache.geode.internal.cache.map.AbstractRegionMapPut.doPut(AbstractRegionMapPut.java:168)
        at org.apache.geode.internal.cache.map.RegionMapPut.runWhileLockedForCacheModification(RegionMapPut.java:150)
        at org.apache.geode.internal.cache.map.AbstractRegionMapPut.put(AbstractRegionMapPut.java:158)
        at org.apache.geode.internal.cache.AbstractRegionMap.basicPut(AbstractRegionMap.java:2104)
        at org.apache.geode.internal.cache.LocalRegion.virtualPut(LocalRegion.java:5661)
        at org.apache.geode.internal.cache.DistributedRegion.virtualPut(DistributedRegion.java:371)
        at org.apache.geode.internal.cache.LocalRegionDataView.putEntry(LocalRegionDataView.java:152)
        at org.apache.geode.internal.cache.LocalRegion.basicPut(LocalRegion.java:5086)
        at org.apache.geode.internal.cache.LocalRegion.replace(LocalRegion.java:11742)
        at org.apache.geode.internal.cache.LocalRegion.replace(LocalRegion.java:11703)
        at org.apache.geode.cache.ConcurrentRegionOperationIntegrationTest.lambda$replaceWithClearAndDestroy$1(ConcurrentRegionOperationIntegrationTest.java:85)
        at org.assertj.core.api.ThrowableAssert.catchThrowable(ThrowableAssert.java:60)
        at org.assertj.core.api.ThrowableTypeAssert.isThrownBy(ThrowableTypeAssert.java:54)
        at org.apache.geode.cache.ConcurrentRegionOperationIntegrationTest.replaceWithClearAndDestroy(ConcurrentRegionOperationIntegrationTest.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
        at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
        at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106)
        at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
        at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
        at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66)
        at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
        at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
        at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
        at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
        at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)
        at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)
        at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
        at java.lang.Thread.run(Thread.java:748)
    ">
        at org.apache.geode.cache.ConcurrentRegionOperationIntegrationTest.replaceWithClearAndDestroy(ConcurrentRegionOperationIntegrationTest.java:85)
{noformat}

Commit e4bd46d71d0a8166868fc1505284e31972e1e842 in geode's branch refs/heads/develop from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=e4bd46d ]

Revert "[GEODE-5292] Actually destroy the region instead of pretending to."

This reverts commit 9037d42bf291b504fea98bff4c851aac15e0625c.

This commit is causing IntegrationTest to fail in the CI pipeline.


Commit e4bd46d71d0a8166868fc1505284e31972e1e842 in geode's branch refs/heads/feature/GEODE-5145 from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=e4bd46d ]

Revert "[GEODE-5292] Actually destroy the region instead of pretending to."

This reverts commit 9037d42bf291b504fea98bff4c851aac15e0625c.

This commit is causing IntegrationTest to fail in the CI pipeline.


Commit f6c26f0a30b27d2636c9f8d43c089332ccd50150 in geode's branch refs/heads/develop from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=f6c26f0 ]

 GEODE-5292: Flushing to disk in test before introducing spy in test (#2140)

This test was modifying the concurrent region map to introduce a spy,
but there was a concurrent thread overflowing entries to disk at the
same time. An interaction between the spy and the async flush caused the
ref count to go to 0, and the test to fail before it even got to the
point of clearing the region.

Flushing the disk before introducing the spy.


Commit f6c26f0a30b27d2636c9f8d43c089332ccd50150 in geode's branch refs/heads/feature/GEODE-5376 from Dan Smith
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=f6c26f0 ]

 GEODE-5292: Flushing to disk in test before introducing spy in test (#2140)

This test was modifying the concurrent region map to introduce a spy,
but there was a concurrent thread overflowing entries to disk at the
same time. An interaction between the spy and the async flush caused the
ref count to go to 0, and the test to fail before it even got to the
point of clearing the region.

Flushing the disk before introducing the spy.


