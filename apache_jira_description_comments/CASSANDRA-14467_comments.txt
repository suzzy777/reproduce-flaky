https://github.com/krummas/cassandra/commits/marcuse/14467
tests:
https://circleci.com/gh/krummas/cassandra/tree/marcuse%2F14467

Thanks Marcus!

To confirm my understanding, looks like this approach identifies a tombstone as potentially invalid when:

*Cell:*
 * A cell's TTL is less than zero;
 * Its local deletion time is less than zero;
 * Or a TTL is set but its local deletion time is Integer.MAX_VALUE 

*Row:*
 * Primary key has a TTL less than zero;
 * Primary key's local expiration time is less than zero;
 * Row's deletion timestamp < 0 (!>=0);
 * Or if the column data it contains has invalid deletions (either via complexDeletion validation for range tombstones, or as defined using the Cell criteria above for cells)

Does that summary look correct to you?

[~cscotta] yes, correct, it also checks if the localDeletionTime for partition level deletions is less than zero

Created a pull request with review comments https://github.com/apache/cassandra/pull/228

Also can you run the tests again there were some failures. It's been fairly green for me lately on trunk.

Pushed a dtest branch [https://github.com/krummas/cassandra-dtest/commits/marcuse/14467] and enabled it for unit tests as well

For the unit tests this seems to be flaky: CASSANDRA-14238
 The failing dtest (test_describecluster_more_information_three_datacenters) seems to be unrelated as well, created CASSANDRA-14484

edit: can't actually reproduce the unit test failure on trunk, but pretty easily on this branch, problem is that we throw MarshalException instead of CorruptSSTableException

pushed a new commit which throws CorruptSSTableException instead and marks the sstable as suspect to avoid it being included in future compactions

I'm a little late thinking of this, but why is this not just an assertion? It seems very assertion like? I'm just curious why this is different from other things we assert on? Is it expensive to check?

I'm digging the defensive additions.

I left a few comments on the usage of NoSpamLogger which is a little tricky.

bq. why is this not just an assertion? It seems very assertion like?
Agree, was debating this a bit, but biggest reason I went this way was to have a way of just logging any validation failures. Also, doing this validation is not very expensive, but it is not free, so you might not want to disable all assertions to just disable this check.

Push a few new commits addressing the latest round of comments

Only remaining nit is that when you reset the setting in the unit tests it's not exception safe so if the test fails it will remain disabled. Otherwise +1.

+1 with the latest changes.

GitHub user krummas opened a pull request:

    https://github.com/apache/cassandra-dtest/pull/30

    CASSANDRA-14467: always enable tombstone validation exceptions during tests

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/krummas/cassandra-dtest marcuse/14467

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/cassandra-dtest/pull/30.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #30
    
----
commit 3dc02646948120e9847347f951d1539c16cef2a9
Author: Marcus Eriksson <marcuse@...>
Date:   2018-05-31T06:41:11Z

    always enable tombstone validation exceptions during tests

----


[~aweisberg] did you review the dtest changes? If not, could you just quickly check the PR above?

the cassandra changes were committed as {{5d8767765090cd968c39008f76b0cd795d6e5032}}, thanks!

The thing about the dtest changes is that it's going to produce a config file that won't work with revisions prior to the introduction of the config option right?

Do we have a solution for that?

not that I know of, people will need to rebase to get their existing trunk-branches working

Committed but still set to patch available?

yeah, waiting for you to review the dtest changes before closing

Seems like I dropped the ball here. +1 assuming the dtests still pass with this check enabled.

 

 

Github user asfgit closed the pull request at:

    https://github.com/apache/cassandra-dtest/pull/30


committed as \{{96f90eee28247cf9a8520e6962b0388f193c7ca8}}, thanks!

new test result: https://circleci.com/workflow-run/ffc46ccd-42d8-41ce-b319-7d29db444e20

