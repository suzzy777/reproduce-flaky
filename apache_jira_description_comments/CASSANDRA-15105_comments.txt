Issue is triggered by audit events collected in {{InMemoryAuditLogger}} which remain after the execution of {{testExcludeSystemKeyspaces()}}.

[Patch|https://github.com/eperott/cassandra/tree/15105-trunk]
[Unit Tests|https://circleci.com/gh/eperott/cassandra/53#queue-placeholder/containers/2]

[~eperott] Thank you for the patch, it is next on my list, will probably get to it next week. 

I've reviewed the patch. LGTM w.r.t. fix for {{AuditLoggerTest}} class. As I ran UTs multiple times with this patch, I noticed {{testExcludeSystemKeyspaces}} still [fails|https://circleci.com/gh/sumanth-pasupuleti/cassandra/508#tests/containers/14] due to events collected in {{InMemoryAuditLogger}}.
I did a scrub across the UTs to make sure we disable audit logger each time we enable, and consequently made a change to {{StorageServiceServerTest}} on top of [~eperott]'s patch. From my several (10) [runs|https://circleci.com/gh/sumanth-pasupuleti/workflows/cassandra/tree/15105_trunk_UT] of UTs, AuditLogger tests have been passing.

[Patch|https://github.com/apache/cassandra/pull/323]
[Passing Tests|https://circleci.com/workflow-run/7a96f12c-c695-4ca8-8bf6-36108bdaa75c]

[~sumanth.pasupuleti], thanks for taking the time to review and test.

When looking at the logs of the [failing|https://circleci.com/gh/sumanth-pasupuleti/cassandra/508#tests/containers/14] test I don't think that run was affected by the setup in {{StorageServiceServerTest}} as these were the only test classes executed in that particular container:
{noformat}
org/apache/cassandra/audit/AuditLoggerTest.java
org/apache/cassandra/db/commitlog/CommitLogFailurePolicyTest.java
org/apache/cassandra/dht/RandomPartitionerTest.java
org/apache/cassandra/locator/NetworkTopologyStrategyTest.java
org/apache/cassandra/service/NativeTransportServiceTest.java
org/apache/cassandra/utils/NativeLibraryTest.java
{noformat}
Still, I think that disabling the audit logger whenever it has been enabled is a good strategy.

But regarding the, still flaky, {{testExcludeSystemKeyspaces}}. I was able to reproduce the remaining issue consistently by adding a a few seconds delay in the test case just before checking the size of the {{InMemoryAuditLogger.inMemQueue}}. When printing the content I get this:
{noformat}
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418723|type:SELECT|category:QUERY|ks:system_schema|scope:keyspaces|operation:SELECT * FROM system_schema.keyspaces
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418722|type:SELECT|category:QUERY|ks:system_schema|scope:keyspaces|operation:SELECT * FROM system_schema.keyspaces
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418723|type:SELECT|category:QUERY|ks:system_schema|scope:keyspaces|operation:SELECT * FROM system_schema.keyspaces
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418732|type:SELECT|category:QUERY|ks:system_schema|scope:types|operation:SELECT * FROM system_schema.types
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418732|type:SELECT|category:QUERY|ks:system_schema|scope:types|operation:SELECT * FROM system_schema.types
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418732|type:SELECT|category:QUERY|ks:system_schema|scope:types|operation:SELECT * FROM system_schema.types
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418736|type:SELECT|category:QUERY|ks:system_schema|scope:tables|operation:SELECT * FROM system_schema.tables
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418736|type:SELECT|category:QUERY|ks:system_schema|scope:tables|operation:SELECT * FROM system_schema.tables
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418735|type:SELECT|category:QUERY|ks:system_schema|scope:tables|operation:SELECT * FROM system_schema.tables
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418751|type:SELECT|category:QUERY|ks:system_schema|scope:columns|operation:SELECT * FROM system_schema.columns
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418750|type:SELECT|category:QUERY|ks:system_schema|scope:columns|operation:SELECT * FROM system_schema.columns
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418752|type:SELECT|category:QUERY|ks:system_schema|scope:columns|operation:SELECT * FROM system_schema.columns
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418766|type:SELECT|category:QUERY|ks:system_schema|scope:indexes|operation:SELECT * FROM system_schema.indexes
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418767|type:SELECT|category:QUERY|ks:system_schema|scope:indexes|operation:SELECT * FROM system_schema.indexes
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418767|type:SELECT|category:QUERY|ks:system_schema|scope:indexes|operation:SELECT * FROM system_schema.indexes
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418767|type:SELECT|category:QUERY|ks:system_schema|scope:views|operation:SELECT * FROM system_schema.views
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418768|type:SELECT|category:QUERY|ks:system_schema|scope:views|operation:SELECT * FROM system_schema.views
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418768|type:SELECT|category:QUERY|ks:system_schema|scope:views|operation:SELECT * FROM system_schema.views
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418769|type:SELECT|category:QUERY|ks:system_schema|scope:functions|operation:SELECT * FROM system_schema.functions
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418769|type:SELECT|category:QUERY|ks:system_schema|scope:functions|operation:SELECT * FROM system_schema.functions
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36848|timestamp:1558592418770|type:SELECT|category:QUERY|ks:system_schema|scope:aggregates|operation:SELECT * FROM system_schema.aggregates
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418770|type:SELECT|category:QUERY|ks:system_schema|scope:functions|operation:SELECT * FROM system_schema.functions
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36852|timestamp:1558592418771|type:SELECT|category:QUERY|ks:system_schema|scope:aggregates|operation:SELECT * FROM system_schema.aggregates
user:anonymous|host:127.0.0.1:7010|source:/127.0.0.1|port:36856|timestamp:1558592418771|type:SELECT|category:QUERY|ks:system_schema|scope:aggregates|operation:SELECT * FROM system_schema.aggregates
{noformat}
Some further testing indicates that other test cases were vulnerable to this as well, all depending on execution order and timing. I believe that the queries we see come from the control connection for each of the sessions in {{CQLTester}}, a few for each protocol version.

So, created another patch, making sure to exclude system keyspaces where it makes sense. This is a detail we overlooked when working on CASSANDRA-14498.

Not sure what's the best way to get my latest patch on top of yours. Since you created a PR, perhaps you could merge my latest patch on to your branch?

[~eperott] Thanks for the latest patch; I have merged your patch on my branch.

[Patch|https://github.com/apache/cassandra/pull/323]

Thanks for the patch [~eperott], [~sumanth.pasupuleti] for review and changes.

We might need to exclude {{system_virtual_schema}} also from {{AuditLoggerTest::testIncludeSystemKeyspaces()}} and {{AuditLoggerTest::testExcludeSystemKeyspaces}} methods for future readiness when and if {{system_virtual_schema}} is also quried from control connection, this also keeps us in sync with defaults behavior. I pushed this change in my brnach [here|https://github.com/vinaykumarchella/cassandra/commits/CASSANDRA-15105]. I will commit this as soon [tests|https://circleci.com/gh/vinaykumarchella/workflows/cassandra/tree/CASSANDRA-15105] pass.

bq. We might need to exclude system_virtual_schema also

+1

Thanks for the patch [~eperott], [~sumanth.pasupuleti] for review and changes.

Following 2 [tests|https://circleci.com/gh/vinaykumarchella/cassandra/414#tests/containers/48] have failed which seems to flaky on the trunk and not related to this change, these tests also passed on subsequent runs ([unit tests|https://circleci.com/gh/vinaykumarchella/cassandra/423#tests/containers/39])
{code:java}
testSendSmall - org.apache.cassandra.net.ConnectionTest
testSendLarge - org.apache.cassandra.net.ConnectionTest
{code}
Committed as [225fa868884bdda1c20e0fcef61628eb6d941fbe|https://github.com/apache/cassandra/commit/225fa868884bdda1c20e0fcef61628eb6d941fbe] 

