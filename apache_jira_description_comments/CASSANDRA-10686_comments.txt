We assume a {{TimedOutError}} is thrown when there is a schema mismatch after a DDL statement, so we reload the schema best-effort and print a warning message so the user knows there is a schema mismatch happening. However, when {{max_schema_agreement_wait < client_timeout}}, a {{TimedOutError}} is not thrown because the driver gives up reloading the schema and the original request complete successfully. 

A funny thing is that when {{max_schema_agreement_wait == client_timeout}}, the behavior is undefined in that most of the times the DDL request fails with {{TimedOutError}} but sometimes it may not throw that. This happens because most of the times the {{client_timeout}} is triggered before the {{max_schema_agreement_wait}}. However, in some edge situations the {{max_schema_agreement_wait}} may give up before the {{client_timeout}} so the update schema does not throw a {{TimedOutError}} as expected. 

In our case {{max_schema_agreement_wait == client_timeout == 10}}, so that's why the test is flaky (works most of the times, but fails sometimes). The issue is reproducible by making {{max_schema_agreement_wait}} < {{client_timeout}} to force the {{TimedOutError}} not being thrown, so the test fails.

In order to force {{max_schema_agrement_wait > client_timeout}} we set {{max_schema_agreement_wait = max(default_max_schema_agreement_wait, client_timeout+1)}}. I also opened a python driver issue ([PYTHON-458|https://datastax-oss.atlassian.net/browse/PYTHON-458]) to unify the behavior and always throw an exception on schema mismatch after a DDL regardless of the value of {{max_schema_agreement_wait}}.

Setting [~blerer] as reviewer, since he was the reviewer of the original issue (CASSANDRA-9689).

||2.1||2.2||3.0||trunk||
|[branch|https://github.com/apache/cassandra/compare/cassandra-2.1...pauloricardomg:2.1-10686]|[branch|https://github.com/apache/cassandra/compare/cassandra-2.2...pauloricardomg:2.2-10686]|[branch|https://github.com/apache/cassandra/compare/cassandra-3.0...pauloricardomg:3.0-10686]|[branch|https://github.com/apache/cassandra/compare/trunk...pauloricardomg:trunk-10686]|
|[testall|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.1-10686-testall/lastCompletedBuild/testReport/]|[testall|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.2-10686-testall/lastCompletedBuild/testReport/]|[testall|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-3.0-10686-testall/lastCompletedBuild/testReport/]|[testall|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-trunk-10686-testall/lastCompletedBuild/testReport/]|
|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.1-10686-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.2-10686-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-3.0-10686-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-trunk-10686-dtest/lastCompletedBuild/testReport/]|

Nice explanation :-)

In my opinion, we should wait for the fix for [PYTHON-458|https://datastax-oss.atlassian.net/browse/PYTHON-458] instead of trying to fix it on our side.

In the mean time we could set {{max_schema_agreement_wait}} to a greater value that {{client_timeout}} in the DTests to prevent the flapping. 

[~jkni] will you be fine with that?

Fixing upstream also works for me with the suggested workaround until then.

The problem of fixing on dtest only is that clients will potentially miss schema mismatches after DDL if they set {{client_timeout > max_schema_agreement_wait}}, so this fix would guarantee {{client_timeout < max_schema_agreement_wait}} while [PYTHON-458|https://datastax-oss.atlassian.net/browse/PYTHON-458] is not ready.

I agree that this fix will work. I just do not want to introduce some hacks in the code unless the issue is a critical one. As the problem is a minor one, I believe that we can wait for the proper fix.

People tend to forget to remove hacks and the code become less and less readable and more and more difficult to maintain.

[~aholmber] could you make sure that  [PYTHON-458|https://datastax-oss.atlassian.net/browse/PYTHON-458] is addressed reasonably quickly.

I am just in favor of fixing the DTests because flapping tests make us waist a lot of time when we look in the CI results.



Agreed. In order to fix dtest, a new option {{--request-timeout}} needs to be exposed so its overridden during dtest. Attaching patch with this improvement and created [dtest PR|https://github.com/riptano/cassandra-dtest/pull/719] with dtest fix. Dtest results will appear shortly below:

||2.1||2.2||3.0||trunk||dtest||
|[branch|https://github.com/apache/cassandra/compare/cassandra-2.1...pauloricardomg:2.1-10686-v2]|[branch|https://github.com/apache/cassandra/compare/cassandra-2.2...pauloricardomg:2.2-10686-v2]|[branch|https://github.com/apache/cassandra/compare/cassandra-3.0...pauloricardomg:3.0-10686-v2]|[branch|https://github.com/apache/cassandra/compare/trunk...pauloricardomg:trunk-10686-v2]|[branch|https://github.com/riptano/cassandra-dtest/compare/master...pauloricardomg:10686]|
|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.1-10686-v2-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.2-10686-v2-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-3.0-10686-v2-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-trunk-10686-v2-dtest/lastCompletedBuild/testReport/]|


I have a few things ahead of PYTHON-458 and some time off coming up, but I've put this ticket in the next release so I'll get to it relatively soon.

Many many cqlsh tests are failing in your dtest results, that aren't failing on master.

Thanks [~philipthompson]. Fixed and resubmitted tests.

Tests fixed.

+1

Committed in 2.1 at c0747d2856b69fb1e85addf090a9e135637798c4 and in 2.2 at  c7f0032912798b5e53b64d8391e3e3d7e4121165. Merged into 3.0, 3.3 and trunk.

Can someone update the fixver of this ticket, please?

