Assigning to [~wzhou], as you've been active in this area. Feel free to reassign if you find a better owner.
Please note that this one can break precommits, which blocks progress for the whole of Impala.

Thanks [~laszlog] to file this Jira. I will work on it.

Catalogd log messages.
{code:java}
F1111 23:36:24.798915 2270244 statestore-subscriber.cc:336] Check failed: !statestore_is_active || !statestore2_is_active 
*** Check failure stack trace: ***
    @          0x389f66d  google::LogMessage::Fail()
    @          0x38a15a4  google::LogMessage::SendToLog()
    @          0x389f04c  google::LogMessage::Flush()

I1111 23:36:24.834599 2270278 statestore-subscriber.cc:743] Starting statestore subscriber
I1111 23:36:24.835072 2272522 TAcceptQueueServer.cpp:355] New connection to server StatestoreSubscriber from client <Host: 127.0.0.1 Port: 48662>
I1111 23:36:24.835194 2272522 TAcceptQueueServer.cpp:355] New connection to server StatestoreSubscriber from client <Host: 127.0.0.1 Port: 48668>
I1111 23:36:24.835242 2272522 TAcceptQueueServer.cpp:355] New connection to server StatestoreSubscriber from client <Host: 127.0.0.1 Port: 48674>
I1111 23:36:24.835269 2270278 statestore-subscriber.cc:684] Statestore protocol version: V2
I1111 23:36:24.835278 2270278 statestore-subscriber.cc:693] Subscriber registration ID: b7427b8c816720ad:597a82d4368d7792
I1111 23:36:24.835280 2270278 statestore-subscriber.cc:701] Statestore ID: 4b4c5e6402fee001:ddd1f305755eb79f
I1111 23:36:24.835281 2270278 statestore-subscriber.cc:719] Active catalogd address: ip-172-31-52-128:26000
I1111 23:36:24.835283 2270278 statestore-subscriber.cc:753] statestore registration successful on startup
I1111 23:36:24.835287 2270278 exec-env.cc:715] The address of Catalog service is changed from localhost:26000 to ip-172-31-52-128:26000
I1111 23:36:24.835299 2272522 TAcceptQueueServer.cpp:355] New connection to server StatestoreSubscriber from client <Host: 127.0.0.1 Port: 48676>
I1111 23:36:24.835448 2270278 statestore-subscriber.cc:743] Starting statestore subscriber
I1111 23:36:24.835820 2270278 statestore-subscriber.cc:684] Statestore protocol version: V2
I1111 23:36:24.835829 2270278 statestore-subscriber.cc:693] Subscriber registration ID: ae4e3d7426091e84:2d5e2ba69055ca89
I1111 23:36:24.835831 2270278 statestore-subscriber.cc:701] Statestore ID: 6d493a7087e09773:97eb4a1e889718b7
I1111 23:36:24.835834 2270278 statestore-subscriber.cc:719] Active catalogd address: ip-172-31-52-128:26000
I1111 23:36:24.835836 2270278 statestore-subscriber.cc:753] statestore registration successful on startup
I1111 23:36:24.835909 2272522 TAcceptQueueServer.cpp:355] New connection to server StatestoreSubscriber from client <Host: 127.0.0.1 Port: 48682>
F1111 23:36:24.835925 2270278 statestore-subscriber.cc:336] Check failed: !statestore_is_active || !statestore2_is_active 

    @          0x38a1ac9  google::LogMessageFatal::~LogMessageFatal()
    @          0x1811a13  impala::StatestoreSubscriber::Start()
    @           0xfb419a  impala::CatalogServer::Start()
    @           0xeffb37  CatalogdMain()
    @           0xefe4bf  main
    @     0x7f2a2c2ec083  __libc_start_main
    @           0xefe2fe  _start
Minidump with no thread info available.
{code}

impalad log messages:
{code:java}
F1111 23:36:24.835925 2270278 statestore-subscriber.cc:336] Check failed: !statestore_is_active || !statestore2_is_active 
*** Check failure stack trace: ***
    @          0x389f66d  google::LogMessage::Fail()
    @          0x38a15a4  google::LogMessage::SendToLog()
    @          0x389f04c  google::LogMessage::Flush()
    @          0x38a1ac9  google::LogMessageFatal::~LogMessageFatal()
    @          0x1811a13  impala::StatestoreSubscriber::Start()
    @          0x1391180  impala::ExecEnv::StartStatestoreSubscriberService()
    @          0x1625138  impala::ImpalaServer::Start()
    @          0x1609175  ImpaladMain()
    @           0xefe49c  main
    @     0x7f77fc990083  __libc_start_main
    @           0xefe2fe  _start
Minidump with no thread info available.
{code}

statestored log messages:

{code:java}
I1111 23:36:22.327819 2270287 TAcceptQueueServer.cpp:355] New connection to server StatestoreHaService from client <Host: 127.0.0.1 Port: 36042>
I1111 23:36:22.327908 2270228 statestore.cc:1878] Send Statestore HA handshake request
I1111 23:36:22.327960 2270287 TAcceptQueueServer.cpp:355] New connection to server StatestoreHaService from client <Host: 127.0.0.1 Port: 36050>
I1111 23:36:22.328279 2270299 statestore.cc:1910] Receive Statestore HA handshake request
I1111 23:36:22.328285 2270299 statestore.cc:1917] Set the statestored as standby since the peer is started with force active flag
I1111 23:36:22.328310 2270228 statestore.cc:1851] Receive Statestore HA handshake response, set the statestore as active
I1111 23:36:22.328430 2270302 TAcceptQueueServer.cpp:329] connection_setup_thread_pool_size is set to 2
I1111 23:36:22.328433 2270228 thrift-server.cc:419] ThriftServer 'StatestoreService' started on port: 24001
I1111 23:36:22.427978 2270296 statestore.cc:1640] Send notification for active statestored version: 1699745782328309
I1111 23:36:22.427994 2270296 statestore.cc:1714] Successfully sent UpdateStatestoredRole RPCs to all subscribers
{code}


Commit 97eae40d10193b5cfb10ca4d2b4034dce44274d0 in impala's branch refs/heads/master from wzhou-code
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=97eae40d1 ]

IMPALA-12556: Fix flaky test test_two_statestored_with_force_active

Test test_two_statestored_with_force_active failed occasionally by
cause of both statestore instances assigned with active roles.

This patch fixes the issue to handle the case that both statestore
instances are restarted with flag "statestore_force_active" in the
same way as both statestore instances are restarted without flag
"statestore_force_active".

Testing:
 - Repeatedly ran test_two_statestored_with_force_active on Jenkins for
   hundreds of times without failure.
 - Repeatedly ran test_two_statestored_with_force_active on local
   machine for thousand times without failure.
 - Repeatedly ran all tests in test_statestored_ha.py for over 12 hours
   on Jenkins without failure.
 - Passed core tests.

Change-Id: I3e6f85233ff6fa747a6aa5ef8d093627885d20b2
Reviewed-on: http://gerrit.cloudera.org:8080/20699
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Wenzhe Zhou <wzhou@cloudera.com>


