Commit 313bbab5513a9ec01ecf9206955c19d70a8fc26c in incubator-geode's branch refs/heads/develop from [~nnag]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=313bbab ]

GEODE-1978: Slowing down the receivers

	* Slowing down the receivers so that the senders do not complete
	* transmission before the regions are destroyed in the receivers.
	* Removing the flaky test tag


Commit 313bbab5513a9ec01ecf9206955c19d70a8fc26c in incubator-geode's branch refs/heads/feature/GEODE-1466 from [~nnag]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=313bbab ]

GEODE-1978: Slowing down the receivers

	* Slowing down the receivers so that the senders do not complete
	* transmission before the regions are destroyed in the receivers.
	* Removing the flaky test tag


This  test is still failing. It's easily reproducible if you add a sleep before the last validation line. 

{code}
    Thread.sleep(10000);
    vm4.invoke(() -> WANTestBase.verifyRegionQueueNotEmptyForConcurrentSender("ln"));
{code}

I think what's happening in is that even though [~nnag] added a sleep to prevent the queue from being empty when the region is destroyed on the remote side, *after* the region is destroyed, the dispatcher just gets a bunch of exceptions discards the events. So the queue will still drain down to zero, and the race still exists in this test.


Commit 6aced1947590aa1829b7c9a65dbb11683544065b in incubator-geode's branch refs/heads/develop from [~upthewaterspout]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=6aced19 ]

GEODE-1978: Waiting for the queue to drain in testReplicatedSerialProp...

Waiting to the queue to drain in this test. The test had an assertion
that the queue was not empty. But really, in the background the
dispatcher was draining the queue as fast as it good. The actually
expected behavior is that the queue will become empty if the remote side
destroys a region.


