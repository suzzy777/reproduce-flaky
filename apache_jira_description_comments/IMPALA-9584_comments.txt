Just saw this here as well: https://jenkins.impala.io/job/ubuntu-16.04-from-scratch/10016/

I do have a theory here, simply avg(timestamp_col) is not deterministic:
select avg(timestamp_col) from functional_parquet.alltypes;
on my machine it returns 
2009-12-31 14:30:20.341989994 or 
2009-12-31 14:30:20.341990232

I think that the underlying cause is "double trouble": 
- AVG() on timestamps converts timestamps to double and stores their sum in double (this is a bad idea in my opinion, another reason to change to a different mechanism is mentioned in IMPALA-7472)
- addition for doubles is not associative due to precision loss

So merging aggregates for more than 2 subsets (e.g splits) can lead to different results depending on the order of the merges. 

I also saw this here: [https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/2048/#showFailuresLink]

[~csringhofer]'s theory seems correct. We're checking too many significant figures, really. I think this is probably somehow indirectly caused by IMPALA-8005 randomising the exchanges.

>I think this is probably somehow indirectly caused by IMPALA-8005 randomising the exchanges.
Ah, that explains why it came up often recently.

>We're checking too many significant figures, really
In the AVG() case this is true, as double is involved, but in all other cases timestamp functions should be deterministic with nanosec precision. I wouldn't make the tests "weaker" for the sake of AVG, which is probably not used too often with timestamps anyway.

I see two solutions:
- short term: Remove avg(timestamp_col) from the test, I don't think that it is crucial here, e.g. max could be also used. I grepped for avg(timestamp_col) and it is only used in this file in 2 tests.
- long term: Change the accumulator in the intermediate format of AVG(TIMESTAMP) see IMPALA-7472. (I wrote decimal there, but two integers for day_sum and nano_sum could be probably faster).

[~csringhofer]Â yeah let's just remove this from the test for now to unblock, this is causing a lot of failures

https://gerrit.cloudera.org/#/c/15621/

Commit a08cd7f49bb9c69b05fabe9ccd18577cfd300b4e in impala's branch refs/heads/master from Csaba Ringhofer
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=a08cd7f ]

IMPALA-9584: remove flaky avg(TIMESTAMP) aggregates from test_analytic_fns

AVG(TIMESTAMP) is not deterministic, because it uses a double to sum
the timestamps, and adding doubles in different order can lead to
different results. This does not cause problems for DOUBLE columns,
because the test framework does not require exact match if the result
is double. As AVG is the only function for TIMESTAMP with this problem,
reducing the precision of all timestamps checks seemed like an
overkill.

As a short term solution I removed the problematic aggregates from the
tests.

Testing:
- ran only the related tests

Change-Id: I10e0027a64a4e430b7db3ed7c8d0cc8cdcb202e0
Reviewed-on: http://gerrit.cloudera.org:8080/15621
Reviewed-by: Tim Armstrong <tarmstrong@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


