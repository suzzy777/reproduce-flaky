To be a little more explicit about the APIs we want this ticket to cover, I found 6 APIs that perform operations on individual nodes:

(*EDIT*: List moved to table in issue description)

Obviously this is a big list.  IMO it makes sense to split these up across different PRs, doing some small number (i.e. 1 or 2) of APIs per-PR.  If anyone wants to help chip away at this, just call out which APIs from this list you intend to work on and we can parallelize them.

In terms of the steps required, the JIRA comments [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17617806&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17617806] and [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17617923&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17617923] give some good background and step-by-step instructions for switching APIs over to the new JAX-RS framework, which is usually helpful or even required as the traditional v2 framework doesn't lend itself very readily to RESTful APIs.  (Those comments describe creating a new API "from scratch", but the steps are still applicable to modifying an existing API.)  The PR [here|https://github.com/apache/solr/pull/1053] also serves as a helpful example to work from.

Not all API modifications require the new JAX-RS framework, though it is preferred going forward.  Instructions for updating APIs using the older, traditional v2 framework can be found [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17565076&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17565076], and an example PR can be found [here|https://github.com/apache/solr/pull/1061].

Commit c937bc2e5f40ce93102b65e71360f5b9a6907270 in solr's branch refs/heads/main from Calvince Otieno
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=c937bc2e5f4 ]

SOLR-16458: Migrate v2 logging APIs to JAX-RS (#1160)

This commit splits up the various functional APIs in LoggingHandler and
gives them separate JAX-RS endpoints.

v2 APIs are now available for:
  - list logger levels (GET /api/node/logging/levels)
  - bulk update logger levels (PUT /api/node/logging/levels)
  - fetch log messages (GET /api/node/logging/messages)
  - tweak log-listener level (PUT /api/node/logging/messages/threshold)

Co-authored-by: Calvince Otieno <sir_kolly@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 245f7938e26e3eb02a31918d3c87b4df16a2d342 in solr's branch refs/heads/branch_9x from Calvince Otieno
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=245f7938e26 ]

SOLR-16458: Migrate v2 logging APIs to JAX-RS (#1160)

This commit splits up the various functional APIs in LoggingHandler and
gives them separate JAX-RS endpoints.

v2 APIs are now available for:
  - list logger levels (GET /api/node/logging/levels)
  - bulk update logger levels (PUT /api/node/logging/levels)
  - fetch log messages (GET /api/node/logging/messages)
  - tweak log-listener level (PUT /api/node/logging/messages/threshold)

Co-authored-by: Calvince Otieno <sir_kolly@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 993af9a3fe2f9089575f20d177a55cf62058dca8 in solr's branch refs/heads/main from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=993af9a3fe2 ]

SOLR-16458: Fix NodeLoggingAPITest failures

NodeLoggingAPITest, added in a recent commit, was using a hardcoded
port (9998), and would fail when that port was not available.  This
commit updates the test to choose an available port at random instead.

This should also fix a some flakiness in ListConfigSetsAPITest, which
suffered the same problem.


Commit df0327aacbf9d1744297b3278c31e551cb7fdf97 in solr's branch refs/heads/branch_9x from Jason Gerlowski
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=df0327aacbf ]

SOLR-16458: Fix NodeLoggingAPITest failures

NodeLoggingAPITest, added in a recent commit, was using a hardcoded
port (9998), and would fail when that port was not available.  This
commit updates the test to choose an available port at random instead.

This should also fix a some flakiness in ListConfigSetsAPITest, which
suffered the same problem.


