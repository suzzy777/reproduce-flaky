[~gunneee]
We have never mentioned that User should use fully qualified class name.
The syntax should use slash (/). Please see the documentation [1] and let me know if I can close this issue.
[1] https://maven.apache.org/surefire/maven-surefire-plugin/examples/single-test.html
https://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html

It must be somewhere that we give user impression to use package format. NetBean uses this format in its tooling

From a users perspective it completely makes sense to use the fully qualified name of the class including the package with the dot notation. I have not looked at the code of surefire but on the surface this should not be too hard to implement. Would be it be worth adding this as a new feature? 

Manfred, this is not a bug. It is a wish.
I understand your point but this is not the biggest ambition in surefire.
I will find my spare time in Version 3.0 for this wish.
No, it is not easy to change due to we are dependent on maven-shared-utils, believe me. Otherwise I could already do it.
Changing maven-shared-utils is not possible to do it now due to:
+ maven-shared-utils is already on 3.0 Version.
+ surefire is going to release 2.20 and 3.0.
Currently I am going to push a fix in 2.19.1 due to fixing this feature of tests filtering.
More than having new features is to have "stable" surefire, but as I said I can imaging this wish in 3.0.

Thanks for clarifying this. I did not realize the scope of this change was that big due to the involved libraries. Maybe we should change this issue to "wish" then and work on it later.

[~simpligility]
I have changed to wish+Version 3.0+assigned to me.


I didn't know this was not the preferred syntax. In my case, I cannot use a specific plugin in Jenkins which generates an -DTest argument for all test cases failed in previous test cases. This argument is build with package names. The plugin is called Flaky Test Handler Plugin: https://wiki.jenkins-ci.org/display/JENKINS/Flaky+Test+Handler+Plugin

[~gunneee]
try to use re-reun feature in surefire. it's not useful? At least till the version 3.0.

[~tibor17]

This issue is most definitely a bug--not a request for a new feature. Support for this feature has been around for a long time.

The following command works for every version of surefire from 2.4 to 2.18:
{code}
mvn org.apache.maven.plugins:maven-surefire-plugin:2.18:test -Dtest=mypackage.MyTest
{code}

It only stopped working with surefire:2.19:

{code}
mvn org.apache.maven.plugins:maven-surefire-plugin:2.19:test -Dtest=mypackage.MyTest
{code}

[~rptmaestro]
[~gunneee]
[~simpligility]
I will try to replace (.) with (/) slash in the non-regex pattern.
If you are facing any problem with the concept let me know.

Thank you for putting this feature back even thou it is undocumented

No, problem, the documentation will be updated accordingly. A new chapter will be added.
? Can someone open a new pull-request add/extend simple integration test and fix it in:
{code}
ResolvedTest.matchClassPatter()
{code}
The parameter should be 
{code}
testClassFile = testClassFile.trim();
testClassFile = testClassFile.replace('.', '/', 0, N); where N is the index of the last string where testClassFile ends with ".java" or ".class"
{code}

It would be nice to extend existing unit test as well.

[~tibor17], I'll take this one... :)

Ok, I was just about to make a pull-request.. how about this one:
{code}
testClassFile = testClassFile.trim().replaceAll( "\\.(?=.*\\.)" , "/" );
{code}

Regex is too slow. Surefire slows down before starting first test because
it has too much work with pre-processing.

On Mon, Nov 9, 2015 at 9:14 AM, Gunnar Schmidt (JIRA) <jira@apache.org>



[~agudian]
I have methods renaming and changes in ResolvedTest.
Later I would rename the class to ResolvedTestPattern but not in 2.19.1.
Let's make PR and we will focus on small scope of change.

commit 544591c9d18966f514bb4273aa06deed186a6810
commit ccb03c49ced8fe5e71761a928f4d94f9630f5222

UNSTABLE: Integrated in maven-surefire #1516 (See [https://builds.apache.org/job/maven-surefire/1516/])
[SUREFIRE-1191] Run Single Test with Package Name Doesn't work (tibor17: rev 544591c9d18966f514bb4273aa06deed186a6810)
* surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/TestSingleMethodIT.java
* surefire-api/src/main/java/org/apache/maven/surefire/testset/TestListResolver.java
* surefire-api/src/main/java/org/apache/maven/surefire/testset/ResolvedTest.java
* maven-surefire-plugin/src/site/apt/examples/single-test.apt.vm
* surefire-providers/common-junit48/src/test/java/org/apache/maven/surefire/common/junit48/FilterFactoryTest.java
* surefire-api/src/test/java/org/apache/maven/surefire/testset/ResolvedTestTest.java
* maven-surefire-plugin/src/site/apt/examples/inclusion-exclusion.apt.vm


SUCCESS: Integrated in maven-surefire #1517 (See [https://builds.apache.org/job/maven-surefire/1517/])
[SUREFIRE-1191] Run Single Test with Package Name Doesn't work (tibor17: rev ccb03c49ced8fe5e71761a928f4d94f9630f5222)
* surefire-providers/common-junit48/src/test/java/org/apache/maven/surefire/common/junit48/FilterFactoryTest.java
* surefire-api/src/main/java/org/apache/maven/surefire/testset/ResolvedTest.java


Please deploy 2.19.1-SNAPSHOT for testing.  I only see 2.20-SNAPSHOT

Just use 2.20-SNAPSHOT from Maven Central.
Current snapshot version is only formal not important. We will release it as 2.19 in several days.

[~dantran]
[~danttran]
[~mosabua]
[~simpligility]
[~Gunnar88]
[~gunneee]
Did you check it out with 2.20-SNAPSHOT?
Please give a feedback before I really start a new Release Vote, thx.

[~rptmaestro]
[~rthornto@insight.com]
[~baev]
[~artkoshelev]
Did you check it out with 2.20-SNAPSHOT?
Please give a feedback before I really start a new Release Vote, thx.

I tested with the defined syntax of the Flaky Test Handler Plugin (https://wiki.jenkins-ci.org/display/JENKINS/Flaky+Test+Handler+Plugin).
Works as expected. Thanks a lot.



Works for me! I tried the command that Netbeans executes, so it should be fine for Netbeans users as well. :+1:

Confirm.  It works at our side,and  netbean

Works for me as well.

Nice work. Works as expected now ;-)

