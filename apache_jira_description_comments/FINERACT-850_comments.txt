Please add the PRs having problems here lets see.

Hm, PITA... this isn't just affecting some PRs, but current develop HEAD is also broken due to this, note the red badge on the README; I can see a problem looking similar but not identical to what is shown above on [https://travis-ci.org/apache/fineract/builds/658707123#L453], there it's:
{noformat}
org.apache.fineract.integrationtests.FixedDepositTest > testMaturityAmountForDailyCompoundingAndAnnuallyPosting_With_365_Days FAILED

    java.lang.AssertionError at FixedDepositTest.java:2416{noformat}
When I locally ran {{integrationTest}} on current develop HEAD, FixedDepositTest passed.

The line numbers ({{AssertionError at FixedDepositTest.java:2463}} and {{at FixedDepositTest.java:2416}}) don't match any assertions on [FixedDepositTest.java|https://github.com/apache/fineract/blob/develop/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/FixedDepositTest.java], that's a bit weird.

[https://github.com/apache/fineract/pull/724] raised to see if it easily reproduces on Travis, and it does not and just went away, so clearly this is some intermittent flaky test problem.

Can I suggest that we create sub-tasks for analyzing each failure specifically? I've just created FINERACT-850 for another one.

Mike [~vorburger], I was looking into one of the build log of PR #778:

[https://travis-ci.org/github/apache/fineract/builds/679331592]

In this scenario, AccountingScenarioIntegrationTest --> checkPeriodicAccrualAccountingFlow is failing. I am not sure about the other cases but this definitely looks to me as concurrency issue, perhaps gradle is executing tests in parallel. But we cannot blame it on gradle and move on.

I was looking through the stack trace and reached the method LoanAccountDomainServiceJpa->makeRepayment() and it seems it has always been the problem (there is a comment which will tell the story).

Also, I recollect there was a similar issue in the scheduled jobs ( I don't exactly remember the name) it was also failing because of this same deadlock on Loan entity object.

Let me see, how much i can progress on this issue.

 

[~npawar] thanks for looking into it, that's amazing! If I could suggest just 1 thing - let's use this particular issue here (FINERACT-850) only as the overall "umbrella" to link other more fine grained issues for each specific failing test? So e.g. for AccountingScenarioIntegrationTest, please engage over in FINERACT-899 instead of here.

https://github.com/apache/fineract/pull/782 proposes a new formal policy around how to handle failing tests.

[~vorburger] I agree on both of your comments above.

Resolving this as Fixed, because all sub-tasks under this issue are now closed! :D Yay.

PS: We've made great progress, and remain flaky test issues are "special", and more minor; incl. e.g. FINERACT-885, FINERACT-898 and FINERACT-828 and not related to what we chased here.

PPS: To find still ignored tests, remember to search for {{@Disabled}} (JUnit 5!) now, and no longer {{@Ignored}} which we don't actually use anymore now.

