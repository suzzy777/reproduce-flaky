on shutdown we do

{code}
if (thriftServer != null)
        {
            thriftServer.stop();
            thriftServer = null;
        }
{code}

startRPCServer does

{code}
daemon.thriftServer.start();
{code}

This null was set in 

{code}
commit 25fd7bd84f1931d2a44e90e629f794c4cd11aa46
Author: David Capwell <dcapwell@apple.com>
Date:   Fri Jul 24 18:16:37 2020 -0700

    Add support in jvm dtest to test thrift

    patch by David Capwell; reviewed by Alex Petrov,Jon Meredith for CASSANDRA-15967
{code}

Given that I broke it... I should fix it.

Ok so I think native was turned off, I changed native to also disable thrift, so disabling native then enabling thrift would fail... this is my bad...

Looks like this patch will also fix the similar issue I reported in CASSANDRA-16124.

Now start and stop are looking much more tidy. Assume that this will also fix CASSANDRA-16091 .

I took a closer look at the patch and tested and it did solve CASSANDRA-16124. The patch LGTM.

Thanks for taking a look and trying!

CASSANDRA-16091 is more concerning as no test guards that, so I won’t say it’s fixed without proper testing guarding it (this patch doesn’t right now).  I’ll sync with [~brandon.williams] since he is assigned that

Left some comments inline on GH. 

added python dtest which catches the other reported issues that I couldn't test in jvm-dtest.  I need to still test this against 2.2 and trunk, but with a version before the issue it passes, with the issue it fails.

Ok I think the code is almost ready to review.  python dtest passes locally and skips previous versions, all branches have the new tests added and refactored to have the same lifecycle methods, and thrift/binary operations work in isolation without affecting each other.

I have updated the CI for each branch to run with the latest python dtest branch, so will ask for review once green.

Ok trunk is finally stable; patch is ready to review.

the test failure on trunk is caused by CASSANDRA-16102; not related to this issue.

On trunk, I have been battling with test/distributed/org/apache/cassandra/distributed/test/TopologyChangeTest.java as the test was not correct.  CassandraDaemon was not registered so the nodetool commands to shutdown networking were failing (test did not check this), which means the tests didn't see the Down event.  The test assumed only the Remove event would be present, but this was not correct as Down then Remove should be seen; so test was testing the broken behavior...  I also had to deal with the fact that it is flaky.  If the JVM is slow the client may loose connection and mark the node as Down, then see it come back with Up, so the exact event assertions would fail periodically as they didn't expect Down then Up to show up; I changed the tests to only validate the specific desired events show up in order and to ignore other events.


Hey [~dcapwell],

Thanks for the patch, also improving dtests.

Do you think you can group some of the commits if this doesn't bother [~yifanc] as a reviewer? Not sure where he is in there and whether this will affect his tracking of the patch changes. 

[~yifanc] applied to all feedback

[~e.dimitrova] rebased 3.11 and dtest (the PR branches).

+1 on the 3.11 patch. 
(One unit test failure in the 3.11 CI. but not related)
Now looking at the dtest patch. 

dtest has [2 failures|https://app.circleci.com/pipelines/github/dcapwell/cassandra/566/workflows/05b20cbd-2312-4b36-a869-9207f26c6811/jobs/3101] that looks related to the patch.

3.0 and 3.11 bootstrap failed but were working before https://app.circleci.com/pipelines/github/dcapwell/cassandra/550/workflows/ca6c6551-01d4-4438-bd4d-c14e27fa9bfc/jobs/3035, looks like a change I made caused a regression; looking into it.

Sorry, neglected this patch for a bit; picking up review comments today.

Update, I found out what was failing the test and it was a review comment to remove the validation; this is important for survey mode.

I ported the test to a jvm dtest and found a few gaps in which the test acts differently so also fixed them to be in-line with CassandraDaemon.

I will wait for CASSANDRA-16120 to merge as it is needed for the bootstrap test.

LGTM. Changes look good, ran the tests locally, and also manually checked {{enable/disablethrift}} on earlier branches (and enable/disable binary on trunk). 

[~e.dimitrova] I plan to remove the python dtest in favor of the jvm-dtest, will do that after I get a clean run (waiting on https://issues.apache.org/jira/browse/CASSANDRA-16120).

all tests are passing for 3.11 now, will start porting the changes to the other 4 branches.

Updated changes also look good

all tests passing across all branches (after fixing the trunk test based off CASSANDRA-16057 being merged).

Im going to start the commit process, but will not commit until [~e.dimitrova] reviews; mostly making sure the different CI systems are all green with the changes going on.

Starting commit

CI Results (pending):

2.2
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-2.2-F9DFA56F-5286-4E7D-AE58-0AB5C18D944C
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/84/

3.0
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-3.0-F9DFA56F-5286-4E7D-AE58-0AB5C18D944C
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/85/

3.11
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-3.11-F9DFA56F-5286-4E7D-AE58-0AB5C18D944C
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/86/

trunk
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-trunk-F9DFA56F-5286-4E7D-AE58-0AB5C18D944C
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/87/

A couple of nits on the dtest pull request. Please revert the ccm repository change in requirements.txt before commit.

One thing I am a bit worried is the new mark for in-jvm tests. Please add comment to clarify it. Someone brand new might be confused seeing it. Is it a duplicate test? Why is it here? I find clarifying the situation about the vnodes important.

As [~jwest] as a committer mentioned he tested both the test and the patch manually on his machine, I will look at the CI results tomorrow morning. But first, is there a reason you didn't run the DTests with Java11?

 

Also, while you introduce the new in-jvm test in all versions, I think we should document/comment this part about the versions, brought by [~adelapena]. To be clear for future use of the new mark.

For reference:

[https://the-asf.slack.com/archives/CK23JSY2K/p1602201135179400]

 

 

Unfortunately, I found this dtest failure in Jenkins for trunk:

[https://ci-cassandra.apache.org/job/Cassandra-devbranch/87/testReport/junit/dtest.bootstrap_test/TestBootstrap/test_bootstrap_binary_disabled/]

Please check it

Yep, will check the test failure; the test failed in trunk for Circle and Jenkins, so doesn't feel like a 1-off flaky test.

[~e.dimitrova] I will take [~adelapena] version in slack and see how it works, this will also make it easier to document as my current document is hidden in a random function.

Doh, I knew about this but forgot to update the test... the error is ok to ignore

{code}
        if self.cluster.version() >= LooseVersion('4.0'):
>           self.assert_log_had_msg(node2, 'Not starting client transports as bootstrap has not completed')
{code}

that log was added in 4.0 and made the logic more complex as it copy/pasted the validation logic just to rename the string that was used before.  I felt it was best to keep the branches in-sync so removed that log in favor of the previous log, here is the code that the jvm-dtest checks for and the python version also checks for pre-4.0

{code}
throw new IllegalStateException("Node is not yet bootstrapped completely. Use nodetool to check bootstrap" +
                                                    " state and resume. For more, see `nodetool help bootstrap`");
{code}

Starting commit

CI Results (pending):

Branch: cassandra-2.2
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-2.2-806833FE-D6C3-4556-A63B-8E1E7AC387F0
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/89/

Branch: cassandra-3.0
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-3.0-806833FE-D6C3-4556-A63B-8E1E7AC387F0
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/90/

Branch: cassandra-3.11
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-3.11-806833FE-D6C3-4556-A63B-8E1E7AC387F0
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/91/

Branch: trunk
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-trunk-806833FE-D6C3-4556-A63B-8E1E7AC387F0
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/92/


CI looks good. 

Thank you for the improvements around porting Python dtests to In-Jvm. That's important topic.

I saw a notification CCM patch was committed so I personally think that the patch and the tests are also ready for commit.

CI Results: Yellow, normal failures

Branch: cassandra-2.2
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-2.2-1535B57E-CC4D-4F4D-91C3-9FC233923F02
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/95/

Branch: cassandra-3.0
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-3.0-1535B57E-CC4D-4F4D-91C3-9FC233923F02
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/96/

Branch: cassandra-3.11
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-cassandra-3.11-1535B57E-CC4D-4F4D-91C3-9FC233923F02
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/97/

Branch: trunk
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16127-trunk-1535B57E-CC4D-4F4D-91C3-9FC233923F02
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/98/


python dtest commit: 1b71196a036b4f33d1ef53418bd21ac4b241399e

