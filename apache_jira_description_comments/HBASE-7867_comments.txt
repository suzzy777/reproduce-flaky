Let's try a HadoopQA run with this.

[~lhofhansl]ok, plz, fix the comment.

but if preAllocSize is 100, it might call this code "f.getChannel().write(fill, currentSize-fill.remaining());" in zookeeper/src/java/main/org/apache/zookeeper/server/persistence/Util.java every time.

This is what ZK's ClientBase actually does. We should do the same.

{code}
    public static void setupTestEnv() {
        // during the tests we run with 100K prealloc in the logs.
        // on windows systems prealloc of 64M was seen to take ~15seconds
        // resulting in test Assert.failure (client timeout on first session).
        // set env and directly in order to handle static init/gc issues
        System.setProperty("zookeeper.preAllocSize", "100");
        FileTxnLog.setPreallocSize(100 * 1024);
    }
{code}

Yep. Double checked the ZK code.

System.setProperty("zookeeper.preAllocSize", "100"); is in kilobytes

FileTxnLog.setPreallocSize(100 * 1024); is in bytes


Current attached patch is not correct, canceling HadoopQA run.

applying review to patch.

Thanks [~charsyam].
Let's try HadoopQA again :)

I wonder if this part of the reason for some of our flaky tests (many of which have to do with ZK)

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12569712/hbase-7867.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/4452//console

This message is automatically generated.

+1 on latest patch.

Committed to 0.94 and 0.96.
Thanks for the patch [~charsyam].

If you plan to contribute more patches I'll add you contributor.

[~lhofhansl] Thank you~ I hope me contribute more patch.

Cool :)
Added you as contributor and assigned this issue to you.

Integrated in HBase-0.94 #849 (See [https://builds.apache.org/job/HBase-0.94/849/])
    HBASE-7867 setPreallocSize is different with COMMENT in setupTestEnv in MiniZooKeeperCluster.java (DaeMyung Kang) (Revision 1447105)

     Result = SUCCESS
larsh : 
Files : 
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java


Integrated in HBase-TRUNK #3884 (See [https://builds.apache.org/job/HBase-TRUNK/3884/])
    HBASE-7867 setPreallocSize is different with COMMENT in setupTestEnv in MiniZooKeeperCluster.java (DaeMyung Kang) (Revision 1447106)

     Result = FAILURE
larsh : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java


Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #411 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/411/])
    HBASE-7867 setPreallocSize is different with COMMENT in setupTestEnv in MiniZooKeeperCluster.java (DaeMyung Kang) (Revision 1447106)

     Result = FAILURE
larsh : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java


Integrated in HBase-0.94-security #111 (See [https://builds.apache.org/job/HBase-0.94-security/111/])
    HBASE-7867 setPreallocSize is different with COMMENT in setupTestEnv in MiniZooKeeperCluster.java (DaeMyung Kang) (Revision 1447105)

     Result = SUCCESS
larsh : 
Files : 
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java


Integrated in HBase-0.94-security-on-Hadoop-23 #12 (See [https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/])
    HBASE-7867 setPreallocSize is different with COMMENT in setupTestEnv in MiniZooKeeperCluster.java (DaeMyung Kang) (Revision 1447105)

     Result = FAILURE
larsh : 
Files : 
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java


