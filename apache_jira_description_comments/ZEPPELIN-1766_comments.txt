!long.png!

GitHub user 1ambda opened a pull request:

    https://github.com/apache/zeppelin/pull/1734

    [ZEPPELIN-1766] Improve Interpreter Binding UI better (frontend)

    ### What is this PR for?
    
    Current Interpreter Binding UI
    
    - is too long so that users should scroll down to just close binding UI
    - doesn't have filter
    - doens't stress default interpreter
    - has restart button which can be designed better
    
    As the result of this PR the binding UI would be better
    
    - small size
    - well noticed the default binding (green color)
    - be simple by hiding restart button. even we can utilise the dropbox buttons to add more features for bindings (e.g **adding link to go to a specific interpreter**)
    
    - **binding UI would be better** (short, easy to read)
    * [x] - Add binding filter
    * [x] - Highlight default binding
    * [x] - Remove useless text and stress important message in binding usage
    
    
    ### What type of PR is it?
    [Improvement | Feature]
    
    ### Todos
    * [x] - Improve binding UI
    * [x] - Add binding filter
    * [x] - Highlight default binding
    * [x] - Remove useless text and stress important message in binding usage
    
    ### What is the Jira issue?
    
    [ZEPPELIN-1766](https://issues.apache.org/jira/browse/ZEPPELIN-1766)
    
    ### How should this be tested?
    
    Open interpreter binding UI and manipulate it. 
    
    - insert filter keyword
    - click restart buttons
    
    ### Screenshots (if appropriate)
    
    #### Screenshots for Restart Button
    
    <img width="714" alt="screen shot 2016-12-08 at 5 39 55 am" src="https://cloud.githubusercontent.com/assets/4968473/20986239/1aa5646c-bd0b-11e6-8f93-282609da892a.png">
    
    #### Screenshots for Filtering
    
    <img width="711" alt="screen shot 2016-12-08 at 5 40 17 am" src="https://cloud.githubusercontent.com/assets/4968473/20986242/1dd535b8-bd0b-11e6-83b3-1419e7d7a085.png">
    
    
    ### Questions:
    * Does the licenses files need update? - NO
    * Is there breaking changes for older versions? - NO
    * Does this needs documentation? - NO


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/1ambda/zeppelin feat/improve-binding-box

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/1734.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1734
    
----
commit f4971bb8241ea41f25a0127765d94c47a039e132
Author: 1ambda <1amb4a@gmail.com>
Date:   2016-12-07T20:25:10Z

    feat: Inlined bindings

commit c30301847e7283e8da0d8db62ca3a601dd7ffd4e
Author: 1ambda <1amb4a@gmail.com>
Date:   2016-12-07T20:32:05Z

    feat: Add binding filter

commit 5a63e77fb62ee307a3c32e3e7518bd25fdfacf54
Author: 1ambda <1amb4a@gmail.com>
Date:   2016-12-07T20:34:38Z

    docs: Update title, add strong to important text

commit 3001bfa3f27bf742a8f970a33133991df95b6d7e
Author: 1ambda <1amb4a@gmail.com>
Date:   2016-12-07T20:39:23Z

    feat: Highlight default binding

----


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    Thanks @1ambda for working on UX improvement.
    
    Personally, i'd prefer keep items in 1 column. Because it displays interpreter names (e.g. %spark, %pyspark, etc) at predictable location. i.e. beginning of each rows.
    
    This change doesn't newline after each item and each item has variable length and it's hard to quickly read interpreter through eyes, even though there's filter. IMO.
    
    Scrollbar will be there anyway when user have enough numbers of interpreter settings. Or when user have small screen size. 
    
    For this reason, how about think other way to help user easily find 'save' button?


Github user 1ambda commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    @Leemoonsoo Thanks for your opinion! 
    
    That's true there will be scrollbar anyway if we have many bindings.  
    So What about adding scroll bar to the binding list? so that users can find **save**, **close** button easily (I attached GIF)
    
    ![scrollbar](https://cloud.githubusercontent.com/assets/4968473/20993841/410088ec-bd30-11e6-8351-af5dad17b53b.gif)



Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    @1ambda that looks more make sense to me.
    fyi, a related PR https://github.com/apache/zeppelin/pull/423


Github user 1ambda commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    @Leemoonsoo 
    
    I'v just fixed as commented above and updated GIF in the PR description
    



Github user cloverhearts commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    I like a green button for default interpreter feedback.
    especially, it seems to be a good choice for separating roles of interpreter.


Github user AhyoungRyu commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    @1ambda Great initiative for improving interpreter binding page UI! I also agree that current binding page is getting longer (thanks to the Zeppelin contributors :D) and getting hard to find. Definitely needs to be improved. I tested this branch and checked the improvement. Let me share my thought about this patch in here.
    
     - Currently the restart button is exposed so that ppl can know "I can restart this interpreter by clicking this button" by instinct. But \w this patch, ppl need to click "Carrot" button to open the dropdown menu and need to click "Restart" button to restart interpreter. And the user need to click at least one time to know about this. 
    
     - Seems don't need another tooltip in here since there is already the text "Restart"
    ![screen shot 2016-12-09 at 4 30 48 pm](https://cloud.githubusercontent.com/assets/10060731/21041414/37198bb8-be2e-11e6-8d80-9c6420738110.png)
    
     - The color change for default interpreter is good idea i think! But the color is gone when it comes out as a result. 
    ![search_interpreter](https://cloud.githubusercontent.com/assets/10060731/21041453/67d16cda-be2e-11e6-9f6c-8b8e77b0a423.gif)
    
     - Shirking overall size also good idea. Was quite verbose. But the thing that interpreter button has smaller height than dropdown menu is quite awkward to me. 
    ![screen shot 2016-12-09 at 4 50 01 pm](https://cloud.githubusercontent.com/assets/10060731/21041612/8fdeb128-be2f-11e6-891a-18c2bd760d17.png)
    
     - How about "Search bindable interpreters(?)" instead of "Search interpreter Bindings"? :D 
    <img width="335" alt="screen shot 2016-12-09 at 4 48 59 pm" src="https://cloud.githubusercontent.com/assets/10060731/21041595/6681d904-be2f-11e6-82c2-c7499f0d0875.png">
    
    Most of them in the above are just my personal opinion. So surely you don't need to apply all of them. And thanks again for your effort to improve the UI! 
    
    



Github user 1ambda commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    Thanks for detailed review @AhyoungRyu 
    
    ### 1. Fixed Inputbox placeholder
    
    <img width="346" alt="screen shot 2016-12-13 at 2 10 58 pm" src="https://cloud.githubusercontent.com/assets/4968473/21129948/9338c5f4-c148-11e6-9f2d-73340957a1d0.png">
    
    ### 2. Fixed dropdown button size, Removed tooltip
    
    <img width="259" alt="screen shot 2016-12-13 at 2 10 51 pm" src="https://cloud.githubusercontent.com/assets/4968473/21129946/91ce0472-c148-11e6-97e8-1f7825347a31.png">
    
    ### 3. Apply the green color to binding even when filtered
    
    ![filter](https://cloud.githubusercontent.com/assets/4968473/21129949/9482777a-c148-11e6-965b-e59aba731fca.gif)



Github user 1ambda commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    - Selenium tests passed by fixing https://github.com/apache/zeppelin/pull/1734/commits/c377cf8f255fa714d4b65061daf5239e86e8f641
    - The profile 3 (scala 2.10, spark 1.6.3) failed but irrelevant with this PR
    
    ```
    // https://api.travis-ci.org/jobs/183520147/log.txt?deansi=true
    
    Tests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.646 sec <<< FAILURE! - in org.apache.zeppelin.dep.DependencyResolverTest
    testLoad(org.apache.zeppelin.dep.DependencyResolverTest)  Time elapsed: 0.633 sec  <<< ERROR!
    org.sonatype.aether.RepositoryException: Cannot fetch dependencies for com.databricks:spark-csv_2.10:1.3.0
    	at org.apache.zeppelin.dep.DependencyResolver.getArtifactsWithDep(DependencyResolver.java:181)
    	at org.apache.zeppelin.dep.DependencyResolver.loadFromMvn(DependencyResolver.java:131)
    	at org.apache.zeppelin.dep.DependencyResolver.load(DependencyResolver.java:79)
    	at org.apache.zeppelin.dep.DependencyResolver.load(DependencyResolver.java:96)
    	at org.apache.zeppelin.dep.DependencyResolver.load(DependencyResolver.java:88)
    	at org.apache.zeppelin.dep.DependencyResolverTest.testLoad(DependencyResolverTest.java:77)
    
    
    Results :
    
    Tests in error: 
      DependencyResolverTest.testLoad:77 Â» Repository Cannot fetch dependencies for ...
    ```
    
    @AhyoungRyu @Leemoonsoo please let me know if there is anything to be fixed. Thanks!


Github user zjffdu commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    I also notice this failed test in travis. I think there're several jiras tracking the flaky test.  The flaky test waste every developer's time. I think we should spend some time to fix them. What do you think ? \cc @Leemoonsoo  @AhyoungRyu @1ambda 


Github user 1ambda commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    Totally agree with @zjffdu's opinion. [Here are unresolved flaky tests](https://issues.apache.org/jira/issues/?jql=project%20%3D%20ZEPPELIN%20AND%20text%20~%20flaky%20ORDER%20BY%20status%20ASC)
    



Github user AhyoungRyu commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    Thanks @1ambda. Seems it much better! Let me test again. 
    So true. Currently the CI test result makes us more confused and really hard to find what the problem is :(


Github user bzz commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    Guys, if I may, I would suggest keep the discussion in PR focused on the subject of the PR and move general topics of project's CI stability to the public dev@ mailing list and appropriate JIRA issues. Main reason beeing that people in community, who are interested in the subject of CI stability have hirer chanced on collaborating and fixing it together that way.
    
    Here is JIRA for the CI failing on `spark-csv` - [ZEPPELIN-1797](https://issues.apache.org/jira/browse/ZEPPELIN-1797), \w some logs and failure examples.


Github user 1ambda commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    Hi all, Let me know if anything needed to be changed from design to code style! 
    
    Thanks :)


Github user 1ambda commented on the issue:

    https://github.com/apache/zeppelin/pull/1734
  
    Hi all, This PR looks like unbacked from the point of view design. I will close this issue. :)


Github user 1ambda closed the pull request at:

    https://github.com/apache/zeppelin/pull/1734


