Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/1949
  
    @DrIgor Thanks for the contribution!
    CI fails with known flaky test https://issues.apache.org/jira/browse/ZEPPELIN-1856. @DrIgor Could you trigger ci again and see if it passes?


Github user DrIgor commented on the issue:

    https://github.com/apache/zeppelin/pull/1949
  
    ```
    Tests in error: 
      InterpreterRestApiTest.testRestartInterpreterPerNote:303 NullPointer
    ```
    
    It's a known bug https://issues.apache.org/jira/browse/ZEPPELIN-1856


A *NullPointerException* occurs when {{p.getResult()}} returns *null* in the following line of {{testRestartInterpreterPerNote()}} method:
{code}
assertEquals(p.getResult().message().get(0).getData(), getSimulatedMarkdownResult("markdown"));
{code}

It happens when we recieve an *OUTPUT_UPDATE_ALL* event in *RemoteInterpreterEventPoller* after {{RemoteInterpreter.interpret(..)}} is done. The {{Paragraph.result}} which already contains its final value is setted to *null* by {{NotebookServer.onOutputClear(..)}} method. As a result we recieve a *NPE* in assertion.

To fix this issue we need to ignore an *OUTPUT_UPDATE_ALL* event after job is finished.

GitHub user AlexanderShoshin opened a pull request:

    https://github.com/apache/zeppelin/pull/2188

    [MINOR] Job parameters synchronization

    ### What is this PR for?
    We need to synchronize setting up job result, exception, errorMessage and dateFinished in the end of `Job.run()` method. This will guarantee that we won't see these parameters in inconsistent state in multithreading environment, e.g., if we see that a dateFinished parameter has not been set up yet we will be sure that we also don't have a job final result.
    This code refactoring will make it possible to resolve issue [ZEPPELIN-1856](https://issues.apache.org/jira/browse/ZEPPELIN-1856).
    
    ### What type of PR is it?
    Refactoring
    
    ### Todos
    * [ ] - Synchronize `setResult()`, `exception`, `errorMessage` and `dateFinished` in `Job.run()` method.
    * [ ] - Synchronize getters and setters for `exception`, `errorMessage` and `dateFinished`.
    
    ### Questions:
    * Does the licenses files need update? **no**
    * Is there breaking changes for older versions? **no**
    * Does this needs documentation? **no**


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/AlexanderShoshin/zeppelin job-results-synchronization

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/2188.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2188
    
----
commit bc9bbc91918984f1141b9f946f701ad616c5fe1f
Author: Alexander Shoshin <alexander_shoshin@epam.com>
Date:   2017-03-23T13:12:24Z

    setting job results, error, dateFinished were synchronized

----


Github user asfgit closed the pull request at:

    https://github.com/apache/zeppelin/pull/2188


GitHub user AlexanderShoshin opened a pull request:

    https://github.com/apache/zeppelin/pull/2206

    [ZEPPELIN-1856] Flaky Test: InterpreterRestApiTest.testRestartInterpreterPerNote

    ### What is this PR for?
    A _NullPointerException_ occurs occasionally in `InterpreterRestApiTest.testRestartInterpreterPerNote()` test when `p.getResult()` returns _null_ in the following line of test method:
    ```
    assertEquals(p.getResult().message().get(0).getData(), getSimulatedMarkdownResult("markdown"));
    ```
    It happens when we recieve an _OUTPUT_UPDATE_ALL_ event in _RemoteInterpreterEventPoller_ after `RemoteInterpreter.interpret(..)` is done. The `Paragraph.result` which already contains its final value is setted to _null_ by `NotebookServer.onOutputClear(..)` method. As a result we recieve a _NPE_ in assertion.
    
    ### What type of PR is it?
    Bug Fix
    
    ### Todos
    * [ ] - To fix this issue we need to ignore an _OUTPUT_UPDATE_ALL_ event after job is finished.
    
    ### What is the Jira issue?
    [ZEPPELIN-1856](https://issues.apache.org/jira/browse/ZEPPELIN-1856)
    
    ### Questions:
    * Does the licenses files need update? **no**
    * Is there breaking changes for older versions? **no**
    * Does this needs documentation? **no**


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/AlexanderShoshin/zeppelin ZEPPELIN-1856

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/2206.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2206
    
----
commit bcf01bd999fc853e08058a77443153338f85c5d4
Author: Alexander Shoshin <alexander_shoshin@epam.com>
Date:   2017-03-24T13:27:35Z

    do not clear a paragraph output if the paragraph is already done

----


Github user jongyoul commented on the issue:

    https://github.com/apache/zeppelin/pull/2206
  
    Can you make a test in case OUTPUT_UPDATE_ALL is passed after job is done?


Github user AlexanderShoshin commented on the issue:

    https://github.com/apache/zeppelin/pull/2206
  
    Sure, I'll do it.
    But first I need to make some refactoring of `Note.java` class in separate PR. We need to be able to add a custom `Paragraph` to `Note`. This will allow to use a `Paragraph` which we can control while performing. So we will be able to catch `Paragraph` _RUNNING_ and _FINISHED_ phases in a test.


GitHub user AlexanderShoshin opened a pull request:

    https://github.com/apache/zeppelin/pull/2233

    [MINOR] Add paragraph to note

    ### What is this PR for?
    We need to add an ability of adding custom _Paragraph_ to a _Note_. This will make it easier to write _Note_ and _Paragraph_ tests. At the moment all paragraphs are created inside _Note_ class.
    
    This refactoring will allow to write a test for ZEPPELIN-1856 issue.
    
    
    ### What type of PR is it?
    [Refactoring]
    
    ### Todos
    * [ ] - Rename `addParagraph()` -> `addNewParagraph()` and `insertParagraph()` -> `insertNewParagraph()`. These names will describe what mathods do: create new paragraph and add it to the note.
    * [ ] - Remove duplicated code from `addNewParagraph()` and `insertNewParagraph()` methods.
    * [ ] - Add methods `addParagraph()` and `insertParagraph()`, which receive a _Paragraph_ instance in parameters and add it to the _Note_.
    
    ### Questions:
    * Does the licenses files need update? **no**
    * Is there breaking changes for older versions? **no**
    * Does this needs documentation? **no**


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/AlexanderShoshin/zeppelin add-paragraph-to-note

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zeppelin/pull/2233.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2233
    
----
commit 4391f6babe31083b143a8ae260c5feeea5b919cf
Author: Alexander Shoshin <alexander_shoshin@epam.com>
Date:   2017-04-07T08:44:32Z

    rename addParagraph() -> addNewParagraph(), insertParagraph() -> insertNewParagraph()

commit b0b1dd4841096e9090ab08f8ef55dd15c2c44698
Author: Alexander Shoshin <alexander_shoshin@epam.com>
Date:   2017-04-07T08:54:50Z

    remove duplicated code

commit 676db154139a48a30dfc93ce19ca4937f85bae2c
Author: Alexander Shoshin <alexander_shoshin@epam.com>
Date:   2017-04-07T09:02:07Z

    added methods addParagraph() and insertParagrepg()

----


Github user asfgit closed the pull request at:

    https://github.com/apache/zeppelin/pull/2233


Github user AlexanderShoshin commented on the issue:

    https://github.com/apache/zeppelin/pull/2206
  
    Hi @jongyoul,
    I've added a test for my changes but it won't run until we restore second Travis job which should start all core tests.
    I will write when the test will be able to run on Travis.


Github user jongyoul commented on the issue:

    https://github.com/apache/zeppelin/pull/2206
  
    @AlexanderShoshin Can you rebase it from current master?


Github user AlexanderShoshin commented on the issue:

    https://github.com/apache/zeppelin/pull/2206
  
    @jongyoul it looks like I need to correct my unit tests due last changes in master


Github user jongyoul commented on the issue:

    https://github.com/apache/zeppelin/pull/2206
  
    Can you fix it to fit with current master as well?


Github user AlexanderShoshin closed the pull request at:

    https://github.com/apache/zeppelin/pull/2206


I don't have time to finish my PR

