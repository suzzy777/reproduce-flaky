It tuned out that for some reasons SQL query may be dispatched to data node which is performing rebalance. Eventually this will lead to falling back to full table scan usage instead of proper tree index.

Scenario:
1. Cluster in normal state with multiple nodes, under workload (both cache writes/updates and SQL selects)
2. Particular node A is restarted
3. Since there were writes during the time when node A was offline, node A would has to perform historical rebalance
4. During performing historical rebalance SQL select might be dispatched to be executed on node A as well, but at this moment node A will return 0 primary row count for caches under rebalance, so we will initialize table statistics incorrectly and further will calculate unrealistic costs.