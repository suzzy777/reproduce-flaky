The balancer doesn't run in case a region is in-transition. The check to confirm whether there all regions are assigned looks for region count > 22, where the total regions are 27. This may result in a failure:
{code}
java.lang.AssertionError: After 5 attempts, region assignments were not balanced.
	at org.junit.Assert.fail(Assert.java:93)
	at org.apache.hadoop.hbase.TestRegionRebalancing.assertRegionsAreBalanced(TestRegionRebalancing.java:203)
	at org.apache.hadoop.hbase.TestRegionRebalancing.testRebalanceOnRegionServerNumberChange(TestRegionRebalancing.java:123)

.....
2012-12-11 13:47:02,231 INFO  [pool-1-thread-1] hbase.TestRegionRebalancing(120): Added fourth server=p0118.mtv.cloudera.com,44414,1355262422083
2012-12-11 13:47:02,231 INFO  [RegionServer:3;p0118.mtv.cloudera.com,44414,1355262422083] regionserver.HRegionServer(3769): Registered RegionServer MXBean
2012-12-11 13:47:02,231 DEBUG [pool-1-thread-1] master.HMaster(987): Not running balancer because 1 region(s) in transition: {c786446fb2542f190e937057cdc79d9d=test,kkk,1355262401365.c786446fb2542f190e937057cdc79d9d. state=OPENING, ts=1355262421037, server=p0118.mtv.cloudera.com,54281,1355262419765}
2012-12-11 13:47:02,232 DEBUG [pool-1-thread-1] hbase.TestRegionRebalancing(165): There are 4 servers and 26 regions. Load Average: 13.0 low border: 9, up border: 16; attempt: 0
2012-12-11 13:47:02,232 DEBUG [pool-1-thread-1] hbase.TestRegionRebalancing(171): p0118.mtv.cloudera.com,51590,1355262395329 Avg: 13.0 actual: 11
2012-12-11 13:47:02,232 DEBUG [pool-1-thread-1] hbase.TestRegionRebalancing(171): p0118.mtv.cloudera.com,52987,1355262407916 Avg: 13.0 actual: 15
2012-12-11 13:47:02,233 DEBUG [pool-1-thread-1] hbase.TestRegionRebalancing(171): p0118.mtv.cloudera.com,48044,1355262421787 Avg: 13.0 actual: 0
2012-12-11 13:47:02,233 DEBUG [pool-1-thread-1] hbase.TestRegionRebalancing(179): p0118.mtv.cloudera.com,48044,1355262421787 Isn't balanced!!! Avg: 13.0 actual: 0 slop: 0.2
2012-12-11 13:47:12,233 DEBUG [pool-1-thread-1] master.HMaster(987): Not running balancer because 1 region(s) in transition: 
{code}