What is the expected behavior? Should it be another exception?

[~kay_jpr] I belive so. We should never throw NPE to a user.

[~isapego] So I'm thinking of throwing IllegalStateException (assuming attempting to lock after it has been closed is an illegal state).

Can you confirm if this is correct behavior?

[~kay_jpr] I've updated the description. We should get "Failed to find reentrant lock with given name" exception, which describes what actually happened. Look for this error message, it is already used in multiple places.

I've created a pull request and attached to this ticket [~ptupitsyn] . Please review.
Let me know if there is anything missing from my end.

[~kay_jpr]
1. Please add a check for the exception message, not only the class
2. Trigger TeamCity run with TC Bot: https://mtcga.gridgain.com/prs.html

[~ptupitsyn] 
I added a check for exception message also.
for #2, I've triggered test here : [https://mtcga.gridgain.com/pr.html?serverId=apache&suiteId=IgniteTests24Java8_RunAll&baseBranchForTc=&branchForTc=pull%2F7913%2Fhead&action=Lates|https://mtcga.gridgain.com/pr.html?serverId=apache&suiteId=IgniteTests24Java8_RunAll&baseBranchForTc=&branchForTc=pull%2F7913%2Fhead&action=Latest]

 

Looks like it failed. Can you help me interpret this?

{panel:title=Branch: [pull/7913/head] Base: [master] : Possible Blockers (4)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}MVCC Cache 7{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5378861]]

{color:#d04437}Thin Client: Java{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5378778]]

{color:#d04437}PDS (Indexing){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5378835]]

{color:#d04437}Basic 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5378799]]
* IgniteBasicTestSuite: WALRecordSerializationTest.testAllWalRecordsSerializedAndDeserializedSuccessfully - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5378872&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~kay_jpr] I've restarted the tests, results are ok.

Please do two things:
* Merge the latest master into your branch, and remove the old `testClosedLockThrowsIgniteException` (so that yours remains)
* Add javadoc for the test method

[~ptupitsyn]

I've done both the above.

I think the changes have been merged. Should I close this now?

[~kay_jpr] I've merged the changes a moment ago and resolved the ticket as well. No further action required. Thank you!

{panel:title=Branch: [pull/7913/head] Base: [master] : Possible Blockers (40)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}MVCC Cache 7{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5385031]]

{color:#d04437}Queries 1{color} [[tests 30|https://ci.ignite.apache.org/viewLog.html?buildId=5385017]]
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreateIndexWithInlineSizePartitionedAtomic - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreateIndexWithParallelismPartitionedTransactionalNear - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreateNoTableReplicatedAtomic - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreatePartitionedAtomicNear - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreateIndexNoCachePartitionedAtomicNear - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreateIndexNoCacheReplicatedAtomic - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testNonSqlCache - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreateIndexNoCachePartitionedAtomic - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testDropReplicatedTransactional - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreatePartitionedAtomic - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: DynamicIndexServerBasicSelfTest.testCreateIndexWithInlineSizeReplicatedTransactional - Test has low fail rate in base branch 0,0% and is not flaky
... and 19 tests blockers

{color:#d04437}PDS 4{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5385010]]

{color:#d04437}MVCC Queries{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5384975]]
* IgniteCacheMvccSqlTestSuite: CacheMvccSqlLockTimeoutTest.testConcurrentForReplicatedCache - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}ZooKeeper (Discovery) 3{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5385019]]
* ZookeeperDiscoverySpiTestSuite3: GridCacheAtomicMultiJvmFullApiSelfTest.testTtlNoTx - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}MVCC PDS 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5385034]]
* IgnitePdsMvccTestSuite: IgniteClusterActivateDeactivateTestWithPersistence.testClientReconnectClusterDeactivated - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Service Grid (legacy mode){color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=5385024]]
* IgniteServiceGridTestSuite: ServiceThreadPoolSelfTest.testDefaultPoolSize - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteServiceGridTestSuite: ServiceThreadPoolSelfTest.testCustomPoolSize - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteServiceGridTestSuite: ServiceThreadPoolSelfTest.testInheritedPoolSize - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Cache 9{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5384998]]
* IgniteCacheTestSuite9: IgniteTxCachePrimarySyncTest.testSingleKeyPrimaryNodeFail2 - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteCacheTestSuite9: TxPartitionCounterStateConsistencyTest.testPartitionConsistencyWithBackupRestart_ChangeBLT - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5385042&amp;buildTypeId=IgniteTests24Java8_RunAll]

