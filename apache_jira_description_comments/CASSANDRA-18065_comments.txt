Not sure what version you saw this on, but I hit it on 5.0 here:

Seen here: https://app.circleci.com/pipelines/github/driftx/cassandra/1233/workflows/8faa91f1-1e0c-48c7-bded-740c136dd8d2/jobs/47454/tests

I saw it on {{trunk}} at the time of opening the ticket (22/Nov/22).

I have just hit it on 5.0: https://app.circleci.com/pipelines/github/adelapena/cassandra/3134/workflows/53f427a0-3303-40ee-810e-69141f35174d/jobs/71095/tests

This fails on its initial commit from CASSANDRA-17821, [here|https://app.circleci.com/pipelines/github/driftx/cassandra/1236/workflows/44d9e1b6-ec35-4a49-b8cd-6ce440212c23/jobs/47758]:
{noformat}
[junit-timeout] Testcase: testStartAndStopScheduledSampling(org.apache.cassandra.tools.TopPartitionsTest):	FAILED
[junit-timeout] Scheduled sampled tasks should be removed expected:<[]> but was:<[*.*]>
[junit-timeout] junit.framework.AssertionFailedError: Scheduled sampled tasks should be removed expected:<[]> but was:<[*.*]>
[junit-timeout] 	at org.apache.cassandra.tools.TopPartitionsTest.testStartAndStopScheduledSampling(TopPartitionsTest.java:116)
[junit-timeout] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[junit-timeout] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[junit-timeout] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
{noformat}
 
/cc [~jmckenzie]

bq. This fails on its initial commit from CASSANDRA-17821, here:
Happy to take a look but it'll be a couple weeks before I can get to it.

No worries, I am not done with it yet.

The problem is that when createSamplingBeginRunnable sees an existing cancelled job and returns early without doing any sampling, no future is created so the cancelled task is never acted upon again, eventually resulting in the failure.Â  The cancelTask javadoc says "the corresponding task will be stopped once its final sampling completes" so it would seem the correct thing to do is not return early and perform the sampling regardless of the cancellation, which I've done here:

||Branch||CI||
|[5.0|https://github.com/driftx/cassandra/tree/CASSANDRA-18065-5.0]|[repeat 2k|https://app.circleci.com/pipelines/github/driftx/cassandra/1245/workflows/507eb697-6af3-492e-8a14-01c9e43fe7b5/jobs/48883]|
|[trunk|https://github.com/driftx/cassandra/tree/CASSANDRA-18065-trunk]|[repeat 2k|https://app.circleci.com/pipelines/github/driftx/cassandra/1246/workflows/9cd27ec0-3af2-47e5-ac5f-61bf59fd86f4/jobs/48884]|


Right. Also {{createSamplingEndRunnable}} does already have the code to handle the cancellation properly and it does log it. +1

Committed, thanks for the review!

