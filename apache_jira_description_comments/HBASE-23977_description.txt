I see this occasionally on a linux vm. [~vjasani] .. you might have an idea why this is going on (this is your test I believe and a recent addition). If you have stuff I can try, shout.

Here is fail:
{code}
org.junit.ComparisonFailure: expected:<client_1[0]> but was:<client_1[4]>
   at org.apache.hadoop.hbase.regionserver.slowlog.TestSlowLogRecorder.confirmPayloadParams(TestSlowLogRecorder.java:97)
   at org.apache.hadoop.hbase.regionserver.slowlog.TestSlowLogRecorder.testOnlieSlowLogConsumption(TestSlowLogRecorder.java:178)
{code}

Here is log:

{code}
2020-03-12 17:02:06,266 INFO  [Time-limited test] hbase.ResourceChecker(179): after: regionserver.slowlog.TestSlowLogRecorder#testOnlineSlowLogWithDisableConfig Thread=7 (was   7), OpenFileDescriptor=226 (was 226), MaxFileDescriptor=131072 (was 131072), SystemLoadAverage=353 (was 353), ProcessCount=195 (was 195), AvailableMemoryMB=7037 (was 7027) - AvailableMemoryMB LEAK? -
 2020-03-12 17:02:06,281 INFO  [Time-limited test] hbase.ResourceChecker(151): before: regionserver.slowlog.TestSlowLogRecorder#testOnlieSlowLogConsumption Thread=7, OpenFileDescriptor=226,              MaxFileDescriptor=131072, SystemLoadAverage=353, ProcessCount=195, AvailableMemoryMB=7036
 2020-03-12 17:02:06,317 DEBUG [Time-limited test] slowlog.TestSlowLogRecorder(111): Initially ringbuffer of Slow Log records is empty
 2020-03-12 17:02:06,326 INFO  [Time-limited test] hbase.Waiter(183): Waiting up to [3,000] milli-secs(wait.for.ratio=[1])
 2020-03-12 17:02:06,528 INFO  [Time-limited test] hbase.Waiter(183): Waiting up to [3,000] milli-secs(wait.for.ratio=[1])
 2020-03-12 17:02:06,630 INFO  [Time-limited test] hbase.Waiter(183): Waiting up to [3,000] milli-secs(wait.for.ratio=[1])
 2020-03-12 17:02:06,732 INFO  [Time-limited test] hbase.Waiter(183): Waiting up to [3,000] milli-secs(wait.for.ratio=[1])
{code}