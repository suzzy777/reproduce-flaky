We didn't put the latest failed error stack trace, which is not easy to investigate. Maybe we can re-enable it and gather the failed message when occurrence?

+1 on re-enabling. I ran this over 20k iterations, couldn't get a single failure.
{code:java}
#!/bin/bash

set -euo pipefail

test() {
  ./gradlew \
    :core:integrationTest \
    -Prerun-tests \
    -PtestLoggingEvents=failed \
    --tests kafka.network.SocketServerTest.closingChannelWithBufferedReceives \
    --tests kafka.server.DynamicBrokerReconfigurationTest.testDefaultTopicConfig \
    --tests kafka.server.DynamicBrokerReconfigurationTest.testMetricsReporterUpdate \
    --tests kafka.server.DynamicBrokerReconfigurationTest.testUncleanLeaderElectionEnable \
    --fail-fast \
    --quiet
}

I=0
while test
do (( I=$I+1 ))
  echo "Completed run: $I"
  sleep 1
done {code}

This test is getting skipped. Moving this issue to the next release (3.4.0).

The test is currently disabled and the ticket is unassigned so moving to the next release.

Hello [~mimaison], can I work on this failing test?

Sure, feel free to grab this ticket.

So I have reached 100 iterations and no test failure. I will leave it running for a couple of hours and come back again. But in case the test succeeds, isn't safe to assume it's ok? I see it relates with another issue which is resolved so perhaps this one is ok too. Otherwise if there is anyone that has had this test failed perhaps can provide with more detailed logs so we can move towards a possible reproduction and then try solving it.

[~mimaison] , just reached 2k iterations with none failing. I am afraid with the current info I can only add to [~soarez]  conclusion that this test seems to be ok.

[~kyrmar98] It's probably worth trying to run this test in the Apache CI. Quite a few tests consistently work on our developer machines but are flaky in the (overloaded) CI.

What you can do is open a PR with this test re-enabled and see if it passes. We'll probably want to retrigger it a couple of times at least to be sure.

[Test Results|https://ci-builds.apache.org/blue/organizations/jenkins/Kafka%2Fkafka-pr/detail/PR-13953/1/tests/]

So since the test is not in the failed ones I guess it has succeeded.

Moved to 3.7.0 as this JIRA is not yet assigned and we are near code freeze for 3.6.0. 

Changing target fix version to 3.8 since this is not a blocker and we are cutting a 3.7 RC

 

