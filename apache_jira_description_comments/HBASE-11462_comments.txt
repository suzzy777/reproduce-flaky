First patch. [~stack], [~enis] - thoughts? Arguably that's sort of API cleanup (more clear separation between MetaTableLocator and MetaTableAccessor)? What do you guys think?

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668536/HBASE-11462.v1.patch
  against trunk revision .
  ATTACHMENT ID: 12668536

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 18 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 4 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestTags
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat2
                  org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes
                  org.apache.hadoop.hbase.rest.TestTableResource
                  org.apache.hadoop.hbase.master.TestMaster
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface
                  org.apache.hadoop.hbase.TestIOFencing
                  org.apache.hadoop.hbase.master.TestAssignmentListener
                  org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor
                  org.apache.hadoop.hbase.io.encoding.TestChangingEncoding
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting
                  org.apache.hadoop.hbase.security.access.TestTablePermissions
                  org.apache.hadoop.hbase.client.TestFromClientSide3
                  org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk
                  org.apache.hadoop.hbase.client.TestFromClientSide
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster
                  org.apache.hadoop.hbase.regionserver.TestEncryptionKeyRotation
                  org.apache.hadoop.hbase.regionserver.TestCompactionState
                  org.apache.hadoop.hbase.regionserver.TestScannerWithBulkload

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10871//console

This message is automatically generated.

High-level, your undoing zk from HTA seems good to me.  Nice cleanup.

Since we have this change....

+   * Gets all of the regions of the specified table. Do not use this method
+   * to get meta table regions, use methods in MetaTableLocator instead.

...should the class MetaTableAccessor be renamed... TableRegionLocator?... We have RegionLocator already now?  It was just added.  It is region scoped.  We also have RegionLocations.  This class should use these items?  This class is a 'tool'.  Is it public?

It is ok that pair can be null in below?

+      List<Pair<HRegionInfo, ServerName>> pairs = null;
+      if (TableName.META_TABLE_NAME.equals(tableName)) {
+        pairs = new MetaTableLocator().getMetaRegionsAndLocations(zookeeper);
+      } else {
+        MetaTableAccessor.getTableRegionsAndLocations(connection, tableName);
+      }



I skimmed the rest of the patch.  Is there a repeating if/else code that could put some where and do once only?





Attaching v2 version (rebased to latest master). There was a bug with theses pairs possibly being nulls, which cause the tests to fail, now they should be fixed.

I think MetaTableAccessor and RegionLocator are a bit different. RegionLocator is a client interface specifically to look up regions, and MTA is private class to work with content of meta table, including ops not related to regions locations (e.g. split region, delete regions, get startCode, seqNum etc). So I probably wouldn't rename it at this moment.. What do you think?

Regarding multiple if's - yeah, once we split the interfaces someone has to decide which one to use. I'll see how to still refactor this usage to reduce multiple ifs on caller's side.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668646/HBASE-11462.v2.patch
  against trunk revision .
  ATTACHMENT ID: 12668646

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 18 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestMasterFailover
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication
                  org.apache.hadoop.hbase.master.TestAssignmentListener

     {color:red}-1 core zombie tests{color}.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestImportTsv.testBulkOutputWithTsvImporterTextMapper(TestImportTsv.java:229)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10878//console

This message is automatically generated.

bq. So I probably wouldn't rename it at this moment.. What do you think?

That is fair enough [~mantonov] Can do later.  What you think of the above failures?  You think them related?

Yes, failures (at least some of them) seems related, I can reproduce them locally. Looking.

Should be fixed now.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668834/HBASE-11462.v3.patch
  against trunk revision .
  ATTACHMENT ID: 12668834

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 18 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10897//console

This message is automatically generated.

This test which failed above is passing on my local, retrying.

Also couldn't find the related findbug, looking if it came from elsewhere..

Retry.  2002 of 2008(?) tests ran. Lets see.

I asked [~ram_krish] and [~anoop.hbase] about the unit test failure...

Thanks [~stack]. Waiting for the next attempt results.

Has hadoop-qa stuck on this? Unable to kick the patch in again..

[~stack] just noticed there two v3 patches attached, one of them is mine, another one is yours. Did you intend to attach some modified patch v4?

Rebased patch, will see if this one gets picked up by hadoop-qa bot.

Hmm I ran the patch on our internal jenkins machines and got 2 following results from 2 runs;

1) Failed tests: 
  TestMultiParallel.testActiveThreadsCount:157 expected:<5> but was:<4>
  TestAccessControlFilter.setupBeforeClass:81 Timed out waiting for table to become available and enabled hbase:acl

Tests run: 1998, Failures: 2, Errors: 0, Skipped: 19

2) Failed tests: 
  TestCellACLWithMultipleVersions.setupBeforeClass:112 Timed out waiting for table to become available and enabled hbase:acl

Tests run: 1987, Failures: 1, Errors: 0, Skipped: 18

Sounds like those tests are somewhat flaky?..

[~mantonov] See discussion over on HBASE-11988  You removed the v3 I posted?  Ignore.  Go w/ your v4.

[~stack] no, your v3 is still here, I removed my own v3 which I posted roughly at the same time you posted your v3, hence some confusion :) will look at this discussion, thanks!

Cancelling and re-submitting the patch again doesn't seem to draw any attention of hadoop-qa..is there any trick which could be done?

Try reattach?

I did, but that didn't help. Could you maybe delete the all attachments to this jira (I can't delete file attached by you), and then I'll try from scratch and just assign a new patch?

old patch files are removed, seems hadoop-qa got confused and doesn't run any patches for this jira at all. trying to fight it.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669793/HBASE-11462.v4.patch
  against trunk revision .
  ATTACHMENT ID: 12669793

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 18 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.http.TestHttpServerLifecycle.testStartedServerWithRequestLog(TestHttpServerLifecycle.java:91)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10974//console

This message is automatically generated.

Retry.

The failed test is completely unrelated but it stopped tests about half-way through.  Lets see if we get a better run now (HBASE-12025 hopefully helps w/ this test failure)

Thanks [~stack]. After the patch for HBASE-12025 was committed I still couldn't get the clean build on internal build servers, but with flaky errors (different tests are failing once in a while). Still looking.

Oh, I meant that I've seen the failure after the patch for AC/VC tables wait was committed. Didn't yet test with patch for HttpServer test.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669907/HBASE-11462.v4.patch
  against trunk revision .
  ATTACHMENT ID: 12669907

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 18 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10985//console

This message is automatically generated.

Visibility labels failure strange missing zk node.  Is it related [~mantonov]?  Meantime, retrying to see if we can get further.

No, I don't think it's related, this test passed for me locally.

I'm just trying to get a run w/ most of hbase-server completes [~mantonov]

The build seems flaky, but so far I couldn't trace it down to this patch..Last 2 builds I ran today on our internal servers read:

{code}
1)Failed tests: 
  TestMultiParallel.testActiveThreadsCount:157 expected:<5> but was:<4>
Tests in error: 
  TestEndToEndSplitTransaction.blockUntilRegionSplit:451->blockUntilRegionIsInMeta:474 NullPointer
Tests run: 1994, Failures: 1, Errors: 1, Skipped: 18

2) Failed tests: 
  TestSplitLogManager.testGetPreviousRecoveryMode:651 null
  TestMasterFailover.testSimpleMasterFailover:154 expected:<5> but was:<6>
Tests in error: 
  TestMasterFailover.testMetaInTransitionWhenMasterFailover:396 »  test timed ou...
  TestEndToEndSplitTransaction.blockUntilRegionSplit:451->blockUntilRegionIsInMeta:474 NullPointer
Tests run: 1997, Failures: 2, Errors: 2, Skipped: 19
{code}

So I was suspecting TestEndToEndSplitTransaction is reproducible failure, but we can see this test did pass in ASF jenkins...



[~stack] sure, I understand. I'm looking into any single test which could fail repeatedly when running standalone.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669938/HBASE-11462.v4.patch
  against trunk revision .
  ATTACHMENT ID: 12669938

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 18 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportExport
                  org.apache.hadoop.hbase.util.TestProcessBasedCluster
                  org.apache.hadoop.hbase.master.TestSplitLogManager

     {color:red}-1 core zombie tests{color}.  There are 2 zombie test(s): 	at org.apache.bugs.AMQ1730Test.testRedelivery(AMQ1730Test.java:141)
	at org.apache.blur.lucene.search.FacetQueryTest.testFacetQueryPerformance2(FacetQueryTest.java:141)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10991//console

This message is automatically generated.

Retrying. that doesn't look related either.

{code}
Failed tests: 
  TestProcessBasedCluster.testHomePath:92 /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build%402/hbase-server/pom.xml does not exist
  TestSplitLogManager.testGetPreviousRecoveryMode:651 null

Tests in error: 
  TestImportExport.testImport94Table:224 ? FileNotFound File /home/jenkins/jenki...

Tests run: 2021, Failures: 2, Errors: 1, Skipped: 19
{code}

Applied.  Sorry it took a while to get in [~mantonov] Nice work.

Thanks for reviews and committing [~stack]! I'll keep an eye on the integ build.

FAILURE: Integrated in HBase-TRUNK #5533 (See [https://builds.apache.org/job/HBase-TRUNK/5533/])
HBASE-11462 MetaTableAccessor shouldn't use ZooKeeeper (Mikhail Antononv) (stack: rev 7d0f5eba2d9fc9dcc8c8900ced86560f7443257f)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMaster.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/MasterSnapshotVerifier.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransactionOnCluster.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterOperationsForRegionReplicas.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/MetaTableLocator.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableEventHandler.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/TestMetaTableAccessor.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFilesSplitRecovery.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/MasterFlushTableProcedureManager.java


{code}
Failed tests: 
  TestRestartCluster.testRetainAssignmentOnRestart:210 Values should be different. Actual: 1411154869597
{code}
Looks unrelated to me.

Any reason this can't be back ported to 1.0?

This looks ok for backport. It seems strange to have if meta do this else do this all over the place instead of a better abstraction (a region locator impl for meta and one for regular regions), but we can fix that in another issue. 

Patch needs rebase for branch-1.

Re-resolving. This was applied to master/branch-2 and got reopened for a backport to branch-1 that never happened.

