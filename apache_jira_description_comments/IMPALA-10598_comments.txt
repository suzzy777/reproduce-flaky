I think the reason that jenkins jobs don't fail is the cache directives are not 0. Maybe they are removed in your env somehow. In my env I can see:
{code:java}
$ hdfs cacheadmin -listDirectives -stats
Found 7 entries
 ID POOL       REPL EXPIRY  PATH                                             BYTES_NEEDED  BYTES_CACHED  FILES_NEEDED  FILES_CACHED
  1 testPool      1 never   /test-warehouse/tpch.nation                              2199          2199             1             1
  2 testPool      1 never   /test-warehouse/alltypestiny                                0             0             0             0
  3 testPool      1 never   /test-warehouse/alltypestiny/year=2009/month=2            115           115             1             1
  4 testPool      1 never   /test-warehouse/alltypestiny/year=2009/month=3            115           115             1             1
  5 testPool      1 never   /test-warehouse/alltypestiny/year=2009/month=4            115           115             1             1
  6 testPool      1 never   /test-warehouse/alltypestiny/year=2009/month=1            115           115             1             1
  7 testPool      1 never   /test-warehouse/cached_tbl_nopart                           0             0             0             0 {code}
They are initiated in [testdata/bin/create-load-data.sh|https://github.com/apache/impala/blob/b28da054f3595bb92873433211438306fc22fbc7/testdata/bin/create-load-data.sh#L287]:
{code:bash}
function cache-test-tables {
  echo CACHING  tpch.nation AND functional.alltypestiny
  # uncaching the tables first makes this operation idempotent.
  ${IMPALA_HOME}/bin/impala-shell.sh -i ${IMPALAD}\
    -q "alter table functional.alltypestiny set uncached"
  ${IMPALA_HOME}/bin/impala-shell.sh -i ${IMPALAD}\
    -q "alter table tpch.nation set uncached"
  ${IMPALA_HOME}/bin/impala-shell.sh -i ${IMPALAD}\
    -q "alter table tpch.nation set cached in 'testPool'"
  ${IMPALA_HOME}/bin/impala-shell.sh -i ${IMPALAD} -q\ 
    "alter table functional.alltypestiny set cached in 'testPool'"
}
{code}
Anyway, we should fix the test bug and not depend on non-zero entries.

Commit 5b27b7ca7232a17d2a099f8567553004248989f2 in impala's branch refs/heads/master from Vihang Karajgaonkar
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=5b27b7c ]

IMPALA-10598: Deflake test_cache_reload_validation

This patch deflakes the test test_cache_reload_validation in
test_hdfs_caching.py e2e test. The util method which the test relies on to
get the count of list of cache directives by parsing the output of command
"hdfs cacheadmin -listDirectives -stats" does not consider that the output
may contain trailing new lines or headers. Hence the test fails because the
expected number of cache directives does not match the number of lines
of the output.

The fix parses the line "Found <int> entries" in the output when available
and returns the count from that line. If the line is not found, it fallbacks
to the earlier implementation of using the number of lines.

Testing:
1. The test was failing for me when run individually. After the patch, I looped
the test 10 times without any errors.

Change-Id: I2d491e90af461d5db3575a5840958d17ca90901c
Reviewed-on: http://gerrit.cloudera.org:8080/17210
Reviewed-by: Vihang Karajgaonkar <vihang@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


