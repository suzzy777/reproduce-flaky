I'm giving it a quick test now, I'll report sometime tonight.

If precommit and all tests (well, with the usual caveats) pass, I'll check it in this weekend.

Here's what I have so far. I'll be out today so putting up this preliminary patch in case someone who, you know, like, understands ZK wants to take a glance.

There are two always-failing tests:

SaslZkACLProviderTest
TestConfigSetsAPIZkFailure

I "fixed" TestConfigSetsAPIZkFailure by the change to ZkTestServer, 
-      zooKeeperServer.shutdown();
+      zooKeeperServer.shutdown(true);

Why did I do that? Well, I looked at the ZooKeeper code for shutdown and saw that the entire code path that was erroring out with an NPE could be avoided by passing "true". IOW I made a random change that stopped the error without having a clue what the consequences are. I don't consider it a fix until I understand why the old code did not error out here, but at least it points to where to start looking.

If you think the above is a hint that I'd be grateful if someone who understands more about ZooKeeper and the ZkTestServer would chime in, you're right ;).

[~markrmiller@gmail.com][~gchanan] [~tflobbe][~anshum] you've touched this file in the past, any wisdom?

I'll look more tonight when I get back home.

I'm having two failures and have no idea where to start, so flying blind. Any clues?
 * SSLMigrationTest
 * SaslZkACLProvider

Of the two, only SaslZkACLProvider fails reliably, but here's a failing seed just in case:

 -Dtests.seed=64BB8764D5BC1EC3

And the stack trace is below. Pretty clearly auth isn't happening as it should, but I have no clue why. One thing I can say is that line 516 in SolrZkClient fails with this patch, and succeeds without it.
{code:java}
Object exists = exists(currentPath, watcher, retryOnConnLoss);{code}
No call is made to
{code:java}
SaslZkACLProvider{code}
methods with the patch, but methods there _are_ called without the patch.  {{SaslZkACLProvider}} is created in both cases. It's late and things are going fuzzy so I'm giving up for the night.
{code:java}
NOTE: reproduce with: ant test  -Dtestcase=SaslZkACLProviderTest -Dtests.method=testSaslZkACLProvider -Dtests.seed=64BB8764D5BC1EC3 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=ca-ES -Dtests.timezone=US/Mountain -Dtests.asserts=true -Dtests.file.encoding=UTF-8

org.apache.zookeeper.KeeperException$AuthFailedException: KeeperErrorCode = AuthFailed for /solr

	at __randomizedtesting.SeedInfo.seed([64BB8764D5BC1EC3:604FD1BC4CF8BDCD]:0)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:126)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1111)
	at org.apache.solr.common.cloud.SolrZkClient.lambda$exists$2(SolrZkClient.java:305)
	at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:60)
	at org.apache.solr.common.cloud.SolrZkClient.exists(SolrZkClient.java:305)
	at org.apache.solr.common.cloud.SolrZkClient.makePath(SolrZkClient.java:516)
	at org.apache.solr.common.cloud.SolrZkClient.makePath(SolrZkClient.java:419)
	at org.apache.solr.cloud.SaslZkACLProviderTest.setUp(SaslZkACLProviderTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1742)
	at com.car
{code}
 

 

 

 

[~erickerickson] - Do you see either of the following messages in the output for SaslZkACLProviderTest?
{code:java}
java.security.AccessControlException: access denied ("javax.security.auth.kerberos.ServicePermission" "zookeeper/localhost@EXAMPLE.COM" "initiate")
{code}
{code:java}
No server entry found for kerberos principal name zookeeper/localhost@EXAMPLE.COM    [junit4]   2> 24313 WARN  (NioProcessor-3) [    ] o.a.d.s.KERBEROS_LOG No server entry found for kerberos principal name zookeeper/localhost@EXAMPLE.COM
{code}
It looks like 127.0.0.1 is being replaced with localhost causing the Kerberos ticket to not match correctly. I checked the same seed on master and didn't see this problem. I applied the patch to upgrade to 3.4.13 and see this failure.

 

Not sure if we should "fix" this the way I did but here is how I got the test to pass:
1) Add the following to 
{code:java}
permission javax.security.auth.kerberos.ServicePermission "zookeeper/localhost@EXAMPLE.COM", "initiate";
permission javax.security.auth.kerberos.ServicePermission "zookeeper/localhost@EXAMPLE.COM", "accept";
{code}
2) In SaslZkACLProviderTest change zookeeper/127.0.0.1 to zookeeper/localhost

Looks like ZOOKEEPER-3100 could be related here since it is new from Zookeeper 3.4.13. Kafka looks like it had the same problem of localhost vs 127.0.0.1.

So the change in Zookeeper 3.4.13 definitely caused the change from 127.0.0.1 -> localhost. Since 127.0.0.1 resolves to localhost, the new InetSocketAddress created internally to the ZK client populates localhost for the getHostName() call. Previously the InetSocketAddress kept the existing 127.0.0.1 and getHostName() would return 127.0.0.1. ZOOKEEPER-1467 is related to the hostname part.

I would guess that Zookeeper 3.4.13 would break almost all things using SASL/Kerberos that use ip addresses (like 127.0.0.1) instead of hostnames. For almost all the Kerberos stuff I've done, we have relied on hostnames instead of IP addresses. I am looking to see if there is a way to avoid the DNS lookup for 127.0.0.1.

Is there a reason that this was setup with 127.0.0.1 originally? Any reason not to use localhost?

Doesn't look like there is a way to avoid the 127.0.0.1 -> localhost resolution currently. ZOOKEEPER-1467 will keep using the hostname for the SASL part of the connection. Switching to localhost instead of 127.0.01 is probably the best solution currently. (This assumes that all test machines have 127.0.0.1 resolving to localhost)

[~risdenk] Thanks a million for looking at this, it'd have taken me, well, quite a while to try to figure out.

I think many uses of 127.0.0.1 are just accidental. At least not conscious choices. And once it's in the code base it gets repeated.

And I'm sooooo glad I didn't try to shoehorn this into Solr 7.5. For instance, 'bin/solr zk -e cloud' doesn't work any more, we get "Could not connect to ZooKeeper localhost:2181 within 30000 ms". Who knows what else?

What worked for me for the one test was just changing {{127.0.0.1}} to {{localhost}} in both {{SaslZkACLProviderTest}} and {{ZkTestServer}}. 

I haven't run the rest of the test suite yet and I'll beast {{SSLMigrationTest}} to see what falls out.

All that said, this really calls into question how to proceed. I don't particularly care about changing the _tests_, but have concerns about how this affects people who upgrade. I'll solicit opinions on the dev list.

Again, many many thanks for helping out here, I wouldn't have known where to start looking.


Some additional info:
 On a quick scan, only two non-test files use {{127.0.0.1}}, ZkController and embedded/JettySolrRunner.

There are over 200 uses of {{127.0.0.1}} in test files.

On a quick scan of {{*.xml}} files, the DIH example uses {{127.0.0.1}}, but no other non-test xml configs do. A dozen or so test configuration configuration files use {{127.0.0.1}}.

I thought about how this could affect end users. I would bet there are very few people who are using ip addresses with embedded zookeeper with SASL/Kerberos. That would be a trifecta for sure and not best practice. Most of the time Kerberos requires DNS lookups (forward and reverse) to be setup correctly. Using IP addresses just doesn't work in many cases. So I think we should be ok with the ZK upgrade with SASL being small who should be affected by this change.

I'm surprised that "bin/solr zk -e cloud" is broken. That shouldn't be using SASL/Kerberos? 

{quote}bq. I'm surprised that "bin/solr zk -e cloud" is broken
{quote}

I haven't even started looking into why, I'll be AFK for a while now, will look later. The other bit of the message is: Error occurred while loading solr.xml from zookeeper...

[~risdenk] I'm back looking at this. I'm not sure where to add
{code:java}
permission javax.security.auth.kerberos.ServicePermission "zookeeper/localhost@EXAMPLE.COM", "initiate";
permission javax.security.auth.kerberos.ServicePermission "zookeeper/localhost@EXAMPLE.COM", "accept";
{code}

Understand I'm a total and complete Kerberos novice. I've @Ignored that test for now so I can get through the rest of the tests. I had a million lines or so of: 

1963190 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxnFactory Ignoring unexpected runtime exception
   [junit4]   2> java.lang.NullPointerException: null
   [junit4]   2> 1963190 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxnFactory Ignoring unexpected runtime exception
   [junit4]   2> java.lang.NullPointerException: null

Here's what I have so far. There were about 39 test failures to start, all but two required minimal effort so they pass. The result is in the patch I just attached. I haven't run the full test suite with the patch attached yet.

Two tests fail:

1> SaslZkACLProviderTest. I @Ignored it temporarily, I'll remove it momentarily locally.

2> TestMiniSolrCloudClusterSSLtestSslWithCheckPeerName fails

3> I'm taking the approach of only changing the minimal number of things to make tests pass. This still leaves quite a number of references to 127.0.0.1 in the code. I'm reluctant to just change _everything_, and there are a bunch. Comments?

I'll be looking at this over the next few days as I have some time to kill (it's finally raining here in the bay area), but I'll be flying pretty blind, anyone with any advice, please speak up ;).

[~erickerickson] - I can take a look this week on this. I think if you run the following it should point you where to add the two additional lines:
{code:java}
git grep -F "permission javax.security.auth.kerberos.ServicePermission" 
{code}
Changing the minimal number of things to makes tests pass sounds good to me. Only in some of the kerberos code should the localhost vs 127.0.0.1 distinction matter.

[~risdenk] Thanks, there even exists a solr-tests.policy file? I learn something new every day ;)

I've been playing whack-a-mole over the weekend, change things one place, run the full test suite and see what pops out the other.

the {code}bin/solr -e cloud{code} works now, I didn't do anything specifically to fix it. Maybe pilot error.



More tests passing with suggestions from [~risdenk]. Patch attached. The two that are of most interest now are:
{quote}TestSolrCloudWithHadoopAuthPlugin
 TestSolrCloudWithKerberosAlt
{quote}
 

I'll run a bunch of iterations over the full test suite overnight to see what else pops out. I'm playing a bit of "whack a mole" as when some tests get fixed, others seem to pop out....

BasicDistributedZkTest is still a problem too, but I'm not sure it's this change or the general flakiness of that test, likely the latter.

[~risdenk] I'm getting back to this now, do you have any insights on the  two problem tests mentioned above? Anyone else for that matter.... 
{quote}TestSolrCloudWithHadoopAuthPlugin
 TestSolrCloudWithKerberosAlt
{quote}
 

 

Sorry I haven't had a chance to look. $DayJob :) I'll try to look when I get a few minutes.

Taking a look and they don't seem to fail in my IDE but the failures reproduce from the command line. It looks like there might be some unrelated changes added to the patch that cause this. I am looking into it a bit further.

[~erickerickson] - I just uploaded a patch that passed all Solr tests. 

{code:java}
ant clean clean-jars jar-checksums compile
cd solr
ant test
{code}


It reverts some of the HTTP/localhost changes since those aren't necessary for this. 

Great thanks! I'll be able to look at this over the weekend....

 

 

Commit f690302e052f2fcad3117ef287296c7b740c1636 in lucene-solr's branch refs/heads/master from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f690302 ]

SOLR-12727: Upgrade ZooKeeper dependency to 3.4.13


Commit 54ca26abe92e17a1d56dbc53c9e98844f1994579 in lucene-solr's branch refs/heads/master from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=54ca26a ]

SOLR-12727: CHANGES.txt, updated ZooKeeper dependency


Commit a1793750e140bb8abfb901d933ac2c0ea628bdd4 in lucene-solr's branch refs/heads/branch_7x from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a179375 ]

SOLR-12727: Upgrade ZooKeeper dependency to 3.4.13

(cherry picked from commit f690302e052f2fcad3117ef287296c7b740c1636)


Commit 90c841ced237eb6da9e040de150fa1aaaecf8550 in lucene-solr's branch refs/heads/branch_7x from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=90c841c ]

SOLR-12727: CHANGES.txt, updated ZooKeeper dependency


Kevin did the heavy lifting, thanks!

The presence of this entry in /etc/hosts appears to make lots of tests fail: 
fe80::1%lo0     localhost

There are a couple of _very_ old ZK JIRAs mentioning this: 
https://issues.apache.org/jira/browse/ZOOKEEPER-676
https://issues.apache.org/jira/browse/ZOOKEEPER-1476

There are some hints on a quick Google search that this may be mac-specific.

Also, it's unclear why this entry is in the /etc/hosts file in the first place, it _might_ have been something put in by Parallels or some  such.

Or is this just bogus and will be handled by the

::1 localhost

entry?

Reopening so we have a record of the resolution, even if it's "you should remove that entry and rely on '::1 localhost' instead"

So far this appears to be a test-only issue....

[~erickerickson] - yes it is test only. ZkTestServer 127.0.0.1 -> localhost change looks to have been unnecessary from the above patch. Switching ZkTestServer getZkHost() and getZkAddress() back to 127.0.0.1 all tests pass with and without /etc/hosts changes. 

Commit 15b36299c49ab0fb933ffada6eed8b40d47844c1 in lucene-solr's branch refs/heads/master from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=15b3629 ]

SOLR-12727: Fix tests to work with 'interesting' entries in the hosts file like 'fe80::1%lo0 localhost'


Commit f7bd59e24395076f7b46b75ae452f3a9555d4e74 in lucene-solr's branch refs/heads/branch_7x from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f7bd59e ]

SOLR-12727: Fix tests to work with 'interesting' entries in the hosts file like 'fe80::1%lo0 localhost'

(cherry picked from commit 15b36299c49ab0fb933ffada6eed8b40d47844c1)


All tests pass now.

[~erickerickson] - Thanks!

There's a big uptick in SaslZkACLProviderTest failures from [~thetaphi]'s jenkins server (that i can't reproduce locally) lately that i think is caused by this ZK upgrade?

Here's an example of what a "good" run looks like on my laptop (hostname "tray")...

{noformat}
   [junit4] Started J0 PID(995@tray).
   [junit4] Suite: org.apache.solr.cloud.SaslZkACLProviderTest
   [junit4]   2> Creating dataDir: /home/hossman/lucene/alt_dev/solr/build/solr-core/test/J0/temp/solr.cloud.SaslZkACLProviderTest_B413507B747C128B-001/init-core-data-001
   [junit4]   2> 1846 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.a.s.SolrTestCaseJ4 Using PointFields (NUMERIC_POINTS_SYSPROP=true) w/NUMERIC_DOCVALUES_SYSPROP=true
   [junit4]   2> 1896 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.e.j.u.log Logging initialized @1929ms to org.eclipse.jetty.util.log.Slf4jLog
   [junit4]   2> 1904 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.a.s.SolrTestCaseJ4 Randomized ssl (false) and clientAuth (true) via: @org.apache.solr.util.RandomizeSSL(reason=, ssl=NaN, value=NaN, clientAuth=NaN)
   [junit4]   2> 1912 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.a.s.SolrTestCaseJ4 SecureRandom sanity checks: test.solr.allowed.securerandom=null & java.security.egd=file:/dev/./urandom
   [junit4]   2> 1930 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.SolrTestCaseJ4 ###Starting testSaslZkACLProvider
   [junit4]   2> 1931 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.SaslZkACLProviderTest ####SETUP_START testSaslZkACLProvider
   [junit4]   2> 1931 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.SaslZkACLProviderTest ZooKeeper dataDir:/home/hossman/lucene/alt_dev/solr/build/solr-core/test/J0/temp/solr.cloud.SaslZkACLProviderTest_B413507B747C128B-001/tempDir-002/zookeeper/server1/data
   [junit4]   2> 7348 WARN  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.d.s.c.DefaultDirectoryService You didn't change the admin password of directory service instance 'DefaultKrbServer'.  Please update the admin password as soon as possible to prevent a possible security breach.
   [junit4]   2> 7953 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer STARTING ZK TEST SERVER
   [junit4]   2> 7956 INFO  (ZkTestServer Run Thread) [    ] o.a.s.c.ZkTestServer client port:0.0.0.0/0.0.0.0:0
   [junit4]   2> 7956 INFO  (ZkTestServer Run Thread) [    ] o.a.s.c.ZkTestServer Starting server
   [junit4]   2> 8457 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer start zk server on port:59021
   [junit4]   2> 8462 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer parse host and port list: 127.0.0.1:59021
   [junit4]   2> 8463 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer connecting to 127.0.0.1 59021
   [junit4]   2> 8682 INFO  (zkConnectionManagerCallback-3-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8703 INFO  (zkConnectionManagerCallback-5-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8717 INFO  (zkConnectionManagerCallback-7-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8840 INFO  (zkConnectionManagerCallback-9-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8855 INFO  (zkConnectionManagerCallback-11-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8865 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.SaslZkACLProviderTest ####SETUP_END testSaslZkACLProvider
   [junit4]   2> 8870 INFO  (zkConnectionManagerCallback-13-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8943 INFO  (zkConnectionManagerCallback-15-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8963 INFO  (zkConnectionManagerCallback-17-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8974 INFO  (zkConnectionManagerCallback-19-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 8998 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer Shutting down ZkTestServer.
   [junit4]   2> 9002 WARN  (Thread-2) [    ] o.a.z.Login TGT renewal thread has been interrupted and will exit.
   [junit4]   2> 9008 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer parse host and port list: 127.0.0.1:59021
   [junit4]   2> 9008 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer connecting to 127.0.0.1 59021
   [junit4]   2> 9345 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.SolrTestCaseJ4 ###Ending testSaslZkACLProvider
{noformat}

Here's what a typical jenkins log from Uwe looks like (note the VM's hostname and how it pops up later in WARN/ERROR logs from ZK) ...

{noformat}
   [junit4] Started J0 PID(26641@serv1-vm3).
...
   [junit4] Suite: org.apache.solr.cloud.SaslZkACLProviderTest
   [junit4]   2> Creating dataDir: /export/home/jenkins/workspace/Lucene-Solr-master-Solaris/solr/build/solr-core/test/J0/temp/solr.cloud.SaslZkACLProviderTest_B413507B747C128B-001/init-core-data-001
   [junit4]   2> 2980 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.a.s.SolrTestCaseJ4 Using PointFields (NUMERIC_POINTS_SYSPROP=true) w/NUMERIC_DOCVALUES_SYSPROP=true
   [junit4]   2> 3069 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.e.j.u.log Logging initialized @3155ms to org.eclipse.jetty.util.log.Slf4jLog
   [junit4]   2> 3091 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.a.s.SolrTestCaseJ4 Randomized ssl (false) and clientAuth (true) via: @org.apache.solr.util.RandomizeSSL(reason=, value=NaN
, ssl=NaN, clientAuth=NaN)
   [junit4]   2> 3105 INFO  (SUITE-SaslZkACLProviderTest-seed#[B413507B747C128B]-worker) [    ] o.a.s.SolrTestCaseJ4 SecureRandom sanity checks: test.solr.allowed.securerandom=null & java.security.egd=file:/dev/./urandom
   [junit4]   2> 3314 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.SolrTestCaseJ4 ###Starting testSaslZkACLProvider
   [junit4]   2> 3314 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.SaslZkACLProviderTest ####SETUP_START testSaslZkACLProvider
   [junit4]   2> 3316 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.SaslZkACLProviderTest ZooKeeper dataDir:/export/home/jenkins/workspace/Lucene-Solr-master-Solaris/solr
/build/solr-core/test/J0/temp/solr.cloud.SaslZkACLProviderTest_B413507B747C128B-001/tempDir-002/zookeeper/server1/data
   [junit4]   2> 10586 WARN  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.d.s.c.DefaultDirectoryService You didn't change the admin password of directory service instance 'Default
KrbServer'.  Please update the admin password as soon as possible to prevent a possible security breach.
   [junit4]   2> 11518 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer STARTING ZK TEST SERVER
   [junit4]   2> 11521 INFO  (ZkTestServer Run Thread) [    ] o.a.s.c.ZkTestServer client port:0.0.0.0/0.0.0.0:0
   [junit4]   2> 11522 INFO  (ZkTestServer Run Thread) [    ] o.a.s.c.ZkTestServer Starting server
   [junit4]   2> 12130 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer start zk server on port:60381
   [junit4]   2> 12133 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer parse host and port list: 127.0.0.1:60381
   [junit4]   2> 12133 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer connecting to 127.0.0.1 60381
   [junit4]   2> 12326 INFO  (zkConnectionManagerCallback-3-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 12347 INFO  (zkConnectionManagerCallback-5-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 12357 INFO  (zkConnectionManagerCallback-7-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient has connected
   [junit4]   2> 12507 WARN  (NioProcessor-3) [    ] o.a.d.s.p.s.k.StoreUtils No server entry found for kerberos principal name zookeeper/serv1-vm3@EXAMPLE.COM
   [junit4]   2> 12507 WARN  (NioProcessor-3) [    ] o.a.d.s.KERBEROS_LOG No server entry found for kerberos principal name zookeeper/serv1-vm3@EXAMPLE.COM
   [junit4]   2> 12508 WARN  (NioProcessor-3) [    ] o.a.d.s.k.p.KerberosProtocolHandler Server not found in Kerberos database (7)
   [junit4]   2> 12508 WARN  (NioProcessor-3) [    ] o.a.d.s.KERBEROS_LOG Server not found in Kerberos database (7)
   [junit4]   2> 12511 ERROR (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]-SendThread(serv1-vm3:60381)) [    ] o.a.z.c.ZooKeeperSaslClient An error: (java.security.PrivilegedActionException: j
avax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - Server not found in Kerberos database)]) occurred
 when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
   [junit4]   2> 12511 ERROR (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]-SendThread(serv1-vm3:60381)) [    ] o.a.z.ClientCnxn SASL authentication with Zookeeper Quorum member failed: javax.s
ecurity.sasl.SaslException: An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not f
ound in Kerberos database (7) - Server not found in Kerberos database)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
   [junit4]   2> 12512 WARN  (zkConnectionManagerCallback-3-thread-1) [    ] o.a.s.c.c.ConnectionManager Watcher org.apache.solr.common.cloud.ConnectionManager@50d68d5e name: ZooKeeperConnection Watcher:127.0.0.1:60381 g
ot event WatchedEvent state:AuthFailed type:None path:null path: null type: None
   [junit4]   2> 12512 WARN  (zkConnectionManagerCallback-3-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient received AuthFailed
   [junit4]   2> 12522 WARN  (NioProcessor-1) [    ] o.a.d.s.p.s.k.StoreUtils No server entry found for kerberos principal name zookeeper/serv1-vm3@EXAMPLE.COM
   [junit4]   2> 12522 WARN  (NioProcessor-1) [    ] o.a.d.s.KERBEROS_LOG No server entry found for kerberos principal name zookeeper/serv1-vm3@EXAMPLE.COM
   [junit4]   2> 12522 WARN  (NioProcessor-1) [    ] o.a.d.s.k.p.KerberosProtocolHandler Server not found in Kerberos database (7)
   [junit4]   2> 12527 WARN  (NioProcessor-1) [    ] o.a.d.s.KERBEROS_LOG Server not found in Kerberos database (7)
   [junit4]   2> 12529 ERROR (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]-SendThread(serv1-vm3:60381)) [    ] o.a.z.c.ZooKeeperSaslClient An error: (java.security.PrivilegedActionException: j
avax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - Server not found in Kerberos database)]) occurred
 when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
   [junit4]   2> 12529 ERROR (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]-SendThread(serv1-vm3:60381)) [    ] o.a.z.ClientCnxn SASL authentication with Zookeeper Quorum member failed: javax.s
ecurity.sasl.SaslException: An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not f
ound in Kerberos database (7) - Server not found in Kerberos database)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
   [junit4]   2> 12531 WARN  (zkConnectionManagerCallback-7-thread-1) [    ] o.a.s.c.c.ConnectionManager Watcher org.apache.solr.common.cloud.ConnectionManager@d957d47 name: ZooKeeperConnection Watcher:127.0.0.1:60381 go
t event WatchedEvent state:AuthFailed type:None path:null path: null type: None
   [junit4]   2> 12531 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxn Unable to read additional data from client sessionid 0x1009d198b040002, likely client has closed socket
   [junit4]   2> 12531 WARN  (zkConnectionManagerCallback-7-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient received AuthFailed
   [junit4]   2> 12541 WARN  (NioProcessor-2) [    ] o.a.d.s.p.s.k.StoreUtils No server entry found for kerberos principal name zookeeper/serv1-vm3@EXAMPLE.COM
   [junit4]   2> 12542 WARN  (NioProcessor-2) [    ] o.a.d.s.KERBEROS_LOG No server entry found for kerberos principal name zookeeper/serv1-vm3@EXAMPLE.COM
   [junit4]   2> 12542 WARN  (NioProcessor-2) [    ] o.a.d.s.k.p.KerberosProtocolHandler Server not found in Kerberos database (7)
   [junit4]   2> 12542 WARN  (NioProcessor-2) [    ] o.a.d.s.KERBEROS_LOG Server not found in Kerberos database (7)
   [junit4]   2> 12543 ERROR (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]-SendThread(serv1-vm3:60381)) [    ] o.a.z.c.ZooKeeperSaslClient An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - Server not found in Kerberos database)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
   [junit4]   2> 12543 ERROR (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]-SendThread(serv1-vm3:60381)) [    ] o.a.z.ClientCnxn SASL authentication with Zookeeper Quorum member failed: javax.security.sasl.SaslException: An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - Server not found in Kerberos database)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
   [junit4]   2> 12545 WARN  (zkConnectionManagerCallback-5-thread-1) [    ] o.a.s.c.c.ConnectionManager Watcher org.apache.solr.common.cloud.ConnectionManager@3de4e07d name: ZooKeeperConnection Watcher:127.0.0.1:60381/solr got event WatchedEvent state:AuthFailed type:None path:null path: null type: None
   [junit4]   2> 12545 WARN  (zkConnectionManagerCallback-5-thread-1) [    ] o.a.s.c.c.ConnectionManager zkClient received AuthFailed
   [junit4]   2> 12649 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer Shutting down ZkTestServer.
   [junit4]   2> 12653 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxnFactory Ignoring unexpected runtime exception
   [junit4]   2> java.nio.channels.CancelledKeyException: null
   [junit4]   2>        at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73) ~[?:1.8.0_191]
   [junit4]   2>        at sun.nio.ch.SelectionKeyImpl.readyOps(SelectionKeyImpl.java:87) ~[?:1.8.0_191]
   [junit4]   2>        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:205) [zookeeper-3.4.13.jar:3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03]
   [junit4]   2>        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_191]
   [junit4]   2> 12672 WARN  (Thread-2) [    ] o.a.z.Login TGT renewal thread has been interrupted and will exit.
   [junit4]   2> 12676 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer parse host and port list: 127.0.0.1:60381
   [junit4]   2> 12676 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.c.ZkTestServer connecting to 127.0.0.1 60381
   [junit4]   2> 13021 INFO  (TEST-SaslZkACLProviderTest.testSaslZkACLProvider-seed#[B413507B747C128B]) [    ] o.a.s.SolrTestCaseJ4 ###Ending testSaslZkACLProvider
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=SaslZkACLProviderTest -Dtests.method=testSaslZkACLProvider -Dtests.seed=B413507B747C128B -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=ms -Dtests.timezone=Etc/GMT-14 -Dtests.asserts=true -Dtests.file.encoding=US-ASCII
   [junit4] ERROR   9.76s J0 | SaslZkACLProviderTest.testSaslZkACLProvider <<<
   [junit4]    > Throwable #1: org.apache.zookeeper.KeeperException$AuthFailedException: KeeperErrorCode = AuthFailed for /solr
   [junit4]    >        at __randomizedtesting.SeedInfo.seed([B413507B747C128B:B0E706A3ED38B185]:0)
   [junit4]    >        at org.apache.zookeeper.KeeperException.create(KeeperException.java:126)
   [junit4]    >        at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
   [junit4]    >        at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:792)
   [junit4]    >        at org.apache.solr.common.cloud.SolrZkClient.lambda$makePath$8(SolrZkClient.java:545)
   [junit4]    >        at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:71)
   [junit4]    >        at org.apache.solr.common.cloud.SolrZkClient.makePath(SolrZkClient.java:544)
   [junit4]    >        at org.apache.solr.common.cloud.SolrZkClient.makePath(SolrZkClient.java:436)
   [junit4]    >        at org.apache.solr.cloud.SaslZkACLProviderTest.setUp(SaslZkACLProviderTest.java:83)
   [junit4]    >        at java.lang.Thread.run(Thread.java:748)
{noformat}

...it seems like something changed in how the ZK client/server are being initialized that causes it to pick up the hostname of the server? maybe this is another situation where the {{/etc/hosts}} of the machine running the tests can affect things in ZK w/o us realizing/intending in the solr tests?

On my machine...
{noformat}
hossman@tray:~/lucene/dev/solr/core [master] $ cat /etc/hostname 
tray
hossman@tray:~/lucene/dev/solr/core [master] $ cat /etc/hosts
127.0.0.1	localhost
127.0.1.1	tray

192.168.1.150   scanner # scanner / printer

192.168.1.222   brick
192.168.1.224   otter

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
{noformat}

[~thetaphi]: can you share what the hosts/hostname files look like on the VMs where your jenkins machines run the tests?

And, Uwe, what's in the hosts file? At least are there these two entries?

127.0.0.1	localhost
::1         localhost

Hi,

On main Jenkins machine:
{noformat}
root@serv1 ~ # cat /etc/hosts
### Hetzner Online GmbH installimage
# nameserver config
# IPv4
127.0.0.1 localhost.localdomain localhost
88.99.242.108  serv1
#
# IPv6
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
2a01:4f8:10b:2ab::2  ip6-serv1 ip6serv1
{noformat}

(that's the default of Ubuntu). Keep in mind that Ubuntu uses ip6-localhost for ip6. All Jenkins machines use IPv6 as full featured internet connection, IPv4 is only "backup".

Here is solaris:

{noformat}
jenkins@serv1-vm3:~$ cat /etc/hosts
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Internet host table
#
::1 serv1-vm3 localhost
127.0.0.1 serv1-vm3 localhost loghost
{noformat}

(standard on solaris).

Commit 15b36299c49ab0fb933ffada6eed8b40d47844c1 in lucene-solr's branch refs/heads/jira/http2 from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=15b3629 ]

SOLR-12727: Fix tests to work with 'interesting' entries in the hosts file like 'fe80::1%lo0 localhost'


Thanks [~thetaphi], I did be able to reproduce the problem by adding your entry to my /etc/hosts.

Commit 3be5b59907acc3049121e980bee71df01185d40e in lucene-solr's branch refs/heads/master from [~cp.erickson@gmail.com]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3be5b59 ]

SOLR-12727: Added Dat to the credits, partly as a test of whether infra has fixed a commit attribution error


Can this be resolved again?

Since this is a test-only issue, or at least a configuration issue that can be addressed let's close this ticket and address on the test in SOLR-13075

Since this is a test-only issue, or at least a configuration issue that can be addressed let's close this ticket and address on the test in SOLR-13075

