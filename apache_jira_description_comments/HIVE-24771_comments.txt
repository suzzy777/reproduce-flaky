attached jstack-s from the 3 containers; and a hive.log

there is an interesting exception in the logs:
{code}
2021-02-10T03:26:01,179 DEBUG [data-plane-kafka-network-thread-0-ListenerName(PLAINTEXT)-PLAINTEXT-0] network.Processor: Processor 0 listening to new connection from /127.0.0.1:38676
2021-02-10T03:26:01,178  WARN [main] utils.AppInfoParser: Error registering AppInfo mbean
javax.management.InstanceAlreadyExistsException: kafka.producer:type=app-info,id=attempt_m_0001_0
        at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[?:1.8.0_262]
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[?:1.8.0_262]
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[?:1.8.0_262]
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[?:1.8.0_262]
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[?:1.8.0_262]
        at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[?:1.8.0_262]
        at org.apache.kafka.common.utils.AppInfoParser.registerAppInfo(AppInfoParser.java:64) [kafka-clients-2.5.0.jar:?]
        at org.apache.kafka.clients.producer.KafkaProducer.<init>(KafkaProducer.java:428) [kafka-clients-2.5.0.jar:?]
        at org.apache.kafka.clients.producer.KafkaProducer.<init>(KafkaProducer.java:298) [kafka-clients-2.5.0.jar:?]
        at org.apache.hadoop.hive.kafka.HiveKafkaProducer.<init>(HiveKafkaProducer.java:67) [classes/:?]
        at org.apache.hadoop.hive.kafka.TransactionalKafkaWriter.<init>(TransactionalKafkaWriter.java:103) [classes/:?]
{code}



Test re-enabled in https://github.com/apache/hive/commit/cd9b42d36d4f24bc6d37ccb8ffad2cadb745483f. Thanks for the PR [~kokila19] and [~akshatm], [~aturoczy] for the reviews.

