Happened again: [https://jenkins.confluent.io/job/apache-kafka-test/job/2.2/36/]
{quote}java.lang.AssertionError: expected:<100> but was:<0> at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:645) at org.junit.Assert.assertEquals(Assert.java:631) at kafka.api.ConsumerBounceTest.receiveExactRecords(ConsumerBounceTest.scala:551) at kafka.api.ConsumerBounceTest.$anonfun$testConsumerReceivesFatalExceptionWhenGroupPassesMaxSize$2(ConsumerBounceTest.scala:409) at kafka.api.ConsumerBounceTest.$anonfun$testConsumerReceivesFatalExceptionWhenGroupPassesMaxSize$2$adapted(ConsumerBounceTest.scala:408) at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62) at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55) at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49) at kafka.api.ConsumerBounceTest.testConsumerReceivesFatalExceptionWhenGroupPassesMaxSize(ConsumerBounceTest.scala:408){quote}

One more: [https://builds.apache.org/blue/organizations/jenkins/kafka-2.2-jdk8/detail/kafka-2.2-jdk8/44/]

Removed Fix Version 2.2.1 as this issue is not blocking that release.

Since this is not a blocker issue, as part of the 2.6.0 release process I'm changing the fix version to `2.6.1` and `2.7.0`. If this is incorrect, please respond and discuss on the "[DISCUSS] Apache Kafka 2.6.0 release" discussion mailing list thread.

Since this is not a blocker, there is no active PRÂ  I'm clearing the "fix version" field as part of the 2.7.0 release process.

Failed again, with a different error this time. Seems to be from the test setup and not the test itself:

Stacktrace
org.apache.kafka.common.KafkaException: Socket server failed to bind to localhost:33521: Address already in use.
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:667)
	at kafka.network.Acceptor.<init>(SocketServer.scala:560)
	at kafka.network.SocketServer.createAcceptor(SocketServer.scala:288)
	at kafka.network.SocketServer.$anonfun$createDataPlaneAcceptorsAndProcessors$1(SocketServer.scala:261)
	at kafka.network.SocketServer.$anonfun$createDataPlaneAcceptorsAndProcessors$1$adapted(SocketServer.scala:259)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.network.SocketServer.createDataPlaneAcceptorsAndProcessors(SocketServer.scala:259)
	at kafka.network.SocketServer.startup(SocketServer.scala:131)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:290)
	at kafka.utils.TestUtils$.createServer(TestUtils.scala:166)
	at kafka.integration.KafkaServerTestHarness.$anonfun$setUp$1(KafkaServerTestHarness.scala:107)
	at scala.collection.immutable.Vector.foreach(Vector.scala:1856)
	at kafka.integration.KafkaServerTestHarness.setUp(KafkaServerTestHarness.scala:102)
	at kafka.api.IntegrationTestHarness.doSetup(IntegrationTestHarness.scala:93)
	at kafka.api.IntegrationTestHarness.setUp(IntegrationTestHarness.scala:84)

https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-10608/2/testReport/junit/kafka.api/ConsumerBounceTest/Build___JDK_11_and_Scala_2_13___testConsumerReceivesFatalExceptionWhenGroupPassesMaxSize__/

