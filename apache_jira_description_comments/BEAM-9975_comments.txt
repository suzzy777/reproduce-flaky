In BEAM-9907 the underlying issue was that PipelineOptions picked up sys.argv, which was the argv for the test framework, not Beam. I don't see any clear places where we could be creating PipelineOption that read sys.argv in these PortableRunnerTest methods.

The error message makes it impossible to tell which option is actually the problem. I'll try submitting a patch to the protobuf formatter. In the mean time, we could consider catching the error and printing the offending options.

Could we add a log error before the raise and log the value instead of catching the error?

I agree with Kyle, unless we add more logging, it will be hard to find the root cause.

> Could we add a log error before the raise and log the value instead of catching the error?

The error is thrown in protobuf code.

Got an [error log|https://builds.apache.org/job/beam_PreCommit_Python_Cron/2753/testReport/junit/apache_beam.runners.portability.portable_runner_test/PortableRunnerTest/test_read/]:
{code}
ERROR:root:Failed to parse dict {'beam:option:streaming:v1': False, 'beam:option:beam_services:v1': {}, 'beam:option:type_check_strictness:v1': 'DEFAULT_TO_ANY', 'beam:option:pipeline_type_check:v1': True, 'beam:option:runtime_type_check:v1': False, 'beam:option:direct_runner_use_stacked_bundle:v1': True, 'beam:option:direct_runner_bundle_repeat:v1': '0', 'beam:option:direct_num_workers:v1': '1', 'beam:option:direct_running_mode:v1': 'in_memory', 'beam:option:dataflow_endpoint:v1': 'https://dataflow.googleapis.com', 'beam:option:job_name:v1': 'test_read_1589482267.7994738', 'beam:option:no_auth:v1': False, 'beam:option:update:v1': False, 'beam:option:enable_streaming_engine:v1': False, 'beam:option:hdfs_full_urls:v1': False, 'beam:option:experiments:v1': ['state_cache_size=100', 'data_buffer_time_limit_ms=1000', 'beam_fn_api'], 'beam:option:profile_cpu:v1': False, 'beam:option:profile_memory:v1': False, 'beam:option:profile_sample_rate:v1': 1.0, 'beam:option:save_main_session:v1': False, 'beam:option:sdk_location:v1': 'container', 'beam:option:job_endpoint:v1': 'localhost:35763', 'beam:option:job_server_timeout:v1': '60', 'beam:option:environment_type:v1': 'beam:env:embedded_python:v1', 'beam:option:sdk_worker_parallelism:v1': '1', 'beam:option:environment_cache_millis:v1': '0', 'beam:option:job_port:v1': '0', 'beam:option:artifact_port:v1': '0', 'beam:option:expansion_port:v1': '0', 'beam:option:flink_master:v1': '[auto]', 'beam:option:flink_version:v1': '1.10', 'beam:option:flink_submit_uber_jar:v1': False, 'beam:option:spark_master_url:v1': 'local[4]', 'beam:option:spark_submit_uber_jar:v1': False, 'beam:option:dry_run:v1': False, 'beam:option:style:v1': 'scrambled', 'beam:option:influx_hostname:v1': 'http://localhost:8086', 'beam:option:timeout_ms:v1': '0', 'beam:option:mock_flag:v1': False, 'beam:option:fake_flag:v1': False, 'beam:option:m_flag:v1': False, 'beam:option:male:v1': False, 'beam:option:redefined_flag:v1': False, 'beam:option:vpt_vp_arg13:v1': <apache_beam.options.value_provider.RuntimeValueProvider object at 0x7f5f8bf73cf8>, 'beam:option:vpt_vp_arg14:v1': <apache_beam.options.value_provider.RuntimeValueProvider object at 0x7f5f8bf73668>}
{code}

The RuntimeValueProvider instances are probably the issue

vpt_vp_arg13 and vpt_vp_arg14 are from [another test|https://github.com/apache/beam/blob/b91560cc354da471e3de502aad78dd059997a3d0/sdks/python/apache_beam/options/value_provider_test.py#L187]. It looks like something isn't being cleaned up properly between test runs.

(Also  I wonder if we need to resolve ValueProvider instances when converting pipeline options to proto?)

Note that log is from PortableRunnerTest.test_read

It looks like there are (at least) two problems here:
- get_all_options relies on [__subclasses__|https://github.com/apache/beam/blob/5d00ccba5b905584f07c1b0275841113d4921a8c/sdks/python/apache_beam/options/pipeline_options.py#L283] to find every PipelineOptions subclass, which finds all the [subclasses that have had their definition executed|https://stackoverflow.com/questions/3862310/how-to-find-all-the-subclasses-of-a-class-given-its-name]. It seems when running tests it's possible for this to pull in definitions from previously executed tests. I tried to repro this locally by running two tests with pytest and I couldn't do it. I'm not sure what's different on jenkins.
- I'm pretty sure we should check for instances of ValueProvider and call get() before trying to convert to a proto struct.


Thank you Brian. 
- Solving the subclass problem is probably a larger question. If we drop in the current mechanism of options discovery, we will break users and need to find a less fragile way of registering known pipeline options. (/cc [~tvalentyn] and [~robertwb] on this one.)
- Encoding valueproviders by calling get and using their value instead should be safe. As long value providers have a value, it is fine to use it in place of the valueprovider itself.

Thanks for analysis, [~bhulette]. I have seen  BEAM-10006 in the past, and IIRC my conclusion was that while it may cause confusion in test logs, it should be benign. It sounds like BEAM-10007  needs to be fixed regardless of BEAM-10006.

This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

[~tvalentyn] - Do we have anyways of reducing the flakiness related to this? Perhaps even with temporarily disabling tests. Precommit tests are flaking frequently with this issue.

As a hack we can use a tenacity decorator to rerun PortableRunner(FnApirunner?) tests that are affected by incorrect ValueProvider parsing.


As a hack we can use a tenacity decorator to rerun
PortableRunner(FnApirunner?) tests that are affected by
incorrect ValueProvider parsing.




Should be resolved by the fix for BEAM-10007, please re-open if you see this again.

