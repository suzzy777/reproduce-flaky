Based on the profile, it seems the stats on one of the table has corrupted stats:

{noformat}
E   WARNING: The following tables have potentially corrupt table statistics.
E   Drop and re-compute statistics to resolve this problem.
E   functional.alltypes
{noformat}

Consequently, the logic for disabling codegen didn't get run at all:
{noformat}

  private void checkForDisableCodegen(PlanNode distributedPlan) {
    MaxRowsProcessedVisitor visitor = new MaxRowsProcessedVisitor();
    distributedPlan.accept(visitor);
    if (!visitor.valid()) return; <<----
    // This heuristic threshold tries to determine if the per-node codegen time will
    // reduce per-node execution time enough to justify the cost of codegen. Per-node
    // execution time is correlated with the number of rows flowing through the plan.
    if (visitor.getMaxRowsProcessedPerNode()
        < ctx_.getQueryOptions().getDisable_codegen_rows_threshold()) {
      ctx_.getQueryCtx().disable_codegen_hint = true;
    }
  }
{noformat}

This is mostly due to some flakiness in stat computation or data loading. [~anuragmantri], do you happen to have the log of the entire run somewhere ?

Seems to be a bad data load, like IMPALA-8730

