Hi [~daijy], can you please take a look?

[~szita] and [~daijy]:   I also found that TestLoad#testCommaSeparatedString2 and TestLoad#testGlobChars sometimes fail both in trunk and spark branch jenkins.  This troubles me sometimes because all unit tests pass except these two thus the jenkins result fail(actually no regression unit test failures)

From [~szita]'s comment, it seems that the problem is because the working directory is set as hdfs:/tmp/ and TestLoad tries to load all files matching "t?s*,test". If hadoop system generates a file naming "t:2sTest.txt"  in hdfs:/tmp, hdfs:/tmp/t:2sTest.txt will be loaded and URISyntaxException is thrown out.  In the patch, set the working directory as /tmp/usr/pig to avoid to load hdfs:/tmp/t:2sTest.txt.



to avoid occasional failure,  a unique folder name would be better. 
{code}
WORKING_DIR = "/tmp/test" +  java.util.UUID.randomUUID() ;
{code}

I agree [~kexianda], thanks for the tip. See revised patch PIG-5025.1.patch

A little more detail what's happening under the hood:
When Pig asks HDFS to get files by pattern HDFS will check ALL the filenames in the directory. This means that anything containing colon will break this mechanism. Doesn't even have to match the requested pattern, just be in the same dir.
I guess the pattern matching functionality (see org.apache.hadoop.fs.Globber.glob() ) is only activated if we supply patterns - and that's true for these 2 test cases only in TestLoad.java

Can you use the Util.getTestDirectory method instead of /tmp which puts the files under build directory which is guaranteed to be cleaned up before test runs. Refer TestAccumulator.

Makes sense, patch revised: PIG-5025.2.patch

[~rohini] do you think this is ready for commit now?

Hi [~rohini], can you please help me submitting this patch?

[~daijy], [~rohini] can either of you please commit this?
We just had a recent build failure ( https://builds.apache.org/job/Pig-trunk/1954/testReport ) - looks like we are indeed in need of this patch.


Sorry. Gmail has been filtering all the "xxxx mentioned you" mails from jira into Promotions folder and I missed your earlier comments asking me to review. 

Few more comments:
   1) Paths.get(Util.getTestDirectory(TestLoad.class)).toAbsolutePath().toString(); 
  Can you add Util.getTestAbsoluteDirectory() method instead? You will also have to handle Windows OS in that method by replacing \\ with /. For hdfs modes, you will also have to get rid of :  in the path. Refer Util.generateURI(). So you will need two paths - one for local mode (with colon) and one for hdfs mode (without colon). [~daijy], correct me if I am wrong.
{code}
   2) You will have to delete the working directory in oneTimeTearDown() @AfterClass method.


Actually I think we should go with [^PIG-5025.1.patch].
I checked this test today with Windows and it was actually passing without any of these touches (so using /tmp). It seems like this test doesn't even put anything into the given working directory on the local FS and the dir doesn't even have to exist.
Most tests merely just check if the supplied path matches the one found in the Load operator after creating the query plan (see checkLoadPath)
Those that do write and read files (see those calling testLoadingMultipleFiles) only do that in HDFS mode and they clean up after their work too. 

So the only problem is the case when it exists and contains a file with : in its name

[~rohini], [~daijy] any thoughts?

bq. Actually I think we should go with PIG-5025.1.patch.
  Sounds good. 

Can you just revert changes to where you have used WORKING_DIR for usr/pig/a,usr/pig/b and /tmp/usr/pig/a,/tmp/usr/pig/b? /tmp/usr paths can be left as is as they will not be affected. usr/pig/a,usr/pig/b are relative paths and better to leave them as is for relative paths to be tested. If you want you can make it a,usr/pig/b i.e have one relative path at the top level and one with subfolders.

Thanks for reviewing [~rohini] I fixed the relative path testing in my new patch: [^PIG-5025.3.patch]

+1. Committed to trunk. Thanks [~szita] for fixing this.

