Commit 5afd6115e39438e89ef5ee9ce21622a39e44abfe in geode's branch refs/heads/develop from Juan José Ramos
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=5afd611 ]

GEODE-6806: Ignore LIMIT in intermediate steps (#3629)

When joining multiple regions with indexes, only apply the LIMIT
clause in intermediate execution steps if the proper flag has been set
in the query context.

- Fixed minor warnings.
- Replaced `junit.Assert` by `assertj`.
- Added tests to validate query results of multiple joins.

Fixed in [5afd6115e39438e89ef5ee9ce21622a39e44abfe|https://github.com/apache/geode/commit/5afd6115e39438e89ef5ee9ce21622a39e44abfe].

Commit 5afd6115e39438e89ef5ee9ce21622a39e44abfe in geode's branch refs/heads/feature/GEODE-6770 from Juan José Ramos
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=5afd611 ]

GEODE-6806: Ignore LIMIT in intermediate steps (#3629)

When joining multiple regions with indexes, only apply the LIMIT
clause in intermediate execution steps if the proper flag has been set
in the query context.

- Fixed minor warnings.
- Replaced `junit.Assert` by `assertj`.
- Added tests to validate query results of multiple joins.

The new test added seems to be [flaky|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/WindowsCoreIntegrationTestOpenJDK8/builds/13] and shows that the changes didn't completely fix the issue, only reduced the likely of it happening.


Discard my last comment, the changes actually fixed the issue just fine. The failures in CI are caused by the flaky test that I've introduced when developing the fix: sometimes the query is executed before the index maintenance has finished and, as such, some entries are not included into the result. Will open a new JIRA to address that problem.

