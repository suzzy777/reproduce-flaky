Here's the source file in it's entirety.

Here's the source file for OSMXBean.java. This would reside in the src/main/java/org/apache/hadoop/hbase/util directory. 

Hi,
You may want to put this file under hbase-server/src/main/java/org/apache/hadoop/hbase/util and produce a patch for trunk.

Thanks

Patch looks good.
{code}
+ */
+public class OSMXBean
{code}
Please add annotation (audience and stability) for the new class.
{code}
+    }
+    catch(Exception e) {
{code}
Please place catch on the same line as preceding }.
{code}
+      LOG.warn("Not able to load class or method for com.sun.managment.UnixOperatingSystemMXBean.", e);
{code}
Line length should be no longer than 100 characters.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548955/OSMXBean_HBASE_6965-trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 81 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.backup.example.TestZooKeeperTableArchiveClient
                  org.apache.hadoop.hbase.master.TestSplitLogManager

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3045//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3045//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3045//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3045//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3045//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3045//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3045//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548960/pom_HBASE-6965.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 81 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestSplitLogManager

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3046//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3046//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3046//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3046//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3046//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3046//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3046//console

This message is automatically generated.

Can you combine the two patches into one ?

Thanks

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12549204/HBASE-6965.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 82 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.catalog.TestMetaReaderEditor

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3053//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3053//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3053//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3053//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3053//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3053//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3053//console

This message is automatically generated.

As suggested, I have combined the two patches into one. I ran above core tests with multiple JDKs before and after submitting the patch and have been unable to recreaet the problems in above builds. I understand that the problem reported in above pre-commit build is in the hbase-server area, whereas the patch above applies to the hbase-common module. Can someone suggest next steps on how to resolve this issue?

Hi Kumar,

The issue above is very unlikely to be caused by your patch. "precommit" is an environment where all tests are executed before being integrated. But some tests are, unfortunately, flaky. It's likely to be the cause here.  The next step for your patch is to be reviewed and committed to trunk. Ted reviewed it already, so if he's ok he will commit it. If he does not look at it within two days I will have a look at it myself (or another committer will take the lead in between). Thanks for your contribution :-)

{code}
+ * It will decide to use the sun api or its own implementation
{code}
I think it's better to replace sun with Oracle.
{code}
+public class OSMXBean
{code}
Please add annotation for audience and stability for the above class.
{code}
+   * Check if the OS is unix. If using the IBM java runtime, this
+   * will only work for linux.
{code}
Do you need to mention IBM in the above javadoc ?
{code}
+  public boolean getUnix() {
{code}
Rename method to isUnix().
{code}
+  private Long getOSUnixMXBeanMethod (String mBeanMethodName)
{code}
Rename above method runUnixMXBeanMethod().


Ted and nkeywal - Thanks for your comments and patience working with me on this Jira. 

Ted, I'm working on addressing your concerns raised above. I do have one question:
Not sure what you mean by "Please add annotation for audience and stability for the above class."

I think by audience you mean when this class gets invoked? I am not clear about what you mean by stability.
If you could point me to some examples in the hbase code that would be great.


I looked at the other classes in the util sub-dir and I now understand what is meant by Audience and stability. Please ignore my earlier comment.
Thanks

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12549540/HBASE-6965.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 82 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3066//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3066//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3066//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3066//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3066//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3066//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3066//console

This message is automatically generated.

Latest patch looks good.

@N:
Do you want to take a look ?

Submitting patch for the 0.94.x release. 
Differences from trunk patch:

1. Path names for OSMXBean.java are different.
2. No changes were required for pom.xml

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12549565/OSMXBean_HBASE-6965-0.94.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 82 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3068//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3068//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3068//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3068//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3068//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3068//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3068//console

This message is automatically generated.

Integrated to trunk.

Thanks for the patch, Kumar.

@Lars:
Do you think this should go into 0.94 as well ?

Integrated in HBase-TRUNK #3457 (See [https://builds.apache.org/job/HBase-TRUNK/3457/])
    HBASE-6965 Generic MXBean Utility class to support all JDK vendors (Kumar Ravi) (Revision 1399734)

     Result = FAILURE
tedyu : 
Files : 
* /hbase/trunk/hbase-common/pom.xml
* /hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OSMXBean.java


Here are some comments on this patch (Thanks for doing it).

In future, would suggest putting the two patches together... Having them separate makes it hard to review;  I have to flip between two JIRAs to figure whether this thing of use or not?

The class is misnamed.  This is not a management bean.

What JVMs and OS's did you test on out of interest?  How many different vendor and OS strings did you test your patch against?

It seems a big hacky looking for 'IBM' in vendor string figuring if an IBM JVM or not.  Are you sure it's always upper case.  Any other property you could check to be sure it is the JVM you think.  Does IBM only make a linux JDK?




Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #227 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/227/])
    HBASE-6965 Generic MXBean Utility class to support all JDK vendors (Kumar Ravi) (Revision 1399734)

     Result = FAILURE
tedyu : 
Files : 
* /hbase/trunk/hbase-common/pom.xml
* /hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OSMXBean.java


Why not use http://hadoop.apache.org/docs/r0.20.0/api/org/apache/hadoop/util/Shell.ShellCommandExecutor.html instead of doing your own shell execution?

>What JVMs and OS's did you test on out of interest? How many different vendor and OS strings did you test your patch against?

This was tested on Sun (Oracle) JDK 6 (1.6.0_34), OpenJDK 6 and IBM Java 7. All tested on RHEL 6.3.

>It seems a big hacky looking for 'IBM' in vendor string figuring if an IBM JVM or not. Are you sure it's always upper case. Any other property >you could check to be sure it is the JVM you think. Does IBM only make a linux JDK?

 We borrowed this idea from the code here in hadoop: http://svn.apache.org/repos/asf/hadoop/common/tags/release-1.0.3/src/core/org/apache/hadoop/security/UserGroupInformation.java. See methods getOSLoginModuleName() - Line 262 and getOsPrincipalClass() - Line 276.



[~kumarr] OSMXBean is a bad name for the class.  It is not an MBean.  I suggest that it be called JVM.  We can make a new JIRA to rename it if you are in agreement (I can do it).  Also, why not use exising  http://hadoop.apache.org/docs/r0.20.0/api/org/apache/hadoop/util/Shell.ShellCommandExecutor.html instead of doing your own shell execution? instead of managing processes in your code added here?  Thanks for list of classes and OS's tested on.

stack, ok - I agree this is not a management bean. I was trying to find an alternative to the Sun Management bean and borrowed the name from there. I can rename OSMXBean to JVMBean. 
So just want to make sure I understand the process here - Do I open a new JIRA and rename the class name and submit a patch in that new JIRA? What happens to this JIRA then? What happens to the OSMXBean class and java file? How do I remove it from the tree?

 I'll look at the ShellCommandExecutor in the new JVMBean class. What I am not clear about at this point if it provides any more functional value to what I already have there? But I'll look into it.

 Please let me know if there is anything else I need to consider. I'll answer your questions in HBASE-6945 as well.


Yeah, you could open a new issue to rename (I think it should be JVM not JVMBean.  Its not even a Bean not to mind a management Bean).

Regards the ShellCommandExecutor, it is not a case of whether it has more functionality than what you have added, its that we do not want repeated code in our code base which seems to be what is going on here.  Correct me if I am wrong?

Thanks.

Resolving.  Open new issue to port to 0.94 and to fix the review comments raised post-commit.

Opened new issue HBASE-7150 to address the comments listed above.

There is one recommendation that I have not been able to implement satisfactorily -- This is the one suggestion about using http://hadoop.apache.org/docs/r0.20.0/api/org/apache/hadoop/util/Shell.ShellCommandExecutor.html

When I attempted to use this hadoop API instead of the process management calls I had originally used, I was able to build and test successfully using the Sun and OpenJDK environments. With IBM JDK 7, although the build is successful, a number of tests returned errors with a NumberFormatException. At this point, this appears to be a bug with IBM JDK 7's Long class not being able to treat the string returned by ShellCommandExecutor properly, and hence the NumberFormatException. So I had to revert back to the process calls I had implemented. 

When this issue is resolved, I can implement the ShellCommandExecutor call.

Marking closed.

