One open question is whether we want to run run the javadoc tool in the Jenkins build in order to catch javadoc errors.

+1 on the proposal, and also +1 on javadoc tool.

[~guozhang], I changed the commands for the trunk Jenkins jobs to produce jars and doc jars (this implies compilation and javadoc generation). We also run the tests last because they can be a bit flaky at the moment.

Do you have access to Jenkins now? Would it be OK to assign this to you?

I'm a member of the hudson-jobadmin group and I can make this change, but I'm not a committer of this project. I'm willing to make this change if this isn't an issue with the PMC.

[~fpj] Sure go ahead.

[~junrao] [~ijuma] [~fpj] I browse through the configs and here is a complete proposal:

1. kafka-trunk-jdk7: "Poll SCM" every hour, GRADLE_2_1,  jdk-1.7u51, "./gradlew clean jarAll docsJarAll testAll"

2. kafka-trunk-jdk8: "Poll SCM" every hour, GRADLE_2_1,  jdk1.8.0_45, "./gradlew clean jarAll docsJarAll testAll"

3. kafka-trunk-git-pr-jdk8: "Pull requests", GRADLE_2_1,  jdk1.8.0_45, "./gradlew -PscalaVersion=2.11.7 clean test"

Guozhang, it looks good to me apart from the PR job. We should use the lowest version of Java and Scala to ensure people don't use features from the newer version (as per my original suggestion).

Agree, will change accordingly.

BTW, current default scala version specified in build.gradle is 2.10.5, shall we upgrade to 2.11.7 now?

It's the same reason as I just said. We build by default with 2.10.5 to ensure we don't use 2.11 features and APIs. I do think 2.11.7 should be the default distribution though.

Cool, is there an existing ticket for upgrading the default scala distribution version? If not let's create one.

Not yet, I can do it tomorrow.

The trunk Jenkins job actually runs test with both scala 2.10 and 2.11. We can change it to run testAll though.

[~junrao] Yeah, we plan to run testAll for trunk-jdk7/8, for trunk-git-pr I think it is sufficient to run with the default Scala version; and at the same time we may upgrade default version to 2.11.7 now.

[~junrao], thanks for the correction, I had missed that we invoke gradle a second time with "-PscalaVersion=2.11". I will update the description to make this clear. I still think that it's better to use `testAll` because it will automatically do the right thing as we update the build. Having said that, this changes perhaps what we should do for the PR job, if we are already testing multiple Scala versions there. Maybe it should be:

1. kafka-trunk-jdk7: "Poll SCM" every hour, GRADLE_2_1, jdk-1.7u51, "./gradlew clean jarAll docsJarAll testAll"
2. kafka-trunk-jdk8: "Poll SCM" every hour, GRADLE_2_1, jdk1.8.0_45, "./gradlew clean jarAll docsJarAll testAll"
3. kafka-trunk-git-pr-jdk8: "Pull requests", GRADLE_2_1, jdk1.7.0_51, "./gradlew clean testAll"

Thoughts?

[~guozhang], for the Java 8 build, we need to merge Gwen's javadoc PR:
https://github.com/apache/kafka/pull/147

[~guozhang], I filed KAFKA-2608 to recommend the Scala 2.11 version on the downloads page of the website. We list all the versions, so the only thing to change is the recommendation that follows the list:

http://kafka.apache.org/downloads.html

I have changed the jenkins configuration with [~ijuma]'s input. If all three builds are fine, we can close this jira. Unless the current set of changes is broken, new changes should be proposed in a different jira.

Here is a summary of the changes:
# There are three kafka builds now, and their names include the jdk version they are using.
# We've removed a build step for scala 2.11, an the current build doesn't specify the version explicitly.
# We've added a build for jdk8.
# We've set the output to include junit test reports. 

All builds working as expected.

Verified all builds are configured and working now.

We now have a summary of failed tests without having to look at the console output, which is a nice time saver:

https://builds.apache.org/job/kafka-trunk-git-pr-jdk7/677/

