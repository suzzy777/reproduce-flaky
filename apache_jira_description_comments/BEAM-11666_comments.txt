This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

Saw a flake in RecordingManagerTest.test_clear here: https://github.com/apache/beam/pull/14308/checks?check_run_id=2308066548

{code}
=================================== FAILURES ===================================
_______________________ RecordingManagerTest.test_clear ________________________
[gw1] darwin -- Python 3.7.10 /Users/runner/work/beam/beam/sdks/python/target/.tox/py37/bin/python

self = <apache_beam.runners.interactive.recording_manager_test.RecordingManagerTest testMethod=test_clear>

    def test_clear(self):
      """Tests that clear can empty the cache for a specific pipeline."""
    
      # Create two pipelines so we can check that clearing the cache won't clear
      # all defined pipelines.
      p1 = beam.Pipeline(InteractiveRunner())
      elems_1 = p1 | 'elems 1' >> beam.Create([0, 1, 2])
    
      p2 = beam.Pipeline(InteractiveRunner())
      elems_2 = p2 | 'elems 2' >> beam.Create([0, 1, 2])
    
      # Watch the pipeline and PCollections. This is normally done in a notebook
      # environment automatically, but we have to do it manually here.
      ib.watch(locals())
      ie.current_env().track_user_pipelines()
    
      # Create the recording objects. By calling `record` a new PipelineFragment
      # is started to compute the given PCollections and cache to disk.
      rm_1 = RecordingManager(p1)
      recording = rm_1.record([elems_1], max_n=3, max_duration=500)
      recording.wait_until_finish()
    
      rm_2 = RecordingManager(p2)
      recording = rm_2.record([elems_2], max_n=3, max_duration=500)
      recording.wait_until_finish()
    
      # Assert that clearing only one recording clears that recording.
>     self.assertGreater(rm_1.describe()['size'], 0)
E     AssertionError: 0 not greater than 0
{code}

Do we have a plan to resolve this flake?

This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

[~AlexRodriguez] are there any recent failures for this? I looked through a few Python precommits and haven't seen it

[~kileys] I found this flake happening a week ago here: [https://ci-beam.apache.org/job/beam_PreCommit_Python_Commit/19651]

