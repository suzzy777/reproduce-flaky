An initial backport was done by apurtell.  I've taken it and made it work against 0.90.  It requires a backport of HBASE-3316.  Before I submit, I would like test cross version RPC to verify compatibility or reasonable warning messages.

If it is decided not to integrate, I will post the patch after testing.

Attached patch that is basically HBASE-4552 and the HBASE-4716 single colfam optimization.

I have verified that stock 0.90.4's non-atomic bulk import still works against a standalone cluster running 0.90.5-snapshot including the HBASE-4718 patch (combined backport of HBASE-4552/HBASE-4716) and the HBASE-3316 patch (separate but trivial backport)

Here are the results of the relevent unit tests running tests on 0.90.x.  I'm fairly confident that only known flakies could fail on the full run, will post any anomalies.

{code}

~/proj/hbase-0.90$ mvn test -Dtest=TestLoadIncrementalHFilesSplitRecovery,TestHRegionServerBulkLoad

....

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 47.143 sec
Running org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 72.985 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 0
{code}

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12502059/hbase-4718.0.90.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/146//console

This message is automatically generated.

Want to reapply with --no-prefix mighty Jon?

Patch v2 combines HBASE-4552, HBASE-4716 and HBASE-3316

Bulk-load related tests passed:
953 mt -Dtest=TestLoadIncrementalHFilesSplitRecovery
954 mt -Dtest=TestHRegionServerBulkLoad
957 mt -Dtest=TestLoadIncrementalHFiles
959 mt -Dtest=TestHFileOutputFormat

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12502096/4718-v2.90
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/150//console

This message is automatically generated.

Updated patch generated using --no-prefix,  uses enum from HBASE-4716, and also includes HBASE-3316.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12502112/hbase-4718.v3.includes-hbase-3316.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 10 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/153//console

This message is automatically generated.

Since enum was removed by HBASE-4716 addendum, I think patch v2 is closer to the current TRUNK.

I got the following when running test suite with patch v2:
{code}
testLogRollOnPipelineRestart(org.apache.hadoop.hbase.regionserver.wal.TestLogRolling)  Time elapsed: 713.958 sec  <<< ERROR!
java.io.FileNotFoundException: File does not exist: hdfs://localhost:54304/user/zhihyu/.logs/10.246.204.38,54320,1320336018579/10.246.204.38%3A54320.1320336018858
  at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:466)
  at org.apache.hadoop.fs.FileSystem.getLength(FileSystem.java:676)
  at org.apache.hadoop.io.SequenceFile$Reader.<init>(SequenceFile.java:1424)
  at org.apache.hadoop.io.SequenceFile$Reader.<init>(SequenceFile.java:1419)
  at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader$WALReader.<init>(SequenceFileLogReader.java:57)
  at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader.init(SequenceFileLogReader.java:158)
  at org.apache.hadoop.hbase.regionserver.wal.HLog.getReader(HLog.java:629)
  at org.apache.hadoop.hbase.regionserver.wal.TestLogRolling.testLogRollOnPipelineRestart(TestLogRolling.java:489)
{code}
In the test output, I saw:
{code}
2011-11-03 09:14:06,358 ERROR [Shutdown of DFS[DFSClient[clientName=DFSClient_hb_rs_10.246.204.38,54321,1320336018597_1320336018852, ugi=zhihyu.hfs.1,supergroup]]] hdfs.DFSClient$LeaseChecker(1074): Exception closing file /user/zhihyu/.logs/10.246.204.38,54321,1320336018597/10.246.204.38%3A54321.1320336374373 : java.io.IOException: Error Recovery for block blk_-8007982726961331998_1076 failed  because recovery from primary datanode 127.0.0.1:54952 failed 6 times.  Pipeline was 127.0.0.1:54952. Aborting...
java.io.IOException: Error Recovery for block blk_-8007982726961331998_1076 failed  because recovery from primary datanode 127.0.0.1:54952 failed 6 times.  Pipeline was 127.0.0.1:54952. Aborting...
  at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.processDatanodeError(DFSClient.java:2741)
  at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.access$1500(DFSClient.java:2172)
  at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$DataStreamer.run(DFSClient.java:2371)
{code}

I ran the test by itself and got same result.

Combining patch v3 with addendum for HBASE-4716 passes all tests.

@Jonathan:
Once HBASE-4740 gets resolved, let's put that with the above and make patch v4.

Thanks

New version of patch that includes backport of HBASE-4552, HBASE-4716, HBASE-3316 and HBASE-4740.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12503685/hbase-4718.v4.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 10 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/247//console

This message is automatically generated.

Patch filed to apply since this was targeted to the 0.90 branch instead of the trunk/0.92 branch.  Attached output of selected unit tests run.


{code}
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 146.315 sec
Running org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 26.407 sec

Results :

Tests run: 10, Failures: 0, Errors: 0, Skipped: 0
{code}

Patch *failed* to apply..

TestLoadIncrementalHFilesSplitRecovery and TestHRegionServerBulkLoad also passed.
Running whole test suite.

+1 on patch v4
{code}
Results :

Tests run: 700, Failures: 0, Errors: 0, Skipped: 9

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
{code}

Integrated to 0.90 branch.

Thanks for the patch Jonathan.

Old LoadIncremtalHFiles clients will still work against this version.

This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).

