I think that the test started to fail after CASSANDRA-15367, which added the failing assertion to {{indexBuildingPagesLargePartitions}}. That assertion was probably forgotten when the test was originally added by CASSANDRA-12796 ([here|https://github.com/apache/cassandra/commit/36ce4e02b429b1297d71c5c8a963623c62d9e159#diff-13cb97758bcb11cce8fc6f4cb1990dd6R686]). 

I think the reason why it fails is that [{{Keyspace.writeOrder}}|https://github.com/apache/cassandra/commit/36ce4e02b429b1297d71c5c8a963623c62d9e159#diff-13cb97758bcb11cce8fc6f4cb1990dd6R965] is globally shared, so other tests and/or tasks can concurrently use it to start other operations, thus the barrier might not yet finished at the moment we do the assertion. For example, the following simple test fails when repeatedly run:
{code:java}
@Test
public void myTest()
{
    OpOrder.Barrier b = Keyspace.writeOrder.newBarrier();
    b.issue();
    assertTrue(b.getSyncPoint().isFinished());
}
{code}
It fails because we have concurrent writes for the {{sstable_activity}} table, probably caused by the teardown of previous test runs. 

The proposed patch simply stores the barriers for {{Keyspace.writeOrder}} in a separate list and awaits for their completion before doing the assert:

||Branch||PR||utest||parameterized||
|3.0  |[576|https://github.com/apache/cassandra/pull/576]|[74|https://ci-cassandra.apache.org/job/Cassandra-devbranch-test/74/]|[647|https://jenkins-dse.build.dsinternal.org/view/Parameterized/job/parameterized-testall/647/]|
|3.11 |[577|https://github.com/apache/cassandra/pull/577]|[75|https://ci-cassandra.apache.org/job/Cassandra-devbranch-test/75/]|[648|https://jenkins-dse.build.dsinternal.org/view/Parameterized/job/parameterized-testall/648/]|
|trunk|[578|https://github.com/apache/cassandra/pull/578]|[76|https://ci-cassandra.apache.org/job/Cassandra-devbranch-test/76/]|[649|https://jenkins-dse.build.dsinternal.org/view/Parameterized/job/parameterized-testall/649/]|

With this change it seems not to fail after some thousands of runs.

Hi [~adelapena] I was looking into this one as well but I didn't go as far as you did. In any case this makes sense to me so +1 from my side but with a 'I am a new to the codebase disclaimer' :)

Ready to commit from my pov. But [~adelapena] feel free to look for more reviewers.

Test runs fine for me in a loop now (3744 passes before I got bored).  I had a quick glance at the patch and it looks reasonable. Thanks for picking it up and fixing it.

Thanks for the review, committed to 3.0 as [f858a800f05d33679b2bce2a08a701b5e61f36bc|https://github.com/apache/cassandra/commit/f858a800f05d33679b2bce2a08a701b5e61f36bc] and merged up without conflicts to [3.11|https://github.com/apache/cassandra/commit/b9de3f60f0a9b895757a2a414ec80a3cdac396e0] and [trunk|https://github.com/apache/cassandra/commit/ba508d009727bd4f6a9c80096b65888abafefa65].

