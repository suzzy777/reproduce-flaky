This test continue to fail with intermittently with a ConditionTimeoutException:
{noformat}
org.apache.geode.management.RegionManagementDUnitTest > testNavigationAPIS FAILED
    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedRunnable.run in VM 0 running on Host 8fa434e550e8 with 4 VMs
        at org.apache.geode.test.dunit.VM.invoke(VM.java:387)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:357)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:290)
        at org.apache.geode.management.RegionManagementDUnitTest.verifyNavigationApis(RegionManagementDUnitTest.java:419)
        at org.apache.geode.management.RegionManagementDUnitTest.testNavigationAPIS(RegionManagementDUnitTest.java:282)

        Caused by:
        org.awaitility.core.ConditionTimeoutException: Condition defined as a lambda expression in org.apache.geode.management.RegionManagementDUnitTest that uses org.apache.geode.management.DistributedSystemMXBean, org.apache.geode.management.DistributedSystemMXBeanint expected:<[4]> but was:<[5]> within 2 minutes.
            at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:104)
            at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:117)
            at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:32)
            at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:809)
            at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:648)
            at org.apache.geode.management.RegionManagementDUnitTest.awaitMemberCount(RegionManagementDUnitTest.java:1062)
            at org.apache.geode.management.RegionManagementDUnitTest.lambda$verifyNavigationApis$8ec4a763$1(RegionManagementDUnitTest.java:423)
{noformat}

See GEODE-1930: JMX DistributedTests are in need of overhauling. This is one of those tests and it's the one which was next on the list to overhaul.

Commit c95b32ee8c95f2a95767ce771eb6b2f5ee8492c7 in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=c95b32e ]

GEODE-3335: add FlakyTest category to testNavigationAPIS


Commit c95b32ee8c95f2a95767ce771eb6b2f5ee8492c7 in geode's branch refs/heads/feature/GEODE-3503 from [~apache@the9muses.net]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=c95b32e ]

GEODE-3335: add FlakyTest category to testNavigationAPIS


The test framework with {{ManagnementTestRule}} provides the locator and the test creates a manager and 3 members for an expected count of 5.

Flaky failures are caused by looking for an exact member count of 4. Typically in an IDE the test runs fast, so that when {{verifyNavigationApis}} is called there are four members returned from the {{distributedSystemMXBean}}, and after a few iterations in {{awaitMemberCount}} the count increases to the  5. However, when this fails in a CI pipeline, the call to {{awaitMemberCount}} doesn't happen until the count has reached 5 - {{expectedCount = 4}} is never seen and the await times out. 

pdxrunner opened a new pull request #1034: GEODE-3335: Fix expected member count
URL: https://github.com/apache/geode/pull/1034
 
 
   With the DUnit test framework there should be a locator, and a manager
   and 3 members created in the test. (expectedCount = 5)
   
   Remove Flaky tags
   
   Thank you for submitting a contribution to Apache Geode.
   
   In order to streamline the review of the contribution we ask you
   to ensure the following steps have been taken:
   
   ### For all changes:
   - [ ] Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?
   
   - [ ] Has your PR been rebased against the latest commit within the target branch (typically `develop`)?
   
   - [ ] Is your initial contribution a single, squashed commit?
   
   - [ ] Does `gradlew build` run cleanly?
   
   - [ ] Have you written or updated unit tests to verify your changes?
   
   - [ ] If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under [ASF 2.0](http://www.apache.org/legal/resolved.html#category-a)?
   
   ### Note:
   Please ensure that once the PR is submitted, you check travis-ci for build issues and
   submit an update to your PR as soon as possible. If you need help, please send an
   email to dev@geode.apache.org.
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pdxrunner commented on issue #1034: GEODE-3335: Fix expected member count
URL: https://github.com/apache/geode/pull/1034#issuecomment-342641485
 
 
   Precheckin on my local branch has passed

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


pdxrunner closed pull request #1034: GEODE-3335: Fix expected member count
URL: https://github.com/apache/geode/pull/1034
 
 
   

This is a PR merged from a forked repository.
As GitHub hides the original diff on merge, it is displayed below for
the sake of provenance:

As this is a foreign pull request (from a fork), the diff is supplied
below (as it won't show otherwise due to GitHub magic):

diff --git a/geode-core/src/test/java/org/apache/geode/management/RegionManagementDUnitTest.java b/geode-core/src/test/java/org/apache/geode/management/RegionManagementDUnitTest.java
index c97b83cc7b..3ddb041315 100644
--- a/geode-core/src/test/java/org/apache/geode/management/RegionManagementDUnitTest.java
+++ b/geode-core/src/test/java/org/apache/geode/management/RegionManagementDUnitTest.java
@@ -68,7 +68,6 @@
 import org.apache.geode.management.internal.SystemManagementService;
 import org.apache.geode.test.dunit.VM;
 import org.apache.geode.test.junit.categories.DistributedTest;
-import org.apache.geode.test.junit.categories.FlakyTest;
 
 /**
  * Distributed tests for {@link RegionMXBean}.
@@ -217,7 +216,6 @@ public void testFixedPRRegionMBean() throws Exception {
    * asynchronously.
    */
   @Test
-  @Category(FlakyTest.class) // GEODE-1930
   public void testRegionAggregate() throws Exception {
     createManagersAndThenMembers();
 
@@ -247,7 +245,6 @@ public void testRegionAggregate() throws Exception {
   }
 
   @Test
-  @Category(FlakyTest.class) // GEODE-3335
   public void testNavigationAPIS() throws Exception {
     createManagersAndThenMembers();
 
@@ -299,7 +296,6 @@ public void testSpecialRegions() throws Exception {
   }
 
   @Test
-  @Category(FlakyTest.class) // GEODE-1930
   public void testLruStats() throws Exception {
     createMembersAndThenManagers();
     for (VM memberVM : this.memberVMs) {
@@ -407,7 +403,8 @@ private void verifyNavigationApis(final VM managerVM, final List<String> memberI
       ManagementService service = getManagementService();
       assertThat(service.getDistributedSystemMXBean()).isNotNull();
 
-      awaitMemberCount(4);
+      // With the DUnit framework there is a locator, a manager and 3 members
+      awaitMemberCount(5);
 
       DistributedSystemMXBean distributedSystemMXBean = service.getDistributedSystemMXBean();
       assertThat(distributedSystemMXBean.listDistributedRegionObjectNames()).hasSize(2);
@@ -520,7 +517,7 @@ private void createFixedPartitionRegion(
     assertThat(fixedPartitionAttributesData).isNotNull();
     assertThat(fixedPartitionAttributesData).hasSize(3);
 
-    for (int i = 0; i < fixedPartitionAttributesData.length; i++) {
+    for (FixedPartitionAttributesData aFixedPartitionAttributesData : fixedPartitionAttributesData) {
       // TODO: add real assertions
       // LogWriterUtils.getLogWriter().info("<ExpectedString> Fixed PR Data is " +
       // fixedPartitionAttributesData[i] + "</ExpectedString> ");
@@ -971,7 +968,7 @@ private void verifyRemoteFixedPartitionRegion(final VM managerVM) {
         assertThat(fixedPrData).isNotNull();
         assertThat(fixedPrData).hasSize(3);
 
-        for (int i = 0; i < fixedPrData.length; i++) {
+        for (FixedPartitionAttributesData aFixedPrData : fixedPrData) {
           // TODO: add real assertions
           // LogWriterUtils.getLogWriter().info("<ExpectedString> Remote PR Data is " +
           // fixedPrData[i] + "</ExpectedString> ");


 

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit e2caeb58a14249a4712e9338e1e5fe149a904492 in geode's branch refs/heads/develop from [~khowe]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=e2caeb5 ]

GEODE-3335: Fix expected member count (#1034)

Using the DUnit test framework there should be a locator, and a manager
and 3 members created in the test. (expectedCount = 5)

Remove Flaky tags

Commit 6c2bc150be9819068441921425f58acbf8166453 in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6c2bc15 ]

GEODE-5547: increase Await timeout

This should also hopefully fix any new occurrences of GEODE-3335.


