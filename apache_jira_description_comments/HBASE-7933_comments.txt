{code}
java.io.IOException: java.io.IOException: java.lang.NullPointerException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:95)
	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:79)
	at org.apache.hadoop.hbase.ipc.ProtobufRpcClientEngine$Invoker.invoke(ProtobufRpcClientEngine.java:148)
	at $Proxy23.createTable(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$MasterProtocolHandler.invoke(HConnectionManager.java:1619)
	at org.apache.hadoop.hbase.client.$Proxy24.createTable(Unknown Source)
	at org.apache.hadoop.hbase.client.HBaseAdmin$2.call(HBaseAdmin.java:519)
	at org.apache.hadoop.hbase.client.HBaseAdmin$2.call(HBaseAdmin.java:515)
	at org.apache.hadoop.hbase.client.HBaseAdmin.executeCallable(HBaseAdmin.java:2568)
	at org.apache.hadoop.hbase.client.HBaseAdmin.execute(HBaseAdmin.java:2543)
	at org.apache.hadoop.hbase.client.HBaseAdmin.createTableAsync(HBaseAdmin.java:515)
	at org.apache.hadoop.hbase.client.HBaseAdmin.createTable(HBaseAdmin.java:408)
	at org.apache.hadoop.hbase.client.HBaseAdmin.createTable(HBaseAdmin.java:344)
	at org.apache.hadoop.hbase.constraint.TestConstraint.testDisableConstraints(TestConstraint.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:234)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:133)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:188)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:166)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:101)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)
Caused by: org.apache.hadoop.ipc.RemoteException: java.io.IOException: java.lang.NullPointerException
	at java.util.TreeSet.addAll(TreeSet.java:283)
	at org.apache.hadoop.hbase.zookeeper.lock.ZKInterProcessWriteLock.getLockPath(ZKInterProcessWriteLock.java:54)
	at org.apache.hadoop.hbase.zookeeper.lock.ZKInterProcessLockBase.tryAcquire(ZKInterProcessLockBase.java:180)
	at org.apache.hadoop.hbase.master.TableLockManager$ZKTableLockManager$TableLockImpl.acquire(TableLockManager.java:235)
	at org.apache.hadoop.hbase.master.handler.CreateTableHandler.prepare(CreateTableHandler.java:110)
	at org.apache.hadoop.hbase.master.HMaster.createTable(HMaster.java:1520)
	at org.apache.hadoop.hbase.master.HMaster.createTable(HMaster.java:1550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.hbase.ipc.ProtobufRpcServerEngine$Server.call(ProtobufRpcServerEngine.java:197)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1786)

	at org.apache.hadoop.hbase.ipc.HBaseClient.call(HBaseClient.java:1304)
	at org.apache.hadoop.hbase.ipc.ProtobufRpcClientEngine$Invoker.invoke(ProtobufRpcClientEngine.java:139)
	... 47 more
{code}

I think the bug is a race condition for the parent znode for the table. TableLockManager#tableDeleted() deletes parent znode, so that we do not leak znodes for deleted tables. 

{code}
2013-02-25 13:42:09,294 DEBUG [MASTER_TABLE_OPERATIONS-10.11.3.82,54545,1361828508393-0] master.TableLockManager$ZKTableLockManager$TableLockImpl(253): Attempt to release table write lock on :test
2013-02-25 13:42:09,298 DEBUG [IPC Server handler 3 on 54545] master.TableLockManager$ZKTableLockManager$TableLockImpl(225): Attempt to acquire table write lock on :test for:C_M_CREATE_TABLE
2013-02-25 13:42:09,309 DEBUG [MASTER_TABLE_OPERATIONS-10.11.3.82,54545,1361828508393-0] lock.ZKInterProcessLockBase(296): Successfully released /hbase/table-lock/test/write-master:545450000000002
2013-02-25 13:42:09,309 DEBUG [MASTER_TABLE_OPERATIONS-10.11.3.82,54545,1361828508393-0] master.TableLockManager$ZKTableLockManager$TableLockImpl(269): Released table lock on :test
2013-02-25 13:42:09,309 INFO  [IPC Server handler 3 on 54545] zookeeper.RecoverableZooKeeper(460): Node /hbase/table-lock/test already exists and this is not a retry
2013-02-25 13:42:09,311 WARN  [IPC Server handler 3 on 54545] lock.ZKInterProcessLockBase(229): Failed to create znode: /hbase/table-lock/test/write-
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /hbase/table-lock/test/write-master:54545
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.createSequential(RecoverableZooKeeper.java:496)
	at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.create(RecoverableZooKeeper.java:427)
	at org.apache.hadoop.hbase.zookeeper.ZKUtil.createNodeIfNotExistsNoWatch(ZKUtil.java:1069)
{code}

Attaching a patch which theoretically should fix the problem. 

{code}
-    } catch (KeeperException ex) {
-      LOG.warn("Failed to create znode: " + fullyQualifiedZNode, ex);
-      return null;
+    } catch (KeeperException.NoNodeException nne) {
{code}
Only one specific KeeperException is caught. You may want to use a second catch block for other KeeperException's.

We catch the noNode exception in case, the parent dir is not created yet. Other KeeperExceptions are thrown from the method, and converted to IOE at the callee. 

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12570921/hbase-7933_v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.constraint.TestConstraint

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/4547//console

This message is automatically generated.

TestConstraint is a medium test.
Meaning lock manager tests were not run.

Retrying against hadoopqa

Making critical.  Its a test that fails sometimes.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12570927/hbase-7933_v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/4549//console

This message is automatically generated.

I've run the tests with this once again. 
{code}
Failed tests:   testMasterRestartWhenSplittingIsPartial(org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster): Region not moved off .META. server

Tests in error: 
  org.apache.hadoop.hbase.security.access.TestAccessController: org.apache.hadoop.hbase.exceptions.TableNotFoundException: _acl_
  testQualifierAccess(org.apache.hadoop.hbase.security.access.TestAccessControlFilter): org.apache.hadoop.hbase.exceptions.TableNotFoundException: _acl_
  org.apache.hadoop.hbase.security.access.TestTablePermissions: org.apache.hadoop.hbase.exceptions.TableNotFoundException: _acl_

Tests run: 1386, Failures: 1, Errors: 3, Skipped: 13
{code}

The ACL tests seem to be flaky. Master does not wait for _acl_ table to be created before accepting other create table statements. Will open another issue. 

I want to get this resolved sooner rather than later, since it affects the tests and pre-commit tests. 

+1 from me.

+1

Committed this. Thanks for review.

Integrated in HBase-TRUNK #3901 (See [https://builds.apache.org/job/HBase-TRUNK/3901/])
    HBASE-7933 NPE in TableLockManager (Revision 1450554)

     Result = FAILURE
enis : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java


Integrated in hbase-0.95 #3 (See [https://builds.apache.org/job/hbase-0.95/3/])
    HBASE-7933 NPE in TableLockManager (Revision 1450555)

     Result = FAILURE
enis : 
Files : 
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java


Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #422 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/422/])
    HBASE-7933 NPE in TableLockManager (Revision 1450554)

     Result = FAILURE
enis : 
Files : 
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java


Integrated in hbase-0.95-on-hadoop2 #2 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/2/])
    HBASE-7933 NPE in TableLockManager (Revision 1450555)

     Result = FAILURE
enis : 
Files : 
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java


Marking closed.

