Somewhat relevant to JCR-4626, MNG-3092

We might want to exclude org.glassfish:javax.el from hbase-server transitively and rather define it explicitly in pom. This would resolve the issue regardless of the mvn bug.

{quote} org.apache.hbase:hbase-server:jar:2.5.0 -> org.glassfish.web:javax.servlet.jsp:jar:2.3.2 -> org.glassfish:javax.el:jar:3.0.1-b06-SNAPSHOT
{quote}
Looking at the above, we are getting org.glassfish:javax.el:jar:3.0.1-b06-SNAPSHOT via hbase-server but when I compile hbase project I don't see this error.  Looks like they explicitly depend on  +org.glassfish:avax.el:${glassfish.el.version}+ https://github.com/apache/hbase/blob/branch-2.5/pom.xml#L1298-L1302

shahrs87 commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1513539796

   @virajjasani  Please review.




gjacoby126 commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1513573804

   @shahrs87 - is this the correct version to use? Latest version of Glassfish's javax.el looks like 3.0-b12, and there's a note in mvnrepository that it's been deprecated in favor of jakarta.el. 
   
   In addition the glassfish el jars seem to have CVEs attached. 
   https://mvnrepository.com/artifact/org.glassfish/javax.el/3.0.1-b12
   
   I'm not familiar enough with the Java EE expression language framework here to know the correct answer. 




virajjasani commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1513585830

   @gjacoby126 this was mostly to stay in sync with hbase https://github.com/apache/hbase/blob/master/pom.xml#L826




shahrs87 commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1513595438

   > is this the correct version to use? Latest version of Glassfish's javax.el looks like 3.0-b12
   
   I can update it to 3.0-b12.
   
   > and there's a note in mvnrepository that it's been deprecated in favor of jakarta.el.
   
   I am not inclined to change to jakarta.el because hbase-server will try to download `org.glassfish:javax.el:jar:3.0.1-b06-SNAPSHOT`. To avoid that, I would have to exclude `org.glassfish:javax.el:jar` from multiple module's pom.
   
   > In addition the glassfish el jars seem to have CVEs attached.
   
   The [linked CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15250) affects junit version from version 4.7 and before 4.13.1. Looking at the mvn dependency tree for junit:junit, we are including junit version 4.13.1 which is free from this vulnerability.
   ```
   mvn dependency:tree -Dincludes=junit:junit
   
   [INFO] -

virajjasani commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1513620782

   I am not sure if explicitly using different version than the one used by hbase might have any implications with any of our server side workflows




gjacoby126 commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1513816283

   @virajjasani @shahrs87 - good point about syncing up with HBase. We should use what they use for now. (But I wonder if HBase also needs to upgrade...when I was trying to get Phoenix and Dropwizard to play nicely a year or so back, these obsolete javax / Jakarta EE jars made things painful.) 




virajjasani commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1513830533

   > But I wonder if HBase also needs to upgrade
   
   +1




shahrs87 commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1514984899

   There is 1 test failure: `org.apache.phoenix.jdbc.ParallelPhoenixUtilTest#getAnyOfNonExceptionallyTimeoutTest`. It is a known flaky test. It runs fine locally.
   Build link: https://ci-hadoop.apache.org/blue/organizations/jenkins/Phoenix%2FPhoenix-PreCommit-GitHub-PR/detail/PR-1591/4/tests/
   ```
   [INFO] -------------------------------------------------------
   [INFO]  T E S T S
   [INFO] -------------------------------------------------------
   [INFO] Running org.apache.phoenix.jdbc.ParallelPhoenixUtilTest
   [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.095 s - in org.apache.phoenix.jdbc.ParallelPhoenixUtilTest
   [INFO] 
   [INFO] Results:
   [INFO] 
   [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
   ```
   
   




shahrs87 commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1514987208

   @virajjasani  @gjacoby126  Can you please review and merge the change? Thank you.




virajjasani commented on code in PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#discussion_r1171645664


##########
pom.xml:
##########
@@ -169,6 +169,7 @@
     <!

virajjasani commented on PR #1591:
URL: https://github.com/apache/phoenix/pull/1591#issuecomment-1515101861

   @gjacoby126 you are good with the changes? or shall we create Jira in hbase first?




virajjasani merged PR #1591:
URL: https://github.com/apache/phoenix/pull/1591




Changed the Jira description to match the commit message.

Also, this patch doesn't really add an explicit dependency on org.glassfish:javax.el , it just dependency manages the version for the transitive dependencies.

{quote}  Changed the Jira description to match the commit message.
{quote}
Thank you [~stoty]

bq. Also, this patch doesn't really add an explicit dependency on org.glassfish:javax.el , it just dependency manages the version for the transitive dependencies.

Correct. 

