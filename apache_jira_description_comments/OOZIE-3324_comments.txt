The OOZIE-3314 patch changed the content of the findbugs-filter.xml file and moved it to the fluent-job/fluent-job-api subdirectory. The commit only changed the content but kept the file at the original directory.

This patch moves findbugs-filter.xml to the correct directory.

Just to be on the safe side, I've created this patch using git diff --no-renames

PreCommit-OOZIE-Build started


Jenkins comment is missing but here is the build info: [https://builds.apache.org/job/PreCommit-OOZIE-Build/740/]

 

PreCommit-OOZIE-Build started


Retriggering last Jenkins run to get an up-to-date pre-commit output.

Seems to me Jenkins comment is missing again, here is the build info: [https://builds.apache.org/job/PreCommit-OOZIE-Build/743/]

 

+1 (non-binding). I have checked the precommit results as well. There is one -1 report for the findbugs check, but it is a false negative because of the failure in the pre patch state.

PreCommit-OOZIE-Build started


Retriggered the pre-commit build again.

the pre-commit fails exceptionally:
{noformat}
----------------------------

+1 PATCH_APPLIES
+1 CLEAN
-1 RAW_PATCH_ANALYSIS
    +1 the patch does not introduce any @author tags
    +1 the patch does not introduce any tabs
    +1 the patch does not introduce any trailing spaces
    +1 the patch does not introduce any line longer than 132
    -1 the patch does not add/modify any testcase
+1 RAT
    +1 the patch does not seem to introduce new RAT warnings
+1 JAVADOC
+1 JAVADOC
    +1 the patch does not seem to introduce new Javadoc warning(s)
    +1 the patch does not seem to introduce new Javadoc error(s)
    ERROR: the current HEAD has 2 Javadoc error(s)
+1 COMPILE
    +1 HEAD compiles
    +1 patch compiles
    +1 the patch does not seem to introduce new javac warnings
-1 There are [522] new bugs found below threshold in total that must be fixed.
 +1 There are no new bugs found in [webapp].
 -1 There are [344] new bugs found below threshold in [core] that must be fixed, listing only the first [5] ones.
 You can find the FindBugs diff here (look for the red and orange ones): core/findbugs-new.html
 The top [5] most important FindBugs errors are:
 At BinaryBlob.java:[line 70]: org.apache.oozie.BinaryBlob.getBytes() may expose internal representation by returning BinaryBlob.bytes
 org.apache.oozie.BinaryBlob.getRawBlob() may expose internal representation by returning BinaryBlob.rawBlob: Another occurrence at BinaryBlob.java:[line 90]
 Another occurrence at BinaryBlob.java:[line 118]: At BinaryBlob.java:[line 101]
 In BundleActionBean.java: org.apache.oozie.BundleActionBean.pcIsDetached() has Boolean return type and returns explicit null
 In BundleJobBean.java: org.apache.oozie.BundleJobBean.pcIsDetached() has Boolean return type and returns explicit null
 -1 There are [74] new bugs found below threshold in [tools] that must be fixed, listing only the first [5] ones.
 You can find the FindBugs diff here (look for the red and orange ones): tools/findbugs-new.html
 The top [5] most important FindBugs errors are:
 At OozieDBCLI.java:[line 562]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.convertClobToBlobInMysql(String, Connection): new java.io.FileWriter(String, boolean)
 At OozieDBCLI.java:[line 591]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.convertClobToBlobInPostgres(String, Connection, String): new java.io.FileWriter(String, boolean)
 At OozieDBCLI.java:[line 1034]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.createOozieSysTable(String, boolean, String): new java.io.FileWriter(String, boolean)
 At OozieDBCLI.java:[line 810]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.ddlTweaks(String, boolean): new java.io.FileWriter(String, boolean)
 At OozieDBCLI.java:[line 770]: Found reliance on default encoding in org.apache.oozie.tools.OozieDBCLI.ddlTweaksFor50(String, boolean): new java.io.FileWriter(String, boolean)
 0 There are [2] new bugs found in [fluent-job/fluent-job-api] that would be nice to have fixed.
 You can find the FindBugs diff here: fluent-job/fluent-job-api/findbugs-new.html
 -1 There are [4] new bugs found below threshold in [sharelib/hive2] that must be fixed.
 You can find the FindBugs diff here (look for the red and orange ones): sharelib/hive2/findbugs-new.html
 The most important FindBugs errors are:
 At Hive2Main.java:[line 271]: org.apache.oozie.action.hadoop.Hive2Main.runBeeline(String[], String) invokes System.exit(...), which shuts down the entire virtual machine
 At Hive2Main.java:[line 279]: java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
 At Hive2Main.java:[line 165]: At Hive2Main.java:[line 146]
 At Hive2Main.java:[line 149]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
 java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V writes to a file whose location might be specified by user input: At Hive2Main.java:[line 146]
 +1 There are no new bugs found in [sharelib/distcp].
 +1 There are no new bugs found in [sharelib/hcatalog].
 +1 There are no new bugs found in [sharelib/streaming].
 +1 There are no new bugs found in [sharelib/sqoop].
 -1 There are [26] new bugs found below threshold in [sharelib/oozie] that must be fixed, listing only the first [5] ones.
 You can find the FindBugs diff here (look for the red and orange ones): sharelib/oozie/findbugs-new.html
 The top [5] most important FindBugs errors are:
 At ActionStats.java:[line 37]: Unwritten public or protected field: org.apache.oozie.action.hadoop.ActionStats.currentActionType
 At LauncherAMUtils.java:[line 64]: Found reliance on default encoding in org.apache.oozie.action.hadoop.LauncherAMUtils.getLocalFileContentStr(File, String, int): new java.io.FileReader(File)
 Obligation to clean up resource created at LauncherAMUtils.java:[line 64] is not discharged: org.apache.oozie.action.hadoop.LauncherAMUtils.getLocalFileContentStr(File, String, int) may fail to clean up java.io.Reader on checked exception
 Path continues at LauncherAMUtils.java:[line 67]: Path continues at LauncherAMUtils.java:[line 65]
 Found reliance on default encoding in org.apache.oozie.action.hadoop.LauncherMain.getHadoopJobIds(String, Pattern[]): new java.io.FileReader(String): Path continues at LauncherAMUtils.java:[line 68]
 -1 There are [3] new bugs found below threshold in [sharelib/pig] that must be fixed.
 You can find the FindBugs diff here (look for the red and orange ones): sharelib/pig/findbugs-new.html
 The most important FindBugs errors are:
 At PigMain.java:[line 258]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
 At PigMain.java:[line 141]: At PigMain.java:[line 131]
 At PigMain.java:[line 245]: At PigMain.java:[line 199]
 At PigMain.java:[line 137]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
 java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At PigMain.java:[line 131]
 -1 There are [2] new bugs found below threshold in [sharelib/hive] that must be fixed.
 You can find the FindBugs diff here (look for the red and orange ones): sharelib/hive/findbugs-new.html
 The most important FindBugs errors are:
 At HiveMain.java:[line 317]: java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
 At HiveMain.java:[line 226]: At HiveMain.java:[line 207]
 At HiveMain.java:[line 210]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
 At HiveMain.java:[line 207]
 -1 There are [5] new bugs found below threshold in [sharelib/spark] that must be fixed.
 You can find the FindBugs diff here (look for the red and orange ones): sharelib/spark/findbugs-new.html
 The most important FindBugs errors are:
 At SparkMain.java:[line 133]: java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V reads a file whose location might be specified by user input
 java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At SparkMain.java:[line 133]
 At SparkMain.java:[line 166]: At SparkMain.java:[line 173]
 The regular expression "^spark-assembly((?:(-|_|(\\d+\\.))\\d+(?:\\.\\d+)*))*\\.jar$" is vulnerable to a denial of service attack (ReDOS): At SparkMain.java:[line 172]
 The regular expression "^spark-yarn((?:(-|_|(\\d+\\.))\\d+(?:\\.\\d+)*))*\\.jar$" is vulnerable to a denial of service attack (ReDOS): At SparkMain.java:[line 48]
 -1 There are [60] new bugs found below threshold in [client] that must be fixed, listing only the first [5] ones.
 You can find the FindBugs diff here (look for the red and orange ones): client/findbugs-new.html
 The top [5] most important FindBugs errors are:
 At CLIParser.java:[line 60]: new org.apache.oozie.cli.CLIParser(String, String[]) may expose internal representation by storing an externally mutable object into CLIParser.cliHelp
 At CLIParser.java:[lines 83-107]: Should org.apache.oozie.cli.CLIParser$Command be a _static_ inner class?
 Obligation to clean up resource created at OozieCLI.java:[line 862] is not discharged: org.apache.oozie.cli.OozieCLI.getConfiguration(OozieClient, CommandLine) may fail to clean up java.io.InputStream
 Path continues at OozieCLI.java:[line 872]: Path continues at OozieCLI.java:[line 868]
 At OozieCLI.java:[line 859]: org.apache.oozie.cli.OozieCLI.getConfiguration(OozieClient, CommandLine) may fail to close stream
 -1 There are [3] new bugs found below threshold in [examples] that must be fixed.
 You can find the FindBugs diff here (look for the red and orange ones): examples/findbugs-new.html
 The most important FindBugs errors are:
 At LocalOozieExample.java:[line 47]: java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input
 java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input: At LocalOozieExample.java:[line 35]
 At LocalOozieExample.java:[line 35]: At LocalOozieExample.java:[line 72]
 At Repeatable.java:[line 175]: org.apache.oozie.example.Repeatable.setBaseline(Date) may expose internal representation by storing an externally mutable object into Repeatable.baseline
 +1 There are no new bugs found in [docs].
 -1 There are [1] new bugs found below threshold in [server] that must be fixed.
 You can find the FindBugs diff here (look for the red and orange ones): server/findbugs-new.html
 The most important FindBugs errors are:
 At JspHandlerProvider.java:[line 43]: java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V reads a file whose location might be specified by user input
 At JspHandlerProvider.java:[line 43]
+1 BACKWARDS_COMPATIBILITY
    +1 the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
    +1 the patch does not modify JPA files
-1 TESTS
    Tests run: 2918
    Tests failed: 0
    Tests errors: 3

    The patch failed the following testcases:



    Tests failing with errors:
testConcurrentCopyFromLocalHighThreadNr(org.apache.oozie.tools.TestConcurrentCopyFromLocal)
testConcurrentCopyFromLocalSameFileNrAndThreadNr(org.apache.oozie.tools.TestConcurrentCopyFromLocal)
testConcurrentCopyFromLocalMoreThreadsThanFiles(org.apache.oozie.tools.TestConcurrentCopyFromLocal)

    Tests failed at first run:
TestCoordActionsKillXCommand#testActionKillCommandActionNumbers
    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
+1 DISTRO
    +1 distro tarball builds with the patch 

----------------------------
-1 Overall result, please check the reported -1(s)


The full output of the test-patch run is available at

 https://builds.apache.org/job/PreCommit-OOZIE-Build/752/

Adding comment to JIRA
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
  0 12089    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 12290    0   201  100 12089    358  21571 --:--:-- --:--:-- --:--:-- 21549
{"errorMessages":["Unexpected character ('^' (code 94)): was expecting comma to separate OBJECT entries\n at [Source: org.apache.catalina.connector.CoyoteInputStream@2b3fd221; line: 1, column: 8221]"]}
{noformat}

Probably one of the findbug messages is messing with the post mechanism we're using. It does not look good :(

I think the regex breaks the pre-commit:  ""^spark-assembly((?:(-|_|(\\d+\\.))\\d+(?:\\.\\d+)*))*\\.jar$""
+1 for the patch as it fixes findbugs and build in general

+1

Let's ignore the missing JIRA comment for now - let's hope it'll get fixed after moving findbugs-filter.xml.

Thanks [~asalamon74], committed to master.

Closing issue; Oozie 5.1.0 is released.

