I made an internal change to increase timeouts for those tests and things seem more stable here:

{noformat}
--- a/launcher/src/test/java/org/apache/spark/launcher/LauncherServerSuite.java
+++ b/launcher/src/test/java/org/apache/spark/launcher/LauncherServerSuite.java
@@ -91,7 +91,7 @@ public class LauncherServerSuite extends BaseSuite {
       client = new TestClient(s);
       synchronized (waitLock) {
         client.send(new Hello(handle.getSecret(), "1.4.0"));
-        waitLock.wait(TimeUnit.SECONDS.toMillis(10));
+        waitLock.wait(TimeUnit.SECONDS.toMillis(30));
       }
 
       // Make sure the server matched the client to the handle.
@@ -99,18 +99,18 @@ public class LauncherServerSuite extends BaseSuite {
 
       synchronized (waitLock) {
         client.send(new SetAppId("app-id"));
-        waitLock.wait(TimeUnit.SECONDS.toMillis(10));
+        waitLock.wait(TimeUnit.SECONDS.toMillis(30));
       }
       assertEquals("app-id", handle.getAppId());
 
       synchronized (waitLock) {
         client.send(new SetState(SparkAppHandle.State.RUNNING));
-        waitLock.wait(TimeUnit.SECONDS.toMillis(10));
+        waitLock.wait(TimeUnit.SECONDS.toMillis(30));
       }
       assertEquals(SparkAppHandle.State.RUNNING, handle.getState());
 
       handle.stop();
-      Message stopMsg = client.inbound.poll(10, TimeUnit.SECONDS);
+      Message stopMsg = client.inbound.poll(30, TimeUnit.SECONDS);
       assertTrue(stopMsg instanceof Stop);
     } finally {
       kill(handle);
{noformat}

Never underestimate how long things can take to run on shared machines...

User 'vanzin' has created a pull request for this issue:
https://github.com/apache/spark/pull/12210

Reopening this since the test is still flaky. I think I found the cause.

User 'vanzin' has created a pull request for this issue:
https://github.com/apache/spark/pull/12785

