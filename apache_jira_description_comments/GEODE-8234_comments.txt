dschneider-pivotal opened a new pull request #5229:
URL: https://github.com/apache/geode/pull/5229


   Thank you for submitting a contribution to Apache Geode.
   
   In order to streamline the review of the contribution we ask you
   to ensure the following steps have been taken:
   
   ### For all changes:
   - [ ] Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?
   
   - [ ] Has your PR been rebased against the latest commit within the target branch (typically `develop`)?
   
   - [ ] Is your initial contribution a single, squashed commit?
   
   - [ ] Does `gradlew build` run cleanly?
   
   - [ ] Have you written or updated unit tests to verify your changes?
   
   - [ ] If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under [ASF 2.0](http://www.apache.org/legal/resolved.html#category-a)?
   
   ### Note:
   Please ensure that once the PR is submitted, check Concourse for build issues and
   submit an update to your PR as soon as possible. If you need help, please send an
   email to dev@geode.apache.org.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dschneider-pivotal commented on pull request #5229:
URL: https://github.com/apache/geode/pull/5229#issuecomment-641619891


   the dunit failures are unrelated to this pull request


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dschneider-pivotal merged pull request #5229:
URL: https://github.com/apache/geode/pull/5229


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 6e65b075351cf25f36c6023edc6b6608e48bf257 in geode's branch refs/heads/develop from Darrel Schneider
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e65b07 ]

GEODE-8234: change redis functions to implement InternalFunction (#5229)



onichols-pivotal opened a new pull request #5230:
URL: https://github.com/apache/geode/pull/5230


   Reverts apache/geode#5229


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit dc97b07113a64a6a78544fee21ac3f8728d87299 in geode's branch refs/heads/revert-5229-GEODE-8234-redis-internal-functions from Owen Nichols
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=dc97b07 ]

Revert "GEODE-8234: change redis functions to implement InternalFunction (#5229)"

This reverts commit 6e65b075351cf25f36c6023edc6b6608e48bf257.


onichols-pivotal commented on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641658570


   This commit broke https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/254 if you can fix it that would be great too, but I believe our policy is revert-then-fix when you break the pipeline...


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


onichols-pivotal edited a comment on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641658570


   @jdeppe-pivotal Since this commit, Upgrade test has consistently failed in ClientServerMiscBCDUnitTest. testPingWrongServer, both in the develop pipeline and the PR pipeline (even your own PR #5228 is now hitting this).  Examples:
   
   1. [UpgradeTestOpenJDK8 #254](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/254)
   2. [UpgradeTestOpenJDK11 #250](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/250)
   3. [UpgradeTestOpenJDK8 #255](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/255)
   4. [UpgradeTestOpenJDK11 #251](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/251)
   5. [UpgradeTestOpenJDK11 #8214](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8214)
   6. [UpgradeTestOpenJDK11 #8216](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8216)
   
   The only PR it has not failed in since the problem began is [this revert PR](https://github.com/apache/geode/pull/5230), which rules out the possibility of an environmental issue.  So this PR has already served some useful purpose even with a -1 blocking it from being merged.
   
   If the failure had nothing to do with this commit, perhaps the Upgrade tests are sensitive to test ordering?
   
   https://issues.apache.org/jira/browse/GEODE-8236 has been filed for this issue, although it looks like it has been seen before in https://issues.apache.org/jira/browse/GEODE-8176
   
   On a recent [dev list discussion](https://lists.apache.org/x/thread.html/rcccca408873c92df789ddf7f2f871f9251498d4b902b9019da7200eb@%3Cdev.geode.apache.org%3E) many in the community favored revert-first-then-figure-it-out, since the alternative of just leaving the pipeline and all PRs broken isn't great either. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


onichols-pivotal edited a comment on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641658570


   @jdeppe-pivotal Since this commit, Upgrade test has consistently failed in ClientServerMiscBCDUnitTest. testPingWrongServer, both in the develop pipeline and the PR pipeline (even your own PR #5228 is now hitting this).  Examples:
   
   1. [UpgradeTestOpenJDK8 #254](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/254)
   2. [UpgradeTestOpenJDK11 #250](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/250)
   3. [UpgradeTestOpenJDK11 #251](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/251)
   4. [UpgradeTestOpenJDK11 #8214](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8214)
   5. [UpgradeTestOpenJDK11 #8216](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8216)
   
   It did pass in:
   1. [UpgradeTestOpenJDK8 #255](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/255) 
   2. [this revert PR](https://github.com/apache/geode/pull/5230)
   This rules out the possibility of an environmental issue, so this PR has already served some useful purpose even with a -1 blocking it from being merged.  The ones that did fail have various [n] suffix for the failing test, which along with the 1 out of 6 that passed, suggests some degree of indeterminism.
   
   If the failure had nothing to do with this commit, perhaps the Upgrade tests are sensitive to test ordering?
   
   https://issues.apache.org/jira/browse/GEODE-8236 has been filed for this issue, although it looks like it has been seen before in https://issues.apache.org/jira/browse/GEODE-8176
   
   On a recent [dev list discussion](https://lists.apache.org/x/thread.html/rcccca408873c92df789ddf7f2f871f9251498d4b902b9019da7200eb@%3Cdev.geode.apache.org%3E) many in the community favored revert-first-then-figure-it-out, since the alternative of just leaving the pipeline and all PRs broken isn't great either. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


onichols-pivotal edited a comment on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641658570


   @jdeppe-pivotal Since this commit, Upgrade test has failed 5/6 times in ClientServerMiscBCDUnitTest. testPingWrongServer, both in the develop pipeline and the PR pipeline (even your own PR #5228 is now hitting this).  Examples:
   
   1. [UpgradeTestOpenJDK8 #254](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/254)
   2. [UpgradeTestOpenJDK11 #250](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/250)
   3. [UpgradeTestOpenJDK11 #251](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/251)
   4. [UpgradeTestOpenJDK11 #8214](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8214)
   5. [UpgradeTestOpenJDK11 #8216](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8216)
   
   It did pass in:
   1. [UpgradeTestOpenJDK8 #255](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/255) 
   2. [this revert PR](https://github.com/apache/geode/pull/5230)
   This rules out the possibility of an environmental issue, so this PR has already served some useful purpose even with a -1 blocking it from being merged.
   
   The ones that did fail have various [n] suffix for the failing test, which along with the 1 out of 6 that passed, suggests some degree of indeterminism.
   
   If the failure had nothing to do with this commit, perhaps the Upgrade tests are sensitive to test ordering?
   
   https://issues.apache.org/jira/browse/GEODE-8236 has been filed for this issue, although it looks like it has been seen before in https://issues.apache.org/jira/browse/GEODE-8176
   
   On a recent [dev list discussion](https://lists.apache.org/x/thread.html/rcccca408873c92df789ddf7f2f871f9251498d4b902b9019da7200eb@%3Cdev.geode.apache.org%3E) many in the community favored revert-first-then-figure-it-out, since the alternative of just leaving the pipeline and all PRs broken isn't great either. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


onichols-pivotal edited a comment on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641658570


   @jdeppe-pivotal Since #5229, UpgradeTest has failed 5/6 times in ClientServerMiscBCDUnitTest. testPingWrongServer, both in the develop pipeline and the PR pipeline (even your own PR #5228 is now hitting this).  Examples:
   
   1. [UpgradeTestOpenJDK8 #254](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/254)
   2. [UpgradeTestOpenJDK11 #250](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/250)
   3. [UpgradeTestOpenJDK11 #251](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/251)
   4. [UpgradeTestOpenJDK11 #8214](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8214)
   5. [UpgradeTestOpenJDK11 #8216](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8216)
   
   It did pass in:
   1. [UpgradeTestOpenJDK8 #255](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/255) 
   2. [this revert PR](https://github.com/apache/geode/pull/5230)
   This rules out the possibility of an environmental issue, so this PR has already served some useful purpose even with a -1 blocking it from being merged.
   
   The ones that did fail have various [n] suffix for the failing test, which along with the 1 out of 6 that passed, suggests some degree of indeterminism.
   
   If the failure had nothing to do with #5229, perhaps the Upgrade tests are sensitive to test ordering?
   
   https://issues.apache.org/jira/browse/GEODE-8236 has been filed for this issue, although it looks like it has been seen before in
   https://issues.apache.org/jira/browse/GEODE-8176
   
   On a recent [dev list discussion](https://lists.apache.org/x/thread.html/rcccca408873c92df789ddf7f2f871f9251498d4b902b9019da7200eb@%3Cdev.geode.apache.org%3E) many in the community favored revert-first-then-figure-it-out, since the alternative of just leaving the pipeline and all PRs broken isn't great either. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dschneider-pivotal commented on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641725070


   Perhaps it would be better to disable this flaky test until someone works on it. But normally we just look at failures and find open tickets saying that they fail intermittently and ignore that failure. I'm not sure why that did not happen in this case. A ticket already existed but did not seem to help.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


onichols-pivotal commented on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641727580


   sounds like the consensus is not to revert


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


onichols-pivotal closed pull request #5230:
URL: https://github.com/apache/geode/pull/5230


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


onichols-pivotal edited a comment on pull request #5230:
URL: https://github.com/apache/geode/pull/5230#issuecomment-641658570


   @jdeppe-pivotal Since #5229, UpgradeTest has failed 5/6 times in ClientServerMiscBCDUnitTest. testPingWrongServer, both in the develop pipeline and the PR pipeline (even your own PR #5228 is now hitting this).  Examples:
   
   1. [UpgradeTestOpenJDK8 #254](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/254)
   2. [UpgradeTestOpenJDK11 #250](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/250)
   3. [UpgradeTestOpenJDK11 #251](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK11/builds/251)
   4. [UpgradeTestOpenJDK11 #8214](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8214)
   5. [UpgradeTestOpenJDK11 #8216](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/UpgradeTestOpenJDK11/builds/8216)
   
   It did pass in:
   1. [UpgradeTestOpenJDK8 #255](https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/255) 
   2. [this revert PR](https://github.com/apache/geode/pull/5230)
   The ones that did fail have various [n] suffix for the failing test, which along with the 1 out of 6 that passed, suggests some degree of indeterminism or flakiness, but it does seem suspicious that it suddenly went from failing rarely to almost every time.
   
   If the failure had nothing to do with #5229, perhaps the Upgrade tests are sensitive to test ordering?
   
   https://issues.apache.org/jira/browse/GEODE-8236 has been filed for this issue, although it looks like it has been seen before in
   https://issues.apache.org/jira/browse/GEODE-8176
   
   On a recent [dev list discussion](https://lists.apache.org/x/thread.html/rcccca408873c92df789ddf7f2f871f9251498d4b902b9019da7200eb@%3Cdev.geode.apache.org%3E) many in the community favored revert-first-then-figure-it-out, since the alternative of just leaving the pipeline and all PRs broken isn't great either. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 6e65b075351cf25f36c6023edc6b6608e48bf257 in geode's branch refs/heads/feature/GEODE-8067 from Darrel Schneider
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e65b07 ]

GEODE-8234: change redis functions to implement InternalFunction (#5229)



Commit 6e65b075351cf25f36c6023edc6b6608e48bf257 in geode's branch refs/heads/feature/GEODE-8067 from Darrel Schneider
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e65b07 ]

GEODE-8234: change redis functions to implement InternalFunction (#5229)



Commit 6e65b075351cf25f36c6023edc6b6608e48bf257 in geode's branch refs/heads/feature/GEODE-8067 from Darrel Schneider
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e65b07 ]

GEODE-8234: change redis functions to implement InternalFunction (#5229)



Commit 6e65b075351cf25f36c6023edc6b6608e48bf257 in geode's branch refs/heads/feature/GEODE-8067 from Darrel Schneider
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e65b07 ]

GEODE-8234: change redis functions to implement InternalFunction (#5229)



Commit 6e65b075351cf25f36c6023edc6b6608e48bf257 in geode's branch refs/heads/feature/GEODE-8067 from Darrel Schneider
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e65b07 ]

GEODE-8234: change redis functions to implement InternalFunction (#5229)



