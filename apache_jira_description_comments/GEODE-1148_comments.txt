I'm modifying WANTestBase.preTearDown() to call invocation.checkException() which includes the original exception in the resulting stack trace.


Flaky: random ports, eats exceptions (fixed 1), time sensitive, thread sleeps, waitForCriterion

Reoccurred in:

Geode_develop_DistributedTests
Private Build #2559 (May 11, 2016 9:09:21 AM)
Revision: 036c931705fab5122a81a446d67e4ab5bc6620b7

Error Message
{noformat}
java.lang.AssertionError: An exception occurred during asynchronous invocation.
{noformat}
Stacktrace
{noformat}
java.lang.AssertionError: An exception occurred during asynchronous invocation.
	at com.gemstone.gemfire.test.dunit.AsyncInvocation.checkException(AsyncInvocation.java:155)
	at com.gemstone.gemfire.internal.cache.wan.WANTestBase.preTearDown(WANTestBase.java:3697)
	at com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.preTearDown(JUnit4DistributedTestCase.java:503)
	at com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.tearDown(JUnit4DistributedTestCase.java:477)
	at com.gemstone.gemfire.test.dunit.internal.JUnit3DistributedTestCase.tearDown(JUnit3DistributedTestCase.java:206)
	at junit.framework.TestCase.runBare(TestCase.java:146)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:252)
	at junit.framework.TestSuite.run(TestSuite.java:247)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.AssertionError
	at com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.returnConnection(ConnectionManagerImpl.java:581)
	at com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.returnConnection(ConnectionManagerImpl.java:576)
	at com.gemstone.gemfire.cache.client.internal.PoolImpl.returnConnection(PoolImpl.java:855)
	at com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventRemoteDispatcher$AckReaderThread.shutdown(GatewaySenderEventRemoteDispatcher.java:728)
	at com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventRemoteDispatcher.stopAckReaderThread(GatewaySenderEventRemoteDispatcher.java:750)
	at com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventRemoteDispatcher.stop(GatewaySenderEventRemoteDispatcher.java:765)
	at com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySenderEventProcessor.stopProcessing(AbstractGatewaySenderEventProcessor.java:1173)
	at com.gemstone.gemfire.internal.cache.wan.serial.SerialGatewaySenderImpl.stop(SerialGatewaySenderImpl.java:134)
	at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.close(GemFireCacheImpl.java:2066)
	at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.close(GemFireCacheImpl.java:1855)
	at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.close(GemFireCacheImpl.java:1851)
	at com.gemstone.gemfire.internal.cache.wan.WANTestBase.closeCache(WANTestBase.java:3711)
	at com.gemstone.gemfire.internal.cache.wan.WANTestBase.cleanupVM(WANTestBase.java:3705)
	at com.gemstone.gemfire.internal.cache.wan.WANTestBase.lambda$preTearDown$84651174$1(WANTestBase.java:3693)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at hydra.MethExecutor.executeObject(MethExecutor.java:268)
	at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:82)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	... 3 more
{noformat}


Commit 80ac9956e77b8a4e096f489ee36ce5a707ac8195 in incubator-geode's branch refs/heads/develop from [~nnag]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=80ac995 ]

GEODE-1148: Refactored the test case

	* Fixed the order of creation of cache, region, and receivers/senders
	* StopAckThread function was fixed as a part of GEODE-1588
	* WANTestBase.preTearDown has been running for a lot of other tests without failures.
	* Removing the flaky tag till failures reoccur.
	* Pause was replaced with validate receiver region sizes to make sure no send operation was running when the test was shutdown.


Commit 18c2dc3fb0067ac529ddd228c746e20f87ac2c9a in incubator-geode's branch refs/heads/develop from [~nnag]
[ https://git-wip-us.apache.org/repos/asf?p=incubator-geode.git;h=18c2dc3 ]

GEODE-1148: Removing the flaky tag

	* Test resolved as a part of prior commit.


