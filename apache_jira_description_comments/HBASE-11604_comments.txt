Attached a patch for branch 1.

+1

A config that says 'regions on master' is confusing -- regionservers only carry regions -- but as I understand it transitional so I'm ok w/ this.  Good stuff [~jxiang]

Cancelled the patch for now. Just realized that this change may impact the standalone/pseudo distributed mode. Let me think about it more.

Attached v2 with minor changes. Verified that standalone/pseudo distributed modes work fine.

Do we still need to specify two configurations?  That we are distributed and many RS to check in or is that not needed anymore?

For pseudo distributed mode, we still need to specify two configurations.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12660722/hbase-11604_v2.patch
  against trunk revision .
  ATTACHMENT ID: 12660722

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 33 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10362//console

This message is automatically generated.

bq. For pseudo distributed mode, we still need to specify two configurations.

Do you need two configs when in distributed mode too?

For distributed mode, no, we don't.  You just need to have region servers on other ports/machines.

If on one machine -- i.e. pseudo distributed -- can't we tell if the RS if ours or that of another RS?  We know our startcode?

I ask because asking for second config. just to do pseudo is going to be a little surprising and makes the setup of pseudo just a little bit more complicated.  Thanks Jimmy.

The problem is that the default RPC port is occupied by the master so the RS can't start.

The combined M+RS only puts up one port?  And on this port is the master UI and RS UI?  Or are we talking about the command ports, the ports we send protobuf over?

The combined M+RS puts up three ports: one for RPC (original RS RPC port), one for the master and RS UI (original RS web UI port), and an extra that listens to the original master web UI port that is used for redirection.

If we by default are disabling colocating meta with master, what other regions would master be serving?  Should the default be that it NOT serve regions?  Would that help?

That's right. master doesn't server regions by default.

So, which ports are clashing mighty Jibin? If M is not a RS by default, we should be good?

Agreed with Jimmy on disabling this by default. It gives a smoother migration story. 

If M doesn't use the RS ports, we will be good.

bq. If M doesn't use the RS ports, we will be good.

Is doing the above part of this patch or is this how it is now in branch-1?  Thanks Jimmy.

Neither. This patch changes the balancer so that by default no region is assigned to master.

But ports clash because though the M doesn't have any regions, it is listening on the RS port?  For pseudo distributed, we need to specify two configs still?  What are they?

[~jxiang] should we go ahead with this one. I can wait for this for 0.99.0 RC. wdyt? 

bq. But ports clash because though the M doesn't have any regions, it is listening on the RS port?
That's right. If M doesn't listen on the RS port if it doesn't have any regions, will it cause more confusing?

bq. For pseudo distributed, we need to specify two configs still? What are they?
Besides setting hbase.cluster.distributed to true, hbase.master.wait.on.regionservers.mintostart needs to be set to 1. I linked HBASE-11575 here, which has a release note about this change.

bq. should we go ahead with this one.
This is ok with me. [~stack], what do you think?


I don't understand why we need to have user put in place two configs when previous we only had the user specify one when we are NOT colocating meta and master: i.e. the old behavior.  To disable colocating meta and master we set a config?  Can't we key off that and not start RS on M node when this is set.... and internally set hbase.master.wait.on.regionservers.mintostart  to 1 w/o the user having to specify it?

Make sense. Let me fix this and update the refguid as well.

Attached v3 that set default hbase.master.wait.on.regionservers.mintostart to 1 if not configuring to put any region on master, otherwise set it to 2. Updated the refguide too. I verified now the pseudo mode can start without the extra configuration.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667550/hbase-11604_v3.patch
  against trunk revision .
  ATTACHMENT ID: 12667550

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 33 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10803//console

This message is automatically generated.

[~jxiang] do we want this patch only in branch-1? 

Yes, only for branch-1 for now.

Ok, will commit this shortly. Patch looks good. 

Attached v3.1 with minor changes to fix some flaky tests.

+1 on branch-1 only for now.  What to do on master is up in the air still I'd say but we should be fixing that soon enough.

Integrated v3.1 to branch 1. Thanks everyone.

Yeah, was running unit tests before commit. 

org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer and org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster failed for me. Did you fix those in 3.1 patch? 

Yes, these two are fixed. Thanks.

FAILURE: Integrated in HBase-1.0 #177 (See [https://builds.apache.org/job/HBase-1.0/177/])
HBASE-11604 Disable co-locating meta/master by default (jxiang: rev d283818c51d8e69a77972c880369fdbd45b3297d)
* src/main/docbkx/getting_started.xml
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManagerOnCluster.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRSKilledWhenInitializing.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannerTimeout.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestZKLessAMOnCluster.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestVisibilityLabelsWithDistributedLogReplay.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterOperationsForRegionReplicas.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterMetrics.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/TestBaseLoadBalancer.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java


Closing this issue after 0.99.0 release. 

