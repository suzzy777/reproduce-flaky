any progress on that? ;)

Oh, yep, sorry for delay, been busy :) should post first patch today or tomorrow.

Here's patch, tested on my small test rig (3 virtual boxes). Since I tried to provide the same kind of tooling as balancer does, this entailed ruby scripts changes, protos/rpc changes, new stuff in master rpc services etc, as well as new ZK tracker :( so sorry for the size of the patch. And for this piece with setting the normalization_enabled on/off flag for the table from shell - I tested that on my cluster, it works now, though I still see the warning about unknown argument, but same warning is given if I try to disable compaction for the table, for example, so that unrelated. Let me know what do you think?

I'm thinking if I need to rework part of it to allow running normalization on a specific table on the shell.

Also seems to be  unnecessary and could be improved is that changing normalization on/off for the table involves rewriting table descriptor, which in the current implementation entails region re-assignment for the whole table (??), just as with other 'alter table' subcommands.

(Oh, and this patch is for branch-1.2)

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12761477/HBASE-14367.patch
  against master branch at commit 54e8c4bf23294b53bc50e15aa92148f7994e8962.
  ATTACHMENT ID: 12761477

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/15652//console

This message is automatically generated.

oops, here's correctly-named patch for branch-1.2

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12761478/HBASE-14367-branch-1.2.v1.patch
  against branch-1.2 branch at commit 54e8c4bf23294b53bc50e15aa92148f7994e8962.
  ATTACHMENT ID: 12761478

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated 3810 checkstyle errors (more than the master's current 3808 errors).

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +       * <code>rpc SetNormalizerRunning(.SetNormalizerRunningRequest) returns (.SetNormalizerRunningResponse);</code>
+       * <code>rpc IsNormalizerEnabled(.IsNormalizerEnabledRequest) returns (.IsNormalizerEnabledResponse);</code>
+     * <code>rpc SetNormalizerRunning(.SetNormalizerRunningRequest) returns (.SetNormalizerRunningResponse);</code>
+     * <code>rpc IsNormalizerEnabled(.IsNormalizerEnabledRequest) returns (.IsNormalizerEnabledResponse);</code>
+        htd.setNormalizationEnabled(JBoolean.valueOf(arg[NORMALIZATION_ENABLED])) if arg[NORMALIZATION_ENABLED]

  {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestDistributedLogSplitting

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/15654//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/15654//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/15654//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/15654//console

This message is automatically generated.

I can post on review board, if it's easier this way?

[~larsgeorge]  [~jmspaggi] any thoughts?

Let me apply it locally and test it. I let you know.

Tested it and it works for me. lgtm. Thanks [~mantonov]

Thanks [~jmspaggi]! I'll review failed tests and long lines in next patch.

 [~ndimiduk] - would you also take a look at?

Rebased to latest 1.2, TestDistributedLogSplitting passing for me locally. Looked at checkstyles, they look exactly like the ones we have in current codebase and ignore, so I think it's fine.

Tested patch of 3 node cluster against latest branch-1.2, tested commands from shell.

[~busbey] how does it look to you for 1.2? [~jmspaggi] - are you +1 on this patch?

If it looks good I'll make patch for master as well.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764338/HBASE-14367-branch-1.2.v2.patch
  against branch-1.2 branch at commit c04d18970e066c1c5879a7ac1d261ef69cae5c3e.
  ATTACHMENT ID: 12764338

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated 3793 checkstyle errors (more than the master's current 3791 errors).

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +       * <code>rpc SetNormalizerRunning(.SetNormalizerRunningRequest) returns (.SetNormalizerRunningResponse);</code>
+       * <code>rpc IsNormalizerEnabled(.IsNormalizerEnabledRequest) returns (.IsNormalizerEnabledResponse);</code>
+     * <code>rpc SetNormalizerRunning(.SetNormalizerRunningRequest) returns (.SetNormalizerRunningResponse);</code>
+     * <code>rpc IsNormalizerEnabled(.IsNormalizerEnabledRequest) returns (.IsNormalizerEnabledResponse);</code>
+        htd.setNormalizationEnabled(JBoolean.valueOf(arg[NORMALIZATION_ENABLED])) if arg[NORMALIZATION_ENABLED]

  {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.handler.TestEnableTableHandler

     {color:red}-1 core zombie tests{color}.  There are 2 zombie test(s): 

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/15813//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/15813//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/15813//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/15813//console

This message is automatically generated.

branch-1.2 is still open. please be sure to fix the lineLength and checkstyle errors. could you add a test as well?

[~busbey] thanks for taking a look! Re checkstyle errors.. Some of these checkstyle errors are from following the codestyle used at the particular piece of code (see, for example, ZooKeeperWatcher: L 115). 

bq. Error	design	Variable 'regionNormalizerZNode' must be private and have accessor methods.	115

Are the guidelines suggest to follow the proper checkstyle as per checkslyle config in this situation, or to conform with the codestyle around? Just want to confirm.

Regarding long lines - most of them are javadocs in proto-generated java class MasterProtos.java, and one is line in ruby code (in shell), where lines longer than 100 chars seems to be used quite commonly(?)

There are many sins in the existing code base; we try not to make things worse. :)

If it were me, I'd fix the ruby code and make sure my additions conform to checkstyle. If things are in the proto generated classes there's nothing you can do, but you should not in a comment here that that's why they're staying long.

fixed long lines except protobuf-generated ones, fixed checkstyles, added test in TestAdmin2 for region normalizer (shell commands would be tested in TestShell, as they are picked up by Ruby test runner automatically).

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764743/HBASE-14367-branch-1.2.v3.patch
  against branch-1.2 branch at commit 030ae5f0415b97e5da688c1432ed53fd56990194.
  ATTACHMENT ID: 12764743

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 8 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +       * <code>rpc SetNormalizerRunning(.SetNormalizerRunningRequest) returns (.SetNormalizerRunningResponse);</code>
+       * <code>rpc IsNormalizerEnabled(.IsNormalizerEnabledRequest) returns (.IsNormalizerEnabledResponse);</code>
+     * <code>rpc SetNormalizerRunning(.SetNormalizerRunningRequest) returns (.SetNormalizerRunningResponse);</code>
+     * <code>rpc IsNormalizerEnabled(.IsNormalizerEnabledRequest) returns (.IsNormalizerEnabledResponse);</code>

  {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/15858//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/15858//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/15858//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/15858//console

This message is automatically generated.

the core tests vote looks like it's caused by a timeout on hbase-server, and hbase-shell got skipped:

{code}
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Apache HBase ...................................... SUCCESS [2.823s]
[INFO] Apache HBase - Checkstyle ......................... SUCCESS [0.444s]
[INFO] Apache HBase - Resource Bundle .................... SUCCESS [0.151s]
[INFO] Apache HBase - Annotations ........................ SUCCESS [0.834s]
[INFO] Apache HBase - Protocol ........................... SUCCESS [10.775s]
[INFO] Apache HBase - Common ............................. SUCCESS [1:22.568s]
[INFO] Apache HBase - Procedure .......................... SUCCESS [1:52.079s]
[INFO] Apache HBase - Client ............................. SUCCESS [1:20.418s]
[INFO] Apache HBase - Hadoop Compatibility ............... SUCCESS [7.197s]
[INFO] Apache HBase - Hadoop Two Compatibility ........... SUCCESS [6.854s]
[INFO] Apache HBase - Prefix Tree ........................ SUCCESS [9.750s]
[INFO] Apache HBase - Server ............................. FAILURE [1:36:05.365s]
[INFO] Apache HBase - Testing Util ....................... SKIPPED
[INFO] Apache HBase - Thrift ............................. SKIPPED
[INFO] Apache HBase - Rest ............................... SKIPPED
[INFO] Apache HBase - Shell .............................. SKIPPED
[INFO] Apache HBase - Integration Tests .................. SKIPPED
[INFO] Apache HBase - Examples ........................... SKIPPED
[INFO] Apache HBase - External Block Cache ............... SKIPPED
[INFO] Apache HBase - Assembly ........................... SKIPPED
[INFO] Apache HBase - Shaded ............................. SKIPPED
[INFO] Apache HBase - Shaded - Client .................... SKIPPED
[INFO] Apache HBase - Shaded - Server .................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1:41:21.117s
[INFO] Finished at: Fri Oct 02 11:09:37 UTC 2015
[INFO] Final Memory: 52M/645M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.18.1:test (secondPartTestsExecution) on project hbase-server: There was a timeout or other error in the fork -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :hbase-server
{code}

can you make a go at figuring out which one so you can run it locally?

'mvn test -P runLargeTests' pass on hbase-shell with this patch (there're no small or medium tests in this module). TestMasterFailover is flaky on my machine too. I'll try to test it more w/ and w/o this patch, as I doesn't look related.

okay, +1 presuming the above confirms that it isn't related.

Thanks Sean, I can reproduce TestMasterFailover w/o this patch as well (at least on branch-1.2), I'll file a jira for that.

Any more reviews? cc [~ndimiduk]

(for reference - flaky TestMasterFailover nailed down in HBASE-14545)

Tested on 3 node cluster, newly added commands work fine.

Skimmed patch, looks like standard plumbing stuff. We're good with enabled by default for both master and branch-1?

+1

I think it should be fine, as long as it's clearly stated in release notes (otherwise adoption rate would be lower :)). If people bump into issues, it's one console command to turn the feature off completely. What do you think?

If we change our mind, it'd be oneliner patch to change the default.

+1 for on by default in 1.2+ (if [~busbey] agrees).  Off by default in all earlier versions.

The underlying feature hasn't been committed to branches earlier than 1.2 anyway, so it's 1.2+.

Fine by me.

-- 
Sean



Patch for master.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764923/HBASE-14367-v1.patch
  against master branch at commit c5a9895ada8a7505fe3dfec7298edf85e9812ec5.
  ATTACHMENT ID: 12764923

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 8 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 protoc{color}.  The applied patch does not increase the total number of protoc compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +       * <code>rpc Normalize(.hbase.pb.NormalizeRequest) returns (.hbase.pb.NormalizeResponse);</code>
+       * <code>rpc SetNormalizerRunning(.hbase.pb.SetNormalizerRunningRequest) returns (.hbase.pb.SetNormalizerRunningResponse);</code>
+       * <code>rpc IsNormalizerEnabled(.hbase.pb.IsNormalizerEnabledRequest) returns (.hbase.pb.IsNormalizerEnabledResponse);</code>
+     * <code>rpc SetNormalizerRunning(.hbase.pb.SetNormalizerRunningRequest) returns (.hbase.pb.SetNormalizerRunningResponse);</code>
+     * <code>rpc IsNormalizerEnabled(.hbase.pb.IsNormalizerEnabledRequest) returns (.hbase.pb.IsNormalizerEnabledResponse);</code>

  {color:green}+1 site{color}.  The mvn post-site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/15869//testReport/
Release Findbugs (version 2.0.3) 	warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/15869//artifact/patchprocess/newFindbugsWarnings.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/15869//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/15869//console

This message is automatically generated.

Committed to master, branch-1, branch-1.2.

Thanks for reviews!

(long lines are from proto-generated code)

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764929/HBASE-14367-branch-1.v1.patch
  against branch-1 branch at commit 19045a5ea759392b5a6b8bd8001a3dd9dd5245fe.
  ATTACHMENT ID: 12764929

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 8 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/15870//console

This message is automatically generated.

SUCCESS: Integrated in HBase-1.2-IT #188 (See [https://builds.apache.org/job/HBase-1.2-IT/188/])
HBASE-14367 Add normalization support to shell (antonov: rev 0ba68fce16472442a188707d2d04d1378ba8b97b)
* hbase-shell/src/main/ruby/shell/commands/normalize.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java
* hbase-shell/src/main/ruby/shell.rb
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java
* hbase-protocol/src/main/protobuf/RegionNormalizer.proto
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_enabled.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_switch.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* hbase-client/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZooKeeperWatcher.java
* hbase-protocol/pom.xml
* hbase-shell/src/main/ruby/hbase/admin.rb
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java
* hbase-protocol/src/main/protobuf/Master.proto
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RegionNormalizerProtos.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java


SUCCESS: Integrated in HBase-1.3-IT #207 (See [https://builds.apache.org/job/HBase-1.3-IT/207/])
HBASE-14367 Add normalization support to shell (antonov: rev b9bfd6f7e33b6d94c427322af3be062460cbdd0a)
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java
* hbase-protocol/src/main/protobuf/Master.proto
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* hbase-protocol/src/main/protobuf/RegionNormalizer.proto
* hbase-shell/src/main/ruby/shell/commands/normalizer_switch.rb
* hbase-shell/src/main/ruby/hbase/admin.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_enabled.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java
* hbase-protocol/pom.xml
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RegionNormalizerProtos.java
* hbase-shell/src/main/ruby/shell/commands/normalize.rb
* hbase-client/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZooKeeperWatcher.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java
* hbase-shell/src/main/ruby/shell.rb
* hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java


FAILURE: Integrated in HBase-1.2 #225 (See [https://builds.apache.org/job/HBase-1.2/225/])
HBASE-14367 Add normalization support to shell (antonov: rev 0ba68fce16472442a188707d2d04d1378ba8b97b)
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_switch.rb
* hbase-client/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZooKeeperWatcher.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* hbase-protocol/src/main/protobuf/Master.proto
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java
* hbase-protocol/pom.xml
* hbase-shell/src/main/ruby/shell.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RegionNormalizerProtos.java
* hbase-shell/src/main/ruby/hbase/admin.rb
* hbase-shell/src/main/ruby/shell/commands/normalize.rb
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_enabled.rb
* hbase-protocol/src/main/protobuf/RegionNormalizer.proto


FAILURE: Integrated in HBase-TRUNK #6871 (See [https://builds.apache.org/job/HBase-TRUNK/6871/])
HBASE-14367 Add normalization support to shell (antonov: rev 19045a5ea759392b5a6b8bd8001a3dd9dd5245fe)
* hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* hbase-shell/src/main/ruby/shell.rb
* hbase-protocol/src/main/protobuf/RegionNormalizer.proto
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java
* hbase-protocol/src/main/protobuf/Master.proto
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java
* hbase-protocol/pom.xml
* hbase-client/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZooKeeperWatcher.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java
* hbase-shell/src/main/ruby/hbase/admin.rb
* hbase-shell/src/main/ruby/shell/commands/normalizer_enabled.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RegionNormalizerProtos.java
* hbase-shell/src/main/ruby/shell/commands/normalize.rb
* hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_switch.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java


FAILURE: Integrated in HBase-1.3 #232 (See [https://builds.apache.org/job/HBase-1.3/232/])
HBASE-14367 Add normalization support to shell (antonov: rev b9bfd6f7e33b6d94c427322af3be062460cbdd0a)
* hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_enabled.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java
* hbase-protocol/pom.xml
* hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
* hbase-protocol/src/main/protobuf/RegionNormalizer.proto
* hbase-protocol/src/main/protobuf/Master.proto
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java
* hbase-shell/src/main/ruby/shell/commands/normalize.rb
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java
* hbase-shell/src/main/ruby/hbase/admin.rb
* hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java
* hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
* hbase-shell/src/main/ruby/shell.rb
* hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java
* hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RegionNormalizerProtos.java
* hbase-shell/src/main/ruby/shell/commands/normalizer_switch.rb
* hbase-client/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZooKeeperWatcher.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java


Nice one [~mantonov]

Not sure if it's a bug, but when I execute "alter 'METRIC_RECORD', {NORMALIZATION_ENABLED => 'true'}" I see a warning "Unknown argument ignored: NORMALIZATION_ENABLED" which looks confusing.

{code}
hbase(main):002:0> alter 'METRIC_RECORD', {NORMALIZATION_ENABLED => 'true'}
Unknown argument ignored: NORMALIZATION_ENABLED
Updating all regions with the new schema...
1/1 regions updated.
Done.
0 row(s) in 1.9210 seconds

hbase(main):003:0> describe 'METRIC_RECORD'
Table METRIC_RECORD is ENABLED                                                                                                                        
METRIC_RECORD, {TABLE_ATTRIBUTES => {NORMALIZATION_ENABLED => 'true'...
{code}

Same for alter_async

In any case, alter command enables the  table normalization successfully.

I think this is bug, but not specific to normalization commands. I remember seeing the same error message while updating flag COMPACTION_ENABLED (does it show the same warning for you?) I don't have the code handy but I believe for alter command to not complain about unknown argument we need to add options like these to separate list. Could you please file a separate jira for that?

I am trying to create a new table and set the NORMALIZATION_ENABLED as true, but seems like the argument NORMALIZATION_ENABLED is being ignored. And the attribute NORMALIZATION_ENABLED is not displayed on doing a desc command on that table

{code}
hbase(main):020:0> create 'test-table-4', 'cf', {NORMALIZATION_ENABLED => 'true'}
An argument ignored (unknown or overridden): NORMALIZATION_ENABLED
0 row(s) in 4.2670 seconds

=> Hbase::Table - test-table-4
hbase(main):021:0> desc 'test-table-4'
Table test-table-4 is ENABLED                                                                                                                                                                               
test-table-4                                                                                                                                                                                                
COLUMN FAMILIES DESCRIPTION                                                                                                                                                                                 
{NAME => 'cf', BLOOMFILTER => 'ROW', VERSIONS => '1', IN_MEMORY => 'false', KEEP_DELETED_CELLS => 'FALSE', DATA_BLOCK_ENCODING => 'NONE', TTL => 'FOREVER', COMPRESSION => 'NONE', MIN_VERSIONS => '0', BLOC
KCACHE => 'true', BLOCKSIZE => '65536', REPLICATION_SCOPE => '0'}                                                                                                                                           
1 row(s) in 0.0430 seconds
{code}

However, on doing an alter command on that table we can set the NORMALIZATION_ENABLED attribute for that table
{code}
hbase(main):022:0> alter 'test-table-4', {NORMALIZATION_ENABLED => 'true'}
Unknown argument ignored: NORMALIZATION_ENABLED
Updating all regions with the new schema...
1/1 regions updated.
Done.
0 row(s) in 2.3640 seconds

hbase(main):023:0> desc 'test-table-4'
Table test-table-4 is ENABLED                                                                                                                                                                               
test-table-4, {TABLE_ATTRIBUTES => {NORMALIZATION_ENABLED => 'true'}                                                                                                                                        
COLUMN FAMILIES DESCRIPTION                                                                                                                                                                                 
{NAME => 'cf', BLOOMFILTER => 'ROW', VERSIONS => '1', IN_MEMORY => 'false', KEEP_DELETED_CELLS => 'FALSE', DATA_BLOCK_ENCODING => 'NONE', TTL => 'FOREVER', COMPRESSION => 'NONE', MIN_VERSIONS => '0', BLOC
KCACHE => 'true', BLOCKSIZE => '65536', REPLICATION_SCOPE => '0'}                                                                                                                                           
1 row(s) in 0.0190 seconds
{code}

I think it would be better to have a single step process to enable normalization while creating the table itself, rather than a two step process to alter the table later on to enable normalization

This is a defect. Please open a different JIRA. Should be pretty easy to fix.

Was the defect filed? What is the JIRA? Could it be linked here? I dislike dangling comments for some reason. :(

Opened this JIRA https://issues.apache.org/jira/browse/HBASE-14804 for create table comment, and it has been resolved

The attribute on the table's name change from NORMALIZATION_ENABLED to NORMALIZATION_MODE over in HBASE-15073... I updated the release note here to try and save on confusion if folks saw NORMALIZATION_ENABLED

