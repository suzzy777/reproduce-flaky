As said in the comment, this test is used to confirm that a compaction in dead server will not cause FNFE as it will fail when writing the compaction marker. But the test is a little hard to implement because the master will send a YouAreDead message to the RS and the RS will shutdown itself...

Will take a look to see what's wrong with the current hook.

I spent a bit time on this test and the following is what I found.

For current test, most likely the assertion fails for the second parameterized run where table region and hbase:meta were on same server before the watcher.getRecoverableZooKeeper().delete() call.

I also verified the un-writable store condition which causes the compaction request to come back without actually triggering the compaction, leading to fail() assertion.

In the modified tests, I would detect whether table region is on the same server as hbase:meta. If so, I would move the region to the other server before issuing the watcher.getRecoverableZooKeeper().delete() call.

I have looped both tests 9 times locally which passed.

Looped each test 19 times locally which all passed.

It seems the master tries do update the meta table but the first PUT is submitted to the rs which is suspend in the test case. Hence, the failure of wal sync for the meta region in the suspended rs will kill it self. And then the region evaluated in the test case will be closed also if it is located at the suspended rs.

[~tedyu]'s solution LGTM.

The another question is, should we clear the cache of meta table when Master is trying to update the location of meta table, or to do nothing as the cache clear will happen automatically after the submission failure?

Thanks for digging in here. So the problem is, if meta is on the same RS then reassign will bring the RS down since we need to write something to meta and then the RS will find out that the WAL is broken and abort itself.

Then I'm OK with approach on moving meta first before suspending the RS. But it is weird to let TestXXXAsyncWal extends TestXXXSyncWal, can we still use Parameterized to run the test? Or please introduce a base class and then two sub classes for SyncWal and AsyncWal if you really want to keep the tests in MediumTests.

Thanks.

bq. it is weird to let TestXXXAsyncWal extends TestXXXSyncWal

How about the other way around ? SyncWal test extends AsyncWal test.

bq. Or please introduce a base class 
The base class would be empty. So it seems my suggestion above is more intuitive.

{code}
+      // when region is on same server as hbase:meta, writes would be disabled when
+      // it is opened on new server.
+      // so it is moved to a different server
{code}
Please add the root cause to the comment.

{code}
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.apache.hadoop.hbase.regionserver.TestCompactionInDeadRegionServerWithSyncWal
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.499 s - in org.apache.hadoop.hbase.regionserver.TestCompactionInDeadRegionServerWithSyncWal
[INFO] Running org.apache.hadoop.hbase.regionserver.TestCompactionInDeadRegionServerWithAsyncWal
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.552 s - in org.apache.hadoop.hbase.regionserver.TestCompactionInDeadRegionServerWithAsyncWal
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0
{code}
It seems the tests don't take much time so it should be ok to use the parameterized tests.

OK, then please keep it in the parameterized way.

Patch v6 keeps parameterization.

{code}
region = (HRegion) rsToSuspend.getRegions(TABLE_NAME).get(0);
{code}

After the coprocessor interface cleanup maybe we do not need the cast here? You can check and fix before commit.

+1 on v6.

Thanks.

looped the tests locally 20 times. The result LGTM.
+1

Patch v7 changes region to be of Region type.

However, a cast is needed for calling compact(true) because that method is not in Region interface.

I mean the return type of getRegions method is HRegion already...

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |
| {color:blue}0{color} | {color:blue} patch {color} | {color:blue}  0m  2s{color} | {color:blue} The patch file was not named according to hbase's naming conventions. Please see https://yetus.apache.org/documentation/0.6.0/precommit-patchnames for instructions. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m  0s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  9s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  6m  4s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 29s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 57s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 53m 18s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 2.7.4 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 90m 27s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 17s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}164m 14s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19056 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12899935/19056.v7.txt |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 490e6871ea56 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / abb535eef6 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/10129/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/10129/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 11s{color} | {color:blue} Docker mode activated. {color} |
| {color:blue}0{color} | {color:blue} patch {color} | {color:blue}  0m  1s{color} | {color:blue} The patch file was not named according to hbase's naming conventions. Please see https://yetus.apache.org/documentation/0.6.0/precommit-patchnames for instructions. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 32s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 17s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  6m 51s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 34s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 30s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 58m 44s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 2.7.4 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}143m 13s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 19s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}224m 37s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19056 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12899928/19056.v6.txt |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 0161ed6c2f08 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / abb535eef6 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/10125/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/10125/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



+1 on v7

Pushed to master and branch-2.

Thanks [~tedyu] for contributing and thanks [~chia7712] for reviewing.

Will open new issue for backporting to branch-1.x.

Why not backporting the patch to branch-1 here? The root cause differs from master?

{quote}
The root cause differs from master?
{quote}
I do not know so just open a new issue HBASE-19415.

FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4167 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4167/])
HBASE-19056 TestCompactionInDeadRegionServer is top of the flakies (zhangduo: rev 3c02d9681b2d777677ce2ce1b21c2537ddd91817)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactionInDeadRegionServer.java


FAILURE: Integrated in Jenkins build HBase-1.4 #1047 (See [https://builds.apache.org/job/HBase-1.4/1047/])
HBASE-19056 TestCompactionInDeadRegionServer is top of the flakies (tedyu: rev 795f0e402018f573d8690a4dc5a57db1d43bb43d)
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactionInDeadRegionServer.java


