Also on 4.1: https://ci-cassandra.apache.org/job/Cassandra-4.1/8/testReport/org.apache.cassandra.transport/CQLConnectionTest/handleCorruptionOfLargeMessageFrame_cdc/

The issue in both cases is the connection is null [here|https://github.com/apache/cassandra/blob/cassandra-4.0/src/java/org/apache/cassandra/transport/Dispatcher.java#L76] causing an NPE.  I can add null protection there to bail out, but I'm not sure that's the best solution. [~samt] it looks like you added this in CASSANDRA-15299, can you advise?

Hmm, there's already a null check directly before {{Dispatcher::processRequest}} is called. In this test it should only ever be called from {{InitialConnectionHandler::decode}} during the hanhdshake because as soon as that's done, we corrupt a frame of the next message which is caught before reaching {{processRequest}} . Do you have logs showing the NPE at all? The 4.0 test you linked to looks to me like it passed and I get a 404 for the 4.1 link.   


Here it is from 4.1:

{noformat}
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,926 ExceptionHandlers.java:230 - Unexpected exception during request; channel = [id: 0x428e035b, L:/127.0.0.1:42729 - R:/127.0.0.1:53532]
[junit-timeout] java.lang.NullPointerException: null
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:93)
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:141)
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:168)
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.lambda$dispatch$0(Dispatcher.java:82)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:81)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:47)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:57)
[junit-timeout]         at org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:120)
[junit-timeout]         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
[junit-timeout]         at java.lang.Thread.run(Thread.java:748)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,926 ExceptionHandlers.java:230 - Unexpected exception during request; channel = [id: 0x428e035b, L:/127.0.0.1:42729 - R:/127.0.0.1:53532]
[junit-timeout] java.lang.NullPointerException: null
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:93)
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:141)
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:168)
[junit-timeout]         at org.apache.cassandra.transport.Dispatcher.lambda$dispatch$0(Dispatcher.java:82)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:81)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:47)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:57)
[junit-timeout]         at org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:120)
[junit-timeout]         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
[junit-timeout]         at java.lang.Thread.run(Thread.java:748)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 - Exception in thread "Native-Transport-Requests-2"
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 - Exception in thread "Native-Transport-Requests-1"
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 - java.lang.NullPointerException
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 -         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:170)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 -         at org.apache.cassandra.transport.Dispatcher.lambda$dispatch$0(Dispatcher.java:82)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:81)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:47)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,929 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:57)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:120)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
[junit-timeout] ERROR [Native-Transport-Requests-2] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at java.lang.Thread.run(Thread.java:748)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 - java.lang.NullPointerException
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at org.apache.cassandra.transport.Dispatcher.processRequest(Dispatcher.java:170)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at org.apache.cassandra.transport.Dispatcher.lambda$dispatch$0(Dispatcher.java:82)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:81)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:47)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:57)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:120)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
[junit-timeout] ERROR [Native-Transport-Requests-1] 2022-06-10 10:37:29,930 SubstituteLogger.java:265 -         at java.lang.Thread.run(Thread.java:748)
[junit-timeout] INFO  [main] 2022-06-10 10:37:30,909 Server.java:176 - Stop listening for CQL clients
{noformat}

Thanks, I still don't see how the connection can be null though so I think it's probably more likely that it's the {{getVersion}} which is returning null, though I still don't see why/how. I'll take it and investigate next week.

I think you're right and I actually meant the connection in the later processRequest [here|https://github.com/apache/cassandra/blob/cassandra-4.0/src/java/org/apache/cassandra/transport/Dispatcher.java#L105] which makes sense.  Thanks!

The problem turned out to be that the function to inject corruption wasn't always doing so. In cases where the expected corruption wasn't causing the connection to be closed during processing of the second frame of the first large message, the test would go on to process that message without attaching the connection instance to the request, causing the NPE. I've fixed the corruption injection and also made sure the connection is always associated to the request, which would have made the reason for the test failures clearer in the first case.

This is purely a test fix and I've linked to CI with 1000x runs of {{CQLConnectionTest}}, whereas I could reliably trigger failure with a 100x repeat before. The patch applies cleanly to 4.0, 4.1 & trunk.

|[17630-4.0|https://github.com/beobal/cassandra/commits/17630-4.0]|[Circle|https://app.circleci.com/pipelines/github/beobal/cassandra/402/workflows/8326a843-17da-41c2-85e2-f81a7d1c0cab/jobs/4011/steps]|
|[17630-4.1|https://github.com/beobal/cassandra/commits/17630-4.1]|[Circle|https://app.circleci.com/pipelines/github/beobal/cassandra/403/workflows/9ccab1e8-3aa7-4db7-b615-547f2e32a98a/jobs/4013/steps]|
|[17630-trunk|https://github.com/beobal/cassandra/commits/17630-trunk]|[Circle|https://app.circleci.com/pipelines/github/beobal/cassandra/404/workflows/09b78005-8e3b-4aba-868f-e2cfd7cfeb14/jobs/4016/steps]|


[~brandon.williams]Â would you mind reviewing when you get a chance please?

Sure.  Looks good to me, I didn't think to check the test itself! +1

thanks, committed to 4.0 in {{28690e0ebc6c4df6e2e36c04c93c52f45abda9c9}} and merged to 4.1 & trunk

org.apache.cassandra.transport.CQLConnectionTest.handleCorruptionOfLargeMessageFrame-compression failure showing up for the first time w/this ticket looks suspicious.

[CI Results]
Branch: 4.1, build number: 69
butler url: [https://butler.cassandra.apache.org/#/ci/upstream/compare/Cassandra-4.1/Cassandra-4.1]
jenkins url: [https://ci-cassandra.apache.org/job/Cassandra-4.1/69/]
JIRA: CASSANDRA-17630
commit url: [https://gitbox.apache.org/repos/asf?p=cassandra.git;a=commit;h=28690e0ebc6c4df6e2e36c04c93c52f45abda9c9]
affected paths:
 * test/unit/org/apache/cassandra/transport/CQLConnectionTest.java

Build Result: UNSTABLE
Passing Tests: 47219
Failing Tests: 9
||Test|Failures|JIRA|
|org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest.testRangeQuery|4 of 66|[No JIRA found|https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=496&quickFilter=2252]|
|org.apache.cassandra.transport.CQLConnectionTest.handleCorruptionOfLargeMessageFrame-compression|1 of 66|[No JIRA found|https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=496&quickFilter=2252]|
|org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest.testCanQuerySecondaryIndex|3 of 66|[No JIRA found|https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=496&quickFilter=2252]|
|org.apache.cassandra.net.ProxyHandlerConnectionsTest.testExpireSome|9 of 66|[No JIRA found|https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=496&quickFilter=2252]|
|org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest.testIndexesOnComplexPrimaryKey|5 of 66|[No JIRA found|https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=496&quickFilter=2252]|
|org.apache.cassandra.distributed.test.SchemaTest.readRepairWithCompaction|15 of 66|CASSANDRA-17641?|
|org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest.droppingIndexInvalidatesPreparedStatements|3 of 66|[No JIRA found|https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=496&quickFilter=2252]|
|org.apache.cassandra.distributed.upgrade.BatchUpgradeTest.batchTest|17 of 66|CASSANDRA-17651?|
|org.apache.cassandra.distributed.test.ring.BootstrapTest.readWriteDuringBootstrapTest|6 of 66|[Multiple JIRAs found|https://issues.apache.org/jira/issues/?jql=project%20%3D%20CASSANDRA%20and%20resolution%20%3D%20unresolved%20and%20summary%20~%20%22*BootstrapTest*%22]|

