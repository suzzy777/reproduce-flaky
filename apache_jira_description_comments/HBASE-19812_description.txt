{noformat}
2018-01-17 06:43:48,390 INFO  [MemStoreFlusher.1] regionserver.HRegion(2516): Flushing 1/1 column families, memstore=549.25 KB
2018-01-17 06:43:48,390 DEBUG [MemStoreFlusher.1] regionserver.CompactingMemStore(205): FLUSHING TO DISK: region test,5,1516171425662.acafc22e1f8132285eae5362d0df536a.store: fam
2018-01-17 06:43:48,406 DEBUG [RpcServer.default.FPBQ.Fifo.handler=4,queue=0,port=42601-inmemoryCompactions-1516171428312] regionserver.CompactionPipeline(206): Compaction pipeline segment Type=CSLMImmutableSegment, empty=no, cellCount=17576, cellSize=562432, totalHeapSize=1828120, min timestamp=1516171428258, max timestamp=1516171428258Num uniques -1;  flattened
2018-01-17 06:43:48,406 DEBUG [MemStoreFlusher.1] regionserver.CompactionPipeline(128): Swapping pipeline suffix; before=1, new segement=null
2018-01-17 06:43:48,455 DEBUG [Time-limited test] regionserver.HRegion(2201): NOT flushing memstore for region test,5,1516171425662.acafc22e1f8132285eae5362d0df536a., flushing=true, writesEnabled=true
{noformat}

You can see that we start a background flush first, and then we decided to do an in memory compaction, at the same time we call the region.flush from test, and it find that the region is already flushing so it give up.

This test is a bit awkward that we create the table with 6 regions which start key is 0,1,2,3,4,5, but when loading data we use 'aaa' to 'zzz', so there is only one region has data. And in the above scenario the only one region gives up flushing, then there is no data, and then our test fails.