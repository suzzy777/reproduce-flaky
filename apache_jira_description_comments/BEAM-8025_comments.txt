It seems that embeded cassandra test framework fails to clean temp data: 
{code:java}
org.apache.beam.sdk.io.cassandra.CassandraIOTest > classMethod FAILED
18:47:52     com.datastax.driver.core.exceptions.NoHostAvailableException at CassandraIOTest.java:131
18:47:52 
18:47:52 org.apache.beam.sdk.io.cassandra.CassandraIOTest > classMethod FAILED
18:47:52     java.lang.NullPointerException at CassandraIOTest.java:141
18:47:52 
18:47:52 Exception (java.lang.RuntimeException) encountered during startup: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.nio.file.NoSuchFileException: /tmp/junit1713456059181051844/embedded-cassandra/data/system/local-7ad54392bcdd35a684174e047860b377/mc_txn_flush_6a9ea9b0-c433-11e9-85e1-45716b3a21f5.log
18:47:52 java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.nio.file.NoSuchFileException: /tmp/junit1713456059181051844/embedded-cassandra/data/system/local-7ad54392bcdd35a684174e047860b377/mc_txn_flush_6a9ea9b0-c433-11e9-85e1-45716b3a21f5.log
18:47:52 	at org.apache.cassandra.utils.FBUtilities.waitOnFuture(FBUtilities.java:386)
18:47:52 	at org.apache.cassandra.db.SystemKeyspace.forceBlockingFlush(SystemKeyspace.java:817)
18:47:52 	at org.apache.cassandra.db.SystemKeyspace.setBootstrapState(SystemKeyspace.java:1038)
18:47:52 	at org.apache.cassandra.service.StorageService.finishJoiningRing(StorageService.java:1073)
18:47:52 	at org.apache.cassandra.service.StorageService.joinTokenRing(StorageService.java:1000)
18:47:52 	at org.apache.cassandra.service.StorageService.initServer(StorageService.java:679)
18:47:52 	at org.apache.cassandra.service.StorageService.initServer(StorageService.java:613)
18:47:52 	at org.apache.cassandra.service.CassandraDaemon.setup(CassandraDaemon.java:379)
18:47:52 	at org.apache.cassandra.service.CassandraDaemon.activate(CassandraDaemon.java:602)
18:47:52 	at info.archinnov.achilles.embedded.ServerStarter.lambda$start$0(ServerStarter.java:163)
18:47:52 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
18:47:52 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
18:47:52 	at java.lang.Thread.run(Thread.java:748)
18:47:52 Caused by: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.nio.file.NoSuchFileException: /tmp/junit1713456059181051844/embedded-cassandra/data/system/local-7ad54392bcdd35a684174e047860b377/mc_txn_flush_6a9ea9b0-c433-11e9-85e1-45716b3a21f5.log
18:47:52 	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
18:47:52 	at java.util.concurrent.FutureTask.get(FutureTask.java:192)
18:47:52 	at org.apache.cassandra.utils.FBUtilities.waitOnFuture(FBUtilities.java:382)
18:47:52 	... 12 more
{code}


Still flaky.

Might be for another reason though:

 
{code:java}
java.lang.RuntimeException: Unable to create embedded Cassandra cluster
	at org.apache.beam.sdk.io.cassandra.CassandraIOTest.buildCluster(CassandraIOTest.java:167)
	at org.apache.beam.sdk.io.cassandra.CassandraIOTest.beforeClass(CassandraIOTest.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.RunBefores.invokeMethod(RunBefores.java:33)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:412)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
{code}
and 

 
{code:java}
java.lang.NullPointerException
	at info.archinnov.achilles.embedded.CassandraShutDownHook.shutDownNow(CassandraShutDownHook.java:81)
	at org.apache.beam.sdk.io.cassandra.CassandraIOTest.afterClass(CassandraIOTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.RunAfters.invokeMethod(RunAfters.java:46)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:412)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
{code}

Do you believe this flake indicates a real problem? Should we have Fix Version ?

Hi Kenn, no it is due to jenkins cluster load. I can give a higher timeout. But it is difficult to reproduce. I lack time a lot these weeks but I can try to take a look a it.

Just submitted a PR: [https://github.com/apache/beam/pull/11578] I put you as reviewer.

My last fix was merged, I'm waiting for 2 weeks to see if the increased retrial/retrial delay are enough to fix the flakiness issue.

I took a look at the statistics since my fix PR was merged and within 14 days, no failure. So I'm closing this ticket.

https://ci-beam.apache.org/job/beam_PreCommit_Java_Phrase/2472/testReport/junit/org.apache.beam.sdk.io.cassandra/CassandraIOTest/classMethod/

I think the ci-beam migration may have caused this to come back

The node this build ran on (apache-ci-beam-jenkins-5) had very little load (<3%CPU) at the time. It doesn't seem like this is the cause.

 

Edit: there is another flake from Kenn's PR that does appear to coincide with a high CPU period on the Jenkins node (jenkins-5 again).

This build: [https://ci-beam.apache.org/job/beam_PreCommit_Java_Phrase/2461] 

Node activity: https://photos.app.goo.gl/9D99QWnjdGz41TqT8

 

https://ci-beam.apache.org/job/beam_PreCommit_Java_Phrase/2473/testReport/junit/org.apache.beam.sdk.io.cassandra/CassandraIOTest/classMethod/

https://ci-beam.apache.org/job/beam_PreCommit_Java_Cron/3003/

[~tysonjh] if this pb is not due to load, then I have no other clue. Let's see if Luke's PR fixes it: see [my comment in Luke's PR|https://github.com/apache/beam/pull/12592#issuecomment-683620895]

Hello! Due to a bug in our Jira configuration, this issue had status:Resolved but resolution:Unresolved.

I am bulk editing these issues to have resolution:Fixed

If a different resolution is appropriate, please change it. To do this, click the "Resolve" button (you can do this even for closed issues) and set the Resolution field to the right value.

