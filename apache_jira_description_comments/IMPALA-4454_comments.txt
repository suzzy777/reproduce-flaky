This was the failing build: http://sandbox.jenkins.cloudera.com/job/impala-asf-master-core-s3/126

I think this is what's happening:

These tests are using hs2 (hiveserver2.py) which has some code that sets a timeout on the socket, and that defaults to 45sec:

{code}
def connect(host, port, timeout=45, use_ssl=False, ca_cert=None,
            user=None, password=None, kerberos_service_name='impala',
            auth_mechanism=None):
    log.info('Connecting to HiveServer2 %s:%s with %s authentication '
             'mechanism', host, port, auth_mechanism)
    sock = get_socket(host, port, use_ssl, ca_cert)
    if six.PY2:
        sock.setTimeout(timeout * 1000.)
    elif six.PY3:
        sock.set_timeout(timeout * 1000.)
{code}

Then, ExecuteStatement (and other calls) get wrapped in a {{@retry}} decorator which results in retrying the operation for some exceptions. In this case, I believe this operation is taking a really long time (maybe too much concurrency and we're doing something dumb while holding metastoreDdlLock_?), then the socket timeout closes the connection while the Catalog has actually created the kudu table and just not returned yet. Then the calling code retries and finds the table is already there. I do see that the 2nd call occurs 45sec after the first, so that fits.

I don't know why the operation is taking so long, but I think that's a separate issue since we know that Kudu seems to slow down significantly under load (even metadata operations).


I think this test code shouldn't be timing out after 45sec (we give Kudu several minutes for DDL ops now, we should probably do the same), and when it does time out DDL statements it shouldn't be retrying.


Separately we need to get more information about why this is taking so long, but that can be done after fixing the test code to unblock builds.

commit d15f86cb6fa5eb482b039f036dab3d979c7513c8
Author: Thomas Tauber-Marshall <tmarshall@cloudera.com>
Date:   Thu Nov 10 15:13:56 2016 -0800

    IMPALA-4454: test_kudu.TestShowCreateTable flaky
    
    The cause of the flakiness is Kudu CREATE TABLE operations
    that are sometimes taking a long time, leading to timeouts
    in the hiveserver2 connection. This patch adds the ability
    for tests using the 'conn' pytest fixture to specify a
    timeout to connect(), and sets a timeout of 5 minutes for
    this test.
    
    Change-Id: I2727c27ff66140ac4043bcad332cd4e1d72b255f
    Reviewed-on: http://gerrit.cloudera.org:8080/5040
    Reviewed-by: Michael Brown <mikeb@cloudera.com>
    Reviewed-by: Alex Behm <alex.behm@cloudera.com>
    Tested-by: Internal Jenkins

