[~elserj], [~julianhyde], FYI. I opened a pull request for this: https://github.com/apache/calcite/pull/457 Trivial fix.

This is fine, but what does it mean in practice? It means that the test doesn't get run before developers submit patches, doesn't get run nightly, so only gets run just before a release. The developers whose change broke the test have long since disappeared, so it falls into the lap of the release manager.

Many of our integration tests (e.g. MongoDB) are permanently broken, for these reasons.

The Pig adapter has another test class called PigAdapterTest, which still runs as a unit test. The reason I made PigRelBuilderStyleTest into an integ test is because it runs local Pig to perform result validation. Local Pig has been really flaky on CI environments and I have been unable to find a reliable solution to that problem, since these issues cannot be locally reproduced. I agree with your sentiment that ideally all functionality should be tested continuously. We can probably do a bit better with Pig tests. At the very least we can separate PigRelBuilderStyleTest into two: a unit test that only checks Pig script generation and an integ that actually does result validation by running local Pig. Will cancel this PR meanwhile.

Could you achieve that split by setting an environment variable, so that the tests do more work (but are more likely to fail) in an integration environment?

By the way, I have done a bit of work getting the suite to pass under Windows. See https://github.com/julianhyde/calcite/commit/72924ea919841ea73114fbdc7b878d6b43707cc0.

Not sure I understand your first sentence. Do you prefer that Pig tests executed in a CI environment run local Pig at a cost of intermittent test failures?

Yes. And in the CI environment an environment variable would be set indicating that the test should do more than usual (i.e. run in Pig, not just check the script).

I'm trying to avoid having to create the same tests twice: once for a CI environment and once for a non-CI environment.

I have spent a fair amount of time yesterday trying to come up with a different way to execute local Pig and it did not lead me to anything that I thought would give more stability than the current implementation that uses PigTest (which uses local Pig behind the scenes).

After my changes in https://github.com/apache/calcite/pull/397 I have not seen these failures locally. [Travis-CI builds|https://travis-ci.org/apache/calcite/builds] don't seem to fail because of this, either.

[~julianhyde] and [~elserj], you have mentioned that failures are mainly in Jenkins. Which Jenkins server is this? Can't find Calcite in [Apache's main Jenkins server|https://builds.apache.org/view/C/]. Are you also seeing Pig adapter test failures in your local environments?

If these failures are isolated to a specific Jenkins server, would it be possible to look at that server? Local Pig creates temp files in the /tmp directory. Is it possible to see if that server's /tmp is filling up?

Would be good to get to the bottom of this, rather than add conditional logic for deciding whether or not to execute local Pig, which is not ideal IMHO.

