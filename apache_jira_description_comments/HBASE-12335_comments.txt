It *should* also be the case that the average of the 99.9pct latency should be lower with this feature enabled. I'm not seeing this consistently, at least with a cluster of 3 RS's with a region replica factor of 3.

Here's a patch for master. It's ported over from my 0.98 + replicas branch. I don't have a master cluster to test with at the moment; I've been testing this on a 5-node cluster with that other build.

Updating patch, I missed a git-add.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677011/HBASE-12335.00-0.99.patch
  against trunk revision .
  ATTACHMENT ID: 12677011

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/11461//console

This message is automatically generated.

Checking the mean of the stdev is consistently passing on my test cluster, 5/5 runs. I think this is good enough for now; there may be more improvements to make both to the test and the logic for firing queries to replicas.

Reattaching for BuildBot.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677034/HBASE-12335.00.patch
  against trunk revision .
  ATTACHMENT ID: 12677034

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated 3789 checkstyle errors (more than the trunk's current 3788 errors).

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/11464//console

This message is automatically generated.

Do replicas have a better 99th percentile in your testing?

Patch lgtm.

bq. Do replicas have a better 99th percentile in your testing? 

Usually, but not always. Will need to dig deeper into logs on a failed run. You can see some recent results in https://docs.google.com/spreadsheets/d/1oapgHAtliDlH73rNH-BTme4ETxkpADFRabtvP9dZ2o0/edit?usp=sharing .

[~enis] also suggested adding meta server skipping in RestartRsHoldingTableAction. Will come back to this for another round. Will give that a go as well.

Removing meta's RS from the candidate RS's that can be clobbered improved things drastically. 99.99pct is consistently faster now, roughly 2x 99.9pct instead of 10x 99.9pct Full numbers are on a new tab in the streadsheet.

New patches for master and branch-1.

FYI, here's the script to parse output produced by this test. https://gist.github.com/ndimiduk/91af1dbc4f7ca815f21d

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677121/HBASE-12335.01.patch
  against trunk revision .
  ATTACHMENT ID: 12677121

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

                {color:red}-1 checkstyle{color}.  The applied patch generated 3792 checkstyle errors (more than the trunk's current 3791 errors).

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//artifact/patchprocess/checkstyle-aggregate.html

                Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/11467//console

This message is automatically generated.

Addressing checkstyle errors

To summarize my findings, it looks like region replicas has a very nice impact on 99.99pct latency results. Overall the stdev for these runs is minimized, which means the feature results in a much more uniform client experience. What's also interesting is the 99pct impact. With replica enabled, this jumps to 11ms, which is basically the configured replica timeout trigger (10) + 1. All these numbers come from the bottom spreadsheet I linked earlier.

These statistics are summarizing the 14 individual clients invoked in one run of this test by averaging the results. Also note that this was 4 clients over 1mm rows, so the 99.99 pct is only 25 data points. Probably these numbers are not indicative of a long-running service. All times are in ms.

||metic||without replicas||with replicas||
|stdev|55.8301|2.1845|
|mean|1.1777|1.3125|
|99pct|2.0538|11.1075|
|99.9pct|16.2626|16.2988|
|99.99pct|125.1336|28.5603|

Which is to say, it would be interesting to run this with different values of {{hbase.client.primaryCallTimeout.get}} to see how it impacts the 99pct. Probably there's a sweet spot where 99pct remains close to without replicas but we still enjoy the improvement at 3 9's and 4 9's.

[~ndimiduk] good results & observations indeed.

Skimmed.  +1  Any prescription for those of us coming behind about how to use this new stuff you've added?  Write a story into release notes.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12678076/HBASE-12335.02.patch
  against trunk revision .
  ATTACHMENT ID: 12678076

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/11511//console

This message is automatically generated.

Pushed to branch-1 and master. Thanks for having a look.

I should emphasize, we probably need to return to this test. 1mm rows / 4 client threads * 0.1 sample rate = 25k requests per client. This is a tiny number, means the 99.9pct is only 25 requests and is not very realistic vs a production workload serving billions of requests/hour.

FAILURE: Integrated in HBase-1.0 #403 (See [https://builds.apache.org/job/HBase-1.0/403/])
HBASE-12335 IntegrationTestRegionReplicaPerf is flaky (ndimiduk: rev 4a803e79e1c742ff877a3abc8cbe2939870707cf)
* hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestRegionReplicaPerf.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/YammerHistogramUtils.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/AbstractHBaseTool.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java


SUCCESS: Integrated in HBase-TRUNK #5734 (See [https://builds.apache.org/job/HBase-TRUNK/5734/])
HBASE-12335 IntegrationTestRegionReplicaPerf is flaky (ndimiduk: rev f5d6314c87b0375fd455980b0c18b650a466d840)
* hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestRegionReplicaPerf.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/YammerHistogramUtils.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/util/AbstractHBaseTool.java


Closing this issue after 0.99.2 release.

