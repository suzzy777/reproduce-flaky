GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/2781

    IGNITE-6520: Using actual AffinityReadyFuture result.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-6520

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2781.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2781
    
----
commit 568b002006b8d5ddf4b72a7cbebc6d394b3ac240
Author: Andrey Kuznetsov <stkuzma@gmail.com>
Date:   2017-09-29T14:46:23Z

    IGNITE-6520: Using actual AffinityReadyFuture result.

----


[~sboikov], please take a look at PR. It fixes this very issue, and if my logic is OK, then we are to revise other AffinityReadyFuture usages.

[~andrey-kuznetsov], changes related to affinity ready future look good, I merged this fix (also I fixed the same issue for GridNearGetFuture).

But could you please explain:
- what was the reason of hangs in IgniteCacheGetRestartTest
- you added try/catch in mapKeyToNode, what exception is thrown there?

Thanks

[~sboikov], thanks for your review.

Initially, flaky timeouts were caused by IllegalStateException in GridAffinityAssignmentCache::cachedAffinity which propagated up to GridPartitionedSingleGetFuture::mapKeyToNode and prevented the future from completion. First, I caught this possible exception, and test became to fail instead of hanging. Then I fixed the reason of IllegalStateException itself.

[~andrey-kuznetsov], as I understand after this fix added try/catch is not need. Fix is merged, closing this issue.

Thanks

[~sboikov], could you please tell why frozen-forever future is better than failed one (in case of RuntimeException)?

[~andrey-kuznetsov], such 'fix' with try/catch (Throwable e) is ugly. If we fix hangs in such way then we will end up with try/catch around every method call in Ignite. If there are problems with internal nodesByPartition API then this API should be fixed instead.

Github user andrey-kuznetsov closed the pull request at:

    https://github.com/apache/ignite/pull/2781


Is it possible to unmute IgniteCacheGetRestartTest.testGetRestartReplicated() ? Or should we wait for additional fixes?

[~dpavlov], we have another issue related to this test method -- IGNITE-6006. I coudn't reproduce failure described there, so I need some extra time to investigate it.

Hi [~andrey-kuznetsov], could I ask you to unmute test(s) when it fixed? Alternatively you can notify me and I will unmute test.

As far as I see now test described in this ticket is passing: https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCacheRestarts2&branch_Ignite20Tests=%3Cdefault%3E&tab=buildTypeStatusDiv
may be we can unmute it now.


[~dpavlov], I've marked this test as fixed on TC, but it's still visible in 'muted problems' tab for some reason. Please check its state.

Hi [~andrey-kuznetsov], there is second option related to muted state. I've now unmuted test
!unmute.jpg.png!

Thanks, [~dpavlov]. Probably I have less permissions than you and I can't mute/unmute explicitly.

