Failed again: [https://builds.apache.org/job/kafka-pr-jdk14-scala2.13/1225/testReport/junit/org.apache.kafka.connect.integration/BlockingConnectorTest/testBlockInConnectorStop/]

[~bchen225242] I have a hypothesis for why these tests are failing but I cannot reproduce locally and the Jenkins logs I've been able to find are incomplete (based on lines like "{{...[truncated 2495514 chars]..."}}). Is there a way to get complete logs for this test from Jenkins?

I think what might be happening is that the worker is taking too long to initialize and the first request [to create a connector|https://github.com/apache/kafka/blob/14137def712a43b5bbbf02b067f2b1d4a12926b6/connect/runtime/src/test/java/org/apache/kafka/connect/integration/BlockingConnectorTest.java#L140] is timing out. This isn't a problem in other integration tests because the REST request timeout for Connect is 90 seconds, but that timeout is [artificially reduced|https://github.com/apache/kafka/blob/14137def712a43b5bbbf02b067f2b1d4a12926b6/connect/runtime/src/test/java/org/apache/kafka/connect/integration/BlockingConnectorTest.java#L66-L67] for these tests since some requests are supposed to time out and minute-and-a-half-long integration tests would be painful to deal with.

This is impossible to verify without either a reproduction or complete logs from the test run, though, and I can't reproduce locally.

Attempted a fix with [https://github.com/apache/kafka/pull/8928]. If I can get some assistance from anyone with access to Jenkins to try to verify the effectiveness of that fix, that'd be great.

{code:java}
Stacktraceorg.opentest4j.AssertionFailedError: Condition not met within timeout 30000. Worker did not complete startup in time ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at org.apache.kafka.test.TestUtils.lambda$waitForCondition$3(TestUtils.java:303)
	at org.apache.kafka.test.TestUtils.retryOnExceptionWithTimeout(TestUtils.java:351)
	at org.apache.kafka.test.TestUtils.retryOnExceptionWithTimeout(TestUtils.java:319)
	at org.apache.kafka.test.TestUtils.waitForCondition(TestUtils.java:300)
	at org.apache.kafka.test.TestUtils.waitForCondition(TestUtils.java:290)
	at org.apache.kafka.connect.integration.BlockingConnectorTest.setup(BlockingConnectorTest.java:133){code}

Error happened in tests in BlockingConnectorTests.

ex: [https://ci-builds.apache.org/job/Kafka/job/kafka-trunk-jdk8/475/testReport/junit/org.apache.kafka.connect.integration/BlockingConnectorTest/testBlockInConnectorStop/]

 

[https://ci-builds.apache.org/job/Kafka/job/kafka-trunk-jdk8/475/testReport/junit/org.apache.kafka.connect.integration/BlockingConnectorTest/testBlockInConnectorConfig/]

\

Failed in setup: [https://github.com/apache/kafka/pull/10134/checks?check_run_id=1915517987] 
{quote} {{org.opentest4j.AssertionFailedError: Condition not met within timeout 30000. Worker did not complete startup in time ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at org.apache.kafka.test.TestUtils.lambda$waitForCondition$3(TestUtils.java:303)
	at org.apache.kafka.test.TestUtils.retryOnExceptionWithTimeout(TestUtils.java:351)
	at org.apache.kafka.test.TestUtils.retryOnExceptionWithTimeout(TestUtils.java:319)
	at org.apache.kafka.test.TestUtils.waitForCondition(TestUtils.java:300)
	at org.apache.kafka.test.TestUtils.waitForCondition(TestUtils.java:290)
	at org.apache.kafka.connect.integration.BlockingConnectorTest.setup(BlockingConnectorTest.java:133)}}
{quote}

[~mjsax] FYI, there's a PR up for this from [~showuon] if you have time for a quick one-liner: [https://github.com/apache/kafka/pull/10118]

 

I think the change is described and justified in the PR well-enough that you might be able to review, even if you're not very familiar with Connect.

