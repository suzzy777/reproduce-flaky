Hmm. Can't seem to repro this after running multiple iterations. Assigning to [~idownes] to take a look.

Unable to reproduce either failure on GCC 4.8.1 with cxx11 or 4.1.2 after 1000 iterations.

The second occurred (for Jie) using 4.4 so I'll try that next.

Still unable to reproduce on GCC 4.4 with --without-cxx11 after 1000+ iterations.

[~vinodkone] or [~jieyu] could you please document the environment you observed this in?

I observed this on Apache Jenkins a few times.

For example: https://builds.apache.org/job/Mesos-Trunk-Ubuntu-Build-Out-Of-Src-Set-JAVA_HOME/2029/console

The Jenkins machine is a Ubuntu 12.04 w/ gcc 4.6.


I believe the cause (at least for the second failure) is exceeding the child's stack. I've reduced the stack allocation for each thread the child creates:

Review: https://reviews.apache.org/r/19952/

Updated review also cleans up the passing of thread ids from child to test.

commit 7601fd1e18602e977daee1d693e8581677f7a6a3
Author: Ian Downes <ian.downes@gmail.com>
Date:   Thu Apr 3 16:07:17 2014 -0700

    Fixed ProcTest.MultipleThreads test.
    
    Review: https://reviews.apache.org/r/19952


Reopen this as it is still flaky on my machine:

[ RUN      ] ProcTest.MultipleThreads
../../../../../mesos/3rdparty/libprocess/3rdparty/stout/tests/proc_tests.cpp:164: Failure
read is NONE
[  FAILED  ] ProcTest.MultipleThreads (1 ms)

Looks like it was flaky on Jenkins as well, [~idownes] can you please take a look?

https://reviews.apache.org/r/20632

commit 0a4c4d91524b3f7342d408fabb9a72c6be9a2add
Author: Ian Downes <idownes@twitter.com>
Date:   Wed Apr 23 13:37:17 2014 -0700

    Correct and simplify the ProcTests for threads.

    Using clone() for creating threads is not advised because glibc expects
    thread local storage to be set up in particular ways.

    Review: https://reviews.apache.org/r/20632

