{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12990952/PHOENIX-5676-4.x-HBase-1.5.patch
  against 4.x-HBase-1.5 branch at commit beb6457086c8e51fc8be5eceb468a1edf8a358b7.
  ATTACHMENT ID: 12990952

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +                    + " (ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR, CODE VARCHAR) COLUMN_ENCODED_BYTES=0");
+                indexTableTTL = indexHTable.getTableDescriptor().getColumnFamilies()[0].getTimeToLive();
+            logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+                    logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+                    logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())),
+            logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+     * @param indexRowKeys The set of rowKeys this task is dealing with. Not supposed to be shared with any other
+    private void verifyIndexRows(ArrayList<KeyRange> keyRanges, Set<byte[]> indexRowKeys) throws IOException {
+                    logToIndexToolOutputTable(null, result.getRow(), 0, getMaxTimestamp(Arrays.asList(result.rawCells())), errorMsg);
+                if (indexTableTTL != HConstants.FOREVER && ts < (currentTime - (long)indexTableTTL * 1000)) {

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3304//testReport/
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3304//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12990959/PHOENIX-5676-master.patch
  against master branch at commit beb6457086c8e51fc8be5eceb468a1edf8a358b7.
  ATTACHMENT ID: 12990959

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +                    + " (ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR, CODE VARCHAR) COLUMN_ENCODED_BYTES=0");
+            ColumnFamilyDescriptorBuilder builder = ColumnFamilyDescriptorBuilder.newBuilder(desc).setTimeToLive(1);
+                indexTableTTL = indexHTable.getTableDescriptor().getColumnFamilies()[0].getTimeToLive();
+            logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+                    logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+                    logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())),
+            logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+     * @param indexRowKeys The set of rowKeys this task is dealing with. Not supposed to be shared with any other
+    private void verifyIndexRows(ArrayList<KeyRange> keyRanges, Set<byte[]> indexRowKeys) throws IOException {
+                    logToIndexToolOutputTable(null, result.getRow(), 0, getMaxTimestamp(Arrays.asList(result.rawCells())), errorMsg);

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3306//testReport/
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3306//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12990960/PHOENIX-5676-4.x-HBase-1.5.patch
  against 4.x-HBase-1.5 branch at commit beb6457086c8e51fc8be5eceb468a1edf8a358b7.
  ATTACHMENT ID: 12990960

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +                    + " (ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR, CODE VARCHAR) COLUMN_ENCODED_BYTES=0");
+                indexTableTTL = indexHTable.getTableDescriptor().getColumnFamilies()[0].getTimeToLive();
+            logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+                    logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+                    logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())),
+            logToIndexToolOutputTable(dataRow.getRow(), indexRow.getRow(), ts, getMaxTimestamp(Arrays.asList(indexRow.rawCells())), errorMsg);
+     * @param indexRowKeys The set of rowKeys this task is dealing with. Not supposed to be shared with any other
+    private void verifyIndexRows(ArrayList<KeyRange> keyRanges, Set<byte[]> indexRowKeys) throws IOException {
+                    logToIndexToolOutputTable(null, result.getRow(), 0, getMaxTimestamp(Arrays.asList(result.rawCells())), errorMsg);
+                if (indexTableTTL != HConstants.FOREVER && ts < (currentTime - (long)indexTableTTL * 1000)) {

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3307//testReport/
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3307//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12991058/PHOENIX-5676-4.x-HBase-1.5.002.patch
  against 4.x-HBase-1.5 branch at commit 52e5e2ae320be9be649188b0208d3b05cbe7bedc.
  ATTACHMENT ID: 12991058

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +                    + " (ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR, CODE VARCHAR) COLUMN_ENCODED_BYTES=0");
+                indexTableTTL = indexHTable.getTableDescriptor().getColumnFamilies()[0].getTimeToLive();

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3323//testReport/
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3323//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12991062/PHOENIX-5676-master.002.patch
  against master branch at commit 52e5e2ae320be9be649188b0208d3b05cbe7bedc.
  ATTACHMENT ID: 12991062

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3324//testReport/
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/3324//console

This message is automatically generated.

SUCCESS: Integrated in Jenkins build Phoenix-4.x-HBase-1.5 #249 (See [https://builds.apache.org/job/Phoenix-4.x-HBase-1.5/249/])
PHOENIX-5676 Inline-verification from IndexTool does not handle (abhishek: rev c0506f155b48a01d2a5d780758e2ca9b737bf76c)
* (edit) phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java
* (edit) phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java


FAILURE: Integrated in Jenkins build Phoenix-4.x-HBase-1.3 #655 (See [https://builds.apache.org/job/Phoenix-4.x-HBase-1.3/655/])
PHOENIX-5676 Inline-verification from IndexTool does not handle (abhishek: rev a189be530e53fe321b01a48cb7482aff555519ec)
* (edit) phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java
* (edit) phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java


ABORTED: Integrated in Jenkins build Phoenix-4.x-HBase-1.4 #370 (See [https://builds.apache.org/job/Phoenix-4.x-HBase-1.4/370/])
PHOENIX-5676 Inline-verification from IndexTool does not handle (abhishek: rev 90126c49b0877dcf6bbdd58e421e8228171f8204)
* (edit) phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java
* (edit) phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java


FAILURE: Integrated in Jenkins build PreCommit-PHOENIX-Build #3326 (See [https://builds.apache.org/job/PreCommit-PHOENIX-Build/3326/])
PHOENIX-5676 Inline-verification from IndexTool does not handle (abhishek: rev 05a44ad162181cd63ba6d7ad00a259fa17a6c60c)
* (edit) phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java
* (edit) phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java


