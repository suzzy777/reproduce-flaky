The variable importance computation involves randomization inherently. So it is hard to reproduce this error consistently. But, I did try to run the offending query multiple times, and it looks like with the latest code, the failure happens around 4.3% of the time (26 failures in 600 runs). I tried to see if this is a result of some changes that have gone into RF/DT post 1.13 by running the same experiment with 1.13 code base. The failure happens there too, at around 4.8% (29 failures in 600 runs).

The failures happen even when we tune various hyper params. For instance, I tried increasing the value of the following hyper params in the offending query: num_permutations and num_trees. I also tried to increase the number of rows in the training data. But, failure happens sporadically in all cases.

GitHub user njayaram2 opened a pull request:

    https://github.com/apache/madlib/pull/258

    RF: Comment out assert in flaky install check query

    JIRA: MADLIB-1225
    
    The variable importance computation involves randomization inherently.
    So it is hard to reproduce this error consistently. This commit comments
    out the assert for now (the failure rate was around 4.3%, when tested over
    600 runs).
    
    Closes #258

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/madlib/madlib bugfix/rf/flaky-install-check

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/madlib/pull/258.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #258
    
----
commit f2059aa35de5ab0827cf1d9fa0e39179a6190b49
Author: Nandish Jayaram <njayaram@...>
Date:   2018-04-07T00:16:17Z

    RF: Comment out assert in flaky install check query
    
    JIRA: MADLIB-1225
    
    The variable importance computation involves randomization inherently.
    So it is hard to reproduce this error consistently. This commit comments
    out the assert for now (the failure rate was around 4.3%, when tested over
    600 runs).
    
    Closes #258

----


Github user asfgit closed the pull request at:

    https://github.com/apache/madlib/pull/258


Github user asfgit closed the pull request at:

    https://github.com/apache/madlib/pull/258


