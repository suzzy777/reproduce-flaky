Is there a reason the wait strategy cannot be a plugin? If so the strategy name could be specified as either an attribute of the configuration element or as a standalone element beneath it (at the same level as Appenders, Proeprties, and Loggers).

[~rgoers] I had not considered this, because only AsyncLoggerConfig's are configured in the configuration, and Async Loggers are enabled globally with a system property.

I have started to look at what the implications would be of doing this as a configuration element or attribute.

One thing that comes to mind is that most WaitStrategy implementations are not Log4j classes, but LMAX disruptor classes, and as such they will not have log4j {{@Plugin}} annotations. 
(But perhaps it is not necessary to make the existing Disruptor WaitStrategy implementations available through this configuration mechanism...)


If the instances have default constructors, you can just inject the class references and instantiate them. Otherwise, the DI system in 3.x might make this easier.

I have been thinking about how to make this work as a configuration plugin. (And one restriction is that I prefer to avoid DI features that are only available in 3.x, because I am hoping to include this in a 2.x release.)

What makes this tricky is that the Disruptor provides multiple WaitStrategy implementations, some with default constructors, some with constructors that take arguments of various types. Custom WaitStrategy implementations will likely also have constructors requiring some arguments, and we don't know what types those arguments will be.

So, what would a configuration look like?
h3. Idea 1: Users configure a factory

The simplest thing to implement (but not very pretty) that I can think of is where users configure a factory.
The specified factory class name must have a public no-argument constructor.
During configuration Log4j will instantiate the factory and ask the factory to create a WaitStrategy object.

looks something like this:
{code:java}
<configuration>
    <AsyncWaitStrategyFactory class="my.package.MyWaitStrategyFactory" />
    <Appenders> ...
{code}
...where the specified class name implements a new {{org.apache.logging.log4j.core.async.AsyncWaitStrategyFactory}} interface:
{code:java}
public interface AsyncWaitStrategyFactory {
    /**
     * Returns a non-null implementation of the LMAX Disruptor's WaitStrategy interface.
     * This wait strategy will be used by Async Loggers and Async LoggerConfigs.
     *
     * @return the WaitStrategy instance to be used by Async Loggers and Async LoggerConfigs
     */
    WaitStrategy createWaitStrategy();
}
{code}
h3. Idea 2: Users configure a WaitStrategy

Alternatively, without the factory idea, we can try to allow users to configure the WaitStrategy directly.
I imagine a configuration could then look like something like this:
{code:xml}
<Configuration>
  <AsyncWaitStrategy class="com.lmax.disruptor.TimeoutBlockingWaitStrategy">
    <!-- TimeoutBlockingWaitStrategy constructor requires a long and a TimeUnit parameter -->
    <ConstructorArgument value="10"          type="long" /> <!--timeout-->
    <ConstructorArgument value="MILLISECONDS" type="java.util.concurrent.TimeUnit" />
  </AsyncWaitStrategy>
...
{code}
Question:
Are the existing plugin facilities available in 2.x able to handle this? I don't think we have anything this generic.

I could be wrong but perhaps the closest thing would be something like the below, where we create separate plugins for a limited number of supported types:
{code:xml}
<Configuration>
  <AsyncWaitStrategy class="com.lmax.disruptor.TimeoutBlockingWaitStrategy">
    <LongArg value="200" /> <!--timeout-->
    <TimeUnitArg value="MILLISECONDS" />
  </AsyncWaitStrategy>
...
{code}
This last one is technically feasible but limited to the supported types.

The drawback of this approach is that users may not be able to configure their custom WaitStrategy if it requires constructor arguments for which there is no plugin types. (Unless they are committed enough to become familiar with the Log4j 2 plugin system and create their own plugin - quite a steep hurdle, since [our plugin docs|https://logging.apache.org/log4j/2.x/manual/plugins.html] are very high level...)
----
So perhaps option 1 is the most flexible and straightforward.

Thoughts?

Depending on how immediately you need this feature, I've been considering porting the DI system in 3.x to 2.x (for 2.18.0 at the current state). Without using DI, though, I'd probably lean toward option 1 as similar to how I made the particular BlockingQueue class to use in an async appender configurable. The factories should be easy to migrate to DI as well which is nice.

I'd indeed accept a kv-pair in the configuration and pass it as a List<KVPair> to the factory.

Note that you also need to deal with the presence of multiple plugins matching for the target interface. To avoid such cases, I make sure my plugin interface extends from {{Comparable}} and use that to sort the matching plugins and pick the first one and drop a debug message to the status logger.

I've started to work on implementing idea 1 (allowing user to configure a WaitStrategyFactory in the configuration).

Config will look something like this:
{code:java}

<Configuration>
  <AsyncWaitStrategyFactory
      class="my.package.MyWaitStrategyFactory" />
 {code}

Commit 618e6ca56ded70890ddde89dbfdf905c59e35c95 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=618e6ca56d ]

LOG4J2-3472 make disruptor WaitStrategy configurable in Log4j configuration


Commit 8dd38f13c42844500963618378adfb2a8830d8dd in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=8dd38f13c4 ]

LOG4J2-3472 custom WaitStrategy additional tests


Commit a3f054f45a98178a80a9af8addc055bbc76c75b5 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=a3f054f45a ]

LOG4J2-3472 custom WaitStrategy documentation


Commit 29fdca6a1a16c238a14eb2e0283825197fd058a8 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=29fdca6a1a ]

LOG4J2-3472 files should end with newline


Commit a68d3c4e67144cd749d6cf95d724edbc1449e50e in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=a68d3c4e67 ]

LOG4J2-3472 make internals available with package-protected getters for testing


Commit a89e33deef108145f7b6b7d381567d550b9cc760 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=a89e33deef ]

LOG4J2-3472 clear all modified system properties after test is done


Commit 1b989b9604e7921a3b26115e77471c067d0cef71 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=1b989b9604 ]

LOG4J2-3472 (DOC) clarify specification


Commit 86fe5452f0c03a9306e561cb8f642d38603ebc1e in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=86fe5452f0 ]

LOG4J2-3472 package-protected getter


Commit 425389c04a146409e18d08824430c809f1b18d11 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=425389c04a ]

LOG4J2-3472 fix package-protected getters


Commit 91222178b39f8ab23d2d5670062781d809de3ef3 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=91222178b3 ]

LOG4J2-3472 check that user-specified class implements AsyncWaitStrategyFactory


Commit 52713b8ac34bccd156ab47e4c0bb10a6d0c1ed10 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=52713b8ac3 ]

LOG4J2-3472 code cleanup


Commit b45e49c3956bf8041919898fba4b12f3c3039ab2 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=b45e49c395 ]

LOG4J2-3472 add missing license text


Commit 786c011e291a9d585d7fd105f0686d24b0f15b8e in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=786c011e29 ]

Merge pull request #824 from remkop/LOG4J2-3472-WaitStrategyFactory

LOG4J2-3472 support custom WaitStrategy configuration

Commit aa1cab96fde70cc9f90f50251e74619f0e024401 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=aa1cab96fd ]

LOG4J2-3472 update changes.xml


Commit 618e6ca56ded70890ddde89dbfdf905c59e35c95 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=618e6ca56d ]

LOG4J2-3472 make disruptor WaitStrategy configurable in Log4j configuration


Commit 8dd38f13c42844500963618378adfb2a8830d8dd in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=8dd38f13c4 ]

LOG4J2-3472 custom WaitStrategy additional tests


Commit a3f054f45a98178a80a9af8addc055bbc76c75b5 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=a3f054f45a ]

LOG4J2-3472 custom WaitStrategy documentation


Commit 29fdca6a1a16c238a14eb2e0283825197fd058a8 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=29fdca6a1a ]

LOG4J2-3472 files should end with newline


Commit a68d3c4e67144cd749d6cf95d724edbc1449e50e in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=a68d3c4e67 ]

LOG4J2-3472 make internals available with package-protected getters for testing


Commit a89e33deef108145f7b6b7d381567d550b9cc760 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=a89e33deef ]

LOG4J2-3472 clear all modified system properties after test is done


Commit 1b989b9604e7921a3b26115e77471c067d0cef71 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=1b989b9604 ]

LOG4J2-3472 (DOC) clarify specification


Commit 86fe5452f0c03a9306e561cb8f642d38603ebc1e in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=86fe5452f0 ]

LOG4J2-3472 package-protected getter


Commit 425389c04a146409e18d08824430c809f1b18d11 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=425389c04a ]

LOG4J2-3472 fix package-protected getters


Commit 91222178b39f8ab23d2d5670062781d809de3ef3 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=91222178b3 ]

LOG4J2-3472 check that user-specified class implements AsyncWaitStrategyFactory


Commit 52713b8ac34bccd156ab47e4c0bb10a6d0c1ed10 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=52713b8ac3 ]

LOG4J2-3472 code cleanup


Commit b45e49c3956bf8041919898fba4b12f3c3039ab2 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=b45e49c395 ]

LOG4J2-3472 add missing license text


Commit 786c011e291a9d585d7fd105f0686d24b0f15b8e in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=786c011e29 ]

Merge pull request #824 from remkop/LOG4J2-3472-WaitStrategyFactory

LOG4J2-3472 support custom WaitStrategy configuration

Commit aa1cab96fde70cc9f90f50251e74619f0e024401 in logging-log4j2's branch refs/heads/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.4 from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=aa1cab96fd ]

LOG4J2-3472 update changes.xml


Commit 3d1592895a27ceb7c95cd7a795c5730e3231b796 in logging-log4j2's branch refs/heads/master from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=3d1592895a ]

LOG4J2-3472 (master) make disruptor WaitStrategy configurable in Log4j configuration (#830)

LOG4J2-3472 (master) make disruptor WaitStrategy configurable in Log4j configuration (#830)

Merged into master also now.

Commit d7d60c6ed73fd0facf3e6afa598edff351c74a22 in logging-log4j2's branch refs/heads/release-2.x from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=d7d60c6ed7 ]

LOG4J2-3473 update for changes made with LOG4J2-3472


Commit c30f09318deef97d97d4c9f0e9c82cf9a86546bd in logging-log4j2's branch refs/heads/master from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=c30f09318d ]

LOG4J2-3472 (master) disable flaky test


Commit 37566b67f1352b48f7953a2f20115c7981472919 in logging-log4j2's branch refs/heads/master from Remko Popma
[ https://gitbox.apache.org/repos/asf?p=logging-log4j2.git;h=37566b67f1 ]

LOG4J2-3472 (master) re-enable flaky test


