This is a put failing on a newly created table, no snapshot, clone or other fancy stuff
{code}
at org.apache.hadoop.hbase.client.HTable.doPut(HTable.java:794)
at org.apache.hadoop.hbase.client.HTable.put(HTable.java:756)
at org.apache.hadoop.hbase.HBaseTestingUtility.loadTable(HBaseTestingUtility.java:1312)
at org.apache.hadoop.hbase.master.cleaner.TestSnapshotFromMaster.testSnapshotHFileArchiving(TestSnapshotFromMaster.java:297)
{code}

are the jenkins machines too busy/too many parallel tasks?

btw the client retries number for this test is set to 1.

Up retries.  I tried it locally and it passes.

Let me put the patch on the subtask so I can leave this issue open.

I upped the retries down in HBASE-9073.  Lets see if this helps.  Thanks [~mbertozzi]

Failed here this morning: http://54.241.6.143/job/HBase-0.95/org.apache.hbase$hbase-server/753/testReport/org.apache.hadoop.hbase.master.cleaner/TestSnapshotFromMaster/testSnapshotHFileArchiving/

This is a different error, from the one above.

The test looks flaky by design, it relies on a strange voodoo of the data inserted is always 4 files...

attached a -fix0 patch, that ensures the 4 files flush/compaction... but now it relies on the compaction to compact all the store files... so as soon we change the compaction algorithm this test is flaky again.

[~mbertozzi] Thanks boss for taking a look.  I'd rather just disable a crappy test.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12596174/HBASE-9072-fix0.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6606//console

This message is automatically generated.

+1
{code}
+    waitForTableToBeOnline(util, table.getTableName());
{code}
The above method waits for flushes. Maybe rename the method to reflect this waiting.

Cancelling stale patch

see HBASE-16293

