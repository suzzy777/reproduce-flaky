Possibly the same issue also reported in LUCENE-10529. I'll have a look.

Instead of increasing the acceptable delta, I'd prefer to ensure we sum the floats in the same order and then expect them to be exactly equal. This should be a more robust solution than fiddling with the delta every time we trip a random case that breaks things. The issue is that we keep track of all float values we index for the purpose of determining "expected" sums, but the order ends up differing from the order we visit the values when iterating the index. I think I have a solution that lets us reconcile this ordering difference.

PR is up for this.

Commit 902a7df0e500f1e986918b9fd697f208bd04ef85 in lucene's branch refs/heads/main from Greg Miller
[ https://gitbox.apache.org/repos/asf?p=lucene.git;h=902a7df0e50 ]

LUCENE-10530: Avoid floating point precision bug in TestTaxonomyFacetAssociations (#848)



Commit 92833d98fdbf85485f254e8e3514cf51e258d9b2 in lucene's branch refs/heads/branch_9x from Greg Miller
[ https://gitbox.apache.org/repos/asf?p=lucene.git;h=92833d98fdb ]

LUCENE-10530: Avoid floating point precision bug in TestTaxonomyFacetAssociations (#849)



Bulk close for 9.2.0 release

This issue was moved to GitHub issue: [#11566|https://github.com/apache/lucene/issues/11566].

