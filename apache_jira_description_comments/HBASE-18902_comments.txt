Ahh, It's because @AfterClass and @BeforeClass should be @After and @Before.
Will make a patch, test it and push in some time (~2 hours).
Sorry for the trouble!

@BeforeClass is still needed - we should only instantiate HBaseTestingUtility once.

Since we change conf in test functions, i don't want conf polluted by one test being used by others.
Have had serious waste of time in past when i was debugging some tests and the root cause was sharing the conf of HBaseTestingUtility.

In v3, conf is restored at the end of each subtest.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 15s{color} | {color:blue} Docker mode activated. {color} |
| {color:blue}0{color} | {color:blue} patch {color} | {color:blue}  0m  2s{color} | {color:blue} The patch file was not named according to hbase's naming conventions. Please see https://yetus.apache.org/documentation/0.4.0/precommit-patchnames for instructions. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 33s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 15s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 21s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 30s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m  9s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m 54s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 36m 47s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 43s{color} | {color:green} hbase-endpoint in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  6s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 50m 50s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:5d60123 |
| JIRA Issue | HBASE-18902 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12889564/18902.v2.txt |
| Optional Tests |  asflicense  shadedjars  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 2ffbbded4603 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 74d0adc |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC3 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8855/testReport/ |
| modules | C: hbase-endpoint U: hbase-endpoint |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8855/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



[~yuzhihong@gmail.com] Thank you for finding this breakage. Now let the fellow who broke it fix it. That is the usual practice (unless they are absent, which is not the case here).

+1 on [~appy] fix.

[~appy] lets work on disabusing you of having to start up a new HBaseTestingUtility instance per test; lets figure what issues you have that make you want to do this. 

Getting a hadoopqa run w/ @appy patch supplanted by other uploads.

In this case I already worked on the fix when reporting.

I would prefer to see it through.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 23s{color} | {color:blue} Docker mode activated. {color} |
| {color:blue}0{color} | {color:blue} patch {color} | {color:blue}  0m  2s{color} | {color:blue} The patch file was not named according to hbase's naming conventions. Please see https://yetus.apache.org/documentation/0.4.0/precommit-patchnames for instructions. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 46s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 23s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 15s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 19s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 17s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 37s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m 59s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 38m 32s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 13s{color} | {color:green} hbase-endpoint in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  7s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 54m 50s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:5d60123 |
| JIRA Issue | HBASE-18902 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12889573/18902.v3.txt |
| Optional Tests |  asflicense  shadedjars  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux de69a79f3fa1 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 74d0adc |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC3 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8856/testReport/ |
| modules | C: hbase-endpoint U: hbase-endpoint |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8856/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 13s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 38s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 32s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 10s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 11s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 39m 40s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 48s{color} | {color:green} hbase-endpoint in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  8s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 56m 20s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:5d60123 |
| JIRA Issue | HBASE-18902 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12889585/HBASE-18902.master.001.patch |
| Optional Tests |  asflicense  shadedjars  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux d5b953041cd0 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / b5b4108 |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC3 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8858/testReport/ |
| modules | C: hbase-endpoint U: hbase-endpoint |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8858/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



bq. In this case I already worked on the fix when reporting.

Let the fellow who broke it fix it; he has the understanding (witness how your v3 is an attempt at interpreting what is wanted).

If you have a moment, mind clearing up what is happening over in HBASE-18902?  Seems fine to me. You ok if it goes in (there you said you didn't have time to finish up). And on HBASE-18875, the issue is reopened because of an addendum but is the addendum for all branches (trying it it seems to be not so... ). Mind resolving it w/ a clarifying comment?

Thanks.

Currently DummyRequest message is empty. I guess that was why Appy wrote 3 subtests since it is not easy to distinguish the 3 calls made in the subtests on server side.
If we add an int field to DummyRequest message, different counters can be incremented depending on the different values passed in DummyRequest.
This way only one subtest should suffice and we start / stop mini cluster once.

The reason was very general - test the 3 CP services envs in isolation.
Say Master service compat is broken and Master fails to come up, that'd have affected other two tests.

bq. Master service compat is broken and Master fails to come up

Shouldn't the change leading to the above outcome be immediately flagged and corrected ?
I think as long as we can distinguish the 3 calls on server side, we have confidence compatibility is kept.


Am not clear what are you trying to shoot for here.
There are three things
1. Using single HBaseTestingUtility instance
2. Using single test function
3. Using single cluster

At first, the motivation was "we should only instantiate HBaseTestingUtility once.". But i don't see any advantage of it. Less objects? We have never worried about GC in tests. Reduce test times? Creating 2 less object doesn't save anything.
If am missing something there, please let me know. I'd like to learn and adopt better testing patterns moving forward.
But if there's no good reason for single HBaseTestingUtility, then I'd prefer the current approach of creating new one everytime, because i think it's a better testing pattern. Why?
1. cleaning up confs manually is very bug prone, and the effects can be very magnified. One test messes up, and the whole test class can have buggy tests. On the other hand, using new object every time is very clean and simple way of testing.
2. cleaning up confs manually at the end is ugly.

Your [second suggestion|https://issues.apache.org/jira/browse/HBASE-18902?focusedCommentId=16185089&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16185089] had more weight in the motivation with "we start / stop mini cluster once". However
- your assumption that i did it coz i couldn't separate three calls was not good one. But it's fine.
- "This way only one subtest" is imo the wrong direction. Unit tests are better if they test different code paths in isolation.

bq. Shouldn't the change leading to the above outcome be immediately flagged and corrected ?
If the answer to "[if one functionality is broken], that'd have affected other tests." is  "if the functionality is broken, won't we correct it immediately ?", then
1. Why do have flaky tests? After all, the flakyness can be due to wrong functionality.
2. Why don't we merge all test functions in TestAdmin into one test. The suggestion of merging tests and the argument for it is applicable for TestAdmin too.  But does't sound right, right? That's what i meant when i said "The reason was very general - test the 3 CP services envs in isolation."

I think if at any point you made a complete coherent case with supporting details, maybe something like the following, i'd have been onboard with whatever patch you had.
"CoprocessorService hasn't changed in long time (since 2012). Is it likely to change again soon? If not, can we merge the tests into one? It'll hurt debuggability and is against general testing principles, but if don't touch this piece of code often, then it maybe better to save in runtime here. Setting up cluster once instead of three times will bring down runtime from 24 s to 12s, which is substantial save from a single test."

The answer to those questions are, No and Yes.
So please go ahead and refactor the tests into one.

In the end, while this discussion lead to the right solution, i'd say that it wasn't fun. I mean, you wanted to see it through, great, but when proposing something, please make a sound case for it. Here, I had to do all the work, add in details, and make the case for you!


Appreciate the feedback, Appy.

See if patch v4 shows what I was proposing.

IMHO reducing test runtime, while keeping coverage, is very important.
Here is comparison with patch v3 and with patch v4:
{code}
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 42.092 sec - in org.apache.hadoop.hbase.coprocessor.TestCoprocessorServiceBackwardCompatibility

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.512 sec - in org.apache.hadoop.hbase.coprocessor.TestCoprocessorServiceBackwardCompatibility
{code}
There is no unset call since it is not needed.

Weekend is coming. Allow me to answer the other questions on Monday.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 16s{color} | {color:blue} Docker mode activated. {color} |
| {color:blue}0{color} | {color:blue} patch {color} | {color:blue}  0m  3s{color} | {color:blue} The patch file was not named according to hbase's naming conventions. Please see https://yetus.apache.org/documentation/0.4.0/precommit-patchnames for instructions. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 53s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 28s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 33s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 10s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m  3s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 40m 31s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} hbaseprotoc {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 36s{color} | {color:green} hbase-endpoint in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 11s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 56m 58s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:5d60123 |
| JIRA Issue | HBASE-18902 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12889818/18902.v4.txt |
| Optional Tests |  asflicense  shadedjars  cc  unit  hbaseprotoc  javac  javadoc  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux cb4aee0c5fb8 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / cacf3f5 |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC3 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8878/testReport/ |
| modules | C: hbase-endpoint U: hbase-endpoint |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8878/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Saving ~20 sec on these tests by merging them together makes sense.
Thanks for the data [~tedyu]. +1 on v4

At the beginning of Appy's comment on Friday, he listed 3 items. I think Using single cluster, for this test, is feasible and should be chosen over using 3 mini cluster starts/stops (as shown in patch v4).

One benefit is reduction in test run time (42s to 22s on my Mac).

bq. Why do have flaky tests?

There are many reasons for tests to behave differently. Most are timing issues involving, e.g. region splitting / merging / compacting / flushing / moving.
Discussing on a case by case basis would be better.

bq. the flakyness can be due to wrong functionality

Could be: if code behaves incorrectly, that would ultimately surface in some test(s). For TestCoprocessorServiceBackwardCompatibility, since compatibility is kept, there is not much room for flakiness.

I took a brief look at TestAdmin1 where multiple scenarios are tested:

non-existent table,
existent table but non-existent column family,
table creation,
table truncation,
table truncation preserving splits,
...

It would be very difficult to merge them considering the divergence of test scenarios.

Toward the end of Appy's comment on Friday, seems he already looked at the test composition from a different angle. I appreciate the summary.

I was involved in customer support case during day time of Friday - otherwise I should have put up patch v4 earlier.


Thanks for the review, Appy.

FAILURE: Integrated in Jenkins build HBase-2.0 #621 (See [https://builds.apache.org/job/HBase-2.0/621/])
HBASE-18902 TestCoprocessorServiceBackwardCompatibility fails (tedyu: rev 73414ab2705551abab47fe3536d77b17ee7566bd)
* (edit) hbase-endpoint/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorServiceBackwardCompatibility.java
* (edit) hbase-endpoint/src/main/protobuf/DummyRegionServerEndpoint.proto


SUCCESS: Integrated in Jenkins build HBase-Trunk_matrix #3822 (See [https://builds.apache.org/job/HBase-Trunk_matrix/3822/])
HBASE-18902 TestCoprocessorServiceBackwardCompatibility fails (tedyu: rev c205b5b5ed873a2c503915aa70267ef2800f4d20)
* (edit) hbase-endpoint/src/main/protobuf/DummyRegionServerEndpoint.proto
* (edit) hbase-endpoint/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorServiceBackwardCompatibility.java


Results for branch HBASE-18467, done in 4 hr 24 min and counting
	[build #136 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/HBASE-18467/136/]: FAILURE
----
details (if available):

(x) *{color:red}-1 overall{color}*
    Committer, please check your recent inclusion of a patch for this issue.

(x) {color:red}-1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/HBASE-18467/136//General_Nightly_Build_Report/]










(/) {color:green}+1 jdk8 checks{color}
-- For more information [see jdk8 report|https://builds.apache.org/job/HBase%20Nightly/job/HBASE-18467/136//JDK8_Nightly_Build_Report/]


(x) {color:red}-1 source release artifact{color}
-- See build output for details.



