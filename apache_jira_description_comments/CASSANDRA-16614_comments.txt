The window of opportunity for the test to check the node is Down/Moving on {{nodetool}} is too small. It may have already gone to Down/Normal by the time we check. So better check all nodes saw the node moving in the logs instead.

Logs of failed run [here|https://nightlies.apache.org/cassandra/trunk/Cassandra-trunk-dtest-large-novnode/148/Cassandra-trunk-dtest-large-novnode/label=cassandra-dtest-large,split=3/].

Multiplexing locally seems to work ok

{noformat}
pytest --count 30 -rP --cassandra-dir=../16614 pending_range_test.py::TestPendingRangeMovements::test_pending_range
30 passed in 2353.96 seconds
{noformat}

The failure can be consistently reproduced by inserting a sleep of a few seconds [right before killing the node|https://github.com/apache/cassandra-dtest/blob/trunk/pending_range_test.py#L67], simulating a slow CI environment. That makes the other nodes to see the down node as not moving, reproducing the reported failure.

The proposed patch replaces the check that verifies that the other nodes see the node as {{MOVING}} by verifying that the nodes have seen the movement, which is true either if it's still {{MOVING}} or if has gone back to {{NORMAL}}. However, the original purpose of the test was testing the {{MOVING}} scenario, since the original bug didn't affect the case where the down node has gone back to {{NORMAL}}. In other words, we want to test while the node is moving, not when it has moved.

This problem can be seen if we add the aforementioned sleep to simulate a slow CI environment and we run the modified test against a Cassandra version that contains the bug fixed by CASSANDRA-10887, for example 3.0.2 ({{--cassandra-version=3.0.2}}). In this case the test will always pass without detecting the bug that it's meant to detect.

I think we should fix the test to make sure that the down node is always seen as {{MOVING}} by the other nodes. We could do that by killing the node while it is sleeping for {{ring_delay_ms}} before actually moving the data. That time window is 30 seconds, which seems more than enough time to do the log checks and kill the node. We can even further increase the value of {{ring_delay_ms}} to be totally sure that we have enough time to kill the node while it's still moving. Since {{nodetool move}} waits for the stream/fetch phase, the test can simply call {{nodetool move}} asynchronously and wait for the log entries reporting the {{MOVING}} status before killing the node, as it's done in [this commit|https://github.com/adelapena/cassandra-dtest/commit/e7aa346c0fe94d26e9a1ce4e607caec3353059dd]. This seems to pass even if we add a sleep before killing the node, and it still detects the original bug if we use a pre-CASSANDRA-10887 Cassandra version.

wdyt?

[~adelapena] excellent analysis. My patch would be testing sometimes while in MOVING state and sometimes when the node had already moved back to NORMAL, which is what I had seen perusing the logs. That is not correct and your patch is the right choice. I think you should take this ticket as you pinned it down.

I multiplexed it locally a bit to make sure and LGTM so I am +1 on your patch

{noformat}
pytest --count 30 -rP --cassandra-dir=~/work/repos/bdpWS/16614 pending_range_test.py::TestPendingRangeMovements::test_pending_range
30 passed in 1558.32 seconds
{noformat}


Also ins the spirit of CASSANDRA-16625 and just bc it is super useful would you be ok we add dtest-repeat to requirements.txt? It is what I used to multiplex locally your dtest commit. Feel free to decline ofc

{noformat}
diff --git a/requirements.txt b/requirements.txt
index 8e7ac0a9..cf618d50 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -14,6 +14,7 @@ flaky
 mock
 pytest==3.6.4
 pytest-timeout
+pytest-repeat
 parse
 pycodestyle
 psutil
{noformat}

bq. Also ins the spirit of CASSANDRA-16625 and just bc it is super useful would you be ok we add dtest-repeat to requirements.txt?

Very good idea, I'm +100 on anything encouraging to run tests repeatedly and indeed {{pytest-repeat}} is very useful. I have also added a brief note in README.md about how to repeatedly run specific tests.

I'm running CI for dtests, if it looks good and you agree to the changes I think we'll be ready to commit.

* [3.0|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/625/]
* [3.11|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/626/]
* [trunk|https://ci-cassandra.apache.org/view/all/job/Cassandra-devbranch-dtest/627/]

LGTM. It's nice to see such blue-ish runs :-)

[~adelapena] I was about to commit it for you but given you have it in a branch of yours, I can't tell if that's the branch you really want to commit, squash, etc It'll be best you commit it yourself I am afraid.

[~bereng] great, thanks. I'm setting you as co-author since I wrote the patch on top of your changes and findings. Committed as [2032cb8503d9a3e90822de72458a09dd07d30b7e|https://github.com/apache/cassandra-dtest/commit/2032cb8503d9a3e90822de72458a09dd07d30b7e].

