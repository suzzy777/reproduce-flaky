cc [~jolshan] [~dajac] [~hachikuji] [~mimaison]

I have not seen this failure mode before, and I'm worried that this might be a recent regression. It also doesn't look like an error that is intended to be surfaced by the API in normal operations (I might expect a disconnect or ProducerFencedException, maybe).
Just to be safe I've marked this as a blocker for 3.5.0, but we can downgrade the severity with some more investigation.

Since the incidence rate for this is relatively low, I've attached a couple of logs of the test run leading up to the error. The trace-0 log fails on PrepareEpochFence instead of Empty, but it appears both runs fail when the pending state is Ongoing.
To reproduce yourself: Run the version of test on trunk 10-50 times (30s each) until it fails. This test is different from the other tests in the same suite as it makes use of active producer fencing to eliminate other tasks/producers when reconfiguring tasks.

So many transaction/init producer ID issues lately. I had to check this wasn't the same as https://issues.apache.org/jira/browse/KAFKA-14830 

I've seen some init producer ID failures a few times as well (seeming more frequently) when testing.

I was also wondering if this change could be related, but it seems like this one caused deadlock and not the same error: [https://github.com/apache/kafka/pull/13267] 

Maybe this is yet another issue to investigate. Thanks for bringing it to our attention.

[~gharris1727] Do you think this is a blocker for 3.5? I've not been able to reproduce this failure and nobody has taken the time to investigate this yet.

Reducing severity and moving to the next release.

This flakiness is no longer present on trunk. I believe that another bug fix resolved the flakiness but I don't know which.

