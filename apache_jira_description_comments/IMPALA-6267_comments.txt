I think the right fix here is actually to make the filter wait time unbounded for mt_dop, so we don't need to handle this case.

Reopening because we may want to do this as a stopgap.


IMPALA-6267: MT scanners check filters per split

Refactor the code for checking each scan range
against filters so that it can be shared between
the MT and non-MT scan node implementations.
Move it into StartNextScanRange(), which has the
advantage that we can skip issuing then cancelling
the I/O for the range.

Testing:
Added a regression test for the code path that failed
for multithreaded scans before this fix. Looped the
test for a couple of hours to flush out flakiness.

Fix some runtime filter tests where the mt_dop from
the dimensions was not applied. Fix
test_wait_time_cancellation() to work with mt_dop > 0,
where filters are waited for in Open() instead of GetNext(),
which means that the query does not get into the RUNNING state
while waiting for filters. Instead use the profile to detect
that execution started.

Ran core tests.

Change-Id: Ic40eb4cb2419393e6f7cd7bd019add9224946c4d
Reviewed-on: http://gerrit.cloudera.org:8080/15411
Reviewed-by: Tim Armstrong <tarmstrong@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


