Our theory is that concurrent queries that start Tez sessions try to copy the .jar at the same time, leading some of them to see different mtime than expected.

If the copy is done only during the very first sessions when the file doesn't exist yet, then it should be enough to run a query (that needs Tez) before starting parallel work, or to simply copy the .jar to its destination.



[~csringhofer] this is still causing build failures for us. Would you be able to own it?

https://gerrit.cloudera.org/#/c/14081/

Commit df2c6f200f66e6849e17ef177c99adf035766d6a in impala's branch refs/heads/master from Csaba Ringhofer
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=df2c6f2 ]

IMPALA-8841: Try to fix Tez related dataload flakiness

The flakiness may be related to starting Hive queries in parallel which
triggers initializing Tez resources in parallel (only needed at the
first statement that uses Tez). Doing a non-parallel statement at first
may solve the issue.

Also includes a fix for a recent issue in  'build-and-copy-hive-udfs'
introduced by the version bump
in https://gerrit.cloudera.org/#/c/14043/

Change-Id: Id21d57483fe7a4f72f450fb71f8f53b3c1ef6327
Reviewed-on: http://gerrit.cloudera.org:8080/14081
Reviewed-by: Vihang Karajgaonkar <vihang@cloudera.com>
Reviewed-by: Tim Armstrong <tarmstrong@cloudera.com>
Tested-by: Tim Armstrong <tarmstrong@cloudera.com>


[~csringhofer], can we resolve this?

[~stigahuang] I plan to wait a few days, and if the issue does not occur in Jenkins builds, then I will close the issue.

