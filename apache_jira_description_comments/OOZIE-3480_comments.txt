PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3480

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [12] new bugs found below threshold in total that must be fixed.
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/git].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [webapp].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:red}-1{color} There are [12] new bugs found below threshold in [core] that must be fixed, listing only the first [5] ones.
.    You can find the SpotBugs diff here (look for the red and orange ones): core/findbugs-new.html
.    The top [5] most important SpotBugs errors are:
.    At BulkJPAExecutor.java:[line 207]: This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection
.    At BulkJPAExecutor.java:[line 177]: At BulkJPAExecutor.java:[line 176]
.    At BulkJPAExecutor.java:[line 206]: At BulkJPAExecutor.java:[line 200]
.    This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection: At BulkJPAExecutor.java:[line 207]
.    At BulkJPAExecutor.java:[line 112]: At BulkJPAExecutor.java:[line 128]
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3169
.    {color:orange}Tests failed at first run:{color}
TestPurgeXCommand#testPurgeableWorkflowPurgeableSubWorkflowPurgeableSubSubWorkflow
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/1100/



Please review it [~asalamon74] , Thanks 

I missed this patch [~zuston], I will review next week.

Thanks [~zuston] this will be really useful metric.
 * Oozie already stores {{jobstatus}} and {{windowjobstatus}} info for each action like this:
{noformat}
    "jobstatus.FAILED" : {
      "value" : 10
    },
    "jobstatus.KILLED" : {
      "value" : 279
    },
    "jobstatus.PREP" : {
      "value" : 0
    },
    "jobstatus.RUNNING" : {
      "value" : 4
    },
...
    "windowjobstatus.FAILED" : {
      "value" : 0
    },
    "windowjobstatus.KILLED" : {
      "value" : 0
    },
    "windowjobstatus.PREP" : {
      "value" : 0
    },
{noformat}

            I think we should use a more similar format for the {{windowactionstatus}} instead of the format like {{ssh#ERROR}}
 * You introduced a new metric called {{windowactionstatus}} similar to {{windowjobstatus}}. What about also introducing a metric like {{actionstatus}} similar to {{jobstatus}}?
 * Could you please also add some unit tests (just like you added in OOZIE-3393)

Please also upload the next patch to ReviewBoard.

[~asalamon74] The metric name called windowactionstatus may be more appropriate，because the metric is a window value. 

[~zuston] Yes, {{windowactionstatus}} is a very good name for your metric. I was suggestion a new metric next to {{windowactionstatus}}. Right now we have {{jobstatus}} and {{windowjobstatus}}. What about adding two new metrics: {{windowactionstatus}} and {{actionstatus?}}

Oh, I see. Do i need to make a new patch or integrate this patch. Besides, the windowactionstatus metric format change to {{ssh.ERROR}} ? Do you have some suggestions? 

I think it's better to integrate the other metric in this patch since they are quite related. Please also add unit tests like you did in OOZIE-3393.

 

