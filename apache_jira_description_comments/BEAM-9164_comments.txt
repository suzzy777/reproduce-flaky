Same thing happened on https://builds.apache.org/job/beam_PreCommit_Java_Commit/9726

I tried to reproduce the flakiness in my workstation by running the {{UnboundedSourceWrapperTest}} 100 times, but could not reproduce the failure.

{noformat}
    @Parameterized.Parameters(name = "numTasks = {0}; numSplits={1}")
    public static Collection<Object[]> data() {
      /*
       * Parameters for initializing the tests:
       * {numTasks, numSplits}
       * The test currently assumes powers of two for some assertions.
       */

      ImmutableList.Builder<Object[]> list = ImmutableList.builder();
      for (int i=0; i< 100; ++i) {
        list.addAll(Arrays.asList(new Object[][] {
            {1, 1}, {1, 2}, {1, 4},
            {2, 1}, {2, 2}, {2, 4},
            {4, 1}, {4, 2}, {4, 4},
        }));
      }
      return list.build();
    }

{noformat}

Memo: what if the test is interfered by other tests? How can we verify a fix is correct solution?

Saw a timeout on  org.apache.beam.runners.flink.translation.wrappers.streaming.io.UnboundedSourceWrapperTest$ParameterizedUnboundedSourceWrapperTest.testWatermarkEmission[numTasks = 4; numSplits=1].

Note that we are ignoring this test for now: https://github.com/apache/beam/pull/11614.

I ran UnboundedSourceWrapperTest a great many times on my desktop as well, but I was unable to reproduce the error. [~mxm] Have you investigated this?

I was not aware that tests had been disabled. I'm a bit shocked that we just disabled them without mentioning relevant folks or at least posting in the JIRA.

I changed logic around the watermark propagation in BEAM-9900 which could have removed the flakiness. I'll re-enable the tests.

This should be fixed but feel free to re-open if it pops up again.

Just saw this again here: https://builds.apache.org/job/beam_PreCommit_Java_Commit/11773/testReport/junit/org.apache.beam.runners.flink.translation.wrappers.streaming.io/UnboundedSourceWrapperTest$ParameterizedUnboundedSourceWrapperTest/testWatermarkEmission_numTasks___4__numSplits_2_/

Do you have time to take a look [~mxm]?

Finally had a look at the code. I was able to find the race condition. PR: https://github.com/apache/beam/pull/12025

The root cause has been investigated and fixed per https://github.com/apache/beam/pull/12025.

