{code}out, err = self.node1.run_cqlsh(cmds="COPY {} TO '{}'".format(stress_table, tempfile.name), return_output=True)
{code}

err is an empty string, which I'm interpreting as run_cqlsh having no errors, which we were expecting. Possibly a bug, [~philipthompson]?

Yes, looks suspicious

No child process exited. Either child processes could not read the {{CQLSH_COPY_TEST_FAILURES}} environment variable, or no child process received a sub-range of {{0 - 5000000000000000000}}, which is probably what happened. 

So it looks like a test problem to me but to know for sure we need to get this test to fail with [this patch|https://github.com/stef1927/cassandra/tree/12024-2.1] applied, which will print out the value of the environment variable as well as the token ranges processed by child processes.

Feel free to take a different approach that does not depend on token ranges if you can come up with a better idea; we basically need to select at least one child process and tell it to exit after having processed a few token ranges. The second part is easy, but to select a specific child process, the only alternative I could think of is to change the parent process to pass an index to each child process. So far we haven't gone down this route because it is a bit invasive but if you think it is necessary and don't have any better idea, we can alter the code to do this.

[~stefania], I ran your patch: http://cassci.datastax.com/view/Parameterized/job/parameterized_dtest_multiplexer/133/testReport/

It seems a child process hits a range which should fail.

Thanks for running the tests.

Here is the ring taken from the logs, I don't see any range included in {{0, 5000000000000000000}} and that is the issue:

{code}
None, -9188973059885682072
-9188973059885682072, -9020544696093660640
-9020544696093660640, -9007697614987827481
-9007697614987827481, -8852864266081406436
-8852864266081406436, -8750356039365906158
-8750356039365906158, -8480774927434816538
-8480774927434816538, -6943909198142645911
-6943909198142645911, -6824482263457865992
-6824482263457865992, -6338223542721333332
-6338223542721333332, -5810869245973865674
-5810869245973865674, -5585144027823239009
-5585144027823239009, -5545789345657286210
-5545789345657286210, -5072540767978912223
-5072540767978912223, -4632698447358130141
-4632698447358130141, -2274787808978698884
-2274787808978698884, -2238858797985170913
-2238858797985170913, -1877166093267150578
-1877166093267150578, -1772898104025496981
-1772898104025496981, -1077933022824365850
-1077933022824365850, -865246133147380067
-865246133147380067, -162326066920277006
-162326066920277006, 1730551807755205165
1730551807755205165, 5895690647044166059
5895690647044166059, 5902854717393823744
5902854717393823744, 6126104930338707805
6126104930338707805, 6369606439398076355
6369606439398076355, 6632589231551953011
6632589231551953011, 7089193955903138990
7089193955903138990, 7342141109180457503
7342141109180457503, 7894839086792388137
7894839086792388137, 8395124626010529191
8395124626010529191, 9038427815745113920
9038427815745113920, None
{code}

What we can do is get the ring from the cluster in the test, an pick a real range. I'll work on this.

I've created a pull request [here|https://github.com/riptano/cassandra-dtest/pull/1057]. Could you repeat the tests? 

I've verified that the other two dtests affected by the patch pass locally: {{test_copy_to_with_more_failures_than_max_attempts}} and {{test_copy_to_with_fewer_failures_than_max_attempts}}, you may want to run repeated tests for them too, to rule out any 'flakiness' introduced by the patch.

Pull request tested and merged, closing.

