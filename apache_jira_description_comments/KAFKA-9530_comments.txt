[https://builds.apache.org/job/kafka-pr-jdk8-scala2.12/630/testReport/junit/kafka.admin/DescribeConsumerGroupTest/testDescribeGroupWithShortInitializationTimeout/]

[https://builds.apache.org/job/kafka-pr-jdk11-scala2.13/4672/testReport/junit/kafka.admin/DescribeConsumerGroupTest/testDescribeGroupWithShortInitializationTimeout/]

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.12/659/testReport/junit/kafka.admin/DescribeConsumerGroupTest/testDescribeGroupWithShortInitializationTimeout/]

I managed to reproduce the failure with 1 run (out of 96) locally - the issue is that DisconnectException gets raised:
{code:java}
java.util.concurrent.ExecutionException: org.apache.kafka.common.errors.DisconnectException: Cancelled findCoordinator request with correlation id 3 due to node 0 being disconnected
....
kafka.admin.ConsumerGroupCommand$ConsumerGroupService.$anonfun$describeConsumerGroups$1(ConsumerGroupCommand.scala:497)
...
kafka.admin.ConsumerGroupCommand$ConsumerGroupService.describeConsumerGroups(ConsumerGroupCommand.scala:496)
...
kafka.admin.ConsumerGroupCommand$ConsumerGroupService.collectGroupsMembers(ConsumerGroupCommand.scala:552)
kafka.admin.ConsumerGroupCommand$ConsumerGroupService.describeGroups(ConsumerGroupCommand.scala:318)
kafka.admin.DescribeConsumerGroupTest.testDescribeGroupWithShortInitializationTimeout(DescribeConsumerGroupTest.scala:582){code}

-----------
It seems like the AdminClient handles timed out calls by disconnecting ([https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java#L1075]) - this adds a disconnected flag to the response whichÂ  we then handle via a DisconnectedException ([https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java#L1126])

[https://builds.apache.org/job/kafka-pr-jdk8-scala2.12/736/testReport/junit/kafka.admin/DescribeConsumerGroupTest/testDescribeGroupWithShortInitializationTimeout/]
{quote}java.lang.AssertionError: expected:<class org.apache.kafka.common.errors.TimeoutException> but was:<class org.apache.kafka.common.errors.DisconnectException> at org.junit.Assert.fail(Assert.java:89) at org.junit.Assert.failNotEquals(Assert.java:835) at org.junit.Assert.assertEquals(Assert.java:120) at org.junit.Assert.assertEquals(Assert.java:146) at kafka.admin.DescribeConsumerGroupTest.testDescribeGroupWithShortInitializationTimeout(DescribeConsumerGroupTest.scala:585){quote}

hachikuji commented on pull request #8154: KAFKA-9530; Fix flaky test `testDescribeGroupWithShortInitializationTimeout`
URL: https://github.com/apache/kafka/pull/8154
 
 
   This should fix the flakiness with this test case. With a short timeout, the call may fail and the client might disconnect. Rather than exposing the underlying retriable error, we give the user a TimeoutException.
   
   ### Committer Checklist (excluded from commit message)
   - [ ] Verify design and implementation 
   - [ ] Verify test coverage and CI build status
   - [ ] Verify documentation (including upgrade notes)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


hachikuji commented on pull request #8154: KAFKA-9530; Fix flaky test `testDescribeGroupWithShortInitializationTimeout`
URL: https://github.com/apache/kafka/pull/8154
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


