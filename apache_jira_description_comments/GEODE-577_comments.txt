I'm not sure why this ticket is set to "closed" and "not a problem".  The test failed in the same way in geode-nightly build #420.

https://builds.apache.org/job/Geode-nightly/420/testReport/com.gemstone.gemfire.cache.query.dunit/QueryMonitorDUnitTest/testQueryExecutionLocally/

revision 274f67cae769fbba1f6e63ff866f7f761b9a4229

com.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.cache.query.dunit.QueryMonitorDUnitTest$15.run in VM 1 running on Host penates.apache.org with 4 VMs
	at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:440)
	at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:382)
	at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:318)
	at com.gemstone.gemfire.cache.query.dunit.QueryMonitorDUnitTest.testQueryExecutionLocally(QueryMonitorDUnitTest.java:545)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:252)
	at junit.framework.TestSuite.run(TestSuite.java:247)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106)
	at sun.reflect.GeneratedMethodAccessor305.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: junit.framework.AssertionFailedError: The query should have been canceled by the QueryMonitor. Query: SELECT ID FROM /root/exampleRegion p WHERE  p.ID > 100
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at com.gemstone.gemfire.cache.query.dunit.QueryMonitorDUnitTest$15.run2(QueryMonitorDUnitTest.java:533)
	at com.gemstone.gemfire.cache30.CacheSerializableRunnable.run(CacheSerializableRunnable.java:67)
	at sun.reflect.GeneratedMethodAccessor307.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at hydra.MethExecutor.executeObject(MethExecutor.java:268)
	at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:84)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	... 3 more

Reproduced again in CI:

https://brazil.gemstone.com:8080/job/Geode_develop_DistributedTests/2092/testReport/junit/com.gemstone.gemfire.cache.query.dunit/QueryMonitorDUnitTest/testQueryExecutionLocally/

Sorry for the confusion on this. The reason I closed this bug is because I filed it in the wrong place. I actually originally saw this in a GemFire_develop_DistributedTests CI run, not in Geode.

GemFire_develop_DistributedTests
Build #38 (Nov 15, 2015 3:12:12 PM)
Revision: b7f640cf2e41acb40a531cc7abbee932a9ea093c
Revision: 88da702593157d8a0c014295cab16149fc088dfc

After I realized that, I closed it here and opened it in GemFire JIRA.

https://jira.eng.pivotal.io/browse/GEM-185

It looks like its made it into Geode now.

Flaky: eats exceptions

Reproduced in CI (Flaky Tests):
https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/FlakyTest/builds/294

```
org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest > testQueryExecutionLocally FAILED
    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedRunnable.run in VM 1 running on Host d090c941-f8b7-4e1d-4618-0043584ad8ae with 4 VMs
        at org.apache.geode.test.dunit.VM.invoke(VM.java:401)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:370)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:301)
        at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.testQueryExecutionLocally(QueryMonitorDUnitTest.java:480)

        Caused by:
        java.lang.AssertionError: The query should have been canceled by the QueryMonitor. Query: SELECT ID FROM /root/exampleRegion p WHERE  p.ID > 100
            at org.junit.Assert.fail(Assert.java:88)
            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQuery(QueryMonitorDUnitTest.java:360)
            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesAgainstQueryService(QueryMonitorDUnitTest.java:351)
            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesOnServer(QueryMonitorDUnitTest.java:342)
            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.lambda$testQueryExecutionLocally$bb17a952$6(QueryMonitorDUnitTest.java:480)
```

Reproduced inÂ https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/FlakyTest/builds/429:
{noformat}
org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest > testQueryExecutionLocally FAILED
org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedRunnable.run in VM 1 running on Host 0fb6c9e9-3a24-4963-76ab-3fc91bfbb78a with 4 VMs
at org.apache.geode.test.dunit.VM.invoke(VM.java:436)
at org.apache.geode.test.dunit.VM.invoke(VM.java:405)
at org.apache.geode.test.dunit.VM.invoke(VM.java:336)
at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.testQueryExecutionLocally(QueryMonitorDUnitTest.java:480)

Caused by:
java.lang.AssertionError: The query should have been canceled by the QueryMonitor. Query: SELECT ID FROM /root/exampleRegion p WHERE p.ID > 100
at org.junit.Assert.fail(Assert.java:88)
at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQuery(QueryMonitorDUnitTest.java:360)
at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesAgainstQueryService(QueryMonitorDUnitTest.java:351)
at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesOnServer(QueryMonitorDUnitTest.java:342)
at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.lambda$testQueryExecutionLocally$bb17a952$6(QueryMonitorDUnitTest.java:480)
{noformat}

Commit 46de561c5e6f591599603a6181f2c03f3c999e82 in geode's branch refs/heads/develop from [~huynhja]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=46de561 ]

GEODE-577: Refactored QueryMonitorDUnitTest to use new rules (#1923)

* Modified product to have cq's ignore the query timeout - not sure if that was expected originally, from the tests it sounds like it shouldn't have been
  * Enabled ignored tests and removed flaky tag
  * Tests can be further pruned and refactored but this was a first step

Commit 46de561c5e6f591599603a6181f2c03f3c999e82 in geode's branch refs/heads/feature/GEODE-5145 from [~huynhja]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=46de561 ]

GEODE-577: Refactored QueryMonitorDUnitTest to use new rules (#1923)

* Modified product to have cq's ignore the query timeout - not sure if that was expected originally, from the tests it sounds like it shouldn't have been
  * Enabled ignored tests and removed flaky tag
  * Tests can be further pruned and refactored but this was a first step

Commit 2d0dce31e3ffa4523e06693752591ff52837bb25 in geode's branch refs/heads/develop from [~nabarunnag]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=2d0dce3 ]

GEODE-577: Reducing the timeout (#2023)

* Reducing the timeout as running the tests on faster machines resulted in the query being completed before the timeout

This QueryMonitorDUnitTest is still failing in CI.

Â 

The whole design of this test is inherently flaky. It's running queries and expecting them to be timed out within a certain amount of time. If a machine is faster or the query monitor is slow, that won't happen.

This is not the right way to test this feature. We need to figure out a better way to test the QueryMonitor.

Â 

For reference, here are the most recent failures
{noformat}
org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest > testQueryMonitorClientServer FAILED

    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedRunnable.run in VM 1 running on Host bd64ef4001c2 with 4 VMs
        at org.apache.geode.test.dunit.VM.invoke(VM.java:436)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:405)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:336)
        at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.testQueryMonitorClientServer(QueryMonitorDUnitTest.java:298)



        Caused by:

        java.lang.AssertionError: The query should have been canceled by the QueryMonitor. Query: SELECT ID FROM /exampleRegion p WHERE  p.ID > 100
            at org.junit.Assert.fail(Assert.java:88)
            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQuery(QueryMonitorDUnitTest.java:328)
            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesAgainstQueryService(QueryMonitorDUnitTest.java:319)

            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesFromClient(QueryMonitorDUnitTest.java:308)

            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.lambda$testQueryMonitorClientServer$bb17a952$3(QueryMonitorDUnitTest.java:298)



org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest > testQueryMonitorRegionWithIndex FAILED

    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.test.dunit.NamedRunnable.run in VM 2 running on Host bd64ef4001c2 with 4 VMs

        at org.apache.geode.test.dunit.VM.invoke(VM.java:436)

        at org.apache.geode.test.dunit.VM.invoke(VM.java:405)

        at org.apache.geode.test.dunit.VM.invoke(VM.java:336)

        at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.testQueryMonitorRegionWithIndex(QueryMonitorDUnitTest.java:786)



        Caused by:

        java.lang.AssertionError: The query should have been canceled by the QueryMonitor. Query: SELECT * FROM /exampleRegion WHERE  ID > 100 and status = 'active'

            at org.junit.Assert.fail(Assert.java:88)

            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQuery(QueryMonitorDUnitTest.java:328)

            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesAgainstQueryService(QueryMonitorDUnitTest.java:319)

            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.executeQueriesFromClient(QueryMonitorDUnitTest.java:308)

            at org.apache.geode.cache.query.dunit.QueryMonitorDUnitTest.lambda$testQueryMonitorRegionWithIndex$bb17a952$5(QueryMonitorDUnitTest.java:786)
{noformat}

Commit 38e1714b54894caafa508dab9634d62a9c4c42fc in geode's branch refs/heads/develop from jinmeiliao
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=38e1714 ]

GEODE-577: rewrite QueryMonitorDUnitTest (#2179)

* code cleanup.
* add QueryMonitor unit test
* do not add cq query to the monitor queue


Commit 002efecdb188b24977374f12cbac3aaab955e81c in geode's branch refs/heads/develop from [~jinmeiliao]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=002efec ]

Revert "GEODE-577: rewrite QueryMonitorDUnitTest (#2179)"

This reverts commit 38e1714


Commit 7c236a70ca5fcea8757412bab2fdd529d3753a0a in geode's branch refs/heads/develop from jinmeiliao
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=7c236a7 ]

 GEODE-577: rewrite QueryMonitorDUnitTest (#2266)

* use rules
* test hook waits till query is cancelled to proceed with the query
* add a junit test
* do not monitor cq query

