Before adding the implementation in the Cassandra code base, it is required to patch the JVM dtest API in order to include console output in the {{NodeToolResult}}.
https://github.com/apache/cassandra-in-jvm-dtest-api/pull/16

Adding the PR to trunk: https://github.com/apache/cassandra/pull/749 (The CI won't run until the above PR to API is merged and a new release is out)

The PR did mainly 2 things. 
- Made the {{out/err}} stream in the nodetool and commands pluggable. {{ConsoleOutputProvider}} is introduced to contain both stream. Bunch of files are touch because of it. 
- Added {{CapturingConsoleOutputProvider}} to save the outputs and pass them to {{NodeToolResult}}. 

{{NodeToolTest.java}} shows the usage of asserting with the captured logs in nodetool result. 

Overall LGTM, only minor comments put in the PRs.

[~ifesdjeen] could you review as well?  We were going to release 0.0.5 soon I thought, so would be nice to get this in

Thanks David for the review. 

Updated the both PRs to address your comments. 

Overall LGTM, only small comments remaining.

[~ifesdjeen] can you review as well?  Would be great to get the API changes in 0.0.5

+1

I think this is a great addition which will make testing nodetool easier, as [~dcapwell] has mentioned. I had a conversation about making output of nodetool strucutred with [~stefan.miklosovic]. Ultimately, formatted output is good, but structured reporting would be even better if we ever have chance to tacle this. Maybe it's a good point to continue the conversation and create a separate issue for this? 

Another general thing to point out here is that, while doing some basic asserts is useful, we probably should avoid more sophisticated parsing of nodetool output, and implement tests that require involved parsing in some other way.

For in-jvm dtest patch, should we add {{doesNotContain}}? I realize this can be currently checked manually with {{!stdout().contains(...)}}, but since we have an asserts helper, we can consider adding it.

One minor that I've noticed is the new {{AutoCloseable}} warnings. We can work around these, for example, by using public final fields instead of a method that returns {{AutoCloseable}}, since which makes it not look like a factory method anymore. Maybe there's a better way to do this. 

I have left several minor comments on the issue, +1 otherwise!

[~ifesdjeen] [~yifanc]

I have implemented this here https://github.com/apache/cassandra/pull/711/files

If you go over that PR you will see what I mean. Maybe that one might go in instead? Anyway, I like the idea this would be directly in dtest api, we had an intention to add it there _sometimes_ as I do not have time to do  that so if we do it _the proper way_ and I can reuse it in my PR, that would be awesome. 

We are just exposing there stdout and stderr. Please keep in mind that I need to do this _against an instance_, meaning I need to be able to do it such way that it will be executed in the "scope" of that node because I can spin up more clusters and I need to have "stdout" per each "jvm / classloader".

If all this is met, we might reuse whatever solution but please keep in mind that I would love to merge 15406 very soon because it was there literally for months and it was blocked by few other tickets so I am personally little impatient here :)

Looking forward to have a feedback.

Ah, looking at Netstats I have _yet again_ some work to align this with the changes in this PR when that one comes through. I start to believe 15406 is just not meant to be ever merged or something :D 

bq. Ultimately, formatted output is good, but structured reporting would be even better if we ever have chance to tacle this. Maybe it's a good point to continue the conversation and create a separate issue for this?

+1 to separate issue.  

bq. We are just exposing there stdout and stderr. Please keep in mind that I need to do this against an instance, meaning I need to be able to do it such way that it will be executed in the "scope" of that node because I can spin up more clusters and I need to have "stdout" per each "jvm / classloader".

Yep, this is part of the nodetool interface, which is scoped to the single instance.  The implementation also deals with this by updating all nodetool commands to update an interface rather than stdout and stderr directly; this avoids concurrent node tools clobbering the capture.

bq.  I would love to merge 15406 very soon because it was there literally for months and it was blocked by few other tickets so I am personally little impatient here 

I don't mind us moving forward with 15406 without this patch; I thought you wanted to hold off given your comment in there.

Because both touch the same classes, if 15406 goes first then this patch needs to update the pointer from stdout to the new interface, if we hold off 15406 then that would need to change the pointer.

Thanks for all the feedbacks. 

[~stefan.miklosovic], as David mentioned, this patch does what you described. Capture the nodetool output per instance. All nodetools are updated to write to a designated output. Additionally, it captures *only* the nodetool output. Meanwhile, redirecting the system out/err captures the server logs, which could make assertion a bit more complicated. 

[~ifesdjeen][~dcapwell], I have added 1 commit to address the comments. 
* rename class and variable
* use public final fields instead of methods to avoid resource warnings

Updated the dtest-api patch with {{notContains}} asserts and added test cases. 

+1 with new changes. Thank you for the patch!

Rebased onto trunk. 2 files conflicted and resolved. 
* {{src/java/org/apache/cassandra/tools/nodetool/NetStats.java}}
* {{test/distributed/org/apache/cassandra/distributed/impl/Instance.java}}

+1 the new changes (only skimmed trunk for the latest changes)

Will commit the jvm-dtest patch.

committed jvm-dtest https://github.com/apache/cassandra-in-jvm-dtest-api/commit/5b26885187d0aa8bc09cd1b1f4b6be81aebb40c7

Committed: Yellow, known broken or flaky tests.

CI results

Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16057-trunk-EBBE5F61-8D2B-48B6-BD18-8D842BCC9E57
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/70/

Rebased to the trunk. Fixed the added test due to the dtest api change. 

Backports: 
 2.2: [https://github.com/yifan-c/cassandra/tree/b/CASSANDRA-16057-2.2]
 CI: [https://app.circleci.com/pipelines/github/yifan-c/cassandra/121/workflows/6ed104ea-788e-4c3e-89e5-fd516bae7b51]

3.0: [https://github.com/yifan-c/cassandra/tree/b/CASSANDRA-16057-3.0]
 CI: [https://app.circleci.com/pipelines/github/yifan-c/cassandra/120/workflows/fa570014-6078-47df-a401-794f8d163ac5]

3.11: [https://github.com/yifan-c/cassandra/tree/b/CASSANDRA-16057-3.11]
 CI: [https://app.circleci.com/pipelines/github/yifan-c/cassandra/119/workflows/945130ca-274e-4311-8b30-fd72a405d9f9]

cc: [~dcapwell]

Reopen for the backports

Listing the files that are still using {{System.out | System.err}}. Nodetool commands are no longer using the system out/err directly. 

In 2.2

{code:java}
12:30:07 in cassandra on b/CASSANDRA-16057-2.2 
➜ egrep -r 'System.out|System.err' src/java/org/apache/cassandra/tools | awk {'print $1'} | sort | uniq -u
src/java/org/apache/cassandra/tools/GetVersion.java:
src/java/org/apache/cassandra/tools/Output.java:
src/java/org/apache/cassandra/tools/SSTableExpiredBlockers.java:
src/java/org/apache/cassandra/tools/SSTableMetadataViewer.java:
{code}

In 3.0 

{code:java}
12:32:28 in cassandra on b/CASSANDRA-16057-3.0 
➜ egrep -r 'System.out|System.err' src/java/org/apache/cassandra/tools | awk {'print $1'} | sort | uniq -u
src/java/org/apache/cassandra/tools/GetVersion.java:
src/java/org/apache/cassandra/tools/Output.java:
src/java/org/apache/cassandra/tools/SSTableExpiredBlockers.java:
src/java/org/apache/cassandra/tools/SSTableMetadataViewer.java:
{code}

In 3.11

{code:java}
12:33:20 in cassandra on b/CASSANDRA-16057-3.11
➜ egrep -r 'System.out|System.err' src/java/org/apache/cassandra/tools | awk {'print $1'} | sort | uniq -u
src/java/org/apache/cassandra/tools/GetVersion.java:
src/java/org/apache/cassandra/tools/Output.java:
src/java/org/apache/cassandra/tools/SSTableExpiredBlockers.java:
src/java/org/apache/cassandra/tools/SSTableMetadataViewer.java:
src/java/org/apache/cassandra/tools/nodetool/formatter/TableBuilder.java:  // It has System.out in the comment. 
{code}


code mostly LGTM, basically the same as the trunk patch.

Can you run python dtest and jvm upgrade tests?
Also 3.11 fails to build.

Fixed the compilation failure in 3.11. 

The dtest and jvm upgrade tests results for branches. 

3.11: https://app.circleci.com/pipelines/github/yifan-c/cassandra/125/workflows/ba290f87-1129-4a72-91dc-e60dfe39e2b5 (Failures do not look related)
3.0: https://app.circleci.com/pipelines/github/yifan-c/cassandra/120/workflows/09c8c1f8-1b30-49de-a68b-27bb1bbd21bf (Failures do not look related)
2.2: https://app.circleci.com/pipelines/github/yifan-c/cassandra/121/workflows/d5d71199-342b-45f8-a1d1-3d57af414142 (Failures in cqlsh tests. Not related)

Code looks good. The only thing is that in 3.11 we still use {{System.out}} in {{ViewBuildStatus.java}} and {{Info.java}}. 

Good catch! 

It turns out that my previous command used to list {{(System.out | System.err)}} usage was wrong. The "-u" is unnecessary. 
I have fixed the 3.11 branch. 

{code:java}
08:14:09 in cassandra on b/CASSANDRA-16057-3.11 
➜ egrep -r 'System.out|System.err' src/java/org/apache/cassandra/tools | awk {'print $1'} | sort | uniq 
src/java/org/apache/cassandra/tools/AbstractJmxClient.java:
src/java/org/apache/cassandra/tools/BulkLoader.java:
src/java/org/apache/cassandra/tools/GetVersion.java:
src/java/org/apache/cassandra/tools/LoaderOptions.java:
src/java/org/apache/cassandra/tools/NodeProbe.java:
src/java/org/apache/cassandra/tools/Output.java:
src/java/org/apache/cassandra/tools/SSTableExpiredBlockers.java:
src/java/org/apache/cassandra/tools/SSTableExport.java:
src/java/org/apache/cassandra/tools/SSTableLevelResetter.java:
src/java/org/apache/cassandra/tools/SSTableMetadataViewer.java:
src/java/org/apache/cassandra/tools/SSTableOfflineRelevel.java:
src/java/org/apache/cassandra/tools/SSTableRepairedAtSetter.java:
src/java/org/apache/cassandra/tools/StandaloneSSTableUtil.java:
src/java/org/apache/cassandra/tools/StandaloneScrubber.java:
src/java/org/apache/cassandra/tools/StandaloneSplitter.java:
src/java/org/apache/cassandra/tools/StandaloneUpgrader.java:
src/java/org/apache/cassandra/tools/StandaloneVerifier.java:
src/java/org/apache/cassandra/tools/Util.java:
src/java/org/apache/cassandra/tools/nodetool/formatter/TableBuilder.java:

08:15:16 in cassandra on b/CASSANDRA-16057-3.0 
➜ egrep -r 'System.out|System.err' src/java/org/apache/cassandra/tools | awk {'print $1'} | sort | uniq 
src/java/org/apache/cassandra/tools/AbstractJmxClient.java:
src/java/org/apache/cassandra/tools/BulkLoader.java:
src/java/org/apache/cassandra/tools/GetVersion.java:
src/java/org/apache/cassandra/tools/NodeProbe.java:
src/java/org/apache/cassandra/tools/Output.java:
src/java/org/apache/cassandra/tools/SSTableExpiredBlockers.java:
src/java/org/apache/cassandra/tools/SSTableExport.java:
src/java/org/apache/cassandra/tools/SSTableLevelResetter.java:
src/java/org/apache/cassandra/tools/SSTableMetadataViewer.java:
src/java/org/apache/cassandra/tools/SSTableOfflineRelevel.java:
src/java/org/apache/cassandra/tools/SSTableRepairedAtSetter.java:
src/java/org/apache/cassandra/tools/StandaloneSSTableUtil.java:
src/java/org/apache/cassandra/tools/StandaloneScrubber.java:
src/java/org/apache/cassandra/tools/StandaloneSplitter.java:
src/java/org/apache/cassandra/tools/StandaloneUpgrader.java:
src/java/org/apache/cassandra/tools/StandaloneVerifier.java:
src/java/org/apache/cassandra/tools/Util.java:

08:15:26 in cassandra on b/CASSANDRA-16057-2.2
➜ egrep -r 'System.out|System.err' src/java/org/apache/cassandra/tools | awk {'print $1'} | sort | uniq 
src/java/org/apache/cassandra/tools/AbstractJmxClient.java:
src/java/org/apache/cassandra/tools/BulkLoader.java:
src/java/org/apache/cassandra/tools/GetVersion.java:
src/java/org/apache/cassandra/tools/NodeProbe.java:
src/java/org/apache/cassandra/tools/Output.java:
src/java/org/apache/cassandra/tools/SSTableExpiredBlockers.java:
src/java/org/apache/cassandra/tools/SSTableExport.java:
src/java/org/apache/cassandra/tools/SSTableImport.java:
src/java/org/apache/cassandra/tools/SSTableLevelResetter.java:
src/java/org/apache/cassandra/tools/SSTableMetadataViewer.java:
src/java/org/apache/cassandra/tools/SSTableOfflineRelevel.java:
src/java/org/apache/cassandra/tools/SSTableRepairedAtSetter.java:
src/java/org/apache/cassandra/tools/StandaloneScrubber.java:
src/java/org/apache/cassandra/tools/StandaloneSplitter.java:
src/java/org/apache/cassandra/tools/StandaloneUpgrader.java:
src/java/org/apache/cassandra/tools/StandaloneVerifier.java:
src/java/org/apache/cassandra/tools/Util.java:
{code}


+1

CI result from the latest in each branch.

3.11: [https://app.circleci.com/pipelines/github/yifan-c/cassandra/131/workflows/0fb514dd-3bed-4c07-a87f-981996b6fcfe] (unrelated failures)

3.0: [https://app.circleci.com/pipelines/github/yifan-c/cassandra/132/workflows/83facbf4-3b82-468c-aa7d-78f90b01cc09] (unrelated failures)

2.2: [https://app.circleci.com/pipelines/github/yifan-c/cassandra/121/workflows/d5d71199-342b-45f8-a1d1-3d57af414142] (unrelated failures)

Both 3.11 and 3.0 dtest have failed test "test_closing_connections - thrift_hsha_test.TestThriftHSHA".

cc: [~dcapwell]

+1

CI Results: Yellow, expected failures only

Branch: cassandra-2.2
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16057-cassandra-2.2-676928E7-73DD-4B98-8D97-2B57E11D1034
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/115/

Branch: cassandra-3.0
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16057-cassandra-3.0-676928E7-73DD-4B98-8D97-2B57E11D1034
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/116/

Branch: cassandra-3.11
Circle: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-16057-cassandra-3.11-676928E7-73DD-4B98-8D97-2B57E11D1034
Jenkins: https://ci-cassandra.apache.org/job/Cassandra-devbranch/117/


Backport complete

https://github.com/apache/cassandra/commit/f15c6b8c06c9588bd96615fabfc36b11857cd4bb

