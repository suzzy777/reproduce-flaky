d{7}-\\d{15}-oozie-[a-z]{4} will not work.
d{7} ( id part) can grow beyond 7 character.
"oozie" is also configurable.



This was broken for ZKUUIDService because uuid pattern was changed.

To accommodate more ID, millisecond part was removed from id pattern.  Bulk API expect fixed pattern.

{noformat}
Keeping the jobID for ZKUUIDService  as \\d{7}-\\d{15}-systemID
There are other fixes with this patch.
1. Fix id pattern for ZKUUIDService, rollover after 7 digit.
2. While rolling-over timestamp is also reset.
3. ID {{"\\d{7}-\\d{15}-oozie-[a-z]{4}-"}} is changed to \\d{7}-\\d{15}-systemID, because  {{oozie-[a-z]{4}}} is configurable.
{noformat}


Thanks for review [~chitnis]. New patch addressing review comment.

Just a minor comment. Avoid "assertNotNull(jpaService);" in the code. Old testcases have a lot of redundant assertNotNull checks and each copy for setup from a previous testcase just carries it over and add lines to code unnecessarily. 

Testing JIRA OOZIE-1882

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 2 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1508
.    Tests failed: 4
.    Tests errors: 4

.    The patch failed the following testcases:

.      testActionInputCheckLatestActionCreationTime(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommand)
.      testBundleStatusTransitServiceSuspendedWithError(org.apache.oozie.service.TestStatusTransitService)
.      testCoordinatorActionCommandsSubmitAndStart(org.apache.oozie.sla.TestSLAEventGeneration)
.      testActionInputCheckLatestActionCreationTime(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommandNonUTC)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/1360/

+1. Committed to branch-4.1 and trunk. Thanks Puru.

Test Result (8 failures / Â±0)
org.apache.oozie.command.coord.TestCoordActionInputCheckXCommand.testActionInputCheckLatestActionCreationTime
org.apache.oozie.command.coord.TestCoordActionInputCheckXCommand.testNone
org.apache.oozie.command.coord.TestCoordActionInputCheckXCommandNonUTC.testActionInputCheckLatestActionCreationTime
org.apache.oozie.event.TestEventGeneration.testWorkflowJobEvent
org.apache.oozie.service.TestRecoveryService.testCoordActionRecoveryServiceForWaiting
org.apache.oozie.service.TestStatusTransitService.testBundleStatusTransitServiceSuspendedWithError

Test failures are due to OOZIE-1811, OOZIE-1872 and TestEventGeneration is flaky

