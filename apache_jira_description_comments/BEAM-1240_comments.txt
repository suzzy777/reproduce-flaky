GitHub user jbonofre opened a pull request:

    https://github.com/apache/beam/pull/1729

    [BEAM-1240] Create RabbitMqIO

    Be sure to do all of the following to help us incorporate your contribution
    quickly and easily:
    
     - [X] Make sure the PR title is formatted like:
       `[BEAM-<Jira issue #>] Description of pull request`
     - [X] Make sure tests pass via `mvn clean verify`. (Even better, enable
           Travis-CI on your fork and ensure the whole test matrix passes).
     - [X] Replace `<Jira issue #>` in the title with the actual Jira issue
           number, if there is one.
     - [X] If this contribution is large, please file an Apache
           [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.txt).
    
    ---


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/beam BEAM-1240-RABBITMQIO

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/beam/pull/1729.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1729
    
----
commit 63f5a3e19e2a238e43db3dc42e226e7471594262
Author: Jean-Baptiste Onofré <jbonofre@apache.org>
Date:   2017-01-03T08:59:52Z

    [BEAM-1240] Create RabbitMqIO

----


As this IO is almost done, I plan to include it in 2.6.0. I'm updating the PR right now.

Sounds good. Thanks JB.

Is there a specific reason for using version 4.6.0 of the RabbitMq amqp-client instead of the newer 5.3.0? I'm asking, because the QueingConsumer is deprecated since version 3 and is removed in version 5.

Furthermore, after some testing, I see the getWatermark() method can return null. When running with the direct-runner, I get an NPE because the first time oldestTimeStamp is null. Maybe you ca add a null check and if null set it to Instant.now()?

[https://github.com/jbonofre/beam/blob/f1665f47ff10679a2a54c1879fce6d77151fa90a/sdks/java/io/rabbitmq/src/main/java/org/apache/beam/sdk/io/rabbitmq/RabbitMqIO.java#L385]

Testing it with the flink local runner, I never see it calling the finalizeCheckpoint method in RabbitMQCheckpointMark. Which means, the RabbitMq messages are never acknowledged. Have you tried it? 

Hello Mr. Jeroren

I have tested Apache Beam RmqIO with Flink runner. If the source is unbounded and checkpoint interval is declared, the finalizeCheckpoint method gets called and My RMQ message is getting acknowledged.

Moreover, i have another issue of my Rmq Connection is closing automatically and Job gets finished.
Although Queue has data.

Close method of UnboundedRabbitMqReader class get called Which causes a connection to stop
Any help or suggestion will be appreciated.

 

What is the plan for this JIRA? Are we targeting 2.8.0 with cut date 10/10?

