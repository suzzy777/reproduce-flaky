Java also historically has used the same encoding as the one your presented. Regardless, UTF-8 can capture all UTF-16 values (and then some). Like all things Java, the character encoding works correctly across platforms.

https://softwareengineering.stackexchange.com/questions/174947/why-does-java-use-utf-16-for-internal-string-representation

I wouldn't recommend making the character encoding a configurable option.

There's no way currently to record the encoding used in all the various places ZK, so if the default changes between server restarts, reading a snapshot, reading a ZNode name, reading a ZNode value, etc. may break.
Allowing for a configurable character encoding will explode the test metric for ZK. Using UTF-8, which covers pretty much every language, will keep the testing in-check.
Since we're changing to UTF-8, which is most permissive, the chance of a backwards capability issue is very low.

http://utf8everywhere.org/

Issue resolved by pull request 882
[https://github.com/apache/zookeeper/pull/882]

