There is a problem with the test case testMemoryUsageAndSpeedOverflowToDisk.

After 20k entries, data is spilled to the disk. However, Ehcache writes on a separate thread asynchronously and all put operations return immediately. The problem is that after storing the 60k entries, we try to read them back instantly, with many of them are still being flushed to the storage. As long as disk write in progress, these entries are unavailable.

I didn't find a reliable way to wait for disk writes. Therefore I suggest disabling this test or eliminate it altogether -- it's a performance test that runs on all kinds of machines during a build, I don't think it makes too much sense to keep it.

Also testMemoryUsageAndSpeed might be prone to test failures too - these two assertions might evaluate to false:
{code}
assertTrue((endTime - startTime) < insertTimeinMillis);
...
assertTrue((System.currentTimeMillis() - endTime) < retrievalTimeinMillis);
{code}