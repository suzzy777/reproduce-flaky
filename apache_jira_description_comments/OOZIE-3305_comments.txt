Thanks for the idea [~harisekhon]! Do you have free cycles to work on this?

[~andras.piros] [~asalamon74] I'd like to work on this.

Patch is submitting, in this patch:
* Introduced two prometheus client packages {{simpleclient_dropwizard}} and {{simpleclient_common}}, for convert dropwizard metrics to prometheus format metrics.
* Added a new HTTP endpoint {{/v2/admin/prometheus}} to expose prometheus metrics.

Worth noting that:
* The new endpoint is always enabled, considering that prometheus metrics exposed passively via periodic pull from prometheus server.
* The new endpoint have not supported in Oozie CLI, and have not documented in API doc.
* The new endpoint's response type is text instend of json, but as I know all existing oozie servlets extend from `JsonRestServlet`.

Looking forward to hearing you suggesions.



PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3305

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any star imports
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} Javadoc generation succeeded with the patch
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warning(s)
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:red}-1{color} There are [21] new bugs found below threshold in total that must be fixed.
.    {color:green}+1{color} There are no new bugs found in [fluent-job/fluent-job-api].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:red}-1{color} There are [6] new bugs found below threshold in [core] that must be fixed, listing only the first [5] ones.
.    You can find the SpotBugs diff here (look for the red and orange ones): core/findbugs-new.html
.    The top [5] most important SpotBugs errors are:
.    At BulkJPAExecutor.java:[line 206]: This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection
.    At BulkJPAExecutor.java:[line 176]: At BulkJPAExecutor.java:[line 175]
.    At BulkJPAExecutor.java:[line 205]: At BulkJPAExecutor.java:[line 199]
.    This use of javax/persistence/EntityManager.createQuery(Ljava/lang/String;)Ljavax/persistence/Query; can be vulnerable to SQL/JPQL injection: At BulkJPAExecutor.java:[line 206]
.    At BulkJPAExecutor.java:[line 111]: At BulkJPAExecutor.java:[line 127]
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
.    {color:green}+1{color} There are no new bugs found in [sharelib/git].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:red}-1{color} There are [15] new bugs found below threshold in [tools] that must be fixed, listing only the first [5] ones.
.    You can find the SpotBugs diff here (look for the red and orange ones): tools/findbugs-new.html
.    The top [5] most important SpotBugs errors are:
.    At OozieDBCLI.java:[line 584]: This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection
.    At OozieDBCLI.java:[line 574]: At OozieDBCLI.java:[line 573]
.    At OozieDBCLI.java:[line 577]: At OozieDBCLI.java:[line 575]
.    At OozieDBCLI.java:[line 579]: At OozieDBCLI.java:[line 578]
.    At OozieDBCLI.java:[line 584]: At OozieDBCLI.java:[line 581]
.    {color:orange}0{color} There are [4] new bugs found in [server] that would be nice to have fixed.
.    You can find the SpotBugs diff here: server/findbugs-new.html
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [webapp].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 3201
.    {color:orange}Tests failed at first run:{color}
TestBlockingInputStream#testLimitedWritingBlockingInputStream
.    For the complete list of flaky tests, see TEST-SUMMARY-FULL files.
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 
{color:red}-1 MODERNIZER{color}
.    {color:red}-1{color} the patch seems to introduce 1 new modernizer error(s)
.    {color:red}-1{color} the patch introduces 1 new warning(s) in /core/src/main/java/org/apache/oozie/servlet/V1AdminServlet.java

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

. https://builds.apache.org/job/PreCommit-OOZIE-Build/1283/



[~asalamon74] [~gezapeti] Any suggestions?

Thanks for the patch [~qsbao]! 
I like the direction the patch is going. Integrating with Prometheus would make life easier for a lot of our users.

I wonder whether it would make sense to make it possible to turn off this integration. Is there any performance overhead if the endpoint is not used?

I think we can ignore the modernizer warning. The warning is related to the fact that you are using {{Collections.EMPTY_LIST}} instead of {{Collections.emptyList()}}. Since in the same method we use it quite a few times I think it's OK, and we can address this issue later.

Thank you for your suggestions!

[~gezapeti] There is basically no performance impact if the endpoint is not used. During {{MetricsInstrumentation}} initiation when metric service starting, several prometheus related classes loaded and several promethesu related objects created. But after this, during metric service running, if the prometheus endpoint is not used, no additional logic will be executed.

 

I'm fine with committing the patch in this case. We're lucky, the prometheus-dropwizard connector has the same version of dropwizard as we do. We'll have to keep an eye on keeping them compatible if we upgrade one of them.

Any objections [~asalamon74]?

Also looks good to me.

[~qsbao] I cannot really test it now with Prometheus, have you tried this change with Prometheus?

[~asalamon74] Yes I did. Here are some screenshots：

!Screen Shot 2020-01-18 at 11.17.29 AM.png|width=862,height=485!
 !Screen Shot 2020-01-18 at 11.36.20 AM.png|width=862,height=485!
 !Screen Shot 2020-01-18 at 11.19.30 AM.png|width=862,height=485!

The prometheus config {{prometheus.yaml}} used:
{code:none}

global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.

scrape_configs:
  - job_name: 'oozie'
    metrics_path: '/oozie/v2/admin/prometheus'
    static_configs:
     - targets: ['localhost:11000']
{code}

PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3305

Cleaning local git workspace

----------------------------

{color:red}-1{color} Patch failed to apply to head of branch

----------------------------


PreCommit-OOZIE-Build started



Testing JIRA OOZIE-3305

Cleaning local git workspace

----------------------------

{color:red}-1{color} Patch failed to apply to head of branch

----------------------------


Thanks for the confirmation! 
+1 then


Commit 70f9cbd697644d6ad9f2cfd64325e2e95f37ac01 in oozie's branch refs/heads/master from Gezapeti Cseh
[ https://gitbox.apache.org/repos/asf?p=oozie.git;h=70f9cbd ]

OOZIE-3305 Prometheus /metrics http endpoint for monitoring integration (qsbao via gezapeti)


committed to master!

