Patch at https://github.com/apache/cassandra/compare/trunk...thelastpickle:mck/16587-2/trunk

[~mck] is this under dev or ready for review and should we include here PRs for the dockerization or parallelism?

Still in dev, I need to provide patches on all branches, and matching CI.

The plan is docker parallelism to happen in a follow up ticket.

Patches
 - [trunk|https://github.com/apache/cassandra/compare/trunk...thelastpickle:mck/16595/trunk] –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/648/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/648/pipeline/]
 - [3.11|https://github.com/apache/cassandra/compare/cassandra-3.11...thelastpickle:mck/16595/3.11]  –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/650/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/650/pipeline/]
 - [3.0|https://github.com/apache/cassandra/compare/cassandra-3.0...thelastpickle:mck/16595/3.0] –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/655/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/655/pipeline/]
 - [2.2|https://github.com/apache/cassandra/compare/cassandra-2.2...thelastpickle:mck/16595/2.2] –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/652/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/652/pipeline/]

Only had a quick look. I think {{-Dtest.runners}} is no longer valid. We should remove the references for clarity. 

{code:java}
// for branch mck/16595/trunk
➜ grep -rnw . -e '-Dtest.runners'
./.circleci/config.yml.MIDRES:68:          ant testclasslist -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed -Dtest.runners=1
./.circleci/config.yml.MIDRES:1234:          ant testclasslist -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed -Dtest.runners=1
./.circleci/config.yml.MIDRES:1670:          ant testclasslist -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed -Dtest.runners=1
./.circleci/config.yml.HIGHRES:55:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml.HIGHRES:68:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml.HIGHRES:1221:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml.HIGHRES:1234:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml.HIGHRES:1657:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml.HIGHRES:1670:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml.LOWRES:55:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml.LOWRES:68:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml.LOWRES:1221:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml.LOWRES:1234:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml.LOWRES:1657:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml.LOWRES:1670:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml:55:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml:68:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml:1221:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml:1234:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config.yml:1657:        name: Run Unit Tests (testclasslist -Dtest.runners=1)
./.circleci/config.yml:1670:          ant testclasslist -Dtest.runners=1 -Dtest.timeout="$test_timeout" -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt  -Dtest.classlistprefix=distributed
./.circleci/config-2_1.yml:384:          target: "testclasslist -Dtest.runners=1"
./.circleci/config-2_1.yml:397:          target: "testclasslist -Dtest.runners=1"
./.circleci/config-2_1.yml:410:          target: "testclasslist -Dtest.runners=1"
{code}


Started a CI run using 'mck/16595/trunk' at [https://app.circleci.com/pipelines/github/yifan-c/cassandra/231/workflows/f8dd4d33-cd47-4bff-8fe9-f98dd63b104f].

The j8_unit_tests is finally green ✅ !

bq. Only had a quick look. I think -Dtest.runners is no longer valid. We should remove the references for clarity. 

+1 same for cassandra-builds repo

I did clean, jar and test all branches and everything seems to work. The jenkins runs are aligned to the nightly runs. We'd be missing circle runs only imo?

circleci yaml files updated (in same patch). I will update cassandra-builds as part of CASSANDRA-16604

circleci: https://app.circleci.com/pipelines/github/michaelsembwever/cassandra?branch=mck%2F16595%2Ftrunk

^LGTM and very green. If you're OCD like me I'd do mid and high as well :shrug:

bq. If you're OCD like me I'd do mid and high as well

done. (in the above circleci link)

Wall of green. +1.

Committed as [1185593907ba6597c29da1dfb5e6edb121b358c5|https://github.com/apache/cassandra/commit/1185593907ba6597c29da1dfb5e6edb121b358c5].

Broke CI, investigating…

Fix is https://github.com/apache/cassandra/compare/trunk...thelastpickle:mck/16595-fix/trunk

 [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/665/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/665/pipeline/]

circleci: https://app.circleci.com/pipelines/github/michaelsembwever/cassandra?branch=mck%2F16595-fix%2Ftrunk

OK on updating the circleCI yaml in CASSANDRA-16604, as long as it is planned. 

The new fix solved the issue that no tests are started. The test now runs -and passes-. https://app.circleci.com/pipelines/github/yifan-c/cassandra/234/workflows/4db13bf2-ffa2-4a53-b88f-50627da3993d (The front page showed a green check, but the job indicated that there were 18 failed tests)


Tests need to run one class per JVM and in a clean cassandra directory, have restored this functionality. (Despite other test targets that don't do this, and also would now be broken.)

Fix is https://github.com/apache/cassandra/compare/trunk...thelastpickle:mck/16595-fix/trunk


 [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/670/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/670/pipeline/]

circleci: https://app.circleci.com/pipelines/github/michaelsembwever/cassandra?branch=mck%2F16595-fix%2Ftrunk

Patches
 - [trunk|https://github.com/apache/cassandra/compare/trunk...thelastpickle:mck/16595-fix/trunk] –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/670/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/670/pipeline/]
 - [3.11|https://github.com/apache/cassandra/compare/cassandra-3.11...thelastpickle:mck/16595-fix/3.11]  –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/671/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/671/pipeline/]
 - [3.0|https://github.com/apache/cassandra/compare/cassandra-3.0...thelastpickle:mck/16595-fix/3.0] –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/672/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/672/pipeline/]
 - [2.2|https://github.com/apache/cassandra/compare/cassandra-2.2...thelastpickle:mck/16595-fix/2.2] –  [!https://ci-cassandra.apache.org/job/Cassandra-devbranch/675/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/675/pipeline/]

tested branches 3.0, 3.11, and trunk; all passed

my test suite

{code}
$ # ci-test tries to mimic CI when running the class, so tends to have the same behavior as circle ci and Jenkins
$ ./ci-test org/apache/cassandra/hints/HintsWriteThenReadTest && ./ci-test org/apache/cassandra/distributed/test/LargeColumnTest --reuse && ./ci-tes/apache/cassandra/hints/HintsServiceTest --reuse && ./ci-test org/apache/cassandra/hints/HintsServiceTest --cdc --reuse && ./ci-test org/apache/cassandra/hints/HintsServiceTest --compress --reuse && ./ci-test org/apache/cassandra/hints/HintsServiceTest --compress --reuse && ./ci-test org/apache/cassandra/hints/HintsServiceTest --compress --reuse
{code}

Didn't review the code as I have a hard time with ant, but +1 from my testing; should work fine in CI

+1

The CI/Jenkins results LGTM. 

Committed as [c52f50f046fd1a8e1c7f17d9a1952e2bd92aeb4c|https://github.com/apache/cassandra/commit/c52f50f046fd1a8e1c7f17d9a1952e2bd92aeb4c].

[~dcapwell] any chance you could share or add that ci-test sh to the circle folder? I would have caught this when I did run some tests locally to make sure it was working.

[~bereng], the ci-test script isn't related to circle-ci, it is a wrapper around ant to match all CIs.

{code}
$ cat ci-test
#!/usr/bin/env bash

#set -o xtrace
set -o errexit
set -o pipefail
set -o nounset

usage() {
  if [[ $# -gt 0 ]]; then
    echo "$*" 1>&2
  fi
  cat <<EOF
Usage: $(basename $0) [class name] (options)*
Options:
--cdc           - runs with cdc enabled
--compression   - run with compression enabled
--reuse         - skip calling ant realclean
EOF
  exit 1
}

if [[ $# -eq 0 ]]; then
  usage "Missing required arguments"
fi

class_name="$1"
shift
path="$(echo "$class_name" | tr '.' '/' ).java"
prefix="$( find test | grep "$path" | awk -F/ '{print $2}' )"

task="testclasslist"
fresh_build=true
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    --cdc)
      task="testclasslist-cdc"
      shift
      ;;
    --compression)
      task="testclasslist-compression"
      shift
      ;;
    --reuse)
      fresh_build=false
      shift
      ;;
    *)
      usage "Unknown argument $1"
      ;;
  esac
done

if [[ "$fresh_build" == true ]]; then
  if [[ ! "$path" =~ distributed/upgrade ]]; then
    ant realclean && ant && ant generate-idea-files
  fi
fi

# cleanup logs so w/e is around are for this run
rm -rf build/test/logs || true

test_timeout=$(grep "name=\"test.$prefix.timeout\"" build.xml | awk -F'"' '{print $4}' || true)
if [ -z "$test_timeout" ]; then
  test_timeout=$(grep 'name="test.timeout"' build.xml | awk -F'"' '{print $4}')
fi
ant "$task" -Dtest.timeout="$test_timeout" -Dtest.classlistfile=<(echo "$path") -Dtest.classlistprefix=$prefix
{code}

Ok the obvious diff is the use of the {{testclasslist}} target where I was using {{test}} instead, but still it's a useful script imo. Thx for sharing.

