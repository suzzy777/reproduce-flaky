Saw it again on java 11.

I changed the test to print what's compacting when it fails, and most of the time it fails with 4 sstables compacting, in either cfs or cfs2.  This at least makes some sense since both CFs contain 4 sstables.  However, sometimes it fails with only two:

{code}
[junit-timeout] Testcase: testExceptionAnticompaction(org.apache.cassandra.db.repair.PendingAntiCompactionBytemanTest): FAILED
[junit-timeout] Nothing should be compacting: [BigTableReader(path='/home/debian/cassandra/build/test/cassandra/data:0/ks_1581462173137/tbl2-a21085804d2211ea92ecf9c4ecc0407d/na-3-big-Data.db'), BigTableReader(pa
th='/home/debian/cassandra/build/test/cassandra/data:0/ks_1581462173137/tbl2-a21085804d2211ea92ecf9c4ecc0407d/na-4-big-Data.db')]
{code}

I also moved the getLiveSSTables assertions before the empty check, and those always pass.

cc [~marcuse]

We use {{Futures.allAsList}} [here|https://github.com/apache/cassandra/blob/219d209651759cf702519a100c4f43595f7be8d7/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java#L307] which will fail immediately when any of the input futures fails, without waiting for the others, patch to just wait for the compactions to get cancelled: https://github.com/krummas/cassandra/commits/marcuse/15552

tests: https://circleci.com/workflow-run/c4eaae15-6f73-44f6-8b5f-dbade70c315d

Patch LGTM, running the tests in a loop to help confirm.

LGTM, tests pass constantly (though this was rare on trunk).

Nits:
[waitForCessation|org.apache.cassandra.db.compaction.CompactionManager#waitForCessation] waits for 1 minute and silently returns, so it is possible the assert following will fail; it would be nicer if that method would return success (replace break with true) or not (end of loop return false).

committed, thanks

I think it is ok to assume that the anticompactions will both fail within 1 minute, otherwise we should probably at least look in to why it took so long.

