This would be a great improvement. I also think having a gRPC-style async API with a StreamObserver-like API would be useful for applications that are concerned with efficiency; FlightStream/FlightProducer is a very convenient API, but the internals do quite a bit of work on behalf of the user to achieve that.

Â 

To get this to work with FlightProducers in unit tests, I changed doGetCustom() to run in a background thread (similar to doPutCustom()). The reason is that the unit test implementations of getStream() block until all data has been sent to the client via putNext().

In practice, I would think implementers of FlightProducers would make getStream() asynchronous themselves, so it might be better to instead make the unit test FlightProducers have the same behavior.

Also, doAction() could have the same problems.

Resolved by [https://github.com/apache/arrow/pull/8476|https://github.com/apache/arrow/pull/8476].

This issue has been migrated to [issue #26120|https://github.com/apache/arrow/issues/26120] on GitHub. Please see the [migration documentation|https://github.com/apache/arrow/issues/14542] for further details.

