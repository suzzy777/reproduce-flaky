Commit c9549e8b982be8471c6298790e74c7dbe3796858 in geode-benchmarks's branch refs/heads/GEODE-7554 from Helena A. Bales
[ https://gitbox.apache.org/repos/asf?p=geode-benchmarks.git;h=c9549e8 ]

GEODE-7554: Add retry mechanism for failed tests

* write failed tests to a file
* enable all benchmarks
* update help message for --ci option in run_against_baseline.sh


Commit bd2e0008335859ae012f383707a321299006fd02 in geode-benchmarks's branch refs/heads/develop from Helena Bales
[ https://gitbox.apache.org/repos/asf?p=geode-benchmarks.git;h=bd2e000 ]

GEODE-7554: Add retry mechanism for failed tests (#120)

* write failed tests to a file
* enable all benchmarks
* update help message for --ci option in run_against_baseline.sh

Commit 278c2470a5cac2c332d13914b935f0618b820a91 in geode's branch refs/heads/develop from Helena Bales
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=278c247 ]

GEODE-7554: Add retry mechanism for failed tests (#4461)

* GEODE-7554: Add retry mechanism for failed tests

There are still some flaky benchmarks. Retry tests that have failed, up
to 5 times, to determine if the failure is legitimate or just a flaky
test. If the test fails 5 times in a row, we know that it is a
legitimate failure.

With each run of run_against_baseline (in the apache/geode-benchmarks
repo), the class names of all failed tests will be written to a file.
The run_benchmarks script called by CI will read the failed tests from
the file and run only those tests. Once the return code is 0, or once
we've tried 5 times, exit.

* build failedFile path dynamically

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* add print of iteration number for CI debugging of failures

Signed-off-by: Robert Houghton <rhoughton@pivotal.io>

* triggering CI again. Previous status never updated

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* refactor if statement for readability

* restarting CI

* remove hardcoded cluster tag


Commit 278c2470a5cac2c332d13914b935f0618b820a91 in geode's branch refs/heads/develop from Helena Bales
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=278c247 ]

GEODE-7554: Add retry mechanism for failed tests (#4461)

* GEODE-7554: Add retry mechanism for failed tests

There are still some flaky benchmarks. Retry tests that have failed, up
to 5 times, to determine if the failure is legitimate or just a flaky
test. If the test fails 5 times in a row, we know that it is a
legitimate failure.

With each run of run_against_baseline (in the apache/geode-benchmarks
repo), the class names of all failed tests will be written to a file.
The run_benchmarks script called by CI will read the failed tests from
the file and run only those tests. Once the return code is 0, or once
we've tried 5 times, exit.

* build failedFile path dynamically

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* add print of iteration number for CI debugging of failures

Signed-off-by: Robert Houghton <rhoughton@pivotal.io>

* triggering CI again. Previous status never updated

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* refactor if statement for readability

* restarting CI

* remove hardcoded cluster tag


Commit 6e7681ddeeb9f669b9c74941424676f6293c2b7e in geode's branch refs/heads/release/1.11.0 from Helena Bales
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e7681d ]

GEODE-7554: Add retry mechanism for failed tests (#4461)

* GEODE-7554: Add retry mechanism for failed tests

There are still some flaky benchmarks. Retry tests that have failed, up
to 5 times, to determine if the failure is legitimate or just a flaky
test. If the test fails 5 times in a row, we know that it is a
legitimate failure.

With each run of run_against_baseline (in the apache/geode-benchmarks
repo), the class names of all failed tests will be written to a file.
The run_benchmarks script called by CI will read the failed tests from
the file and run only those tests. Once the return code is 0, or once
we've tried 5 times, exit.

* build failedFile path dynamically

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* add print of iteration number for CI debugging of failures

Signed-off-by: Robert Houghton <rhoughton@pivotal.io>

* triggering CI again. Previous status never updated

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* refactor if statement for readability

* restarting CI

* remove hardcoded cluster tag

(cherry picked from commit 278c2470a5cac2c332d13914b935f0618b820a91)


Commit 6e7681ddeeb9f669b9c74941424676f6293c2b7e in geode's branch refs/heads/release/1.11.0 from Helena Bales
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6e7681d ]

GEODE-7554: Add retry mechanism for failed tests (#4461)

* GEODE-7554: Add retry mechanism for failed tests

There are still some flaky benchmarks. Retry tests that have failed, up
to 5 times, to determine if the failure is legitimate or just a flaky
test. If the test fails 5 times in a row, we know that it is a
legitimate failure.

With each run of run_against_baseline (in the apache/geode-benchmarks
repo), the class names of all failed tests will be written to a file.
The run_benchmarks script called by CI will read the failed tests from
the file and run only those tests. Once the return code is 0, or once
we've tried 5 times, exit.

* build failedFile path dynamically

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* add print of iteration number for CI debugging of failures

Signed-off-by: Robert Houghton <rhoughton@pivotal.io>

* triggering CI again. Previous status never updated

Signed-off-by: Helena A. Bales <hbales@pivotal.io>

* refactor if statement for readability

* restarting CI

* remove hardcoded cluster tag

(cherry picked from commit 278c2470a5cac2c332d13914b935f0618b820a91)


Transition from Resolved to Closed for Apache Geode 1.11.0 RC4 release.

Commit bd2e0008335859ae012f383707a321299006fd02 in geode-benchmarks's branch refs/heads/master from Helena Bales
[ https://gitbox.apache.org/repos/asf?p=geode-benchmarks.git;h=bd2e000 ]

GEODE-7554: Add retry mechanism for failed tests (#120)

* write failed tests to a file
* enable all benchmarks
* update help message for --ci option in run_against_baseline.sh

