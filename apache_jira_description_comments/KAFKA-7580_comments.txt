Thanks for reporting this. I am just wondering, why this is a problem. Running test as root user is not common...

For our testing validation purposes, we need to validate the tests as root and non-root user. Hence the requirement for running test as root user. Were the unit tests intended to be run as non-root user only, and failure of the unit test when run as root user is expected behaviour?

Unit test are not intended to fail if you run them as root use. I am fine with improving the test as you suggested. It's just seems to be a very uncommon request that unit test need to pass as root use... I would never run unit test as root use – same for any other piece of "regular" software. Running software as root should be limited as much as possible in general, and usually it's not required.

Hi Matthias,

Just wanted to know by when will we have the suggested improvement in the failing unit test? Is it possible anytime soon?

Not sure. Feel free to pick it up. It's the idea of an open source project :)

I have put in a fix to handle the case of 'shouldThrowProcessorStateExceptionOnOpeningReadOnlyDir' passing when executed by both root and non-root users. With this all unit tests pass for all users.

However observing the following messages intermittently for a few random unit tests, though the status for each of them is PASSED:-
 "*pure virtual method called*
 *terminate called without an active exception*"

Some of the unit tests throwing above messages are, besides others:-
org.apache.kafka.streams.kstream.internals.KTableImplTest > shouldThrowNullPointerOnTransformValuesWithKeyWhenMaterializedIsNull PASSED
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest > shouldThrowStreamsExceptionOnStartupIfThereIsAStreamsException PASSED
org.apache.kafka.streams.state.internals.CachingSessionStoreTest > shouldNotForwardChangedValuesDuringFlushWhenSendOldValuesDisabled PASSED
org.apache.kafka.streams.processor.internals.StoreChangelogReaderTest > shouldCompleteImmediatelyWhenEndOffsetIs0 PASSED
org.apache.kafka.streams.kstream.internals.KStreamKStreamJoinTest > testJoin PASSED

This probably causes the 'gradle unitTest' command to fail during cleanup time with final status as FAILED and the following message:-
 "Process 'Gradle Test Executor 16' finished with non-zero exit value 134"

This intermittent/random error is not seen when final unit test suite status is "BUILD SUCCESSFUL".

Sound like a `RocksDB` issue – this indicates a bug. Do you see the same error without your patch on `trunk` or any other branch? Maybe it's not related to your patch.

Few more which pass yet throw 'pure virtual method called' error:-

org.apache.kafka.streams.kstream.internals.KTableFilterTest > testTypeVariance PASSED
org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoinTest > testNotSendingOldValues PASSED
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest > shouldThrowStreamsExceptionOnStartupIfThereIsAStreamsException PASSED
org.apache.kafka.streams.processor.DefaultPartitionGrouperTest > shouldComputeGroupingForTwoGroups PASSED
org.apache.kafka.streams.state.internals.RocksDBWindowStoreTest > shouldFetchAndIterateOverExactKeys PASSED
org.apache.kafka.streams.state.internals.FilteredCacheIteratorTest > shouldFilterEntriesNotMatchingHasNextCondition PASSED
org.apache.kafka.streams.state.internals.GlobalStateStoreProviderTest > shouldThrowExceptionIfStoreIsntOpen PASSED

The above tests throw the 'pure virtual method called' error randomly & intermittently with or without any changes to the code base from kafka-2.0.0 source tar.

Cloned and downloaded the 'trunk' branch - https://github.com/apache/kafka.git. No other changes were applied. The following unit test fail on Ubuntu:-

kafka.log.LogCleanerParameterizedIntegrationTest > testCleansCombinedCompactAndDeleteTopic[4] FAILED
 java.lang.AssertionError: Contents of the map shouldn't change expected:<Map(0 -> (340,340), 5 -> (345,345), 10 -> (350,350), 14 -> (354,354), 1 -> (341,341), 6 -> (346,346), 9 -> (349,349), 13 -> (353,353), 2 -> (342,342), 17 -> (357,357), 12 -> (352,352), 7 -> (347,347), 3 -> (343,343), 18 -> (358,358), 16 -> (356,356), 11 -> (351,351), 8 -> (348,348), 19 -> (359,359), 4 -> (344,344), 15 -> (355,355))> but was:<Map(0 -> (340,340), 88 -> (288,288), 5 -> (345,345), 10 -> (350,350), 14 -> (354,354), 93 -> (293,293), 89 -> (289,289), 1 -> (341,341), 6 -> (346,346), 92 -> (292,292), 97 -> (297,297), 9 -> (349,349), 96 -> (296,296), 13 -> (353,353), 2 -> (342,342), 17 -> (357,357), 12 -> (352,352), 7 -> (347,347), 98 -> (298,298), 91 -> (291,291), 3 -> (343,343), 18 -> (358,358), 95 -> (295,295), 16 -> (356,356), 11 -> (351,351), 99 -> (299,299), 8 -> (348,348), 19 -> (359,359), 4 -> (344,344), 94 -> (294,294), 15 -> (355,355), 90 -> (290,290))>
 at org.junit.Assert.fail(Assert.java:88)
 at org.junit.Assert.failNotEquals(Assert.java:834)
 at org.junit.Assert.assertEquals(Assert.java:118)
 at kafka.log.LogCleanerParameterizedIntegrationTest.testCleansCombinedCompactAndDeleteTopic(LogCleanerParameterizedIntegrationTest.scala:129)

 

{quote}with or without any changes to the code base 
{quote}
For this case, feel free to open an PR – it's seems to be two different issues – we should still try to figure out the root cause for "pure virtual method" error, but there is no reason to block this Jira because of it.

Not sure about `LogCleanerParameterizedIntegrationTest` – in general, we suffer from flaky tests :( (it's an continuous effort to try keeping the tests stable). If you can reproduce an error reliably, it's work to open a ticket just for this single test with details how to reproduce it. It could depend on your environment – similar to the "pure virtual method" – maybe the used RocksDB version is not compatible with your Ubuntu version.

sarveshtamba opened a new pull request #6020: Fix for Unit Test 'shouldThrowProcessorStateExceptionOnOpeningReadOnlyDir' fails when run as root user(#KAFKA-7580)
URL: https://github.com/apache/kafka/pull/6020
 
 
   Fix for Unit Test 'shouldThrowProcessorStateExceptionOnOpeningReadOnlyDir' fails when run as root user(#KAFKA-7580)
   Refer https://issues.apache.org/jira/browse/KAFKA-7580
   
   gradle unitTest passes successfully with message "BUILD SUCCESSFUL"

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Created a PR for "Fix for Unit Test 'shouldThrowProcessorStateExceptionOnOpeningReadOnlyDir' fails when run as root user" at [https://github.com/apache/kafka/pull/6020]

 

The issues of "pure virtual method" should be tracked separately.

[~mjsax] any plans to check up the issues of "pure virtual method"? Not been able to figure out why is this an issue and an intermittent/random one. Can you please check?

FYI, following are the environment details:-

p006vm10:~ # lscpu
Architecture: ppc64le
Byte Order: Little Endian
CPU(s): 16
On-line CPU(s) list: 0-15
Thread(s) per core: 1
Core(s) per socket: 1
Socket(s): 16
NUMA node(s): 1
Model: 2.1 (pvr 004b 0201)
Model name: POWER8E (raw), altivec supported
Hypervisor vendor: KVM
Virtualization type: para
L1d cache: 64K
L1i cache: 32K
NUMA node0 CPU(s): 0-15

p006vm10:~ # arch
ppc64le

p006vm10:~ # cat /etc/os-release
NAME="SLES"
VERSION="12-SP2"
VERSION_ID="12.2"
PRETTY_NAME="SUSE Linux Enterprise Server 12 SP2"
ID="sles"
ANSI_COLOR="0;32"
CPE_NAME="cpe:/o:suse:sles:12:sp2"
p006vm10:~ #

To summarize, the "pure virtual method" issue is seen on both Ubuntu 16.04 and SLES 12 SP2, both as root & non-root users on both these environments.

"pure virtual method" indicates an issue with RocksDB. Maybe some binaries are not compatible on your OS? It could also be a bug in Streams code base itself thought. It's pretty hard to debug those. Can you reproduce it reliably? Do you know test fails at which point?

Reproducing "pure virtual method" issue is extremely hard, since it happens intermittently and for any random unit test(not the same unit test will fail next time). The ones noted above were some of the failing unit tests observed. Note that the status next to the test shows PASSED(is this correct or misleading?).

I agree that it is extremely hard. Unfortunately, I don't have any good advice how to tackle it... :(

sarveshtamba commented on pull request #6020: KAFKA-7580: Allow running Streams unit test as root
URL: https://github.com/apache/kafka/pull/6020
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Should we close this as "won't fix"

Refer PR [https://github.com/apache/kafka/pull/6020] for more details on the closure.

[~mjsax] done. Thanks for all your help.

