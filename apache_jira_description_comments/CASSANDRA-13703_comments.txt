Patch [here|https://github.com/blambov/cassandra/tree/13703].

Changes the max size threshold to be non-inclusive so that {{min_compress_ratio: 1}} can work (this would be a breaking change, but CASSANRDA-10520 is not part of any release yet), and adds an error for values between 0 and 1 exclusive.

Unit tests are clean, dtests have two failures that appear to be flaky on trunk:
{{repair_tests.incremental_repair_test.TestIncRepair.multiple_repair_test}}
{{bootstrap_test.TestBootstrap.consistent_range_movement_false_with_rf1_should_succeed_test}}

+1 - from my still largely layman perspective, the change looks good.

A couple of small nits:
* {{CompressedChunkReader.maybeCheckCrc()}} (renamed in this patch to {{shouldCheckCrc()}}) may be removed or at least its visibility could be reduced. It seems to be used solely in CompressedChunkReader.java, lines 158 and 204 in this patch.
* The no-argument / single-argument factory methods for Snappy and LZ4 compressions in CompressionParams.java seem to differ in the values that they default to for min compression ratio and max compressed length.
** For Snappy, if nothing is specified, or only chunk length is specified, a default min compression ratio of 1.1 is used, and therefore max compressed length ends up somewhere roughly around 90% of chunk length.
** For LZ4, if nothing is specified, or only chunk length is specified, a default max compressed length of chunk length is used, and therefore min compression ratio ends up at 1.0 (I'm not sure if a precision error is possible there).

Edit: Of course, take this review with the appropriate rock-sized grain of salt.

Rebased and updated the branch, reducing the visibility of {{shouldCheckCrc}} and adding a comment and {{VisibleForTesting}} annotations to make it clear why the shorthand methods use inconsistent parameters.

Tests were fine, committed to trunk as [17a358c2cc2c583c3e0fa046ca8dee6d743ad1c5|https://github.com/apache/cassandra/commit/17a358c2cc2c583c3e0fa046ca8dee6d743ad1c5].

