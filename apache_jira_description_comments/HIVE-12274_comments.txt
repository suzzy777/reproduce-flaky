[~teabot] can you post a sample DDL? What serde are you using to read? Is it Hive-JSON-Serde?

Hi, I have attached some sample code to reproduce. The snippet below shows the error we see. Note that the ellipsis are my own addition for brevity:
{code}
hive> CREATE EXTERNAL TABLE IF NOT EXISTS mytests.mybigtable
    > (
    > bigstruct STRUCT <
    >   myField1 : STRING,
...
    >   myField1000 : STRING
    > >
    > )
    > PARTITIONED BY (yymmdd STRING)
    > ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.JsonSerde'
    > STORED AS SEQUENCEFILE
    > LOCATION '/path-to/mybigtable/';
OK
Time taken: 4.86 seconds
hive> desc mytests.mybigtable;
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Error: type expected at the position 3996 of 'struct<myField1:string,myField2:string,myField3:string,myField4:string,myField5:string,myField6:string, ... ,myField228:stri' but 'stri' is found.
hive>
{code}

Note that although the schema given in the example is contrived, we do see real world schemas that easily exceed the upper length bound. I'm not in a position to publicly share them however.

Also note, the supplied example will fail whether or not the SerDe is specified, therefore I do not believe the SerDe implementation is a factor.

The standard advise for this case is to change the struct to Hive columns; this case should already be fixed for external schemas.
It is a valid concern though... cc [~thejas]

I am also experiencing this constraint creating an external table using org.apache.hive.hcatalog.data.JsonSerDe.

HIVE-9815 is related and documents some limitations in doing this with Oracle DB.

facing similar issue with deeply nested data:
{code}
Caused by: ERROR 22001: A truncation error was encountered trying to shrink VARCHAR 'struct<ab_segment:string,app_type:string,app_version:string,&' to length 4000.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.types.SQLChar.hasNonBlankChars(Unknown Source)
	at org.apache.derby.iapi.types.SQLVarchar.normalize(Unknown Source)
{code}
Any way to by pass this issue ?

You can manually alter the metastore database schema, increasing the column width or changing the column type. This assumes you have permissions to do so and that your database implementation supports such a change. You will of course then be running a non-standard, custom version of the metastore with the additional headaches that might be incurred.

[~teabot]
 I am facing similar issue ,I tried modifying PARAM_VALUE field in SERDE_PARAMS table in hive metastore.Still no luck.
Any help is highly appreciated.
Thanks

In order to push this forward, I think it would make sense to focus on this story and mark the related stories (HIVE-9815 and HIVE-12299) as duplicates because both of them are subsets of this story.

There is some valuable information in them, in summary:

Regarding the 4000 characters limitation:
It was set to by this [patch|https://github.com/apache/hive/commit/c21a526b0a752df2a51d20a2729cc8493c228799] (HIVE-1364) which mentions the "max length on Oracle 9i/10g/11g" as the reason. However, nowadays the limit can be increased because:
* Oracle DB's varchar2 supports 32767 bytes now, by setting the configuration parameter MAX_STRING_SIZE to EXTENDED. ([source|http://docs.oracle.com/database/121/SQLRF/sql_elements001.htm#SQLRF55623])
* Postgres supports a max of 1GB for character datatype. ([source|http://www.postgresql.org/docs/8.3/static/datatype-character.html])
* MySQL can support upto 65535 bytes for the entire row. So long as the PARAM_KEY value + PARAM_VALUE is less than 65535, we should be good. ([source|http://dev.mysql.com/doc/refman/5.0/en/char.html])
* SQL Server's varchar max length is 8000 and can go beyond using "varchar(max)" with the same limitation as MySQL being 65535 bytes for the entire row. ([source|http://dev.mysql.com/doc/refman/5.0/en/char.html])
* Derby's varchar can be upto 32672 bytes. ([source|https://db.apache.org/derby/docs/10.7/ref/rrefsqlj41207.html])

Regarding the updating process of existing databases:
After updating the maximum length the metastore database needs to be configured and restarted with the new settings. Altering MAX_STRING_SIZE will update database objects and possibly invalidate them, as follows:
# Tables with virtual columns will be updated with new data type metadata for virtual columns of VARCHAR2(4000), 4000-byte NVARCHAR2, or RAW(2000) type.
# Functional indexes will become unusable if a change to their associated virtual columns causes the index key to exceed index key length limits. Attempts to rebuild such indexes will fail with ORA-01450: maximum key length exceeded.
# Views will be invalidated if they contain VARCHAR2(4000), 4000-byte NVARCHAR2, or RAW(2000) typed expression columns.
# Materialized views will be updated with new metadata VARCHAR2(4000), 4000-byte NVARCHAR2, and RAW(2000) typed expression columns

*So the limitation could be raised to 32672 bytes, with the caveat that MySQL and SQL Server limit the row length to 65535 bytes, so that should also be validated to provide consistency.*

[~teabot], could you update this story with the information?

Thanks for collating this information [~Heye], I've updated the description accordingly.

would be great to get some traction on this puppy.   (I like everybody else here encounter this with deeply nested "json to hive" mappings.)  its kinda a hard stop.

would there be any news?

cheers!

[~LearnerIn] Did you manage to fix it ? I have modified all of the following:
{code:SQL}
COLUMNS_V2.TYPE_NAME
TABLE_PARAMS.PARAM_VALUE
SERDE_PARAMS.PARAM_VALUE
SD_PARAMS.PARAM_VALUE
{code}
to be 40k chars and I still get same error.  
{code}
Error: Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. InvalidObjectException(message:Invalid column type name is too long: stru`
{code}

using mysql as metastore from EMR

guess the issue is with hive 2.x since there is a check inside code https://issues.apache.org/jira/browse/HIVE-15249

Attaching a patch that would expand the following metastore columns.

COLUMNS_V2.COLUMN_NAME to 767 bytes 
TBLS.TABLE_NAME to 256 bytes

COLUMNS_V2.TYPE_NAME to CLOB
TABLE_PARAMS.PARAM_VALUE to CLOB
SD_PARAMS.PARAM_VALUE to CLOB
SERDE_PARAMS.PARAM_VALUE to CLOB

Recently COLUMN_NAME width has been increased to 1000. I do not see accompanying changes in the package.jdo that would accomodate this change. Also for MySQL, appears that the max size of a width for a column that has an index is 767 bytes. So I dont think 1000 would work. I am not sure what level of testing has been done to validate this. I couldnt get it to work locally with a MySQL instance.



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12854694/HIVE-12274.patch

{color:red}ERROR:{color} -1 due to build exiting with an error

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/3792/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/3792/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-3792/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Tests exited with: NonZeroExitCodeException
Command 'cp -f /data/hiveptest/logs/PreCommit-HIVE-Build-3792/patches/PreCommit-HIVE-Build-3792.patch /data/hiveptest/working/scratch/build.patch' failed with exit status 1 and output 'cp: error writing ?/data/hiveptest/working/scratch/build.patch?: No space left on device
cp: failed to extend ?/data/hiveptest/working/scratch/build.patch?: No space left on device
'
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12854694 - PreCommit-HIVE-Build

The precommit build failed with some ptest error. It did not run the tests at all. Will re-submit the patch to kick off the build



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12854765/HIVE-12274.patch

{color:red}ERROR:{color} -1 due to build exiting with an error

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/3796/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/3796/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-3796/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Tests exited with: ExecutionException: java.util.concurrent.ExecutionException: java.io.IOException: Error writing to /data/hiveptest/working/scratch/hiveptest-29-TestCliDriver-udf_bitwise_and.q-mapjoin_emit_interval.q-date_udf.q-and-27-more.sh
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12854765 - PreCommit-HIVE-Build

pre-commit still fails with some execution failure. Retrying



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12854796/HIVE-12274.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 274 failed/errored test(s), 6267 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.org.apache.hadoop.hive.cli.TestBlobstoreCliDriver (batchId=231)
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.testCliDriver[insert_into_dynamic_partitions] (batchId=231)
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.testCliDriver[insert_into_table] (batchId=231)
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.testCliDriver[insert_overwrite_directory] (batchId=231)
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.testCliDriver[insert_overwrite_dynamic_partitions] (batchId=231)
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.testCliDriver[insert_overwrite_table] (batchId=231)
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.testCliDriver[write_final_output_blobstore] (batchId=231)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=1)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=10)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=11)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=12)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=13)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=14)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=16)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=17)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=18)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=19)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=2)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=20)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=21)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=22)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=23)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=24)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=25)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=26)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=27)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=28)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=29)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=3)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=30)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=31)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=32)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=33)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=34)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=35)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=36)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=37)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=38)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=39)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=4)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=40)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=41)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=42)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=43)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=44)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=45)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=46)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=47)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=48)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=49)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=5)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=50)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=51)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=52)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=53)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=54)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=55)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=56)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=57)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=58)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=59)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=6)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=61)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=62)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=63)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=64)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=65)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=66)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=67)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=68)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=69)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=7)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=70)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=71)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=72)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=73)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=74)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=75)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=76)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=77)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=78)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=79)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=8)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=80)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=81)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=82)
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=9)
org.apache.hadoop.hive.cli.TestContribNegativeCliDriver.org.apache.hadoop.hive.cli.TestContribNegativeCliDriver (batchId=225)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=139)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=140)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=141)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=142)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=143)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=144)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=147)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=148)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=149)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=150)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=152)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=153)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=154)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=155)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver (batchId=161)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.org.apache.hadoop.hive.cli.TestNegativeCliDriver (batchId=85)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.org.apache.hadoop.hive.cli.TestNegativeCliDriver (batchId=86)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query12] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query13] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query15] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query16] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query17] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query18] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query19] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query1] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query20] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query21] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query22] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query25] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query26] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query27] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query28] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query29] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query30] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query31] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query32] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query33] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query34] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query36] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query37] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query38] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query39] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query3] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query40] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query42] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query43] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query46] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query48] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query50] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query51] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query52] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query54] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query55] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query56] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query58] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query5] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query60] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query64] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query65] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query66] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query67] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query68] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query69] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query6] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query70] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query71] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query72] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query73] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query75] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query76] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query79] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query7] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query80] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query81] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query82] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query83] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query84] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query85] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query86] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query87] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query88] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query89] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query8] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query90] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query91] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query92] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query93] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query94] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query95] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query96] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query97] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query98] (batchId=223)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=100)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=101)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=102)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=103)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=104)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=105)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=106)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=107)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=108)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=109)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=110)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=111)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=112)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=113)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=114)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=115)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=117)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=118)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=120)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=121)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=122)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=123)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=124)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=125)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=126)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=127)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=128)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=129)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=130)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=131)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=132)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=133)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=95)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=97)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=98)
org.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=99)
org.apache.hadoop.hive.cli.TestSparkNegativeCliDriver.org.apache.hadoop.hive.cli.TestSparkNegativeCliDriver (batchId=230)
org.apache.hadoop.hive.metastore.TestEmbeddedHiveMetaStore.testPartitionFilter (batchId=194)
org.apache.hadoop.hive.metastore.TestEmbeddedHiveMetaStore.testTableFilter (batchId=194)
org.apache.hadoop.hive.metastore.TestRemoteHiveMetaStore.testPartitionFilter (batchId=197)
org.apache.hadoop.hive.metastore.TestRemoteHiveMetaStore.testTableFilter (batchId=197)
org.apache.hadoop.hive.metastore.TestSetUGIOnBothClientServer.testPartitionFilter (batchId=193)
org.apache.hadoop.hive.metastore.TestSetUGIOnBothClientServer.testTableFilter (batchId=193)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyClient.testPartitionFilter (batchId=191)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyClient.testTableFilter (batchId=191)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyServer.testPartitionFilter (batchId=202)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyServer.testTableFilter (batchId=202)
org.apache.hadoop.hive.ql.TestReplicationScenarios.testDrops (batchId=208)
org.apache.hadoop.hive.ql.TestReplicationScenarios.testStatus (batchId=208)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[ambiguous_join_col] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[duplicate_alias] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[garbage] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[insert_wrong_number_columns] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_create_table] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_dot] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_function_param2] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_index] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_select] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[macro_reserved_word] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[missing_overwrite] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[nonkey_groupby] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[quoted_string] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column1] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column2] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column3] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column4] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column5] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column6] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function1] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function2] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function3] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function4] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_table1] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_table2] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[wrong_distinct1] (batchId=227)
org.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[wrong_distinct2] (batchId=227)
org.apache.hive.beeline.TestBeeLineWithArgs.testQueryProgressParallel (batchId=211)
org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade (batchId=211)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=170)
org.apache.hive.hcatalog.pig.TestAvroHCatLoader.testDatePartitionPushUp (batchId=173)
org.apache.hive.hcatalog.pig.TestOrcHCatLoader.testDatePartitionPushUp (batchId=173)
org.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testDatePartitionPushUp (batchId=173)
org.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testDatePartitionPushUp (batchId=173)
org.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testDatePartitionPushUp (batchId=173)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/3799/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/3799/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-3799/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 274 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12854796 - PreCommit-HIVE-Build

Test failures from DirectSQL implementation unable to convert SQL Clob to Strings.



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12854811/HIVE-12274.2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 84 failed/errored test(s), 10266 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query12] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query13] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query15] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query16] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query17] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query18] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query19] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query1] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query20] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query21] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query22] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query25] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query26] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query27] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query28] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query29] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query30] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query31] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query32] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query33] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query34] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query36] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query37] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query38] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query39] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query3] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query40] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query42] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query43] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query46] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query48] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query50] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query51] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query52] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query54] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query55] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query56] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query58] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query5] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query60] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query64] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query65] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query66] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query67] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query68] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query69] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query6] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query70] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query71] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query72] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query73] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query75] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query76] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query79] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query7] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query80] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query81] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query82] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query83] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query84] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query85] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query86] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query87] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query88] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query89] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query8] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query90] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query91] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query92] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query93] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query94] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query95] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query96] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query97] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query98] (batchId=223)
org.apache.hadoop.hive.metastore.TestEmbeddedHiveMetaStore.testTableFilter (batchId=194)
org.apache.hadoop.hive.metastore.TestRemoteHiveMetaStore.testTableFilter (batchId=197)
org.apache.hadoop.hive.metastore.TestSetUGIOnBothClientServer.testTableFilter (batchId=193)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyClient.testTableFilter (batchId=191)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyServer.testTableFilter (batchId=202)
org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade (batchId=211)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=170)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/3802/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/3802/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-3802/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 84 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12854811 - PreCommit-HIVE-Build

The patch looks good to me. Do we have any tests for upgrade scripts for various DBs?
cc [~ashutoshc]

[~sershe] Thank you for the review. 
1) I have tested manually against Derby/MySQL/Oracle/Postgres. I havent been able to test with SQL Server (I intend to see if there is a way setup a cloud instance of SQL server and run some quick tests).
2) I also ran the automatic metastore upgrade(HIVE-9800/HIVE-10239) & validation(HIVE-11072) test framework with the changes and it clears the test.

I am investigating these PerfCliDriver failures above. I am running them locally now but they seem to hang for ever. I am using {{mvn test -Dtest=TestPerfCliDriver -Dqfile=query1.q -Phadoop-2}} from itests/qtest folder to run the tests. I am tried other test files too. Same result. Do you know if there is a better way to run these tests locally? Thanks

Just want to re-run the build. Just want to make sure that the failures are genuine. I tried running these TestPerfCliDriver tests locally and they seem to hang forever. 



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12854970/HIVE-12274.2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 85 failed/errored test(s), 10273 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[schema_evol_text_vec_table] (batchId=147)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query12] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query13] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query15] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query16] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query17] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query18] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query19] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query1] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query20] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query21] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query22] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query25] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query26] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query27] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query28] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query29] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query30] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query31] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query32] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query33] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query34] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query36] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query37] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query38] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query39] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query3] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query40] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query42] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query43] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query46] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query48] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query50] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query51] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query52] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query54] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query55] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query56] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query58] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query5] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query60] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query64] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query65] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query66] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query67] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query68] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query69] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query6] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query70] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query71] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query72] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query73] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query75] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query76] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query79] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query7] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query80] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query81] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query82] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query83] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query84] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query85] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query86] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query87] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query88] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query89] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query8] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query90] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query91] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query92] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query93] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query94] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query95] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query96] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query97] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query98] (batchId=223)
org.apache.hadoop.hive.metastore.TestEmbeddedHiveMetaStore.testTableFilter (batchId=194)
org.apache.hadoop.hive.metastore.TestRemoteHiveMetaStore.testTableFilter (batchId=197)
org.apache.hadoop.hive.metastore.TestSetUGIOnBothClientServer.testTableFilter (batchId=193)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyClient.testTableFilter (batchId=191)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyServer.testTableFilter (batchId=202)
org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade (batchId=211)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=170)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/3824/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/3824/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-3824/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 85 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12854970 - PreCommit-HIVE-Build

cc: [~thejas]

+1 and any update on this?

I am currently investigating test failures above from the TestPerfCliDriver. All failures seem to be from difference in the qtest output. I narrowed down the cause. The expected output is from CBO enabled. The actual output is a result of CBO being disabled because the test is unable to bulk load data into HMS metastore. This bulk loader uses a little known feature in derby to import the data from a txt file. Since we are changing the type of TABLE_PARAMS.PARAM_VALUE to CLOB, there format for the data needs to be different. Looking at the code, the CLOB column DATA needs to be separated into its own file and the original data file needs to have the filename, offset and the data length to read from. This is my understanding based on reading the code from.
http://people.apache.org/~kristwaa/jacoco/org.apache.derby.impl.load/ImportLobFile.java.html

I have been able to get past the initial failure, but CBO fails further along without clear message. [~thejas] Who can I approach to understand these CBO failures? Thanks


I am attaching new patch that adds a couple of fixes more, one to a MetaSToreUtils where it checks for the length of Column TypeName. This check needs to be removed. Second fix is to the QTestUtil file that bulk loads some data into derby.



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12856731/HIVE-12274.3.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 85 failed/errored test(s), 10333 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[schema_evol_text_vec_table] (batchId=147)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query12] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query13] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query15] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query16] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query17] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query18] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query19] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query1] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query20] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query21] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query22] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query25] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query26] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query27] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query28] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query29] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query30] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query31] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query32] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query33] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query34] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query36] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query37] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query38] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query39] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query3] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query40] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query42] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query43] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query46] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query48] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query50] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query51] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query52] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query54] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query55] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query56] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query58] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query5] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query60] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query64] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query65] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query66] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query67] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query68] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query69] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query6] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query70] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query71] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query72] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query73] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query75] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query76] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query79] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query7] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query80] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query81] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query82] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query83] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query84] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query85] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query86] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query87] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query88] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query89] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query8] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query90] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query91] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query92] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query93] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query94] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query95] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query96] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query97] (batchId=224)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query98] (batchId=224)
org.apache.hadoop.hive.metastore.TestEmbeddedHiveMetaStore.testTableFilter (batchId=195)
org.apache.hadoop.hive.metastore.TestRemoteHiveMetaStore.testTableFilter (batchId=198)
org.apache.hadoop.hive.metastore.TestSetUGIOnBothClientServer.testTableFilter (batchId=194)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyClient.testTableFilter (batchId=192)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyServer.testTableFilter (batchId=203)
org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade (batchId=212)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=170)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/4020/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/4020/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-4020/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 85 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12856731 - PreCommit-HIVE-Build

The PerfCliDriver test failures are due to incorrect bulking loading of data into derby database for TABLE_PARAMS and TAB_COL_STATS tables. Because the TAB_COL_STATS werent being loaded, the CBO optimizer was being disabled thus leading the query plans and explain outputs to be different.

I am changing the derby bulking import API call query. the IMPORT_TABLE_LOB_FROM_EXT_FILE is not appropriate until you spilt the LOB data out to separate files from the main import file. I am changing int to just IMPORT_TABLE API call.



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12858823/HIVE-12274.4.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 17 failed/errored test(s), 10346 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join_without_localtask] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_sortmerge_join_3] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[date_join1] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[groupby6_noskew] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[mapjoin_test_outer] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[merge2] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[multi_join_union] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[smb_mapjoin_11] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[timestamp_2] (batchId=96)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[vectorization_9] (batchId=96)
org.apache.hadoop.hive.metastore.TestEmbeddedHiveMetaStore.testTableFilter (batchId=196)
org.apache.hadoop.hive.metastore.TestRemoteHiveMetaStore.testTableFilter (batchId=199)
org.apache.hadoop.hive.metastore.TestSetUGIOnBothClientServer.testTableFilter (batchId=195)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyClient.testTableFilter (batchId=193)
org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyServer.testTableFilter (batchId=204)
org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade (batchId=213)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=171)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/4151/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/4151/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-4151/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 17 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12858823 - PreCommit-HIVE-Build

Much better. Looks like all the failures from the TestPerfCliDriver have been resolved. The 10 failures from the TestSparkCliDriver seem to be random, perhaps flaky ones?. I have run these 10 test successully locally multiple times now. No failures thus far. Amongst the rest of the failures, the testTableFilter one's are related to the patch because the API uses a query on a CLOB field that cannot be used for String comparison.
{code}
SELECT A0.TBL_NAME FROM TBLS A0 LEFT OUTER JOIN DBS B0 ON A0.DB_ID = B0.DB_ID INNER JOIN TABLE_PARAMS C0 ON A0.TBL_ID = C0.TBL_ID WHERE C0.PARAM_KEY = 'test_param_2' AND B0."NAME" = ? AND C0.PARAM_VALUE = ?
	at org.datanucleus.api.jdo.NucleusJDOHelper.getJDOExceptionForNucleusException(NucleusJDOHelper.java:677)
	at org.datanucleus.api.jdo.JDOQuery.executeInternal(JDOQuery.java:391)
	at org.datanucleus.api.jdo.JDOQuery.executeWithMap(JDOQuery.java:279)
	at org.apache.hadoop.hive.metastore.ObjectStore.listTableNamesByFilter(ObjectStore.java:3198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.hive.metastore.RawStoreProxy.invoke(RawStoreProxy.java:101)
	at com.sun.proxy.$Proxy19.listTableNamesByFilter(Unknown Source)
	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.get_table_names_by_filter(HiveMetaStore.java:2140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.hive.metastore.RetryingHMSHandler.invokeInternal(RetryingHMSHandler.java:148)
	at org.apache.hadoop.hive.metastore.RetryingHMSHandler.invoke(RetryingHMSHandler.java:107)
	at com.sun.proxy.$Proxy25.get_table_names_by_filter(Unknown Source)
	at org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Processor$get_table_names_by_filter.getResult(ThriftHiveMetastore.java:11511)
	at org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Processor$get_table_names_by_filter.getResult(ThriftHiveMetastore.java:11495)
	at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39)
	at org.apache.hadoop.hive.metastore.TUGIBasedProcessor$1.run(TUGIBasedProcessor.java:110)
	at org.apache.hadoop.hive.metastore.TUGIBasedProcessor$1.run(TUGIBasedProcessor.java:106)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)
	at org.apache.hadoop.hive.metastore.TUGIBasedProcessor.process(TUGIBasedProcessor.java:118)
	at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:286)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
NestedThrowablesStackTrace:
java.sql.SQLSyntaxErrorException: Comparisons between 'CLOB (UCS_BASIC)' and 'CLOB (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement40.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement42.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver42.newEmbedPreparedStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)
	at com.jolbox.bonecp.ConnectionHandle.prepareStatement(ConnectionHandle.java:1193)
	at org.datanucleus.store.rdbms.SQLController.getStatementForQuery(SQLController.java:345)
	at org.datanucleus.store.rdbms.query.RDBMSQueryUtils.getPreparedStatementForQuery(RDBMSQueryUtils.java:211)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.performExecute(JDOQLQuery.java:609)
	at org.datanucleus.store.query.Query.executeQuery(Query.java:1855)
	at org.datanucleus.store.query.Query.executeWithMap(Query.java:1762)
	at org.datanucleus.api.jdo.JDOQuery.executeInternal(JDOQuery.java:372)
	at org.datanucleus.api.jdo.JDOQuery.executeWithMap(JDOQuery.java:279)
	at org.apache.hadoop.hive.metastore.ObjectStore.listTableNamesByFilter(ObjectStore.java:3198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.hive.metastore.RawStoreProxy.invoke(RawStoreProxy.java:101)
	at com.sun.proxy.$Proxy19.listTableNamesByFilter(Unknown Source)
	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.get_table_names_by_filter(HiveMetaStore.java:2140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.hive.metastore.RetryingHMSHandler.invokeInternal(RetryingHMSHandler.java:148)
	at org.apache.hadoop.hive.metastore.RetryingHMSHandler.invoke(RetryingHMSHandler.java:107)
	at com.sun.proxy.$Proxy25.get_table_names_by_filter(Unknown Source)
{code}

I am taking a look at these.

All the testTableFilter tests are working fine locally. The only test thats failing is {{org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade}}. I find this a bit odd, given the exception in the failure.

[~ngangam] Past experience shows that the Hive test suite is very flakey, normally when we reach out to one of the committers they take a look and go "oh yes, that's fine, that's got nothing to do with your patch, you can ignore those". Hopefully that's the same case here.

Recently the test runs were pretty clean... The test logs link above has the error:
{noformat}
testTableFilter(org.apache.hadoop.hive.metastore.TestSetUGIOnOnlyServer)  Time elapsed: 20.433 sec  <<< ERROR!
MetaException(message:Exception thrown when executing query : SELECT A0.TBL_NAME FROM TBLS A0 LEFT OUTER JOIN DBS B0 ON A0.DB_ID = B0.DB_ID INNER JOIN TABLE_PARAMS C0 ON A0.TBL_ID = C0.TBL_ID WHERE C0.PARAM_KEY = 'test_param_2' AND B0."NAME" = ? AND C0.PARAM_VALUE = ?)
	at org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_table_names_by_filter_result$get_table_names_by_filter_resultStandardScheme.read(ThriftHiveMetastore.java:57344)
{noformat}
due to (in hive.log) {noformat}
java.sql.SQLSyntaxErrorException: Comparisons between 'CLOB (UCS_BASIC)' and 'CLOB (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
{noformat}

Apparently, one can filter by table params in Hive! I never knew that.

Thank you [~massdosage] and [~sershe] These failures appear legit and a result of my change to CLOB. The tests worked fine when I ran them locally immediately after the failure. I then rebased to the latest master then started seeing the same failures locally too. I dont know what change I was at before I rebased. So some recent change is clearly affecting this behavior.
{code}
remote: Counting objects: 141, done.
remote: Compressing objects: 100% (99/99), done.
remote: Total 141 (delta 26), reused 3 (delta 3), pack-reused 4
Receiving objects: 100% (141/141), 407.29 KiB | 0 bytes/s, done.
Resolving deltas: 100% (27/27), completed with 3 local objects.
From https://github.com/apache/hive
   f99ece6..2a8d1bf  master     -> origin/master
Updating f99ece6..2a8d1bf
Fast-forward
{code}

I am looking to find an appropriate fix for this. Do you know if there is a way to influence the datanucleus JDO query constructed under the covers? Thanks

Fixed the test failures.



Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12859441/HIVE-12274.5.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 10358 tests executed
*Failed tests:*
{noformat}
TestCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=11)
	[skewjoinopt15.q,udf_elt.q,join44.q,index_auto_partitioned.q,inputddl2.q,drop_table.q,udf_testlength.q,auto_join33.q,parquet_ppd_varchar.q,udf_sha2.q,groupby5_map_skew.q,merge4.q,storage_format_descriptor.q,masking_1_newdb.q,vector_leftsemi_mapjoin.q,multi_column_in_single.q,cbo_rp_semijoin.q,char_2.q,repl_1_drop.q,non_ascii_literal2.q,ppd_clusterby.q,load_part_authsuccess.q,auto_sortmerge_join_15.q,explain_rearrange.q,varchar_union1.q,vector_udf2.q,groupby_constcolval.q,annotate_stats_limit.q,explainanalyze_5.q,distinct_windowing.q]
TestCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=19)
	[cp_mj_rc.q,order.q,udf_bitwise_shiftleft.q,insert_values_non_partitioned.q,skewjoinopt10.q,extrapolate_part_stats_date.q,udf_sin.q,vectorized_math_funcs.q,join45.q,join14.q,query_result_fileformat.q,orc_merge1.q,cbo_union_view.q,tez_union_decimal.q,nonmr_fetch.q,order_null.q,cbo_rp_views.q,lvj_mapjoin.q,insert_acid_dynamic_partition.q,skewjoinopt6.q,cbo_rp_cross_product_check_2.q,union_remove_19.q,mapreduce7.q,spark_use_op_stats.q,update_two_cols.q,update_where_no_match.q,correlationoptimizer11.q,stats_empty_partition.q,outer_join_ppr.q,authorization_2.q]
TestCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=22)
	[multi_insert_mixed.q,bucketcontext_5.q,specialChar.q,union_remove_10.q,skewjoinopt21.q,bucketmapjoin_negative.q,input_part0.q,vector_join_nulls.q,udf_hex.q,reducesink_dedup.q,masking_acid_no_masking.q,smb_mapjoin_4.q,mapreduce2.q,input16.q,udf_in_file.q,vector_empty_where.q,udf_variance.q,join42.q,limit_join_transpose.q,auto_join12.q,skewjoin.q,cte_mat_3.q,parenthesis_star_by.q,vector_decimal_round_2.q,udf_conv.q,column_names_with_leading_and_trailing_spaces.q,vectorized_mapjoin2.q,union_stats.q,nullgroup4.q,authorization_view_disable_cbo_2.q]
TestCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=6)
	[ptf_general_queries.q,correlationoptimizer9.q,cross_join_merge.q,parquet_timestamp_conversion.q,sample2.q,parquet_decimal.q,join1.q,bucket_if_with_path_filter.q,join32_lessSize.q,combine2.q,escape3.q,windowing_range_multiorder.q,cte_mat_4.q,udf_weekofyear.q,masking_disablecbo_4.q,char_pad_convert.q,groupby9.q,udaf_covar_samp.q,column_table_stats_orc.q,parquet_columnar.q,skewjoinopt18.q,colstats_all_nulls.q,union_remove_18.q,groupby_duplicate_key.q,pointlookup3.q,orc_remove_cols.q,udf_classloader.q,subq2.q,ctas.q,setop_subq.q]
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[dynamic_semijoin_reduction_3] (batchId=153)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[optimize_nullscan] (batchId=154)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=171)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/4238/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/4238/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-4238/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12859441 - PreCommit-HIVE-Build

Looks much better. The CLOB data types do not support SQL operations like {{<>}},{{!=}} and {{=}} at least in derby (which is what the test uses). So I have had to switch it to use {{LIKE}} in the JDO query construction. The tests that were failing were trying to filter table names based on property values for TABLE_PARAMS. I have had to disable the 2 tests that did <> and != on the properties. I will have to get them to use NOT LIKE instead. This requires lot more work and I have to get the ExpressionTree to be able to parse multi-worded operators like NOT LIKE and I will file a separate jira to do this.

For now, this looks good to me. All tests are fine. The failures above are due to missing test output files are appear to be happening to other builds,immediately preceeding and succeeding this build, as well.

Review posted at https://reviews.apache.org/r/57759/. Can you guys please review? Thanks in advance

The patch looks good to me. +1.

Thank you for the review Aihua. Fix has been committed to {{master (3.0)}} and {{branch-2 (2.2)}}.

[~ngangam], the current plan is for branch-2 to become release 2.3.0, not 2.2.0 (currently at branch-2.2 of github.com/omalley/hive).  So this issue's fix version should be 2.3.0 instead of 2.2.0.

* [About next 2.3 release | http://mail-archives.apache.org/mod_mbox/hive-dev/201703.mbox/%3cCAMs4YUe4Wn3ZABeet-aCN6sMHUp0k8ffgeu3W6m4Y9wgJFSPjg@mail.gmail.com%3e]
* [Re: Backward incompatible changes | http://mail-archives.apache.org/mod_mbox/hive-dev/201703.mbox/%3cCAHfHakEL-+C=Q5rnruNxfcMqABnpm5M_H6QroKcrnS24cv2GxQ@mail.gmail.com%3e]




Thanks [~leftylev]. I was going by the version of the jars being generated with the build. I will file a jira to prepare the branch for 2.3 development.

The patch looks good to me. Did it get tested e.g. on mysql?
Are alter statements from varchar to clob/text valid for all databases?
If so +1

Eh, nm, I had an old tab open... didn't see it already got committed

Naveen, thanks for filing HIVE-16301:  Prepare branch-2 for 2.3 development.

That should reduce the confusion. 

Thanks [~sershe] I committed it last night.
I have tested it against every database supported by hive (I used Oracle XE for oracle testing) except for SQL Server and they all worked fine. I do not have access to MS SQL Server instance. (I am eagerly awaiting the GA of SQL Server on Linux, currently in private beta, so I could automate installation and its testing).



[~ngangam] I'm having problems with PostgreSQL metastore after these changes. The CLOB fields is saved by the PG driver as an int handle (see https://github.com/pgjdbc/pgjdbc/blob/master/pgjdbc/src/main/java/org/postgresql/jdbc/PgPreparedStatement.javaL1239):

{code}
metastore=# select *, CAST(lo_get(CAST("TYPE_NAME" as bigint)) as TEXT) from "COLUMNS_V2"  LIMIT 1;
 CD_ID | COMMENT | COLUMN_NAME | TYPE_NAME | INTEGER_IDX |  lo_get
-------+---------+-------------+-----------+-------------+----------
     2 |         | customer    | 21664     |           0 | \x696e74
(1 row)

metastore=# select version();
                                                    version
----------------------------------------------------------------------------------------------------------------
 PostgreSQL 9.6.2 on x86_64-apple-darwin15.6.0, compiled by Apple LLVM version 8.0.0 (clang-800.0.42.1), 64-bit
{code}

This causes runtime failures on a partitioned table:

{code}
hive> select * from srcpart;
Failed with exception java.io.IOException:java.lang.IllegalArgumentException: Error: type expected at the position 0 of '24030:24031' but '24030' is found.
{code}

the {{24030:24031}} should be {{string:string}} but is not translated through lo_get by {{MetasoreDirectSql.getPartitionsFromPartitionIds}}

{code}
    // Get FieldSchema stuff if any.
    if (!colss.isEmpty()) {
      // We are skipping the CDS table here, as it seems to be totally useless.
      queryText = "select \"CD_ID\", \"COMMENT\", \"COLUMN_NAME\", \"TYPE_NAME\""
          + " from \"COLUMNS_V2\" where \"CD_ID\" in (" + colIds + ") and \"INTEGER_IDX\" >= 0"
          + " order by \"CD_ID\" asc, \"INTEGER_IDX\" asc";
      loopJoinOrderedResult(colss, queryText, 0, new ApplyFunc<List<FieldSchema>>() {
        @Override
        public void apply(List<FieldSchema> t, Object[] fields) {
          t.add(new FieldSchema((String)fields[2], extractSqlClob(fields[3]), (String)fields[1]));
        }});
{code}

BTW there is a {{DatastoreAdapter.CLOB_SET_USING_SETSTRING}} which would change the behavior, but I'm not sure if it can be configured from environment.

[~rusanu] has created HIVE-16667 to track the above issue with postgress.


Unsubscribe

On Fri, May 19, 2017 at 6:57 PM, Thejas M Nair (JIRA) <jira@apache.org>



GitHub user rmartin-rp opened a pull request:

    https://github.com/apache/hive/pull/232

    Update 039-HIVE-12274.oracle.sql

    You cannot modify a column from VARCHAR2(4000) to CLOB directly. You need to add a new column and drop the old one or recreate the table. I chose to recreate the table because it's more clean.
    
    https://asktom.oracle.com/pls/asktom/f?p=100:11:0::::P11_QUESTION_ID:1770086700346491686
    
    Also, if you do something like:
    ALTER TABLE COLUMNS_V2 MODIFY (COLUMN_NAME VARCHAR(767) NOT NULL);
    And the column is already NOT NULL, the ALTER TABLE fails.  I removed 2 like this.
    
    I hope it helps.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rmartin-rp/hive patch-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/hive/pull/232.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #232
    
----
commit 4ff45b78f16171a808a2635705d22536db34dfb4
Author: rmartin-rp <rmartin@ravenpack.com>
Date:   2017-08-15T15:39:24Z

    Update 039-HIVE-12274.oracle.sql
    
    You cannot modify a column from VARCHAR2(4000) to CLOB directly. You need to add a new column and drop the old one or recreate the table. I chose to recreate the table because it's more clean.
    
    https://asktom.oracle.com/pls/asktom/f?p=100:11:0::::P11_QUESTION_ID:1770086700346491686
    
    Also, if you do something like:
    ALTER TABLE COLUMNS_V2 MODIFY (COLUMN_NAME VARCHAR(767) NOT NULL);
    And the column is already NOT NULL, the ALTER TABLE fails.  I removed 2 like this.
    
    I hope it helps.

----


unsubscribe




Hive 3.0.0 has been released so closing this jira.

