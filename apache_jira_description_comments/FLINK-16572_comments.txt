Another same failure case inÂ [https://dev.azure.com/rmetzger/Flink/_build/results?buildId=6259&view=results]

Another case https://dev.azure.com/rmetzger/Flink/_build/results?buildId=6470&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

{code}
2020-03-21T15:25:36.8453336Z -------------------------------------------------------
2020-03-21T15:25:36.8453640Z  T E S T S
2020-03-21T15:25:36.8454096Z -------------------------------------------------------
2020-03-21T15:25:37.3421468Z Running org.apache.flink.streaming.connectors.gcp.pubsub.EmulatedPubSubSinkTest
2020-03-21T15:26:37.2300415Z Mar 21, 2020 3:26:37 PM io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl onError
2020-03-21T15:26:37.2303138Z WARNING: [io.grpc.internal.ManagedChannelImpl-13] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host unknown-host-to-force-sink-crash, cause=java.lang.RuntimeException: java.net.UnknownHostException: unknown-host-to-force-sink-crash: Name or service not known
2020-03-21T15:26:37.2324733Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:399)
2020-03-21T15:26:37.2325645Z 	at io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:269)
2020-03-21T15:26:37.2326461Z 	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)
2020-03-21T15:26:37.2327184Z 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
2020-03-21T15:26:37.2327804Z 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
2020-03-21T15:26:37.2328265Z 	at java.lang.Thread.run(Thread.java:748)
2020-03-21T15:26:37.2329218Z Caused by: java.net.UnknownHostException: unknown-host-to-force-sink-crash: Name or service not known
2020-03-21T15:26:37.2329956Z 	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
2020-03-21T15:26:37.2330387Z 	at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)
2020-03-21T15:26:37.2330885Z 	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)
2020-03-21T15:26:37.2331343Z 	at java.net.InetAddress.getAllByName0(InetAddress.java:1277)
2020-03-21T15:26:37.2331784Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1193)
2020-03-21T15:26:37.2332206Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1127)
2020-03-21T15:26:37.2332722Z 	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:624)
2020-03-21T15:26:37.2333472Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:367)
2020-03-21T15:26:37.2333910Z 	... 5 more
2020-03-21T15:26:37.2334077Z }
2020-03-21T15:26:38.1504278Z Mar 21, 2020 3:26:38 PM io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl onError
2020-03-21T15:26:38.1507500Z WARNING: [io.grpc.internal.ManagedChannelImpl-13] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host unknown-host-to-force-sink-crash, cause=java.lang.RuntimeException: java.net.UnknownHostException: unknown-host-to-force-sink-crash
2020-03-21T15:26:38.1508477Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:399)
2020-03-21T15:26:38.1509060Z 	at io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:269)
2020-03-21T15:26:38.1509534Z 	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)
2020-03-21T15:26:38.1509972Z 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
2020-03-21T15:26:38.1510447Z 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
2020-03-21T15:26:38.1510835Z 	at java.lang.Thread.run(Thread.java:748)
2020-03-21T15:26:38.1511426Z Caused by: java.net.UnknownHostException: unknown-host-to-force-sink-crash
2020-03-21T15:26:38.1511843Z 	at java.net.InetAddress.getAllByName0(InetAddress.java:1281)
2020-03-21T15:26:38.1512212Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1193)
2020-03-21T15:26:38.1512597Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1127)
2020-03-21T15:26:38.1513476Z 	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:624)
2020-03-21T15:26:38.1513965Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:367)
2020-03-21T15:26:38.1514371Z 	... 5 more
2020-03-21T15:26:38.1514512Z }
2020-03-21T15:26:40.1434924Z Mar 21, 2020 3:26:40 PM io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl onError
2020-03-21T15:26:40.1446572Z WARNING: [io.grpc.internal.ManagedChannelImpl-13] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host unknown-host-to-force-sink-crash, cause=java.lang.RuntimeException: java.net.UnknownHostException: unknown-host-to-force-sink-crash
2020-03-21T15:26:40.1448017Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:399)
2020-03-21T15:26:40.1448791Z 	at io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:269)
2020-03-21T15:26:40.1449477Z 	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)
2020-03-21T15:26:40.1450223Z 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
2020-03-21T15:26:40.1450923Z 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
2020-03-21T15:26:40.1451536Z 	at java.lang.Thread.run(Thread.java:748)
2020-03-21T15:26:40.1452489Z Caused by: java.net.UnknownHostException: unknown-host-to-force-sink-crash
2020-03-21T15:26:40.1453264Z 	at java.net.InetAddress.getAllByName0(InetAddress.java:1281)
2020-03-21T15:26:40.1454046Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1193)
2020-03-21T15:26:40.1454736Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1127)
2020-03-21T15:26:40.1455399Z 	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:624)
2020-03-21T15:26:40.1456116Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:367)
2020-03-21T15:26:40.1456640Z 	... 5 more
2020-03-21T15:26:40.1457027Z }
2020-03-21T15:26:42.4973775Z Mar 21, 2020 3:26:42 PM io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl onError
2020-03-21T15:26:42.4976899Z WARNING: [io.grpc.internal.ManagedChannelImpl-13] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host unknown-host-to-force-sink-crash, cause=java.lang.RuntimeException: java.net.UnknownHostException: unknown-host-to-force-sink-crash
2020-03-21T15:26:42.4978041Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:399)
2020-03-21T15:26:42.4978647Z 	at io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:269)
2020-03-21T15:26:42.4979594Z 	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)
2020-03-21T15:26:42.4980353Z 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
2020-03-21T15:26:42.4980966Z 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
2020-03-21T15:26:42.4981453Z 	at java.lang.Thread.run(Thread.java:748)
2020-03-21T15:26:42.4982342Z Caused by: java.net.UnknownHostException: unknown-host-to-force-sink-crash
2020-03-21T15:26:42.4983115Z 	at java.net.InetAddress.getAllByName0(InetAddress.java:1281)
2020-03-21T15:26:42.4983795Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1193)
2020-03-21T15:26:42.4984350Z 	at java.net.InetAddress.getAllByName(InetAddress.java:1127)
2020-03-21T15:26:42.4985107Z 	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:624)
2020-03-21T15:26:42.4985769Z 	at io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:367)
2020-03-21T15:26:42.4986244Z 	... 5 more
2020-03-21T15:26:42.4986522Z }
2020-03-21T15:26:46.3164354Z Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 68.973 sec
2020-03-21T15:26:46.3213049Z Running org.apache.flink.streaming.connectors.gcp.pubsub.EmulatedPubSubSourceTest
2020-03-21T15:26:49.1114675Z Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.786 sec
2020-03-21T15:26:49.1115485Z Running org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest
2020-03-21T15:27:02.7388370Z Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 13.625 sec <<< FAILURE!
2020-03-21T15:27:02.7389823Z testPull(org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest)  Time elapsed: 11.075 sec  <<< ERROR!
2020-03-21T15:27:02.7390637Z com.google.api.gax.rpc.InvalidArgumentException: io.grpc.StatusRuntimeException: INVALID_ARGUMENT: No ack ids specified.
2020-03-21T15:27:02.7391396Z 	at com.google.api.gax.rpc.ApiExceptionFactory.createException(ApiExceptionFactory.java:49)
2020-03-21T15:27:02.7392080Z 	at com.google.api.gax.grpc.GrpcApiExceptionFactory.create(GrpcApiExceptionFactory.java:72)
2020-03-21T15:27:02.7392745Z 	at com.google.api.gax.grpc.GrpcApiExceptionFactory.create(GrpcApiExceptionFactory.java:60)
2020-03-21T15:27:02.7393481Z 	at com.google.api.gax.grpc.GrpcExceptionCallable$ExceptionTransformingFuture.onFailure(GrpcExceptionCallable.java:97)
2020-03-21T15:27:02.7394181Z 	at com.google.api.core.ApiFutures$1.onFailure(ApiFutures.java:68)
2020-03-21T15:27:02.7394751Z 	at com.google.common.util.concurrent.Futures$4.run(Futures.java:1123)
2020-03-21T15:27:02.7395406Z 	at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:435)
2020-03-21T15:27:02.7396110Z 	at com.google.common.util.concurrent.AbstractFuture.executeListener(AbstractFuture.java:900)
2020-03-21T15:27:02.7396772Z 	at com.google.common.util.concurrent.AbstractFuture.complete(AbstractFuture.java:811)
2020-03-21T15:27:02.7397436Z 	at com.google.common.util.concurrent.AbstractFuture.setException(AbstractFuture.java:675)
2020-03-21T15:27:02.7398055Z 	at io.grpc.stub.ClientCalls$GrpcFuture.setException(ClientCalls.java:507)
2020-03-21T15:27:02.7398667Z 	at io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:482)
2020-03-21T15:27:02.7399331Z 	at io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39)
2020-03-21T15:27:02.7400002Z 	at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23)
2020-03-21T15:27:02.7400722Z 	at io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40)
2020-03-21T15:27:02.7401484Z 	at io.grpc.internal.CensusStatsModule$StatsClientInterceptor$1$1.onClose(CensusStatsModule.java:694)
2020-03-21T15:27:02.7402329Z 	at io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39)
2020-03-21T15:27:02.7403055Z 	at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23)
2020-03-21T15:27:02.7403824Z 	at io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40)
2020-03-21T15:27:02.7404624Z 	at io.grpc.internal.CensusTracingModule$TracingClientInterceptor$1$1.onClose(CensusTracingModule.java:397)
2020-03-21T15:27:02.7405414Z 	at io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:459)
2020-03-21T15:27:02.7406021Z 	at io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:63)
2020-03-21T15:27:02.7406637Z 	at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.close(ClientCallImpl.java:546)
2020-03-21T15:27:02.7407339Z 	at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.access$600(ClientCallImpl.java:467)
2020-03-21T15:27:02.7408561Z 	at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:584)
2020-03-21T15:27:02.7409244Z 	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
2020-03-21T15:27:02.7409756Z 	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123)
2020-03-21T15:27:02.7410311Z 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
2020-03-21T15:27:02.7410882Z 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
2020-03-21T15:27:02.7411351Z 	at java.lang.Thread.run(Thread.java:748)
2020-03-21T15:27:02.7412020Z 	Suppressed: com.google.api.gax.rpc.AsyncTaskException: Asynchronous task failed
2020-03-21T15:27:02.7412597Z 		at com.google.api.gax.rpc.ApiExceptions.callAndTranslateApiException(ApiExceptions.java:57)
2020-03-21T15:27:02.7413259Z 		at com.google.api.gax.rpc.UnaryCallable.call(UnaryCallable.java:112)
2020-03-21T15:27:02.7413935Z 		at org.apache.flink.streaming.connectors.gcp.pubsub.emulator.PubsubHelper.pullMessages(PubsubHelper.java:196)
2020-03-21T15:27:02.7414632Z 		at org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest.testPull(CheckPubSubEmulatorTest.java:77)
2020-03-21T15:27:02.7415221Z 		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
2020-03-21T15:27:02.7415735Z 		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
2020-03-21T15:27:02.7416301Z 		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
2020-03-21T15:27:02.7416831Z 		at java.lang.reflect.Method.invoke(Method.java:498)
2020-03-21T15:27:02.7417369Z 		at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
2020-03-21T15:27:02.7417953Z 		at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
2020-03-21T15:27:02.7418550Z 		at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
2020-03-21T15:27:02.7419220Z 		at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
2020-03-21T15:27:02.7420430Z 		at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
2020-03-21T15:27:02.7420983Z 		at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
2020-03-21T15:27:02.7421551Z 		at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
2020-03-21T15:27:02.7422093Z 		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
2020-03-21T15:27:02.7422595Z 		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
2020-03-21T15:27:02.7423109Z 		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
2020-03-21T15:27:02.7423625Z 		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
2020-03-21T15:27:02.7424139Z 		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
2020-03-21T15:27:02.7424672Z 		at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
2020-03-21T15:27:02.7425238Z 		at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
2020-03-21T15:27:02.7425742Z 		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
2020-03-21T15:27:02.7426301Z 		at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
2020-03-21T15:27:02.7427817Z 		at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
2020-03-21T15:27:02.7428659Z 		at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
2020-03-21T15:27:02.7429266Z 		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
2020-03-21T15:27:02.7429863Z 		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
2020-03-21T15:27:02.7430514Z 		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
2020-03-21T15:27:02.7431436Z 		at java.lang.reflect.Method.invoke(Method.java:498)
2020-03-21T15:27:02.7431980Z 		at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
2020-03-21T15:27:02.7432626Z 		at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
2020-03-21T15:27:02.7433265Z 		at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
2020-03-21T15:27:02.7433859Z 		at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
2020-03-21T15:27:02.7434444Z 		at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
2020-03-21T15:27:02.7435007Z Caused by: io.grpc.StatusRuntimeException: INVALID_ARGUMENT: No ack ids specified.
2020-03-21T15:27:02.7435669Z 	at io.grpc.Status.asRuntimeException(Status.java:530)
2020-03-21T15:27:02.7436040Z 	... 19 more
2020-03-21T15:27:02.7436267Z 
2020-03-21T15:27:03.0906019Z 
2020-03-21T15:27:03.0915949Z Results :
2020-03-21T15:27:03.0916490Z 
2020-03-21T15:27:03.0916722Z Tests in error: 
2020-03-21T15:27:03.0917318Z   testPull(org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest): io.grpc.StatusRuntimeException: INVALID_ARGUMENT: No ack ids specified.
2020-03-21T15:27:03.0917832Z 
2020-03-21T15:27:03.0918108Z Tests run: 5, Failures: 0, Errors: 1, Skipped: 0
2020-03-21T15:27:03.0918308Z 
2020-03-21T15:27:03.0972026Z [INFO] ------------------------------------------------------------------------
2020-03-21T15:27:03.0972770Z [INFO] BUILD FAILURE
2020-03-21T15:27:03.0973568Z [INFO] ------------------------------------------------------------------------
2020-03-21T15:27:03.0976421Z [INFO] Total time:  01:40 min
2020-03-21T15:27:03.0977164Z [INFO] Finished at: 2020-03-21T15:27:03Z
2020-03-21T15:27:03.0977923Z [INFO] ------------------------------------------------------------------------
2020-03-21T15:27:03.0997643Z [ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default) on project flink-connector-gcp-pubsub-emulator-tests: There are test failures.
{code}

Another case: https://dev.azure.com/rmetzger/Flink/_build/results?buildId=6611&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

Another instance:
https://dev.azure.com/rmetzger/Flink/_build/results?buildId=7015&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

Another case: https://dev.azure.com/rmetzger/Flink/_build/results?buildId=7050&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

[~Xeli] do you have time to look into this?

Sure, I'll have a look at it this week! (I cant assign it to myself but feel free to :))

Awesome! I assigned you to the ticket. Thanks a lot.

Another instance:Â [https://dev.azure.com/rmetzger/5bd3ef0a-4359-41af-abca-811b04098d2e/_apis/build/builds/7489/logs/21]

[~Xeli] Thanks a lot for providing a fix for the test instability.

I merged it to master in https://github.com/apache/flink/commit/a0f349f8ce97e5272479751039c0c762f4ee53bf

Mh, it seems that there are still instabilities: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=121&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

{code}

	at org.junit.Assert.assertEquals(Assert.java:631)
	at org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest.testPull(CheckPubSubEmulatorTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
{code}

Another instance: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=338&view=logs&j=68a897ab-3047-5660-245a-cce8f83859f6&t=375367d9-d72e-5c21-3be0-b45149130f6b

Another instance: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=413&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

[~Xeli] could you take a look at these test failures?

Another case: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=731&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

Yeah I'll have another look, reproducing these locally is quite difficult though, is it oke if I trigger the build on azure a couple of times with debug statements? I think I can trigger it by just doing dummy commits on a MR right?

Thanks a lot!
Yes, debugging these rarely occurring issues is quite annoying.

You can open a draft PR and push dummy commits to trigger CI. Note that we use "flinkbot", which takes up to 30 minutes for picking up a commit, and does some magic with branches to "flink-ci/flink".

This issue is occurring quite rarely (once a week, which is probably 1/350 builds fail with this). Maybe it would make more sense to carefully add some debug statements specifically to this test (only in the test code, we don't want to release testing code in the upcoming Flink 1.11 :) ). If that helps, I'm willing to consider & merge :) 

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=965&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

{code}
testPull(org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest)  Time elapsed: 11.079 sec  <<< FAILURE!
java.lang.AssertionError: expected:<1> but was:<0>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:645)
	at org.junit.Assert.assertEquals(Assert.java:631)
	at org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest.testPull(CheckPubSubEmulatorTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
{code}
https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=1107&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=1159&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

One more instance:
https://dev.azure.com/sewen0794/19b23adf-d190-4fb4-ae6e-2e92b08923a3/_apis/build/builds/9/logs/152

Another instance https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=1372&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=1654&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=1780&view=logs&j=91bf6583-3fb2-592f-e4d4-d79d79c3230a&t=94459a52-42b6-5bfc-5d74-690b5d3c6de8

[~Xeli] can you take a look at this test? If not, we need to find somebody else to look into it, or disable it.

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=1874&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

One more instance: https://dev.azure.com/sewen0794/19b23adf-d190-4fb4-ae6e-2e92b08923a3/_apis/build/builds/26/logs/102

Another instance: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=2040&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

Apologies for the delayÂ [~rmetzger], I had some struggles getting flink to built locally for some reason, which doesn't help in quickly adding some changes.. :P

Â 

I've added a retry in the test to see if after 60s it does find the missing message:Â [https://github.com/apache/flink/pull/12301]

Not something we should want in permanent testing code, but this should give some information to see if the publishing part or the pulling part is going wrong.

Thanks a lot. Merged as part of https://github.com/apache/flink/commit/50253c6b89e3c92cac23edda6556770a63643c90

The error is still happening: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=2162&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

Could it be that this was run on an older code base? The stacktrace ([https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=2162&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5&l=6715)]Â refers to:
{code:java}
at org.apache.flink.streaming.connectors.gcp.pubsub.CheckPubSubEmulatorTest.testPull(CheckPubSubEmulatorTest.java:78)
{code}
That line used to have the assert but not anymore:Â 

[https://github.com/apache/flink/blob/master/flink-end-to-end-tests/flink-connector-gcp-pubsub-emulator-tests/src/test/java/org/apache/flink/streaming/connectors/gcp/pubsub/CheckPubSubEmulatorTest.java#L78]

Oh yes, you are right. That run was from the "release-1.11" branch, not master. I merged your quickfix only to master.

seems another instanceÂ [https://dev.azure.com/apache-flink/98463496-1af2-4620-8eab-a2ecc1a2e6fe/_apis/build/builds/2296/logs/133]Â 

This failure is from a pull request which is based on 1.11-SNAPSHOT: https://github.com/flink-ci/flink/blob/ci_12361_956eb8c52c2e828b82a04f8cd41d984cc7a4d9bf/pom.xml. We have not merged the workaround to 1.11-SNAPSHOT.

This failure really is from master: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=2342&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5 (and the line is the right one).

https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=2591&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5

[~Xeli] I opened another pull request to add some more debugging to the connector test. Could you help reviewing? https://github.com/apache/flink/pull/12467

Added more debugging in https://github.com/apache/flink/commit/52861e30b65d6b50f24028e31a972d68a9a9f9f8

Another instance: https://dev.azure.com/imjark/34b0e969-d005-4c82-913f-430c2250ce26/_apis/build/builds/142/logs/155

(For the future, can you post the link to the run itself, instead a deep link into the log. Otherwise, it is difficult to find out the version / branch / time etc.)
For this run, I assume it is a release-1.11 run (or it doesn't contain my changes from yesterday yet)

Failure on master with the new debugging info: https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=2885&view=logs&j=c88eea3b-64a0-564d-0031-9fdcd7b8abee&t=1e2bbe5b-4657-50be-1f07-d84bfce5b1f5
I'll take a look today ...

I opened another PR to stabilize the test: https://github.com/apache/flink/pull/12524

Merged https://github.com/apache/flink/commit/0358292606481d4545ac372f2db2634a9a25922e

Closing ticket for now. Let's reopen it if the issue surfaces again.

If it doesn't for a few more days, I will push my latest change to 1.11 as well.

