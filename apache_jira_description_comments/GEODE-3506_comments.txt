I suspect this is a real bug and not a flaky test.

I'm unable to reproduce this failure in over 1000 test runs. The failure was seen on AWS and was caused by reading zero lines in from a status file that should never be empty.

GitHub user kirklund opened a pull request:

    https://github.com/apache/geode/pull/738

    GEODE-3506: improve validation/error checking for process file control

    We only ever hit this failure once and I don't think it's a flaky test. This could actually be one more (last remaining?) root cause of "start locator" or "start server" hanging-while-printing-dots in GFSH. 
    
    I've added what I consider to be excessive validation and error checking but it should point us at the cause if this check in FileProcessController ever fails again:
    
        if (isBlank(lines)) {
          throw new IllegalStateException("Status file '" + statusFile + "' is blank");
        }
    
    In addition to this PR, we should consider adding more direct test coverage for ServiceState and its subclasses as well as more unit tests of the Launcher using mocks.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kirklund/geode GEODE-3506-FileProcessController

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/geode/pull/738.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #738
    
----
commit 8edd3f0e15406082bb568de975c631de2ae373d7
Author: Kirk Lund <klund@apache.org>
Date:   2017-08-23T21:20:18Z

    GEODE-3506: improve validation and error handling of process file control

----


Commit a2ab230d685b8ac897a7e155474f797608f711fa in geode's branch refs/heads/develop from [~apache@the9muses.net]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=a2ab230 ]

GEODE-3506: improve validation/error checking for process file control

This closes #738


Github user asfgit closed the pull request at:

    https://github.com/apache/geode/pull/738


I'm waiting for this test to fail again with more information.

Here is a recent stacktrace for this error:
{noformat}
java.lang.IllegalStateException: Status file '/tmp/junit8636869968350514602/vf.gf.locator.status' is blank
	at org.apache.geode.internal.process.FileProcessController.status(FileProcessController.java:152)
	at org.apache.geode.internal.process.FileProcessController.status(FileProcessController.java:89)
	at org.apache.geode.distributed.LocatorLauncher.statusWithWorkingDirectory(LocatorLauncher.java:935)
	at org.apache.geode.distributed.LocatorLauncher.status(LocatorLauncher.java:863)
	at org.apache.geode.distributed.LocatorLauncherRemoteIntegrationTestCase.lambda$awaitStart$1(LocatorLauncherRemoteIntegrationTestCase.java:196)
	at org.awaitility.core.AssertionCondition$1.eval(AssertionCondition.java:55)
	at org.awaitility.core.ConditionAwaiter$ConditionPoller.run(ConditionAwaiter.java:215)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{noformat}

I saw this in a PR run recently: http://files.apachegeode-ci.info/builds/geode-pr-2174/test-results/integrationTest/1532380769/

Saw this today which seems related:
 org.apache.geode.distributed.LocatorLauncherRemoteFileIntegrationTest > startDeletesStaleControlFiles FAILED
 [ |https://concourse.apachegeode-ci.info/builds/8557#L5bcbc7f3:665]
 java.lang.IllegalStateException: Status file '/tmp/junit1574730945400887391/vf.gf.locator.status' is blank
  

In this pull request run: https://concourse.apachegeode-ci.info/builds/8557

Failed again on 'develop' CI Pipeline: [https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/IntegrationTestOpenJDK8/builds/39]

 

Download the log files here: http://files.apachegeode-ci.info/builds/apache-develop-main/1.8.0-build.40/test-results/integrationTest/1540410916/

One more failure here: https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/IntegrationTestOpenJDK8/builds/61

The PR https://github.com/apache/geode/pull/2850 will also fix GEODE-3506 in addition to GEODE-5228.

Fixed as part of GEODE-5228

