Based on the logs it seems like the query is scheduled to run on only 2 out of the 3 backends
{noformat}
20:10:07.493836 24877 coordinator.cc:355] a745b14e6a951582:ef6b8c9600000000] starting execution on 2 backends for query_id=a745b14e6a951582:ef6b8c9600000000
{noformat}
and the impalad which is shutdown as a part of the test is the one which is not running the query, so the query never gets cancelled. The test was written assuming the query would always be scheduled on all 3 backends, but that assumption does not hold true when the test is run on a non standard minicluster config (which in this case is because the test ran on a minicluster with erasure coding turned on). Best solution here is to make sure it only runs on a regular minicluster.

Commit dc0f8a1eee19f0bf9a0bbfdadad1d4231756a238 in impala's branch refs/heads/master from Bikramjeet Vig
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=dc0f8a1 ]

IMPALA-8570: Fix flakiness in test_restart_statestore_query_resilience

The test relies on scheduling decisions made on a 3 node minicluster
without erasure coding. This patch ensures that this test is skipped
if those conditions are not met by adding a new
SkipIfNotHdfsMinicluster.scheduling marker for the same. Existing
tests that rely on the same conditions were also updated to use the
marker.

Change-Id: I0a54b6e149c42b696c954b5240d6de61453bf7f9
Reviewed-on: http://gerrit.cloudera.org:8080/13406
Reviewed-by: Bikramjeet Vig <bikramjeet.vig@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


