Seen in [DistributedTestOpenJDK8 #24|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/DistributedTestOpenJDK8/builds/24].

This failure was seen in [DistributedTestOpenJDK8 #629,|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK8/builds/629#A] artifacts below. Two tests failed in the run; this failure was the second one, the first one (in VMDumpThreadsDistributedTest.threadDumpOfVmContainsRemoteThreads()) was unrelated.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  Test Results URI =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 [http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0491/test-results/distributedTest/1605607613/]
 =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Test report artifacts from this job are available at:

[http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0491/test-artifacts/1605607613/distributedtestfiles-OpenJDK8-1.14.0-build.0491.tgz]

Seen in [DistributedTestOpenJDK8 #644|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK8/builds/644] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0510/test-results/distributedTest/1606151067/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0510/test-artifacts/1606151067/distributedtestfiles-OpenJDK8-1.14.0-build.0510.tgz].

kirklund opened a new pull request #5799:
URL: https://github.com/apache/geode/pull/5799


   Null out latch and threadId before each test.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


The bug was caused by:
# The previous test left threadId set to a non-zero value*
# The {{await()}} in the second thread completes before the {{threadId.set()}} in the first thread executes
# The second thread returns the wrong value for remoteThreadId
# The wrong remoteThreadId is then compared to the caught exception's message which has a different thread id
 
*Previous test was await_callable_timeout_includesStackTraceAsCause in all three recorded test failures

Fix is simple: always set threadId to zero value before running each test.

kirklund commented on pull request #5799:
URL: https://github.com/apache/geode/pull/5799#issuecomment-738235917


   I changed setUp to set threadId to zero instead of null to avoid NPE being thrown by this line:
   {{{
   await().until(() -> threadId.get() > 0);
   }}}


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund edited a comment on pull request #5799:
URL: https://github.com/apache/geode/pull/5799#issuecomment-738235917


   I changed setUp to set threadId to zero instead of null to avoid NPE being thrown by this line:
   ```
   await().until(() -> threadId.get() > 0);
   ```


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jchen21 commented on a change in pull request #5799:
URL: https://github.com/apache/geode/pull/5799#discussion_r535576021



##########
File path: geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/tests/AsyncInvocationTimeoutDistributedTest.java
##########
@@ -40,12 +41,20 @@
 
   private static final long TIMEOUT_MILLIS = getTimeout().toMillis();
 
-  private static final AtomicReference<Long> threadId = new AtomicReference<>();
+  private static final AtomicReference<Long> threadId = new AtomicReference<>(0L);
   private static final AtomicReference<CountDownLatch> latch = new AtomicReference<>();
 
   @Rule
   public DistributedRule distributedRule = new DistributedRule();
 
+  @Before
+  public void setUp() {
+    getVM(0).invoke(() -> {
+      latch.set(null);

Review comment:
       Is it better to initialize `latch` to `CountDownLatch(0)` instead of `null`? Also initialize it in line 45, when `latch` is declared?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #5799:
URL: https://github.com/apache/geode/pull/5799#discussion_r535752559



##########
File path: geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/tests/AsyncInvocationTimeoutDistributedTest.java
##########
@@ -40,12 +41,20 @@
 
   private static final long TIMEOUT_MILLIS = getTimeout().toMillis();
 
-  private static final AtomicReference<Long> threadId = new AtomicReference<>();
+  private static final AtomicReference<Long> threadId = new AtomicReference<>(0L);
   private static final AtomicReference<CountDownLatch> latch = new AtomicReference<>();
 
   @Rule
   public DistributedRule distributedRule = new DistributedRule();
 
+  @Before
+  public void setUp() {
+    getVM(0).invoke(() -> {
+      latch.set(null);

Review comment:
       Yes, it would be better to avoid nulls and use CountDownLatch(0). Thanks!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #5799:
URL: https://github.com/apache/geode/pull/5799#discussion_r536289547



##########
File path: geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/tests/AsyncInvocationTimeoutDistributedTest.java
##########
@@ -40,12 +41,20 @@
 
   private static final long TIMEOUT_MILLIS = getTimeout().toMillis();
 
-  private static final AtomicReference<Long> threadId = new AtomicReference<>();
+  private static final AtomicReference<Long> threadId = new AtomicReference<>(0L);
   private static final AtomicReference<CountDownLatch> latch = new AtomicReference<>();
 
   @Rule
   public DistributedRule distributedRule = new DistributedRule();
 
+  @Before
+  public void setUp() {
+    getVM(0).invoke(() -> {
+      latch.set(null);

Review comment:
       I think I've resolved this. Please take a look. Thanks!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on pull request #5799:
URL: https://github.com/apache/geode/pull/5799#issuecomment-739057694


   ConcurrentSerialGatewaySenderOperationsDistributedTest failed.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jchen21 commented on pull request #5799:
URL: https://github.com/apache/geode/pull/5799#issuecomment-739089189


   > ConcurrentSerialGatewaySenderOperationsDistributedTest failed.
   
   That is due to GEODE-8573, which fails more frequently recently.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund merged pull request #5799:
URL: https://github.com/apache/geode/pull/5799


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 2e7cb33a2ac23438909e9e48d81108f5d9439a6c in geode's branch refs/heads/develop from Kirk Lund
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=2e7cb33 ]

GEODE-8634: Fix AsyncInvocationTimeoutDistributedTest flakiness (#5799)

Reset latch and threadId before each test.

Seen in [DistributedTestOpenJDK8 #674|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK8/builds/674] ... see [test results|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0538/test-results/distributedTest/1607133849/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0538/test-artifacts/1607133849/distributedtestfiles-OpenJDK8-1.14.0-build.0538.tgz].

The above failure is from the commit before the fix was applied, so should not be taken as a sign that the fix didn't work.

Seen on support/1.13 in [DistributedTestOpenJDK8 #2|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/DistributedTestOpenJDK8/builds/2] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.2-build.0466/test-results/distributedTest/1612933885/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.2-build.0466/test-artifacts/1612933885/distributedtestfiles-OpenJDK8-1.13.2-build.0466.tgz].

Seen on support/1.13 in [DistributedTestOpenJDK8 #13|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/DistributedTestOpenJDK8/builds/13] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.2-build.0481/test-results/distributedTest/1614836271/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.2-build.0481/test-artifacts/1614836271/distributedtestfiles-OpenJDK8-1.13.2-build.0481.tgz].

Seen on support/1.12 in [DistributedTestOpenJDK8 #26|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/DistributedTestOpenJDK8/builds/26] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.2-build.0198/test-results/distributedTest/1615532907/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.2-build.0198/test-artifacts/1615532907/distributedtestfiles-OpenJDK8-1.12.2-build.0198.tgz].

Seen on support/1.12 in [DistributedTestOpenJDK8 #25|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/DistributedTestOpenJDK8/builds/25] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.2-build.0198/test-results/distributedTest/1615509559/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.2-build.0198/test-artifacts/1615509559/distributedtestfiles-OpenJDK8-1.12.2-build.0198.tgz].

Seen on support/1.12 in [distributed-test-openjdk8 #9.1|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/distributed-test-openjdk8/builds/9.1] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.3-build.0254/test-results/distributedTest/1623215344/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.3-build.0254/test-artifacts/1623215344/distributedtestfiles-openjdk8-1.12.3-build.0254.tgz].

Seen on support/1.13 in [distributed-test-openjdk8 #26|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/distributed-test-openjdk8/builds/26] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.4-build.0562/test-results/distributedTest/1625809793/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.4-build.0562/test-artifacts/1625809793/distributedtestfiles-openjdk8-1.13.4-build.0562.tgz].

Seen on support/1.13 in [distributed-test-openjdk8 #31|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/distributed-test-openjdk8/builds/31] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.4-build.0567/test-results/distributedTest/1626738622/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.4-build.0567/test-artifacts/1626738622/distributedtestfiles-openjdk8-1.13.4-build.0567.tgz].

Seen on support/1.12 in [distributed-test-openjdk8 #40|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/distributed-test-openjdk8/builds/40] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0282/test-results/distributedTest/1631615967/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0282/test-artifacts/1631615967/distributedtestfiles-openjdk8-1.12.5-build.0282.tgz].

Seen on support/1.12 in [distributed-test-openjdk8 #43|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/distributed-test-openjdk8/builds/43] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0284/test-results/distributedTest/1632271313/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0284/test-artifacts/1632271313/distributedtestfiles-openjdk8-1.12.5-build.0284.tgz].

Seen on support/1.13 in [distributed-test-openjdk8 #54|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/distributed-test-openjdk8/builds/54] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.5-build.0600/test-results/distributedTest/1632864335/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.5-build.0600/test-artifacts/1632864335/distributedtestfiles-openjdk8-1.13.5-build.0600.tgz].

Seen on support/1.13 in [distributed-test-openjdk8 #58|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-13-main/jobs/distributed-test-openjdk8/builds/58] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.5-build.0603/test-results/distributedTest/1633516199/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-13-main/1.13.5-build.0603/test-artifacts/1633516199/distributedtestfiles-openjdk8-1.13.5-build.0603.tgz].

This bug is being reported against pre-1.14.0 builds. The fix is only in 1.14.0.

Seen on support/1.12 in [distributed-test-openjdk8 #43|https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-support-1-12-main/jobs/distributed-test-openjdk8/builds/43] ... see [test results|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0284/test-results/distributedTest/1632271313/] or download [artifacts|http://files.apachegeode-ci.info/builds/apache-support-1-12-main/1.12.5-build.0284/test-artifacts/1632271313/distributedtestfiles-openjdk8-1.12.5-build.0284.tgz].

