Please put this into a different module (either a new hbase-spark-it module or the existing hbase-spark module). We don't want scala dependencies leaking into non-spark-related modules and the hbase-it module is a big no-no since it gets deployed into the main server libs.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 16m 54s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green} 0m 0s {color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 31s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 16s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 7s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 0s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 7s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 17s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 8s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 2s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 29m 0s {color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha2. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 0s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 8s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 16s {color} | {color:green} hbase-it in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 6s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 51m 47s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:757bf37 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12871691/hbase-18175-v1.patch |
| JIRA Issue | HBASE-18175 |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux 655ded90a3fc 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / 1950acc |
| Default Java | 1.8.0_131 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7117/testReport/ |
| modules | C: hbase-it U: hbase-it |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7117/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.



moving out of patch available pending feedback

Hi Sean,
  I plan to add a new hbase-spark-it module under hbase-spark module, will see whether everything works fine if I add a new submodule. 

Hi Sean,
   In the new patch, I add a submodule called hbase-spark-it under hbase-spark module, the parent of hbase-spark-it is hbase-spark, not hbase, this can make hbase-spark module more independent. 
Now the hbase-spark looks like

---hbase-spark
-----------src
-----------pom
-----------hbase-spark-it
---------------src
---------------pom


And I also have some thoughts on HBase-16179,  only solve that jira then we can push hbase-spark into hbase-2.0


And I saw your comments in that jira, there might be some requirement like, we need to consider spark-1.6, spark-2.0, and also scala 2.10, scala 2.11

I remember I try both the scala 2.10 and 2.11 for hbase-spark, it seems that there is no code change for scala version change; the code differences are only in different spark versions.

I think we can have hbase-spark module structure as below

- hbase-spark
--------hbase-spark-1.6
------------src (diff code for 1.6)
------------pom
--------hbase-spark-2.0
--------hbase-spark-it
------------src 
------------pom

And user can change scala version on their own for both spark1.6 and spark2.0, What do you think of this idea?
Thanks  

still have some problems with patch, will provide patch later

I started a discuss thread that includes the scala/spark version stuff, rather than try to work the layout thing in HBASE-16179 and here, let's talk through it there?

https://s.apache.org/9cQS

[~easyliangjob], I like the approach of putting hbase-spark-it under hbase-spark module.

What kind of problems are you having with the patch? Anything that I can help with?

Hi Mike,
  Thanks for asking, i am now waiting for the final layout of hbase-spark module. Since right now, if I add hbase-spark-it under hbase spark, it has below layout.
hbase-spark
-----------src
-----------pom
-----------hbase-spark-it
---------------src
---------------pom

And if we have layout above, there is no hbase-spark.jar created in hbase-spark/target after I mvn package, so the unit test and it test can not find related jars.

if we have something below, actually a place to store hbase-spark.jar, like(hbase-spark-2.0/target). The tests then can run successfully. 
hbase-spark
-----------src
-----------pom
-----------hbase-spark-2.0
-----------hbase-spark-it
---------------src
---------------pom

So I am still waiting for the final layout, then I can decide to have a new hbase-spark-it module or just directly put it into hbase-spark module

Ah, yes, you're right, the parent pom in a multi-module project shouldn't have any output artifacts.

Is the simplest thing to let you move forward to add a top-level hbase-spark-it module? And then we can move things around once the mailing list discussion reaches consensus.

Alternatively, I would support you doing something like:

hbase-spark
* pom
* hbase-spark-core (this is the current hbase-spark dir)
** pom
** src
* hbase-spark-it (this is your new module)
** pom
** src

But that might require a lot of shuffling of maven parts that are likely to end up redone later anyway.

I can add a top-level hbase-spark-it module, and then move thing around once discussion reaches consensus.

What do you think [~busbey]

I'd also favor a top-level hbase-spark-it module for now. Longer term module layouts depend a lot on how the DISCUSS thread goes.

Hi Mike and Sean
  In the new patch, I add hbase-spark-it as top level directly under hbase module, but I put the folder of hbase-spark-it under hbase-spark. 

Should add the hbase-spark-it to the hbase-assembly as well, similar to how hbase-it is handled.

Attempted to run {{clean verify -Dtest=none -Dit.test=IntegrationTestSparkBulkLoad -pl hbase-spark/hbase-spark-it -am}} but this ended up also running all of the hbase-spark tests. Depending on scope here, I'd be fine with handling this in a follow on issue, since it only added 8 minutes on my machine.

IT ran and passed locally for me. xmllint found two indentation errors in the new pom file, fine to fix on commit.

+1

Hi Mike,
   Thanks for reviewing and testing. 
   {quote}but this ended up also running all of the hbase-spark tests{quote}
   Since hbase-spark has both java and scala unit tests, you need to add -DwildcardSuites=None to skip scala unit tests as well
   will fix the warning issue and add hbase-spark-it to the hbase-assembly
   

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 9s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green} 0m 0s {color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 25s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 44s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 19s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 24s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 1m 54s {color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue} 0m 0s {color} | {color:blue} Skipped patched modules with no Java source: . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 42s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 44s {color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 16s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 54s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 37s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 37s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 17s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 1m 58s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 3s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 33m 27s {color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha3. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue} 0m 0s {color} | {color:blue} Skipped patched modules with no Java source: . {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 0m 14s {color} | {color:red} patch/hbase-spark/hbase-spark-it no findbugs output file (hbase-spark/hbase-spark-it/target/findbugsXml.xml) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 14s {color} | {color:green} hbase-spark-it in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 148m 54s {color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 40s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 211m 8s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:757bf37 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12874517/hbase-18175-master-v2.patch |
| JIRA Issue | HBASE-18175 |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux 528d4444568e 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / ed70f15 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/7333/artifact/patchprocess/patch-unit-root.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HBASE-Build/7333/artifact/patchprocess/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7333/testReport/ |
| modules | C: hbase-spark/hbase-spark-it . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7333/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.



new patch attached, carry Mike's comments. 

Do we know why findbugs isn't working? I couldn't get it to save locally either.

Usages of SerializableWritable, Pair, Tuple2 should be use generics. Lines 169, 263, 301, 302, 329, 337.
Line 172: use diamond operator HashMap<>()
Line 213: use diamond operator LinkedList<>() 
Line 537: should be Long::equals instead of ==

Can we reuse any of the static classes from ITBulkLoad? Looking at LinkKey, LinkChain specifically. Maybe {{class SparkLinkKey extends LinkKey implements Serializable}} will be sufficient?

Hi Mike,
   Do you know which command is used to generate the findbugs report, I saw mvn site from google, just make sure is there any specific command?   Thanks 

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 12s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green} 0m 0s {color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 11s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 2m 56s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 47s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 28s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 1m 44s {color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue} 0m 0s {color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 37s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 19s {color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 12s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 36s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 6s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 6s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 1m 46s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 4s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 27m 28s {color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha3. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue} 0m 0s {color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly . {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 0m 12s {color} | {color:red} patch/hbase-spark/hbase-spark-it no findbugs output file (hbase-spark/hbase-spark-it/target/findbugsXml.xml) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 12s {color} | {color:green} hbase-assembly in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 11s {color} | {color:green} hbase-spark-it in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 120m 16s {color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 44s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 172m 54s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.coprocessor.TestRegionObserverInterface |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:757bf37 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12874550/hbase-18175-master-v3.patch |
| JIRA Issue | HBASE-18175 |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux e6613cbcc700 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 35693f0 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/7340/artifact/patchprocess/patch-unit-root.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HBASE-Build/7340/artifact/patchprocess/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7340/testReport/ |
| modules | C: hbase-assembly hbase-spark/hbase-spark-it . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7340/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.



[~mdrob]
   Just found the command mvn findbugs:findbugs, I also try it under hbase-it, there are also no findBugs.xml generated. I do not know why this could happen, any idea?

You need to specify that the exclude file is two directories up, similar to the comment in hbase-archetypes.

{code}
diff --git a/hbase-spark/hbase-spark-it/pom.xml b/hbase-spark/hbase-spark-it/pom.xml
index c457279332..af07a9f623 100644
--- a/hbase-spark/hbase-spark-it/pom.xml
+++ b/hbase-spark/hbase-spark-it/pom.xml
@@ -107,6 +107,21 @@
           </executions>
         </plugin>
       </plugins>
+      <plugins>
+        <!-- This entry overrides the excludeFileFilter element in the findbugs
+             configuration of the hbase/pom.xml file. This override specifies that
+             the excluded-filter-file is found TWO levels up from a grandchild project. -->
+        <plugin>
+          <groupId>org.codehaus.mojo</groupId>
+          <artifactId>findbugs-maven-plugin</artifactId>
+          <configuration>
+            <excludeFilterFile>${project.basedir}/../../dev-support/findbugs-exclude.xml</excludeFilterFile>
+            <findbugsXmlOutput>true</findbugsXmlOutput>
+            <xmlOutput>true</xmlOutput>
+            <effort>Max</effort>
+          </configuration>
+        </plugin>
+      </plugins>
     </pluginManagement>
 
     <plugins>
{code}

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m  1s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 48s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  1m 46s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 33s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 20s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  4s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 28m  7s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha3. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly hbase-spark/hbase-spark-it . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 12s{color} | {color:green} hbase-assembly in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 12s{color} | {color:green} hbase-spark-it in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}138m 17s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 58s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}191m 57s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.client.rsgroup.TestShellRSGroups |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:757bf37 |
| JIRA Issue | HBASE-18175 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12874717/hbase-18175-master-v4.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux 1527e25063fe 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 14957d4 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/7360/artifact/patchprocess/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7360/testReport/ |
| modules | C: hbase-assembly hbase-spark/hbase-spark-it . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7360/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Hi [~mdrob],
  It finally pass the findbugs warnig, ;),  
   And in the new patch, I also carry your last comments about diamond operator and reuse of the static classes from ITBulkLoad. Thanks for reviewing. 

QA Test failure is unrelated.

Verified IT locally with {{mvn clean verify -Dtest=none -Dit.test=IntegrationTestSparkBulkLoad -pl hbase-spark/hbase-spark-it -am -DwildcardSuites=none}}.
Got this failure in stdout:

{noformat}
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 168.136 sec <<< FAILURE! - in org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad
testBulkLoad(org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad)  Time elapsed: 168.006 sec  <<< ERROR!
org.apache.spark.SparkException: Only one SparkContext may be running in this JVM (see SPARK-2243). To ignore this error, set spark.driver.allowMultipleContexts = true. The currently running SparkContext was created at:
org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)
org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.runCheck(IntegrationTestSparkBulkLoad.java:280)
org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.runCheckWithRetry(IntegrationTestSparkBulkLoad.java:309)
org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.testBulkLoad(IntegrationTestSparkBulkLoad.java:523)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$1.apply(SparkContext.scala:2257)
	at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$1.apply(SparkContext.scala:2239)
	at scala.Option.foreach(Option.scala:236)
	at org.apache.spark.SparkContext$.assertNoOtherContextIsRunning(SparkContext.scala:2239)
	at org.apache.spark.SparkContext$.setActiveContext(SparkContext.scala:2325)
	at org.apache.spark.SparkContext.<init>(SparkContext.scala:2197)
	at org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)
	at org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.runCheck(IntegrationTestSparkBulkLoad.java:280)
	at org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.runCheckWithRetry(IntegrationTestSparkBulkLoad.java:313)
	at org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.testBulkLoad(IntegrationTestSparkBulkLoad.java:523)


Results :

Tests in error: 
  IntegrationTestSparkBulkLoad.testBulkLoad:523->runCheckWithRetry:313->runCheck:280 » Spark
{noformat}

Which I think was actually caused by this failure in the logs:

{noformat}
2017-06-28 10:10:04,275 WARN  [main] spark.IntegrationTestSparkBulkLoad (IntegrationTestSparkBulkLoad.java:runCheckWithRetry(311)) - Received java.lang.NullPointerException
	at org.apache.hadoop.hbase.mapreduce.IntegrationTestBulkLoad$LinkKey.compareTo(IntegrationTestBulkLoad.java:468)
	at org.apache.hadoop.hbase.mapreduce.IntegrationTestBulkLoad$LinkKey.compareTo(IntegrationTestBulkLoad.java:445)
	at org.spark-project.guava.collect.NaturalOrdering.compare(NaturalOrdering.java:41)
	at org.spark-project.guava.collect.NaturalOrdering.compare(NaturalOrdering.java:28)
	at scala.math.LowPriorityOrderingImplicits$$anon$7.compare(Ordering.scala:153)
	at scala.math.Ordering$$anon$5.compare(Ordering.scala:122)
	at java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)
	at java.util.TimSort.sort(TimSort.java:234)
	at java.util.Arrays.sort(Arrays.java:1438)
	at scala.collection.SeqLike$class.sorted(SeqLike.scala:615)
	at scala.collection.AbstractSeq.sorted(Seq.scala:40)
	at scala.collection.SeqLike$class.sortBy(SeqLike.scala:594)
	at scala.collection.AbstractSeq.sortBy(Seq.scala:40)
	at org.apache.spark.RangePartitioner$.determineBounds(Partitioner.scala:281)
	at org.apache.spark.RangePartitioner.<init>(Partitioner.scala:154)
	at org.apache.spark.rdd.OrderedRDDFunctions$$anonfun$sortByKey$1.apply(OrderedRDDFunctions.scala:62)
	at org.apache.spark.rdd.OrderedRDDFunctions$$anonfun$sortByKey$1.apply(OrderedRDDFunctions.scala:61)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:316)
	at org.apache.spark.rdd.OrderedRDDFunctions.sortByKey(OrderedRDDFunctions.scala:61)
	at org.apache.spark.api.java.JavaPairRDD.sortByKey(JavaPairRDD.scala:902)
	at org.apache.spark.api.java.JavaPairRDD.sortByKey(JavaPairRDD.scala:872)
	at org.apache.spark.api.java.JavaPairRDD.sortByKey(JavaPairRDD.scala:862)
	at org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.runCheck(IntegrationTestSparkBulkLoad.java:300)
	at org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.runCheckWithRetry(IntegrationTestSparkBulkLoad.java:309)
{noformat}

Hi Mike,
  The reason why the test fails is that I reuse the  static classes from ITBulkLoad?  The LinkKey from ITBulkLoad implements Writable, maybe this class may have some conflicts with Serializable, and SparkLinkKey can not implements both of them. So I changed it back, it now can pass the it test locally. 

{noformat}
      return this.getRk() == otherKey.getRk() && this.getNext() == otherKey.getNext();
{noformat}
These should use {{.equals()}} I think.

Tests pass locally, other than that patch LGTM.

change above to .equals(). Thanks for your review :), Mike

+1! Thanks for sticking with this, [~easyliangjob]

I'm set to push this once my local test passes. I'm confident the changes from v4 to v6 aren't going to show any QA surprises (I'll keep an eye for the response later tonight and revert if needed)

As a nit, I'm removing this line before commit:

{code}
diff --git a/hbase-spark/hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java b/hbase-spark/hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java
index c3d82ad..2d84914 100644
--- a/hbase-spark/hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java
+++ b/hbase-spark/hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java
@@ -275,7 +275,6 @@ public class IntegrationTestSparkBulkLoad extends IntegrationTestBase {
     String jobName = IntegrationTestSparkBulkLoad.class.getSimpleName() + "_check" + EnvironmentEdgeManager.currentTime();
 
     SparkConf sparkConf = new SparkConf().setAppName(jobName).setMaster("local");
-    //sparkConf.set("spark.driver.allowMultipleContexts", "true");
     Configuration hbaseConf = new Configuration(getConf());
     JavaSparkContext jsc = new JavaSparkContext(sparkConf);
     JavaHBaseContext hbaseContext = new JavaHBaseContext(jsc, hbaseConf);
{code}

Thanks Sean, Do I also need to provide patch for branch 2 ?

I would be very surprised if branch-2 has diverged enough from master to need a patch. I'll ping here if there's an issue.

Looks like we don't end up with anything in the binary assembly.

{code}
$ mvn -DskipTests clean install assembly:single -pl hbase-assembly -am && tar -C hbase-assembly/target -xzf hbase-assembly/target/hbase-3.0.0-SNAPSHOT-bin.tar.gz && ls -lah hbase-assembly/target/hbase-3.0.0-SNAPSHOT/lib/*spark*
...SNIP...
-rw-r--r--  1 busbey  staff   779K Jun 29 13:42 hbase-assembly/target/hbase-3.0.0-SNAPSHOT/lib/hbase-spark-3.0.0-SNAPSHOT.jar
{code}

What's the plan for how someone would run this on an actual cluster?

You're right, Sean. Adding to assembly descriptor was not enough, I think it also needs to be added to hbase-assembly/pom.xml as a dependency

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 16s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 38s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  4m 38s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 33s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  1m 58s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 37s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 29s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  2m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  4s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 32m  6s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha3. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly hbase-spark/hbase-spark-it . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 16s{color} | {color:green} hbase-assembly in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 15s{color} | {color:green} hbase-spark-it in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}132m 43s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 58s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}194m 13s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:757bf37 |
| JIRA Issue | HBASE-18175 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12875076/hbase-18175-master-v6.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux abd34b7b9df5 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 9189b88 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/7395/artifact/patchprocess/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7395/testReport/ |
| modules | C: hbase-assembly hbase-spark/hbase-spark-it . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7395/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Trying to build the source archive failed:

{code}
$  mvn clean install -DskipTests assembly:single -Dassembly.file=hbase-assembly/src/main/assembly/src.xml -Prelease
...SNIP...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Apache HBase ....................................... SUCCESS [ 15.774 s]
[INFO] Apache HBase - Checkstyle .......................... SUCCESS [  3.356 s]
[INFO] Apache HBase - Resource Bundle ..................... SUCCESS [  0.621 s]
[INFO] Apache HBase - Annotations ......................... SUCCESS [  2.931 s]
[INFO] Apache HBase - Common .............................. SUCCESS [ 24.071 s]
[INFO] Apache HBase - Shaded Protocol ..................... SUCCESS [ 29.110 s]
[INFO] Apache HBase - Metrics API ......................... SUCCESS [  5.284 s]
[INFO] Apache HBase - Procedure ........................... SUCCESS [  6.954 s]
[INFO] Apache HBase - Hadoop Compatibility ................ SUCCESS [  3.854 s]
[INFO] Apache HBase - Metrics Implementation .............. SUCCESS [  4.200 s]
[INFO] Apache HBase - Hadoop Two Compatibility ............ SUCCESS [  8.512 s]
[INFO] Apache HBase - Protocol ............................ SUCCESS [ 10.321 s]
[INFO] Apache HBase - Client .............................. SUCCESS [ 17.595 s]
[INFO] Apache HBase - Prefix Tree ......................... SUCCESS [  9.521 s]
[INFO] Apache HBase - Server .............................. SUCCESS [01:28 min]
[INFO] Apache HBase - Testing Util ........................ SUCCESS [ 18.739 s]
[INFO] Apache HBase - Thrift .............................. SUCCESS [ 16.647 s]
[INFO] Apache HBase - RSGroup ............................. SUCCESS [ 12.345 s]
[INFO] Apache HBase - Shell ............................... SUCCESS [ 16.004 s]
[INFO] Apache HBase - Coprocessor Endpoint ................ SUCCESS [ 11.497 s]
[INFO] Apache HBase - Integration Tests ................... SUCCESS [ 12.693 s]
[INFO] Apache HBase - Examples ............................ SUCCESS [ 11.252 s]
[INFO] Apache HBase - Rest ................................ SUCCESS [ 11.270 s]
[INFO] Apache HBase - External Block Cache ................ SUCCESS [  7.534 s]
[INFO] Apache HBase - Spark ............................... FAILURE [01:31 min]
[INFO] Apache HBase - Assembly ............................ SKIPPED
[INFO] Apache HBase - Shaded .............................. SKIPPED
[INFO] Apache HBase - Shaded - Client ..................... SKIPPED
[INFO] Apache HBase - Shaded - Server ..................... SKIPPED
[INFO] Apache HBase - Archetypes .......................... SKIPPED
[INFO] Apache HBase - Exemplar for hbase-client archetype . SKIPPED
[INFO] Apache HBase - Exemplar for hbase-shaded-client archetype SKIPPED
[INFO] Apache HBase - Archetype builder ................... SKIPPED
[INFO] Apache HBase - Spark Integration Tests ............. SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 07:25 min
[INFO] Finished at: 2017-06-29T14:28:16-05:00
[INFO] Final Memory: 272M/1029M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.rat:apache-rat-plugin:0.11:check (default) on project hbase-spark: Too many files with unapproved license: 5 See RAT report in: /Users/busbey/tmp_projects/hbase/hbase-spark/target/rat.txt -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :hbase-spark
$  head -n 28 hbase-spark/target/rat.txt

*****************************************************
Summary
-------
Generated at: 2017-06-29T14:27:58-05:00
Notes: 7
Binaries: 11
Archives: 2
Standards: 76

Apache Licensed: 71
Generated Documents: 0

JavaDocs are generated and so license header is optional
Generated files do not required license headers

5 Unknown Licenses

*******************************

Unapproved licenses:

  /Users/busbey/tmp_projects/hbase/hbase-spark/hbase-spark-it/target/failsafe-reports/failsafe-summary.xml
  /Users/busbey/tmp_projects/hbase/hbase-spark/hbase-spark-it/target/failsafe-reports/org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad-output.txt
  /Users/busbey/tmp_projects/hbase/hbase-spark/hbase-spark-it/target/failsafe-reports/org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.txt
  /Users/busbey/tmp_projects/hbase/hbase-spark/hbase-spark-it/target/failsafe-reports/TEST-org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad.xml
  /Users/busbey/tmp_projects/hbase/hbase-spark/hbase-spark-it/target/maven-archiver/pom.properties
{code}

This is caused, I believe, by having the combination of the hbase-spark-it module directory under hbase-spark but its reactor definition in the top level. Can we just move the hbase-spark-it module directory to the top level?

(to repro the above, do a build prior to running the given "how to build the source tarball" invocation. the "clean" part can't take care of {{hbase-spark-it/target}} because hbase-spark goes before the subdirectory. RAT can't ignore it, because in the context of the hbase-spark module the {{hbase-spark-it}} subdirectory is unrelated to maven)

I have add hbase-spark-it as dependency into hbase-assembly/pom.xml, and also put hbase-spark-it directly under top level. It seems two above errors are gone. 



findbugs declaration of going two directories up needs to be backed out.

oh, it's my bad,  will change it back in V8.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 15s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 19s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 29s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 30s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 17s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  1m 46s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 26s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  2m  6s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  6s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 29m 12s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha3. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-spark-it hbase-assembly . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 14s{color} | {color:green} hbase-spark-it in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 15s{color} | {color:green} hbase-assembly in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}160m 46s{color} | {color:green} root in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 50s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}216m 28s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:757bf37 |
| JIRA Issue | HBASE-18175 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12875785/hbase-18175-master-v8.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux cf839812f5c0 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 05e3f39 |
| Default Java | 1.8.0_131 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7517/testReport/ |
| modules | C: hbase-spark-it hbase-assembly . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7517/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



hbase-spark-it/pom.xml uses {{maven.assembly.version}} but it's not defined anywhere. It's enough to remove that line.

I haven't had a chance to test this against a running cluster with spark installed, but i think that knowing it works in IT mode is sufficient and we can do follow on work if there are new problems. (We might need to generate something like the mrapp-generated-classpath, maybe?)

V9 Carry Mike's Comment.
Thanks Mike spending time for reviewing :).  

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 16s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 27s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 17s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m  8s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  1m 46s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-assembly . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 23s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  2m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  6s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 30m 20s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha3. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-spark-it hbase-assembly . {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 25s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 12s{color} | {color:green} hbase-spark-it in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 13s{color} | {color:green} hbase-assembly in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}132m 32s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 49s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}189m 18s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.procedure.TestServerCrashProcedure |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:757bf37 |
| JIRA Issue | HBASE-18175 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12876984/hbase-18175-master-v9.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux 233ce6db7bef 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 22df926 |
| Default Java | 1.8.0_131 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/7642/artifact/patchprocess/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7642/testReport/ |
| modules | C: hbase-spark-it hbase-assembly . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7642/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



+1.

QA Test failure is unrelated and known to be flaky.

Please file a follow on JIRA to combine the configuration options for failsafe plugin between hbase-it and hbase-spark-it (possibly in parent, not sure).

This is targeted for master and branch-2? We're figuring out the plan for branch-1 later, right?

yeah, branch-1 is waiting for the scope doc from me summarizing the discuss thread.

{quote}Please file a follow on JIRA to combine the configuration options for failsafe plugin between hbase-it and hbase-spark-it (possibly in parent, not sure). {quote}
will file one after investigating. 

To clarify, I think you've iterated a lot on this patch already and I don't want to see it continue to get held up for minor issues. IMO it's not worth spending a ton of time cleaning up the pom or project structure since it might all be drastically different soon.

pushed to master and branch-2. Thanks for working through this [~easyliangjob]! thanks for the extended review [~mdrob]!

On the release note:

{{spark-submit --class org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad HBASE_HOME/lib/hbase-it-2.0.0-alpha-2-tests.jar -Dhbase.spark.bulkload.chainlength=500000 -m slowDeterministic }}

should that be hbase-spark-it-2.0.0...?

yes, good catch.

I suspect we probably need to add some additional jars too, since the test class relies on classes in hbase-it. :/

[~easyliangjob] did you happen to run this on a cluster after the addition of the new module?

Hi Sean, 
  I run it on cluster before attache V9,  since I add HBASE_HOME/lib/* and also hbase-spark.jar into spark classpath, so everytime i need only to run 
{{spark-submit --class org.apache.hadoop.hbase.spark.IntegrationTestSparkBulkLoad HBASE_HOME/lib/hbase-spark-it-XXX-tests.jar -Dhbase.spark.bulkload.chainlength=500000 -m slowDeterministic }}

And I think I also need to change the usage in source code comments, I still use hbase-it, I will provide a addendum soon, 

addendum attached 

FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #3375 (See [https://builds.apache.org/job/HBase-Trunk_matrix/3375/])
HBASE-18175 Add hbase-spark integration test into hbase-spark-it (busbey: rev 79a702d1126288a0dd45ba9458265cff8e3619c6)
* (edit) pom.xml
* (edit) hbase-assembly/src/main/assembly/src.xml
* (add) hbase-spark-it/pom.xml
* (edit) hbase-assembly/pom.xml
* (add) hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java


| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 38s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 13s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 26s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-spark-it {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  7s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 29m 15s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hbase-spark-it {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 13s{color} | {color:green} hbase-spark-it in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  9s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 38m 44s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.13.1 Server=1.13.1 Image:yetus/hbase:757bf37 |
| JIRA Issue | HBASE-18175 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12877354/addendum-master.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux c00a5ba9b3cb 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 79a702d |
| Default Java | 1.8.0_131 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7661/testReport/ |
| modules | C: hbase-spark-it U: hbase-spark-it |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7661/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



addendum pushed. thanks again [~easyliangjob]!

FAILURE: Integrated in Jenkins build HBase-2.0 #173 (See [https://builds.apache.org/job/HBase-2.0/173/])
HBASE-18175 Add hbase-spark integration test into hbase-spark-it (busbey: rev 53f354f95489a346bf24e5613883dcf9e5a044bb)
* (add) hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java
* (edit) pom.xml
* (edit) hbase-assembly/pom.xml
* (edit) hbase-assembly/src/main/assembly/src.xml
* (add) hbase-spark-it/pom.xml


FAILURE: Integrated in Jenkins build HBase-2.0 #174 (See [https://builds.apache.org/job/HBase-2.0/174/])
HBASE-18175: (addendum) Add hbase-spark integration test into (busbey: rev 7be5e48c240aa8b93e938272a42862c25ad94f67)
* (edit) hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java


SUCCESS: Integrated in Jenkins build HBase-Trunk_matrix #3376 (See [https://builds.apache.org/job/HBase-Trunk_matrix/3376/])
HBASE-18175: (addendum) Add hbase-spark integration test into (busbey: rev f3a398953f9f293d09874622551cce8032dbe4a0)
* (edit) hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java


FAILURE: Integrated in Jenkins build HBASE-14070.HLC #69 (See [https://builds.apache.org/job/HBASE-14070.HLC/69/])
HBASE-18175 Add hbase-spark integration test into hbase-spark-it (busbey: rev 79a702d1126288a0dd45ba9458265cff8e3619c6)
* (edit) hbase-assembly/pom.xml
* (add) hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java
* (edit) pom.xml
* (edit) hbase-assembly/src/main/assembly/src.xml
* (add) hbase-spark-it/pom.xml
HBASE-18175: (addendum) Add hbase-spark integration test into (busbey: rev f3a398953f9f293d09874622551cce8032dbe4a0)
* (edit) hbase-spark-it/src/test/java/org/apache/hadoop/hbase/spark/IntegrationTestSparkBulkLoad.java


Reverted from branch-2/2.0.0 by HBASE-18817

hbase-spark module reverted from branch-2/2.0.0 by HBASE-18817

