Hi [~timonin.maksim], thanks for the initiative to implement this useful feature. It'll be very valuable when it arrives. How is it going? Do we have any ETA about the matter? 

Hi [~Vladimir Pligin] ! I started implement this feature as we have a relative case. Currently I found that there could be possibility to avoid directly access k8s api and rely on k8s service address. To check that I'll prepare demo for 2 cases (statefull / stateless) on next week. After that I'll send a proposal to devlist.

Hi [~Vladimir Pligin] ! Current status:
 # Discussed on dev list that the issue can be resolved with just configuring k8s cluster with StatefulSet (as DNS names of nodes aren't changed). But agreed that Ignite should provide opportunity to configure ThinClient within k8s env with the single setting.
 # I've implementing this setting. Common idea is rather simple but there are some corner cases in the org.apache.ignite.internal.client.thin.ReliableChannel class that should be carefully tested. I'm working on this now and on next week will provide a PR for review.

Hi [~timonin.maksim]!

 

It's a real pleasure to hear that.

Thanks for the update, I'll keep watching the ticket.

Hi [~Vladimir Pligin]!

I've submitted PR for a review [1]. Could you please check it? Is it a right way?

[1] [https://github.com/apache/ignite/pull/8206|https://github.com/apache/ignite/pull/8206]

Hi [~timonin.maksim]!

Thanks for the PR, I'll have a look.

I'd like to ask [~ptupitsyn] to have a look as well.

[~timonin.maksim] I've performed a partial review, please see my comments on GitHub.

[~alex_pl] would you like to take a look as well? Especially at the changes in ReliableChannel.

[~ptupitsyn], yes, sure, I will take a look.

Guys, I've got an expression that there are a lot of changes, which are not related to Kubernetes directly. Let's move re-factoring to a separate ticket and only leave Kubernetes-related changes in this ticket, so the change would be easier to review, understand and manage.

[~isapego] [~ptupitsyn] [~alex_pl] I've reverted refactoring. 

[~timonin.maksim] thank you, looks a lot better now!

1. Please see some more comments on GitHub
2. Make sure all tests pass - I see ~10 failures locally in thin client tests. I've started a full TC run on the PR.

Let me know when tests are green, I'd like to do another review pass.

{panel:title=Branch: [pull/8206/head] Base: [master] : Possible Blockers (28)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}SPI{color} [[tests 6|https://ci.ignite.apache.org/viewLog.html?buildId=5593416]]
* IgniteSpiTestSuite: TcpDiscoveryFailedJoinTest.testDiscoveryRefuse - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoveryFailedJoinTest.testDiscoveryDrop - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoverySslSelfTest.testNonSharedIpFinder - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoverySslSelfTest.testFailureDetectionOnNodePing1 - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoverySslSelfTest.testFailureDetectionOnNodePing2 - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteSpiTestSuite: TcpDiscoverySslSelfTest.testFailureDetectionOnNodePing3 - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Queries 1{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5593474]]
* IgniteBinaryCacheQueryTestSuite: SqlViewExporterSpiTest.testClientsConnections - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteBinaryCacheQueryTestSuite: SystemViewSelfTest.testClientsConnections - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Control Utility{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5593501]]

{color:#d04437}MVCC Cache 9{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5593490]]
* IgniteCacheMvccTestSuite9: JmxExporterSpiTest.testClientsConnections - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteCacheMvccTestSuite9: SystemViewSelfTest.testClientsConnections - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Cache 9{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5593455]]
* IgniteCacheTestSuite9: SystemViewSelfTest.testClientsConnections - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteCacheTestSuite9: JmxExporterSpiTest.testClientsConnections - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Data Structures{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5593459]]
* IgniteCacheDataStructuresSelfTestSuite: GridCachePartitionedAtomicQueueMultiNodeSelfTest.testAddPollMultinode - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Security{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5593496]]
* SecurityTestSuite: AdditionalSecurityCheckTest.testClientInfoIgniteClientFail - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Thin Client: Java{color} [[tests 12|https://ci.ignite.apache.org/viewLog.html?buildId=5593407]]
* ClientTestSuite: SslParametersTest.testNonExistentCipherSuite - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: ClientConfigurationTest.testSerialization - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: FunctionalTest.testClientFailsOnStart - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: ConnectionTest.testInvalidNodeAddresses - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: ConnectionTest.testEmptyNodeAddress - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: ConnectionTest.testNullNodeAddress - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: ConnectionTest.testValidNodeAddresses - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: ConnectionTest.testValidInvalidNodeAddressesMix - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: ConnectionTest.testNullNodeAddresses - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: SslParametersTest.testNonExistentProtocol - Test has low fail rate in base branch 0,0% and is not flaky
* ClientTestSuite: SslParametersTest.testNoCommonProtocols - Test has low fail rate in base branch 0,0% and is not flaky
... and 1 tests blockers

{color:#d04437}Kubernetes{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5593403]]
* IgniteKubernetesTestSuite: TcpDiscoveryKubernetesIpFinderSelfTest.testIpFinder - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
{panel:title=Branch: [pull/8206/head] Base: [master] : No new tests found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5593503&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~ptupitsyn]

hi! I've checked tests, most of them are failed due to my change that connection is lazy (instead of checking it in constructor). Will fix it.

But also there is a test that checks that ClientConfiguration class is Serializable. Is there any reason to mark this class Serializable, if yes - should we support backward compatibility with older versions of the class (the difference is address field, that I replace with function)?

[~timonin.maksim] The class is already Serializable - we can't remove that and break compatibility this way.
And yes, let's preserve compatibility in serialized form as well - keep the old field and use a different name for the new one, it should not be hard to make them work together.

{panel:title=Branch: [pull/8206/head] Base: [master] : Possible Blockers (4)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}MVCC Cache 7{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5597320]]

{color:#d04437}RDD{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5597242]]

{color:#d04437}Platform .NET{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5597300]]
* exe: PlatformCacheTopologyChangeTest.TestContinuousTopologyChangeMaintainsCorrectPlatformCacheData(2) - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Platform C++ CMake (Linux Clang){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5597331]]
* IgniteThinClientTest: CacheClientTestSuite: CacheClientPartitionsRebalance - Test has low fail rate in base branch 0,0% and is not flaky

{panel}
{panel:title=Branch: [pull/8206/head] Base: [master] : New Tests (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Thin Client: Java{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5597239]]
* {color:#013220}ClientTestSuite: ThinClientPartitionAwarenessDiscoveryTest.testClientDiscoveryNodesJoin - PASSED{color}
* {color:#013220}ClientTestSuite: ThinClientPartitionAwarenessDiscoveryTest.testClientDiscoveryNodesLeave - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5597335&amp;buildTypeId=IgniteTests24Java8_RunAll]

{panel:title=Branch: [pull/8206/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
{panel:title=Branch: [pull/8206/head] Base: [master] : New Tests (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Thin Client: Java{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5597239]]
* {color:#013220}ClientTestSuite: ThinClientPartitionAwarenessDiscoveryTest.testClientDiscoveryNodesJoin - PASSED{color}
* {color:#013220}ClientTestSuite: ThinClientPartitionAwarenessDiscoveryTest.testClientDiscoveryNodesLeave - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5597335&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~ptupitsyn] hi! Tests are green now. 

[~timonin.maksim] Great! I've left some more comments on GitHub, please check.

P.S. please set the ticket to Patch Available.

[~ptupitsyn] hi! Could you please my PR again? I merged changes related to async 

[~timonin.maksim] yes, I'm in progress, will leave a reply today. Sorry for the delay.

[~timonin.maksim] Async-related changes look good to me, left some other comments on GitHub.

[~timonin.maksim] looks good to me. 

[~isapego] [~alex_pl] anything else? Are we good to go?

[~ptupitsyn] looks good to me.

{panel:title=Branch: [pull/8206/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
{panel:title=Branch: [pull/8206/head] Base: [master] : New Tests (17)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Thin Client: Java{color} [[tests 17|https://ci.ignite.apache.org/viewLog.html?buildId=5647531]]
* {color:#013220}ClientTestSuite: ThinClientPartitionAwarenessDiscoveryTest.testClientDiscoveryFilterNodeJoin - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testFailOnInitIfDefaultChannelFailed - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testFailOnAsyncAfterSendOperation - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testChannelsNotReinitForStableDynamicAddressConfiguration - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testNodeChannelsAreNotCleaned - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testChannelsNotReinitForStaticAddressConfiguration - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testThatNodeChannelsCleanFullReinitialization - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testFailOnAsyncTopologyChangeAfterSendOperation - PASSED{color}
* {color:#013220}ClientTestSuite: ReliabilityTest.testSingleServerDuplicatedFailover - PASSED{color}
* {color:#013220}ClientTestSuite: ReliabilityTestAsync.testSingleServerDuplicatedFailover - PASSED{color}
* {color:#013220}ClientTestSuite: ReliabilityTestPartitionAware.testSingleServerDuplicatedFailover - PASSED{color}
... and 6 new tests

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5647628&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~timonin.maksim]
* There is one failing Thin Client test: testPartitionAwarenessOnNodeLeft - please check
* License check fails on GitHub (probably caused by issues in master that are now fixed) - let's merge from master and rerun to make sure we are good

[~ptupitsyn], I've left some more minor comments (mostly code-style and refactoring)

[~ptupitsyn] I've fixed all comments by [~alex_pl] and he's approved the PR. Also I've merge master and rerun travis checks, all of them are OK.

 

For ` testPartitionAwarenessOnNodeLeft` test, it's a flaky [1]. I've rerun TC, a the test is OK [2].

Error is the same like in other failed builds. So I think investigation should be independent on current changes.

[1] https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&testNameId=2022635705330067627&tab=testDetails

[2] https://mtcga.gridgain.com/pr.html?serverId=apache&suiteId=IgniteTests24Java8_RunAll&branchForTc=pull/8206/head&action=Latest

[~timonin.maksim] awesome! I'll wait for another TC run and merge the changes later today.

{panel:title=Branch: [pull/8206/head] Base: [master] : Possible Blockers (3)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Platform .NET (Long Running){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5669400]]

{color:#d04437}Cache 5{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5669379]]
* IgniteCacheWithIndexingTestSuite: CacheTtlAtomicPartitionedSelfTest.testDefaultTimeToLiveStreamerAdd - Test has low fail rate in base branch 1,4% and is not flaky

{color:#d04437}Thin client: Node.js{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5669482]]

{panel}
{panel:title=Branch: [pull/8206/head] Base: [master] : New Tests (26)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Thin Client: Java{color} [[tests 17|https://ci.ignite.apache.org/viewLog.html?buildId=5669335]]
* {color:#013220}ClientTestSuite: ThinClientPartitionAwarenessDiscoveryTest.testClientDiscoveryFilterNodeJoin - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testFailOnInitIfDefaultChannelFailed - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testFailOnAsyncAfterSendOperation - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testChannelsNotReinitForStableDynamicAddressConfiguration - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testNodeChannelsAreNotCleaned - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testChannelsNotReinitForStaticAddressConfiguration - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testThatNodeChannelsCleanFullReinitialization - PASSED{color}
* {color:#013220}ClientTestSuite: ReliableChannelTest.testFailOnAsyncTopologyChangeAfterSendOperation - PASSED{color}
* {color:#013220}ClientTestSuite: ReliabilityTest.testSingleServerDuplicatedFailover - PASSED{color}
* {color:#013220}ClientTestSuite: ReliabilityTestAsync.testSingleServerDuplicatedFailover - PASSED{color}
* {color:#013220}ClientTestSuite: ReliabilityTestPartitionAware.testSingleServerDuplicatedFailover - PASSED{color}
... and 6 new tests

{color:#00008b}Kubernetes{color} [[tests 9|https://ci.ignite.apache.org/viewLog.html?buildId=5669012]]
* {color:#013220}IgniteKubernetesTestSuite: KubernetesConnectionConfigurationTest.smoketest - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: KubernetesConnectionConfigurationTest.testAccountNameIsRequired - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: KubernetesConnectionConfigurationTest.testMasterUrlIsRequired - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: KubernetesConnectionConfigurationTest.testServiceNameIsRequired - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: KubernetesConnectionConfigurationTest.testNamespaceIsRequired - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: KubernetesServiceAddressResolverTest.testCorrectParseKubernetesResponse - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: TestClusterClientConnection.testClientConnectsToCluster - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: KubernetesServiceAddressResolverTest.testConnectionFailure - PASSED{color}
* {color:#013220}IgniteKubernetesTestSuite: KubernetesServiceAddressResolverTest.testCorrectParseKubernetesResponseWithIncludingNotReadyAddresses - PASSED{color}

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5669432&amp;buildTypeId=IgniteTests24Java8_RunAll]

Merged to master: fa9c483861d4d221b9d907f4e993e45aa9ed9d1b

[~timonin.maksim] good job, thank you for the contribution!

