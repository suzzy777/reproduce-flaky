Thanks for pointing this out Bikram!

It seems the reported test does not fail that often. According to my previous 6 tests listed in the following, the test TestBloomFilters::test_bloom_filters (corresponding to the test file at testdata/workloads/functional-query/queries/QueryTest/bloom_filters.test) NEVER failed. Otherwise I would have modified the corresponding test file "bloom_filters.test" in my proposed patch set ([https://gerrit.cloudera.org/c/12974/]).

1. [https://jenkins.impala.io/job/ubuntu-16.04-dockerised-tests/511/]

2. [https://jenkins.impala.io/job/pre-review-test/378]

3. [https://jenkins.impala.io/job/pre-review-test/379]

4. [https://jenkins.impala.io/job/pre-review-test/380]

5. [https://jenkins.impala.io/job/pre-review-test/381]

6. [https://jenkins.impala.io/job/pre-review-test/383|https://jenkins.impala.io/job/pre-review-test/383/]

One quick workaround might be to add the following additional statement before the query to disable the newly added feature.

"SET DISABLE_HDFS_NUM_ROWS_ESTIMATE=1;"

On the other hand, I will also take a look at how Impala comes up with the expected size of a filter.

Please also let me know if you have any other good ideas.

Commit 572c1278566ca329f3e47e5c2d7e13dd0c7967f7 in impala's branch refs/heads/master from Fang-Yu Rao
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=572c127 ]

IMPALA-8698: Disable row count estimate to avoid a flaky test

Disabled the row count estimate for an hdfs table for the EE test
test_bloom_filters to avoid a flaky test due to a previous patchset
(IMPALA-7608).

Testing:
Have run the revised EE test on a local dev box.

Change-Id: I8342bc20a6b7935823d2a8bac2b42afaa1a8aae0
Reviewed-on: http://gerrit.cloudera.org:8080/13727
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


