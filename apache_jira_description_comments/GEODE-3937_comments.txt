dineshpune2006 opened a new pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002
 
 
   Fix NPE when executing removeFromDisk
   
   Thank you for submitting a contribution to Apache Geode.
   
   In order to streamline the review of the contribution we ask you
   to ensure the following steps have been taken:
   
   ### For all changes:
   - [ X] Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?
   
   - [ X] Has your PR been rebased against the latest commit within the target branch (typically `develop`)?
   
   - [ X] Is your initial contribution a single, squashed commit?
   
   - [ X] Does `gradlew build` run cleanly?
   
   - [ X] Have you written or updated unit tests to verify your changes?
   
   - [ ] If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under [ASF 2.0](http://www.apache.org/legal/resolved.html#category-a)?
   
   ### Note:
   Please ensure that once the PR is submitted, you check travis-ci for build issues and
   submit an update to your PR as soon as possible. If you need help, please send an
   email to dev@geode.apache.org.
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148603154
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
 ##########
 @@ -1781,4 +1785,47 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } catch (Exception ee) {
+      throw ee;
+    } finally {
+      if (this.sender.isPaused())
+        this.sender.resume();
+    }
+  }
+
+  // clear the partition region
+  private void clearPartitionedRegionTestOnly(PartitionedRegion partitionedRegion) {
+    LocalDataSet lds = (LocalDataSet) PartitionRegionHelper.getLocalPrimaryData(partitionedRegion);
+    Set<Integer> set = lds.getBucketSet(); // this returns bucket ids in the
+                                           // function context
+
+    for (Integer bucketId : set) {
+      Bucket bucket = partitionedRegion.getRegionAdvisor().getBucket(bucketId);
+      if (bucket instanceof ProxyBucketRegion == false) {
+        if (bucket instanceof BucketRegion) {
+          BucketRegion bucketRegion = (BucketRegion) bucket;
+          Set keySet = bucketRegion.keySet();
+          for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {
 
 Review comment:
   Nested for-loop, if-block, if-block, for-loop is too deep. Please combine the two if-blocks into one if-block. Consider breaking out if-block or inner for-loop to a new private method to improve readability.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148600029
 
 

 ##########
 File path: geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderGeodeBug3937RegressionTest.java
 ##########
 @@ -0,0 +1,92 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
+package org.apache.geode.internal.cache.wan.parallel;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.util.concurrent.TimeUnit;
+
+import org.apache.geode.internal.cache.wan.WANTestBase;
+import org.apache.geode.test.dunit.Wait;
+import org.apache.geode.test.junit.categories.DistributedTest;
+import org.awaitility.Awaitility;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+/**
+ * DUnit for ParallelGatewaySenderGeodeBug3937RegressionTest overflow operations.
+ */
+@Category(DistributedTest.class)
+public class ParallelGatewaySenderGeodeBug3937RegressionTest extends WANTestBase {
 
 Review comment:
   I recommend renaming the test more in line with the way these RegressionTests are named:
   - CreateAndLocalDestroyInTXRegressionTest
   - EntriesDoNotExpireDuringGIIRegressionTest
   - RemotePRValuesAreNotDeserializedRegressionTest
   - ValuesAreLazilyDeserializedRegressionTest
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148602636
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
 ##########
 @@ -1781,4 +1785,47 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } catch (Exception ee) {
+      throw ee;
+    } finally {
+      if (this.sender.isPaused())
+        this.sender.resume();
+    }
+  }
+
+  // clear the partition region
+  private void clearPartitionedRegionTestOnly(PartitionedRegion partitionedRegion) {
+    LocalDataSet lds = (LocalDataSet) PartitionRegionHelper.getLocalPrimaryData(partitionedRegion);
+    Set<Integer> set = lds.getBucketSet(); // this returns bucket ids in the
+                                           // function context
+
+    for (Integer bucketId : set) {
+      Bucket bucket = partitionedRegion.getRegionAdvisor().getBucket(bucketId);
+      if (bucket instanceof ProxyBucketRegion == false) {
+        if (bucket instanceof BucketRegion) {
+          BucketRegion bucketRegion = (BucketRegion) bucket;
+          Set keySet = bucketRegion.keySet();
+          for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {
+            Object key = iterator.next();
+            try {
+              bucketRegion.remove(key);
+            } catch (Exception ee) {
+              ee.printStackTrace(System.out);
 
 Review comment:
   Remove all printStackTrace calls. If the exception is simply rethrown then remove the catch-block altogether.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148600551
 
 

 ##########
 File path: geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderGeodeBug3937RegressionTest.java
 ##########
 @@ -0,0 +1,92 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
+package org.apache.geode.internal.cache.wan.parallel;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.util.concurrent.TimeUnit;
+
+import org.apache.geode.internal.cache.wan.WANTestBase;
+import org.apache.geode.test.dunit.Wait;
+import org.apache.geode.test.junit.categories.DistributedTest;
+import org.awaitility.Awaitility;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+/**
+ * DUnit for ParallelGatewaySenderGeodeBug3937RegressionTest overflow operations.
+ */
+@Category(DistributedTest.class)
+public class ParallelGatewaySenderGeodeBug3937RegressionTest extends WANTestBase {
+
+  @Test
+  public void testParallelSenderQueueEventsOverflow_NoDiskStoreSpecified() throws Exception {
+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));
+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));
+
+    createCacheInVMs(nyPort, vm2);// backup-vm is not started in this regression
+    createReceiverInVMs(vm2);
+
+    createCacheInVMs(lnPort, vm4);// backup-vm is not started in this regression
+
+    vm4.invoke(() -> WANTestBase.createSenderWithoutDiskStore("ln", 2, 10, 10, false, true));
+
+    vm4.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), "ln", 1, 100, isOffHeap()));
+
+    startSenderInVMs("ln", vm4);
+
+    vm4.invoke(() -> WANTestBase.pauseSender("ln"));
+
+
+    // give some time for the senders to pause
+    Wait.pause(1000);
 
 Review comment:
   Replace this thread sleep with an Awaitility call. This sort of sleep/pause just creates Flaky tests.
   
   Example:
   ```java
   await().atMost(1, MINUTE).until(() -> vm4.invoke(() -> isSenderPaused("ln"));
   ```
   such that you would add a new method called "isSenderPaused" which returns boolean if the sender is paused. Awaitility will poll that until it returns true or fail if it takes longer than 1 minute.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148601614
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
 ##########
 @@ -1781,4 +1785,47 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } catch (Exception ee) {
 
 Review comment:
   Remove catch block that simply rethrows the caught exception.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148601964
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/entries/DiskEntry.java
 ##########
 @@ -1510,6 +1510,9 @@ public static void removeFromDisk(DiskEntry entry, LocalRegion region, boolean i
         throws RegionClearedException {
       DiskRegion dr = region.getDiskRegion();
       DiskId did = entry.getDiskId();
+      if (dr == null)
 
 Review comment:
   Please use '{' brackets around all conditional bodies including one-liners:
   ```java
   if (diskRegion == null) {
     return;
   }
   ```

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148600261
 
 

 ##########
 File path: geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderGeodeBug3937RegressionTest.java
 ##########
 @@ -0,0 +1,92 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
+package org.apache.geode.internal.cache.wan.parallel;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.util.concurrent.TimeUnit;
+
+import org.apache.geode.internal.cache.wan.WANTestBase;
+import org.apache.geode.test.dunit.Wait;
+import org.apache.geode.test.junit.categories.DistributedTest;
+import org.awaitility.Awaitility;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+/**
+ * DUnit for ParallelGatewaySenderGeodeBug3937RegressionTest overflow operations.
+ */
+@Category(DistributedTest.class)
+public class ParallelGatewaySenderGeodeBug3937RegressionTest extends WANTestBase {
+
+  @Test
+  public void testParallelSenderQueueEventsOverflow_NoDiskStoreSpecified() throws Exception {
+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));
+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));
+
+    createCacheInVMs(nyPort, vm2);// backup-vm is not started in this regression
+    createReceiverInVMs(vm2);
+
+    createCacheInVMs(lnPort, vm4);// backup-vm is not started in this regression
+
+    vm4.invoke(() -> WANTestBase.createSenderWithoutDiskStore("ln", 2, 10, 10, false, true));
+
+    vm4.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), "ln", 1, 100, isOffHeap()));
+
+    startSenderInVMs("ln", vm4);
+
+    vm4.invoke(() -> WANTestBase.pauseSender("ln"));
+
+
+    // give some time for the senders to pause
+    Wait.pause(1000);
+
+    vm2.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), null, 1, 100, isOffHeap()));
+
+    int numEventPuts = 50;
+    vm4.invoke(() -> WANTestBase.doHeavyPuts(getTestMethodName(), numEventPuts));
+
+    long numOvVm4 = (Long) vm4.invoke(() -> WANTestBase.getNumberOfEntriesOverflownToDisk("ln"));
+    long numMemVm4 = (Long) vm4.invoke(() -> WANTestBase.getNumberOfEntriesInVM("ln"));
+
+    long totalOverflown = numOvVm4 + numMemVm4;
+
+    assertEquals("Total number of entries  in VM4 is incorrect", (numEventPuts * 1),
+        (numOvVm4 + numMemVm4));
+
+    try {
+      vm4.invoke(() -> WANTestBase.clearGatewaySender("ln"));
+    } catch (Exception ee) {
 
 Review comment:
   Remove all try-catch blocks from the test. JUnit's stack trace and error message is much better than using fail.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148602398
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
 ##########
 @@ -1781,4 +1785,47 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } catch (Exception ee) {
+      throw ee;
+    } finally {
+      if (this.sender.isPaused())
+        this.sender.resume();
+    }
+  }
+
+  // clear the partition region
+  private void clearPartitionedRegionTestOnly(PartitionedRegion partitionedRegion) {
+    LocalDataSet lds = (LocalDataSet) PartitionRegionHelper.getLocalPrimaryData(partitionedRegion);
+    Set<Integer> set = lds.getBucketSet(); // this returns bucket ids in the
 
 Review comment:
   Move multi-line end-of-line comment before the line. Spotless produces some undesirable results like this.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148714414
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/entries/DiskEntry.java
 ##########
 @@ -1510,6 +1510,9 @@ public static void removeFromDisk(DiskEntry entry, LocalRegion region, boolean i
         throws RegionClearedException {
       DiskRegion dr = region.getDiskRegion();
       DiskId did = entry.getDiskId();
+      if (dr == null)
 
 Review comment:
   done

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148714445
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
 ##########
 @@ -1781,4 +1785,47 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } catch (Exception ee) {
+      throw ee;
+    } finally {
+      if (this.sender.isPaused())
+        this.sender.resume();
+    }
+  }
+
+  // clear the partition region
+  private void clearPartitionedRegionTestOnly(PartitionedRegion partitionedRegion) {
+    LocalDataSet lds = (LocalDataSet) PartitionRegionHelper.getLocalPrimaryData(partitionedRegion);
+    Set<Integer> set = lds.getBucketSet(); // this returns bucket ids in the
 
 Review comment:
   done

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148714453
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
 ##########
 @@ -1781,4 +1785,47 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } catch (Exception ee) {
+      throw ee;
+    } finally {
+      if (this.sender.isPaused())
+        this.sender.resume();
+    }
+  }
+
+  // clear the partition region
+  private void clearPartitionedRegionTestOnly(PartitionedRegion partitionedRegion) {
+    LocalDataSet lds = (LocalDataSet) PartitionRegionHelper.getLocalPrimaryData(partitionedRegion);
+    Set<Integer> set = lds.getBucketSet(); // this returns bucket ids in the
+                                           // function context
+
+    for (Integer bucketId : set) {
+      Bucket bucket = partitionedRegion.getRegionAdvisor().getBucket(bucketId);
+      if (bucket instanceof ProxyBucketRegion == false) {
+        if (bucket instanceof BucketRegion) {
+          BucketRegion bucketRegion = (BucketRegion) bucket;
+          Set keySet = bucketRegion.keySet();
+          for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {
 
 Review comment:
   done

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148714463
 
 

 ##########
 File path: geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
 ##########
 @@ -1781,4 +1785,47 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } catch (Exception ee) {
+      throw ee;
+    } finally {
+      if (this.sender.isPaused())
+        this.sender.resume();
+    }
+  }
+
+  // clear the partition region
+  private void clearPartitionedRegionTestOnly(PartitionedRegion partitionedRegion) {
+    LocalDataSet lds = (LocalDataSet) PartitionRegionHelper.getLocalPrimaryData(partitionedRegion);
+    Set<Integer> set = lds.getBucketSet(); // this returns bucket ids in the
+                                           // function context
+
+    for (Integer bucketId : set) {
+      Bucket bucket = partitionedRegion.getRegionAdvisor().getBucket(bucketId);
+      if (bucket instanceof ProxyBucketRegion == false) {
+        if (bucket instanceof BucketRegion) {
+          BucketRegion bucketRegion = (BucketRegion) bucket;
+          Set keySet = bucketRegion.keySet();
+          for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {
+            Object key = iterator.next();
+            try {
+              bucketRegion.remove(key);
+            } catch (Exception ee) {
+              ee.printStackTrace(System.out);
 
 Review comment:
   done

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148714487
 
 

 ##########
 File path: geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderGeodeBug3937RegressionTest.java
 ##########
 @@ -0,0 +1,92 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
+package org.apache.geode.internal.cache.wan.parallel;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.util.concurrent.TimeUnit;
+
+import org.apache.geode.internal.cache.wan.WANTestBase;
+import org.apache.geode.test.dunit.Wait;
+import org.apache.geode.test.junit.categories.DistributedTest;
+import org.awaitility.Awaitility;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+/**
+ * DUnit for ParallelGatewaySenderGeodeBug3937RegressionTest overflow operations.
+ */
+@Category(DistributedTest.class)
+public class ParallelGatewaySenderGeodeBug3937RegressionTest extends WANTestBase {
 
 Review comment:
   Test File Name is changed now.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148714494
 
 

 ##########
 File path: geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderGeodeBug3937RegressionTest.java
 ##########
 @@ -0,0 +1,92 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
+package org.apache.geode.internal.cache.wan.parallel;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.util.concurrent.TimeUnit;
+
+import org.apache.geode.internal.cache.wan.WANTestBase;
+import org.apache.geode.test.dunit.Wait;
+import org.apache.geode.test.junit.categories.DistributedTest;
+import org.awaitility.Awaitility;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+/**
+ * DUnit for ParallelGatewaySenderGeodeBug3937RegressionTest overflow operations.
+ */
+@Category(DistributedTest.class)
+public class ParallelGatewaySenderGeodeBug3937RegressionTest extends WANTestBase {
+
+  @Test
+  public void testParallelSenderQueueEventsOverflow_NoDiskStoreSpecified() throws Exception {
+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));
+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));
+
+    createCacheInVMs(nyPort, vm2);// backup-vm is not started in this regression
+    createReceiverInVMs(vm2);
+
+    createCacheInVMs(lnPort, vm4);// backup-vm is not started in this regression
+
+    vm4.invoke(() -> WANTestBase.createSenderWithoutDiskStore("ln", 2, 10, 10, false, true));
+
+    vm4.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), "ln", 1, 100, isOffHeap()));
+
+    startSenderInVMs("ln", vm4);
+
+    vm4.invoke(() -> WANTestBase.pauseSender("ln"));
+
+
+    // give some time for the senders to pause
+    Wait.pause(1000);
 
 Review comment:
   done

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on a change in pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#discussion_r148714505
 
 

 ##########
 File path: geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderGeodeBug3937RegressionTest.java
 ##########
 @@ -0,0 +1,92 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
+package org.apache.geode.internal.cache.wan.parallel;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.util.concurrent.TimeUnit;
+
+import org.apache.geode.internal.cache.wan.WANTestBase;
+import org.apache.geode.test.dunit.Wait;
+import org.apache.geode.test.junit.categories.DistributedTest;
+import org.awaitility.Awaitility;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+/**
+ * DUnit for ParallelGatewaySenderGeodeBug3937RegressionTest overflow operations.
+ */
+@Category(DistributedTest.class)
+public class ParallelGatewaySenderGeodeBug3937RegressionTest extends WANTestBase {
+
+  @Test
+  public void testParallelSenderQueueEventsOverflow_NoDiskStoreSpecified() throws Exception {
+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));
+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));
+
+    createCacheInVMs(nyPort, vm2);// backup-vm is not started in this regression
+    createReceiverInVMs(vm2);
+
+    createCacheInVMs(lnPort, vm4);// backup-vm is not started in this regression
+
+    vm4.invoke(() -> WANTestBase.createSenderWithoutDiskStore("ln", 2, 10, 10, false, true));
+
+    vm4.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), "ln", 1, 100, isOffHeap()));
+
+    startSenderInVMs("ln", vm4);
+
+    vm4.invoke(() -> WANTestBase.pauseSender("ln"));
+
+
+    // give some time for the senders to pause
+    Wait.pause(1000);
+
+    vm2.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), null, 1, 100, isOffHeap()));
+
+    int numEventPuts = 50;
+    vm4.invoke(() -> WANTestBase.doHeavyPuts(getTestMethodName(), numEventPuts));
+
+    long numOvVm4 = (Long) vm4.invoke(() -> WANTestBase.getNumberOfEntriesOverflownToDisk("ln"));
+    long numMemVm4 = (Long) vm4.invoke(() -> WANTestBase.getNumberOfEntriesInVM("ln"));
+
+    long totalOverflown = numOvVm4 + numMemVm4;
+
+    assertEquals("Total number of entries  in VM4 is incorrect", (numEventPuts * 1),
+        (numOvVm4 + numMemVm4));
+
+    try {
+      vm4.invoke(() -> WANTestBase.clearGatewaySender("ln"));
+    } catch (Exception ee) {
 
 Review comment:
   done

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-341629024
 
 
   Hello Kirk, 
   I made the changes as per review comments

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kirklund commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-342923940
 
 
   I added several additional reviewers for the asynceventqueue and wan code.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-345159280
 
 
   any comment?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jhuynh1 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-345806099
 
 
   Hi
   
   There are a few things going on in this PR… 
   
   First it looks like you are attempting to add a lot of test code to clear a bucket region queue, this in turn ends up with an NPE thrown in DiskEntry.
   
   However, Geode does not currently support clearing the bucket region queue and so this PR introduces some “test” product code.  The regression test then calls this “test” code to do the clear.  The NPE is then thrown.  The NPE itself looks like it would be a product issue, however it turns out that the remove you have attempted to call on the bucketRegion is not the correct remove when it comes to a bucketRegionQueue.  What should have been called is destroyKey from the bucket region queue.  Whenever clear is added to the product, it would have to handle this special case.
   
   The fix to ignore the null in DiskEntry should not be added at this time.  If it were added with this test, the underlying entries would still probably reside in the queue.  The resume sender at the end of the test is why the queue ends up getting cleared.
   
   I don’t think we should be adding this product code or the related “test” code.  It is hiliting a problem that does not currently exist in Geode.  The NPE is due to invalid test code.
   
   here is are the entry that is removed when removing from a BucketRegionQueue:
   [vm4] mapDestroy:EntryEventImpl[op=DESTROY;region=/__PR/_B__ln__PARALLEL__GATEWAY__SENDER__QUEUE_0;key=100;oldValue=null;newValue=null;callbackArg=null;originRemote=false;originMember=10.118.20.91(30103)<v1>:32773;id=EventIDid=18bytes;threadID=2;sequenceID=0]]
   
   Compared to the entry the test code attempts to remove:
   [vm4] mapDestroy:EntryEventImpl[op=DESTROY;region=/ln_PARALLEL_GATEWAY_SENDER_QUEUE;key=100;oldValue=null;newValue=null;callbackArg=null;originRemote=false;originMember=10.118.20.91(30117)<v1>:32773;id=EventIDid=18bytes;threadID=1;sequenceID=51]]
   
   The BucketRegionQueue explicitly sets itself as the region to remove from, whereas the remove that was called in the test code does not do this.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jhuynh1 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-345806099
 
 
   Hi
   
   There are a few things going on in this PR… 
   
   First it looks like you are attempting to add a lot of test code to clear a bucket region queue, this in turn ends up with an NPE thrown in DiskEntry.
   
   However, Geode does not currently support clearing the bucket region queue and so this PR introduces some “test” product code.  The regression test then calls this “test” code to do the clear.  The NPE is then thrown.  The NPE itself looks like it would be a product issue, however it turns out that the remove you have attempted to call on the bucketRegion is not the correct remove when it comes to a bucketRegionQueue.  What should have been called is destroyKey from the bucket region queue.  Whenever clear is added to the product, it would have to handle this special case.
   
   The fix to ignore the null in DiskEntry should not be added at this time.
   
   I don’t think we should be adding this product code or the related “test” code.  It is hiliting a problem that does not currently exist in Geode.  The NPE is due to invalid test code.
   
   here is are the entry that is removed when removing from a BucketRegionQueue:
   [vm4] mapDestroy:EntryEventImpl[op=DESTROY;region=/__PR/_B__ln__PARALLEL__GATEWAY__SENDER__QUEUE_0;key=100;oldValue=null;newValue=null;callbackArg=null;originRemote=false;originMember=10.118.20.91(30103)<v1>:32773;id=EventIDid=18bytes;threadID=2;sequenceID=0]]
   
   Compared to the entry the test code attempts to remove:
   [vm4] mapDestroy:EntryEventImpl[op=DESTROY;region=/ln_PARALLEL_GATEWAY_SENDER_QUEUE;key=100;oldValue=null;newValue=null;callbackArg=null;originRemote=false;originMember=10.118.20.91(30117)<v1>:32773;id=EventIDid=18bytes;threadID=1;sequenceID=51]]
   
   The BucketRegionQueue explicitly sets itself as the region to remove from, whereas the remove that was called in the test code does not do this.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-346314086
 
 
   i need to use 
   BucketRegionQueue q=   this.getBucketRegionQueueByBucketId(partitionedRegion, bucketId);
   					q.destroyKey(key);\
   ??

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jhuynh1 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-346399562
 
 
   You would need to do that if you want to remove a key from a bucketRegionQueue. Based on your test code it would be:
   
   private void clearBucketRegionTestOnly(BucketRegion bucketRegion) {
       Set keySet = bucketRegion.keySet();
        for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {
          Object key = iterator.next();
         ((BucketRegionQueue) bucketRegion).destroyKey(key);
        }
     }
   
   However this pull request is about an NPE that does not exist in the product at this time, so I don't think this pull request should be committed

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-347169288
 
 
   destroyKey it will remove the key & value. i am trying to clear the queue which meas. it will remove key & value holding inside a region which hold by async-queue. 
   
   can i add clear method in ParallelGatewaySenderQueue.java and create another pull request??

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jhuynh1 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-347223780
 
 
   I think if you plan on adding a new api you would have to start a discuss topic on the dev list.  I would think you would want to add clear to all the gateway sender queues at that point but the change would have to be pretty thoroughly tested.  The change to call destroyKey was just a way to show you that the way that it was currently coded in the test code was not correct.  I am not sure if it is enough to just call that or if there is other book keeping that needs to be done.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-347416383
 
 
   thanks. i will start discussion on this  for adding the clear api.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 closed pull request #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002
 
 
   

This is a PR merged from a forked repository.
As GitHub hides the original diff on merge, it is displayed below for
the sake of provenance:

As this is a foreign pull request (from a fork), the diff is supplied
below (as it won't show otherwise due to GitHub magic):

diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/entries/DiskEntry.java b/geode-core/src/main/java/org/apache/geode/internal/cache/entries/DiskEntry.java
index 210d76bca8..3eee43a341 100644
--- a/geode-core/src/main/java/org/apache/geode/internal/cache/entries/DiskEntry.java
+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/entries/DiskEntry.java
@@ -713,7 +713,6 @@ public static boolean wrapOffHeapReference(Object o) {
       if (o instanceof StoredObject) {
         StoredObject so = (StoredObject) o;
         if (so.hasRefCount()) {
-          //
           return true;
         }
       }
@@ -1382,8 +1381,9 @@ public static void handleFullAsyncQueue(DiskEntry entry, LocalRegion region, Ver
     }
 
     public static void doAsyncFlush(VersionTag tag, LocalRegion region) {
-      if (region.isThisRegionBeingClosedOrDestroyed())
+      if (region.isThisRegionBeingClosedOrDestroyed()) {
         return;
+      }
       DiskRegion dr = region.getDiskRegion();
       if (!dr.isBackup()) {
         return;
@@ -1415,8 +1415,9 @@ public static void doAsyncFlush(DiskEntry entry, LocalRegion region, VersionTag
      */
     private static void writeEntryToDisk(DiskEntry entry, LocalRegion region, VersionTag tag,
         boolean asyncQueueWasFull) {
-      if (region.isThisRegionBeingClosedOrDestroyed())
+      if (region.isThisRegionBeingClosedOrDestroyed()) {
         return;
+      }
       DiskRegion dr = region.getDiskRegion();
       if (!asyncQueueWasFull) {
         dr.setClearCountReference();
@@ -1510,6 +1511,9 @@ public static void removeFromDisk(DiskEntry entry, LocalRegion region, boolean i
         throws RegionClearedException {
       DiskRegion dr = region.getDiskRegion();
       DiskId did = entry.getDiskId();
+      if (dr == null) {
+        return;
+      }
       Object syncObj = did;
       if (did == null) {
         syncObj = entry;
diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ConcurrentParallelGatewaySenderQueue.java b/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ConcurrentParallelGatewaySenderQueue.java
index c9251660f3..f50c775983 100644
--- a/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ConcurrentParallelGatewaySenderQueue.java
+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ConcurrentParallelGatewaySenderQueue.java
@@ -226,4 +226,13 @@ public long getNumEntriesOverflowOnDiskTestOnly() {
     return ((ParallelGatewaySenderQueue) (processors[0].getQueue()))
         .getNumEntriesOverflowOnDiskTestOnly();
   }
+
+  public void clearQueueTestOnly() {
+    for (int i = 0; i < processors.length; i++) {
+
+      ((ParallelGatewaySenderQueue) this.processors[i].getQueue()).clearQueueTestOnly();
+    }
+
+
+  }
 }
diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java b/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
index f8771f761a..d17c8c713a 100644
--- a/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java
@@ -87,6 +87,10 @@
 import org.apache.geode.internal.size.SingleObjectSizer;
 import org.apache.geode.internal.util.concurrent.StoppableCondition;
 import org.apache.geode.internal.util.concurrent.StoppableReentrantLock;
+import org.apache.geode.cache.partition.PartitionRegionHelper;
+import org.apache.geode.internal.cache.LocalDataSet;
+import org.apache.geode.internal.cache.ProxyBucketRegion;
+import org.apache.geode.internal.cache.partitioned.Bucket;
 
 public class ParallelGatewaySenderQueue implements RegionQueue {
 
@@ -1781,4 +1785,40 @@ ParallelGatewaySenderQueueMetaRegion newMetataRegion(InternalCache cache, final
       return meta;
     }
   }
+
+
+
+  public void clearQueueTestOnly() {
+
+    this.sender.pause();// it wil take internal read-write-lock
+    try {
+      for (PartitionedRegion prQ : this.userRegionNameToshadowPRMap.values()) {
+        clearPartitionedRegionTestOnly((PartitionedRegion) prQ);
+      }
+    } finally {
+      if (this.sender.isPaused())
+        this.sender.resume();
+    }
+  }
+
+  // clear the partition region
+  private void clearPartitionedRegionTestOnly(PartitionedRegion partitionedRegion) {
+    LocalDataSet lds = (LocalDataSet) PartitionRegionHelper.getLocalPrimaryData(partitionedRegion);
+    Set<Integer> set = lds.getBucketSet(); // this returns bucket ids in the function context
+    for (Integer bucketId : set) {
+      Bucket bucket = partitionedRegion.getRegionAdvisor().getBucket(bucketId);
+      if ((bucket instanceof ProxyBucketRegion == false) && bucket instanceof BucketRegion) {
+        BucketRegion bucketRegion = (BucketRegion) bucket;
+        clearBucketRegionTestOnly(bucketRegion);
+      }
+    }
+  }
+
+  private void clearBucketRegionTestOnly(BucketRegion bucketRegion) {
+    Set keySet = bucketRegion.keySet();
+    for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {
+      Object key = iterator.next();
+      bucketRegion.remove(key);
+    }
+  }
 }
diff --git a/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/WANTestBase.java b/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/WANTestBase.java
index f3d035824a..ee6d67b039 100644
--- a/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/WANTestBase.java
+++ b/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/WANTestBase.java
@@ -298,6 +298,35 @@ public static Integer createFirstPeerLocator(int dsId) {
     return port;
   }
 
+  public static void clearGatewaySender(String senderId) {
+
+    Set<GatewaySender> senders = cache.getGatewaySenders();
+    AbstractGatewaySender sender = null;
+    for (GatewaySender s : senders) {
+      if (s.getId().equals(senderId)) {
+        sender = (AbstractGatewaySender) s;
+        ConcurrentParallelGatewaySenderQueue r =
+            (ConcurrentParallelGatewaySenderQueue) sender.getQueue();
+        r.clearQueueTestOnly();
+        break;
+      }
+    }
+  }
+
+  public static Boolean isSenderPaused(String senderId) {
+    Boolean isPaused = false;
+    Set<GatewaySender> senders = cache.getGatewaySenders();
+    AbstractGatewaySender sender = null;
+    for (GatewaySender s : senders) {
+      if (s.getId().equals(senderId)) {
+        sender = (AbstractGatewaySender) s;
+        isPaused = sender.isPaused();
+        break;
+      }
+    }
+    return isPaused;
+  }
+
   public static Integer createSecondLocator(int dsId, int locatorPort) {
     stopOldLocator();
     WANTestBase test = new WANTestBase();
diff --git a/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ClearParallelSenderQueueWhenReceiverNotStartedRegressionTest.java b/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ClearParallelSenderQueueWhenReceiverNotStartedRegressionTest.java
new file mode 100644
index 0000000000..44932a4b8e
--- /dev/null
+++ b/geode-wan/src/test/java/org/apache/geode/internal/cache/wan/parallel/ClearParallelSenderQueueWhenReceiverNotStartedRegressionTest.java
@@ -0,0 +1,86 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
+package org.apache.geode.internal.cache.wan.parallel;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.util.concurrent.TimeUnit;
+
+import org.apache.geode.internal.cache.wan.WANTestBase;
+import org.apache.geode.test.dunit.Wait;
+import org.apache.geode.test.junit.categories.DistributedTest;
+import org.awaitility.Awaitility;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+/**
+ * DUnit for ClearParallelSenderQueueWhenReceiverNotStartedRegressionTest operations. GEODE-3937
+ */
+@Category(DistributedTest.class)
+public class ClearParallelSenderQueueWhenReceiverNotStartedRegressionTest extends WANTestBase {
+
+  @Test
+  public void testParallelSenderQueueEventsOverflow_NoDiskStoreSpecified() throws Exception {
+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));
+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));
+
+    createCacheInVMs(nyPort, vm2);// backup-vm is not started in this regression
+    createReceiverInVMs(vm2);
+
+    createCacheInVMs(lnPort, vm4);// backup-vm is not started in this regression
+
+    vm4.invoke(() -> WANTestBase.createSenderWithoutDiskStore("ln", 2, 10, 10, false, true));
+
+    vm4.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), "ln", 1, 100, isOffHeap()));
+
+    startSenderInVMs("ln", vm4);
+
+    vm4.invoke(() -> WANTestBase.pauseSender("ln"));
+
+    // give some time for the senders to pause
+    Awaitility.await().atMost(1, TimeUnit.MINUTES)
+        .until(() -> vm4.invoke(() -> WANTestBase.isSenderPaused("ln")));
+
+    vm2.invoke(
+        () -> WANTestBase.createPartitionedRegion(getTestMethodName(), null, 1, 100, isOffHeap()));
+
+    int numEventPuts = 50;
+    vm4.invoke(() -> WANTestBase.doHeavyPuts(getTestMethodName(), numEventPuts));
+
+    long numOvVm4 = (Long) vm4.invoke(() -> WANTestBase.getNumberOfEntriesOverflownToDisk("ln"));
+    long numMemVm4 = (Long) vm4.invoke(() -> WANTestBase.getNumberOfEntriesInVM("ln"));
+
+    assertEquals("Total number of entries  in VM4 is incorrect", (numEventPuts * 1),
+        (numOvVm4 + numMemVm4));
+
+    // clear the queue
+    vm4.invoke(() -> WANTestBase.clearGatewaySender("ln"));
+
+    vm4.invoke(() -> WANTestBase.resumeSender("ln"));
+
+    Awaitility.await().atMost(60, TimeUnit.SECONDS).until(() -> {
+
+      int numMemVm2 = vm2.invoke(() -> WANTestBase.getRegionSize(getTestMethodName()));
+
+      assertEquals("Total number of entries  in VM2 is incorrect", 0, numMemVm2);
+
+    });
+
+  }
+
+
+}


 

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


dineshpune2006 commented on issue #1002: GEODE-3937:Fix NPE when executing removeFromDisk
URL: https://github.com/apache/geode/pull/1002#issuecomment-349615077
 
 
   will open another

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


I'm going to mark this ticket as resolved for now.  I haven't seen any work on it lately and the original issue was with code that wasn't committed to develop from what I can tell.

