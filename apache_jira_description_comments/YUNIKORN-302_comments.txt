Log to show the issue, setting the reservation delay:
{code}
2020-07-20T16:09:10.212Z	DEBUG	scheduler/scheduling_application.go:66	Test override reservation delay	{"delay": "10ms"}
{code}

Adding the asks to apps to get scheduled:
{code}
2020-07-20T16:09:11.184Z	DEBUG	scheduler/scheduler.go:230	enqueued event	{"eventType": "*schedulerevent.SchedulerAllocationUpdatesEvent", "event": {"RejectedAllocations":null,"AcceptedAllocations":null,"NewAsks":[{"allocationKey":"alloc-2","applicationID":"app-2","partitionName":"[rm:123]default","resourceAsk":{"resources":{"memory":{"value":20},"vcore":{"value":20}}},"maxAllocations":2}],"ToReleases":null,"ExistingAllocations":null,"RMId":""}, "currentQueueSize": 0}
2020-07-20T16:09:11.184Z	DEBUG	scheduler/scheduler.go:230	enqueued event	{"eventType": "*schedulerevent.SchedulerAllocationUpdatesEvent", "event": {"RejectedAllocations":null,"AcceptedAllocations":null,"NewAsks":[{"allocationKey":"alloc-3","applicationID":"app-3","partitionName":"[rm:123]default","resourceAsk":{"resources":{"memory":{"value":5},"vcore":{"value":5}}},"maxAllocations":2}],"ToReleases":null,"ExistingAllocations":null,"RMId":""}, "currentQueueSize": 1}
2020-07-20T16:09:11.184Z	DEBUG	cache/application_state.go:103	Application state transition	{"appID": "app-2", "source": "New", "destination": "Accepted", "event": "RunApplication"}
2020-07-20T16:09:11.184Z	DEBUG	cache/application_state.go:103	Application state transition	{"appID": "app-3", "source": "New", "destination": "Accepted", "event": "RunApplication"}
{code}

Manual stepping in the scheduler:
{code}
2020-07-20T16:09:11.193Z	DEBUG	scheduler/scheduler.go:619	Scheduler manual stepping	{"count": 0}
2020-07-20T16:09:11.194Z	DEBUG	scheduler/scheduling_node.go:271	requested resource is larger than currently available node resources	{"nodeID": "node-1", "requested": "map[memory:20 vcore:20]", "available": "map[memory:10 vcore:10]"}
2020-07-20T16:09:11.194Z	DEBUG	scheduler/scheduling_application.go:641	skipping node for allocation: basic condition not satisfied	{"node": "node-1", "allocationKey": "alloc-2", "error": "pre alloc check: requested resource map[memory:20 vcore:20] is larger than currently available map[memory:10 vcore:10] resource on node-1"}
2020-07-20T16:09:11.194Z	DEBUG	scheduler/scheduling_node.go:271	requested resource is larger than currently available node resources	{"nodeID": "node-2", "requested": "map[memory:20 vcore:20]", "available": "map[memory:10 vcore:10]"}
2020-07-20T16:09:11.194Z	DEBUG	scheduler/scheduling_application.go:641	skipping node for allocation: basic condition not satisfied	{"node": "node-2", "allocationKey": "alloc-2", "error": "pre alloc check: requested resource map[memory:20 vcore:20] is larger than currently available map[memory:10 vcore:10] resource on node-2"}
2020-07-20T16:09:11.194Z	DEBUG	scheduler/scheduling_node.go:186	allocations in progress updated	{"nodeID": "node-1", "total unconfirmed": "map[memory:5 vcore:5]"}
2020-07-20T16:09:11.194Z	DEBUG	scheduler/scheduling_queue.go:559	allocation found on queue	{"queueName": "root.leaf-2", "appID": "app-3", "allocation": "AllocatioKey=alloc-3, repeats=1, node=node-1, result=allocated"}
{code}

The point in time that we have added the asks is 16:09:11.184 (note resolution in the milliseconds), the point that we start scheduling is 16:09:11.193 (also in milliseconds). The delay is less than 10 msec.
By the time we have considered the two large allocations which should have triggered a reservation they are not "old" enough to trigger a reservation. A simple shorting of the reservation delay should trigger the expected reservation even if the system processes run faster than expected.

