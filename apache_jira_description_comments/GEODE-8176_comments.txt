This failure has reproduced twice in the last 24 hrs.

alb3rtobr opened a new pull request #5176:
URL: https://github.com/apache/geode/pull/5176


   Hi @metatype 
   I have been trying to reproduce the failure reported in the ticket, but I have not been able to do it yet.
   I dont know if you have progressed with this issue but just in case I think that we could add these checks to the test case in develop branch to have more information next time it appears.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


alb3rtobr commented on pull request #5176:
URL: https://github.com/apache/geode/pull/5176#issuecomment-637809794


   I have rebased the PR now that LGTM Java Analysis seems working again.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


I have not seen the test case fail since the two builds reported previously:

https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/192

https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UpgradeTestOpenJDK8/builds/197

Anyway , I would like to merge the PR I have implemented, which I think improves the checks in the test case and could give more information in case this failure appears again.

metatype commented on pull request #5176:
URL: https://github.com/apache/geode/pull/5176#issuecomment-639031361


   Passing this over to Bill and Bruce, I'm afraid I don't have much context.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


alb3rtobr commented on pull request #5176:
URL: https://github.com/apache/geode/pull/5176#issuecomment-641244014


   @Bill please if you approve it, merge this PR (I dont have permissions). Thanks


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 6dabaeb519de64d53029d02541d69010d8c2f3f4 in geode's branch refs/heads/develop from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6dabaeb ]

GEODE-8176: Add more checks in the flaky ping test (#5176)



Bill merged pull request #5176:
URL: https://github.com/apache/geode/pull/5176


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 6dabaeb519de64d53029d02541d69010d8c2f3f4 in geode's branch refs/heads/feature/GEODE-8067 from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6dabaeb ]

GEODE-8176: Add more checks in the flaky ping test (#5176)



Commit 6dabaeb519de64d53029d02541d69010d8c2f3f4 in geode's branch refs/heads/feature/GEODE-8067 from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6dabaeb ]

GEODE-8176: Add more checks in the flaky ping test (#5176)



Commit 6dabaeb519de64d53029d02541d69010d8c2f3f4 in geode's branch refs/heads/feature/GEODE-8067 from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6dabaeb ]

GEODE-8176: Add more checks in the flaky ping test (#5176)



Commit 6dabaeb519de64d53029d02541d69010d8c2f3f4 in geode's branch refs/heads/feature/GEODE-8067 from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6dabaeb ]

GEODE-8176: Add more checks in the flaky ping test (#5176)



Commit 6dabaeb519de64d53029d02541d69010d8c2f3f4 in geode's branch refs/heads/feature/GEODE-8067 from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=6dabaeb ]

GEODE-8176: Add more checks in the flaky ping test (#5176)



alb3rtobr opened a new pull request #5238:
URL: https://github.com/apache/geode/pull/5238


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


The test failed again, twice in an upgradeTest. Thanks to the previous checks introduced, I know that the problem is that the list of known clients by the server is empty, so it seems the ping did not reach the server.
 

CI failures: 
* http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0131/test-results/upgradeTest/1591904690/
* http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0131/test-results/upgradeTest/1591905024/

[~alberto.bustamante.reyes] I filed and linked GEODE-8245.

bschuchardt merged pull request #5238:
URL: https://github.com/apache/geode/pull/5238


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit d405e4b7888e12bad22254307f2c383d8bcc7bfa in geode's branch refs/heads/develop from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=d405e4b ]

GEODE-8176: Move test to ClientServerMiscDUnitTest (#5238)



I have finished the execution of ClientServerMiscDUnitTest 2000 times on my laptop with no failure. 

alb3rtobr opened a new pull request #5303:
URL: https://github.com/apache/geode/pull/5303


   The DistributedPingMessage is handled asynchronously: I have check that if I introduce a sleep `process()` method of `DistributedPingServer`, the test case fails because the `ClientHealthMonitor` has not received the ping.
   I suspect that in the ocassions where the test failed was due to a race condition between the check of the `ClientHealthMonitor` content and the process of the message. So Im introducing a wait when checking the `ClientHealthMonitor` to avoid this.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


I think the problem is a race condition between the ping updating the ClientHealthMonitor and the test case checking the ClientHealthMonitor content. If I introduce a delay in the message before updating the ClientHealthMonitor, the test case fails as it failed in the reported CI executions.
So Im introducing a wait in the test case to avoid this situation. Hopefully this will solve the issue, and also GEODE-8245.

https://github.com/apache/geode/pull/5303

jujoramos commented on a change in pull request #5303:
URL: https://github.com/apache/geode/pull/5303#discussion_r445500467



##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -129,7 +130,9 @@ public void testPingWrongServer() {
     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);
     // if the ping made it to server2 it will have the client's ID in its health monitor
     server2.invoke(() -> {
-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());
+      await("For heartbeat to be received").timeout(Duration.ofMinutes(1))

Review comment:
       Please use the default timeout (5 minutes) set by `GeodeAwaitility` instead: `await().untilAsserted()` (without the `timeout`).

##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -20,6 +20,8 @@
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assert.assertEquals;

Review comment:
       The current preferred approach is to always use `org.assertj.core.api.Assertions` instead of `org.junit.Assert`, can you change it?.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


alb3rtobr commented on a change in pull request #5303:
URL: https://github.com/apache/geode/pull/5303#discussion_r445502667



##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -129,7 +130,9 @@ public void testPingWrongServer() {
     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);
     // if the ping made it to server2 it will have the client's ID in its health monitor
     server2.invoke(() -> {
-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());
+      await("For heartbeat to be received").timeout(Duration.ofMinutes(1))

Review comment:
       I thought 5 minutes were too much for this case but if its ok for you, then I can change it, no problem.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jujoramos commented on a change in pull request #5303:
URL: https://github.com/apache/geode/pull/5303#discussion_r445504922



##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -129,7 +130,9 @@ public void testPingWrongServer() {
     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);
     // if the ping made it to server2 it will have the client's ID in its health monitor
     server2.invoke(() -> {
-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());
+      await("For heartbeat to be received").timeout(Duration.ofMinutes(1))

Review comment:
       I agree in that 5 minutes might be "too much" for this test, but it's the current standard and there are only a handful of tests (8 I think) that overrides it, so I think is better to keep using the defaults for everything new.
   As a side note, the poll occurs every 100 milliseconds anyway, so the condition should be met way sooner than 5 minutes.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jujoramos commented on a change in pull request #5303:
URL: https://github.com/apache/geode/pull/5303#discussion_r445531653



##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -117,19 +116,21 @@ public void testPingWrongServer() {
     InternalDistributedMember server2ID = server2.invoke("get ID", () -> cache.getMyId());
     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);
     // send the ping to server1 but use server2's identifier so the ping will be forwarded
-
     ClientProxyMembershipID proxyID = server1.invoke(
         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());
     logger.info("ProxyID is : " + proxyID);

Review comment:
       This logging message can be removed.

##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -117,19 +116,21 @@ public void testPingWrongServer() {
     InternalDistributedMember server2ID = server2.invoke("get ID", () -> cache.getMyId());
     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);
     // send the ping to server1 but use server2's identifier so the ping will be forwarded
-
     ClientProxyMembershipID proxyID = server1.invoke(
         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());
     logger.info("ProxyID is : " + proxyID);
     server2.invoke(() -> {
       assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().contains(proxyID))
           .isFalse();
-      assertEquals(0, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());
+      assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())
+          .isEqualTo(0);
     });
     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);
     // if the ping made it to server2 it will have the client's ID in its health monitor
     server2.invoke(() -> {
-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());
+      await("For heartbeat to be received").untilAsserted(() -> assertThat(
+          ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())
+              .isEqualTo(1));
       ClientProxyMembershipID proxyIDFound =
           ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().iterator().next();
       logger.info("ProxyID found in clientHealthMonitor: " + proxyIDFound);

Review comment:
       This logging message can be removed.
   
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


alb3rtobr commented on a change in pull request #5303:
URL: https://github.com/apache/geode/pull/5303#discussion_r445550192



##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -117,19 +116,21 @@ public void testPingWrongServer() {
     InternalDistributedMember server2ID = server2.invoke("get ID", () -> cache.getMyId());
     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);
     // send the ping to server1 but use server2's identifier so the ping will be forwarded
-
     ClientProxyMembershipID proxyID = server1.invoke(
         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());
     logger.info("ProxyID is : " + proxyID);

Review comment:
       done!

##########
File path: geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java
##########
@@ -117,19 +116,21 @@ public void testPingWrongServer() {
     InternalDistributedMember server2ID = server2.invoke("get ID", () -> cache.getMyId());
     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);
     // send the ping to server1 but use server2's identifier so the ping will be forwarded
-
     ClientProxyMembershipID proxyID = server1.invoke(
         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());
     logger.info("ProxyID is : " + proxyID);
     server2.invoke(() -> {
       assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().contains(proxyID))
           .isFalse();
-      assertEquals(0, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());
+      assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())
+          .isEqualTo(0);
     });
     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);
     // if the ping made it to server2 it will have the client's ID in its health monitor
     server2.invoke(() -> {
-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());
+      await("For heartbeat to be received").untilAsserted(() -> assertThat(
+          ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())
+              .isEqualTo(1));
       ClientProxyMembershipID proxyIDFound =
           ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().iterator().next();
       logger.info("ProxyID found in clientHealthMonitor: " + proxyIDFound);

Review comment:
       done!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jujoramos merged pull request #5303:
URL: https://github.com/apache/geode/pull/5303


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 34cfe04c35a49377db229c495a4a8b9afcb278f4 in geode's branch refs/heads/develop from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=34cfe04 ]

GEODE-8176: Fix flakiness in testPingWrongServer (#5303)



Commit 34cfe04c35a49377db229c495a4a8b9afcb278f4 in geode's branch refs/heads/develop from Alberto Bustamante Reyes
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=34cfe04 ]

GEODE-8176: Fix flakiness in testPingWrongServer (#5303)



