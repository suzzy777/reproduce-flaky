ableegoldman commented on pull request #7472: KAFKA-8743: Flaky Test Repartition{WithMerge}OptimizingIntegrationTest
URL: https://github.com/apache/kafka/pull/7472
 
 
   All four flavors of the repartition/optimization tests have been reported as flaky and failed in one place or another:
   `RepartitionOptimizingIntegrationTest.shouldSendCorrectRecords_OPTIMIZED`
   `RepartitionOptimizingIntegrationTest.shouldSendCorrectRecords_NO_OPTIMIZATION`
   `RepartitionWithMergeOptimizingIntegrationTest.shouldSendCorrectRecords_OPTIMIZED`
   `RepartitionWithMergeOptimizingIntegrationTest.shouldSendCorrectRecords_NO_OPTIMIZATION`
   
   They're pretty similar so it makes sense to knock them all out at once. This PR does three things:
   1. Switch to in-memory stores wherever possible
   2. Name all operators and update the Topology accordingly (not really a flaky test fix, but had to update the topology names anyway because of the IM stores so figured might as well)
   3. Double the timeout waiting to see all records. This is the "real" fix -- currently we use the default timeout (1 min), which is reasonable for most integration tests that have a single subtopology, and records make only the one roundtrip. These tests however require the records to go back and forth between the brokers more than just once, due to the repartitioning, so it seems only fair to give them a slightly higher timeout as records make the multiple roundtrips.
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


guozhangwang commented on pull request #7472: KAFKA-8743: Flaky Test Repartition{WithMerge}OptimizingIntegrationTest
URL: https://github.com/apache/kafka/pull/7472
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org


