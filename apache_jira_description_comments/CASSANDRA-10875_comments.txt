By default cqlsh uses the system-configured encoding. You can override this by using the {{--encoding}} option.

In order to find out your system's default encoding used by cqlsh, you can type {{bin/cqlsh \-\-help}} and check what's the default value of the {{--encoding}} option. Can you check that please?

Thank you for your response!

I didn't notice --encoding option.
I checked --help and --encoding option.

In cassandra-2.1.9, cqlsh doesn't have --encoding option.
{noformat}

$ cqlsh --help
Usage: cqlsh [options] [host [port]]

CQL Shell for Apache Cassandra

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -C, --color           Always use color output
  --no-color            Never use color output
  -u USERNAME, --username=USERNAME
                        Authenticate as user.
  -p PASSWORD, --password=PASSWORD
                        Authenticate using password.
  -k KEYSPACE, --keyspace=KEYSPACE
                        Authenticate to the given keyspace.
  -f FILE, --file=FILE  Execute commands from FILE, then exit
  -t TRANSPORT_FACTORY, --transport-factory=TRANSPORT_FACTORY
                        Use the provided Thrift transport factory function.
  --debug               Show additional debugging information
  --cqlversion=CQLVERSION
                        Specify a particular CQL version (default: 3).
                        Examples: "2", "3.0.0-beta1"
  -2, --cql2            Shortcut notation for --cqlversion=2
  -3, --cql3            Shortcut notation for --cqlversion=3

Connects to localhost:9160 by default. These defaults can be changed by
setting $CQLSH_HOST and/or $CQLSH_PORT. When a host (and optional port number)
are given on the command line, they take precedence over any defaults.

$ cqlsh --encode=utf8
Usage: cqlsh [options] [host [port]]

cqlsh: error: no such option: --encode
{noformat}

In Cassandra-3.0.0, cqlsh has it. But the help says encoding is utf8 already.
{noformat}
./cqlsh --help
Usage: cqlsh.py [options] [host [port]]

CQL Shell for Apache Cassandra

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -C, --color           Always use color output
  --no-color            Never use color output
  --ssl                 Use SSL
  -u USERNAME, --username=USERNAME
                        Authenticate as user.
  -p PASSWORD, --password=PASSWORD
                        Authenticate using password.
  -k KEYSPACE, --keyspace=KEYSPACE
                        Authenticate to the given keyspace.
  -f FILE, --file=FILE  Execute commands from FILE, then exit
  --debug               Show additional debugging information
  --encoding=ENCODING   Specify a non-default encoding for output.  If you are
                        experiencing problems with unicode characters, using
                        utf8 may fix the problem. (Default from system
                        preferences: UTF-8)
  --cqlshrc=CQLSHRC     Specify an alternative cqlshrc file location.
  --cqlversion=CQLVERSION
                        Specify a particular CQL version (default: 3.3.1).
                        Examples: "3.0.3", "3.1.0"
  -e EXECUTE, --execute=EXECUTE
                        Execute the statement and quit.
  --connect-timeout=CONNECT_TIMEOUT
                        Specify the connection timeout in seconds (default: 5
                        seconds).

Connects to 127.0.0.1:9042 by default. These defaults can be changed by
setting $CQLSH_HOST and/or $CQLSH_PORT. When a host (and optional port number)
are given on the command line, they take precedence over any defaults.
{noformat}

Furthermore,  cqlsh --encoding=utf8 doesn't seem to work correctly.

{noformat}
./cqlsh --encoding=utf8
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 3.0.0 | CQL spec 3.3.1 | Native protocol v4]
Use HELP for help.
cqlsh> select * from test where id='日本語';
'ascii' codec can't decode byte 0xe6 in position 29: ordinal not in range(128)
cqlsh> 
{noformat}

bq. Furthermore, cqlsh --encoding=utf8 doesn't seem to work correctly.

You're right. Although the encoding is correctly used for encoding the output, it's not being used to decode the input (which uses ascii by default).

The use of {{sys.setdefaultencoding('utf-8')}} is [discouraged|http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python]. Can you try the following approach?

{noformat}
diff --git a/bin/cqlsh b/bin/cqlsh
index 651420d..115cc09 100755
--- a/bin/cqlsh
+++ b/bin/cqlsh
@@ -929,7 +929,7 @@ class Shell(cmd.Cmd):
 
     def get_input_line(self, prompt=''):
         if self.tty:
-            self.lastcmd = raw_input(prompt)
+            self.lastcmd = raw_input(prompt).decode(self.encoding)
             line = self.lastcmd + '\n'
         else:
             self.lastcmd = self.stdin.readline()
{noformat}

If it works, please provide patches for 2.1, 2.2, 3.0 and trunk (if they don't merge up correctly).


Also, please include this in your patch:
{noformat}
diff --git a/bin/cqlsh b/bin/cqlsh
index 651420d..e852a8b 100755
--- a/bin/cqlsh
+++ b/bin/cqlsh
@@ -668,6 +668,8 @@ class Shell(cmd.Cmd):
         self.session.max_trace_wait = max_trace_wait
         if encoding is None:
             encoding = locale.getpreferredencoding()
+            if encoding is None:
+              encoding = 'utf-8'
         self.encoding = encoding
         self.output_codec = codecs.lookup(encoding)
{noformat}

As apparently {{locale.getpreferredencoding()}} may [not be available|https://docs.python.org/2/library/locale.html#locale.getpreferredencoding] in some platforms.

[~pauloricardomg] Thank you for your great review! (And sorry to be late)
I've updated my patches to 10875-2.1-2.txt and 10875-2.2.txt.
I could merge 10875-2.2 to 2.2,3.0, and trunk.

Thanks! Patch looks good. Submitted dtests to check it didn't break any tests.

||2.1||2.2||3.0||trunk||
|[branch|https://github.com/apache/cassandra/compare/cassandra-2.1...pauloricardomg:2.1-10875]|[branch|https://github.com/apache/cassandra/compare/cassandra-2.2...pauloricardomg:2.2-10875]|[branch|https://github.com/apache/cassandra/compare/cassandra-3.0...pauloricardomg:3.0-10875]|[branch|https://github.com/apache/cassandra/compare/trunk...pauloricardomg:trunk-10875]
|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.1-10875-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-2.2-10875-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-3.0-10875-dtest/lastCompletedBuild/testReport/]|[dtest|http://cassci.datastax.com/view/Dev/view/paulomotta/job/pauloricardomg-trunk-10875-dtest/lastCompletedBuild/testReport/]|

There was a minor pep-8 indentation violation in the 2.1 patch so I fixed and resubmitted dtests.

Attached new 2.1 patch with fix.

Tests look good. {{test_bulk_round_trip_blogposts}} is failing in some branches due to flakiness: CASSANDRA-10938.

Committer: please commit 10875-2.1-3.txt on 2.1 and 10875-2.2.txt on 2.2+.

Thanks!
Committed as f1b9e9a65a77842ee6c651bd9dc1176e2e6d395e to 2.1, af509ec9a16f24dedb09ffc13785ea76fcd7217b to 2.2 and merged to 3.0 & trunk.

Oh, I've overlooked the commit.
Thank you for your review and merge! [~pauloricardomg] [~snazy]

