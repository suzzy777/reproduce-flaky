From Andy on dev@hbase:

{quote}
Could we introduce a junit category for flakey tests such that they don't
run unless we activate them with some flag to maven?
{quote}


I tried to use excludedGroups to exclude the Flaky methods.  However, it excludes the whole test class, not just those flaky methods.

Per https://github.com/junit-team/junit/wiki/Categories, we need to use test suite?

fwiw, I created HBASE-8267 to see if we can link flakyness to some lack of resources.

This patch is a work-in-progress.  I'd like to make sure the approach looks right.

I have tried the hbase-common module, things look good.

However, I have removed the group based testing to make this work.

In the hbase-common module, the following works as expected:

mvn clean test -PrunAllTests
mvn clean test -PrunSmallTests
mvn clean test -PrunMediumTests
mvn clean test -PrunLargeTests
mvn clean test -PrunFlakyTests


Other than the group based testing issue, one more issue is that it can't pick up those old test cases extending TestCase.  We need to convert them.

The patch touches the same code as HBASE-4955. Not a huge deal, I can redo it.
- I fear your may end up with something that will work only with our version of surefire, and we will get into new surefire regressions when we will use the official version.
- The last version of surefire may contains fixes that you could use (I've seen some stuff around categories).

A quick word of what I had in mind myself (that's thtake agese content of the patch v2 in HBASE-4955)
- migrate to surefire 2.14.1 or 2.15 if the regressions we get with these versions are acceptable.
- remove the profiles no one use such as runSmallTests
- for small tests, use the new feature 'reuseFork' of surefire: this is the only way (in the official release) to have separate logs per test without paying the cost of a fork per single test.
- for medium and large, as today: multiple fork in parallel.

If what you do does not break this, I will be happy :-)
The ideal solution would be to migrate to the official version before doing this, but I must agree but it can take longer than expected.







can you create an r?

[~nkeywal], could you please feel free to modify the patch as needed and post a new one?  I tried to monitor the JVM/threads used by surefire, and didn't see the number changes much.  I am sure I have missed some surefire settings.

[~sershe], what's an r?

I've documented the settings in the reference guide. Unfortunately, the surefire settings changed in 2.14, and it's not perfectly documented (see HBASE-4955 for how to use them), hence the risk of doing something that will have to be redone very soon...

I think this is ok because we went the flakey test category to be an empty set ideally. So lets get the builds green by segregating them and then fix them before we have to worry about new versions of surefire. Easy. :-)

r is review board review :) It has /r/ in url

I see. Posted on RB: https://reviews.apache.org/r/10357/.


+1 as long as it works :)

How can you get away w/ this Jimmy? Removing maven-surefire-plugin from hbase-client?  You inherit from parent pom?  Or removing this -- skipClientTests?  It looks useful?  Ditto for hbase-common?

This is a radical patch Jimmy.  What is going on in the top level pom revoving stuff like firstPartForkMode?

Defer to [~liochon] He knows this carry-on best.





I would prefer to keep a real 'small tests' category. Sharing the JVM for small tests saves us from a lot of fork and makes tests faster. As we're supposed to have more and more tests, I would love to have more and more *small* tests. The setting to use with newer surefire version is 'reuseFork'.

last time I checked, test methods and categories were buggy, but may be it has been fixed. 

Would it work to:
 - use an exclusion group fo 'Flaky' Category
 - add a profile to run only the 'Flaky'

You said previously that you need as well to convert the old test cases extending TestCase. May be this could be done in a separate JIRA?




[~nkeywal], Yes, I added a profile to run only flaky tests.  I used categories to exclude flaky category.  It works actually so far.

As to converting old test cases extending TestCase, we can do it in a separate Jira. As Andy said, we can have this patch in, then you fix those surefire setting issue separately.  It is also fine with me that you take this over and fix as you like before let the patch in.

[~saint.ack@gmail.com], Yes, the patch is not as small as I expected. Sub-modules can inherit from parent pom.  As to the pom related changes, I can defer to [~nkeywal] for further fixes/improvements. 

bq. Yes, I added a profile to run only flaky tests. I used categories to exclude flaky category. It works actually so far.
Sorry I wasn't clear: I was thinking: with this category, why do you need to remove the two steps (small / medium & large) build? 

For surefire, I'm currently stuck. I have an issue with the 2.14.1 I tried to workaround it without success. I also failed to reproduce it outside of HBase. I will need to create a JIRA in surefire, but the repro scenario will be with HBase so it will be more difficult to get a fix...

bq. why do you need to remove the two steps (small / medium & large) build?
The group based executions don't work very well with categories.  For categories, I can make it work with includes, not groups.  Could it be an surefire thing?

Likely. And may be fixed in the latest versions (the ones I can't make working).

Posted a new patch which is not as radical.  The issue with this patch is that if any method is marked as flaky, the whole test class is ignored in runAllTests, although runFlakyTests works fine.  This could be related to SUREFIRE-862.  Does our surefire have this fix?

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12578124/trunk-8256_v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 18 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestZooKeeper
                  org.junit.runner.manipulation.Filter

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5255//console

This message is automatically generated.

bq. This could be related to SUREFIRE-862. Does our surefire have this fix?
No, the fix is from august '12, and our fork from january '12.

Ok, so this one depends on HBASE-4955, using a newer surefire?

It appears collectively we have decided not to do this. Reopen if you want to try this again some time in the future.

