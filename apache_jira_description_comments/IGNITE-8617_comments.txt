GitHub user udaykale opened a pull request:

    https://github.com/apache/ignite/pull/4076

    IGNITE-8617 Node Discovery Using AWS Application ELB

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/udaykale/ignite IGNITE-8617

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4076.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4076
    
----
commit 08147dd1eb666b7cd334d327d20795c40f2a3a75
Author: uday <uday.k01@...>
Date:   2018-05-28T05:52:07Z

    IGNITE-8617 Node Discovery Using AWS Application ELB

----


[~dmagda] can you please review this?

[~dpavlov], could you help with the review? I'm pretty busy this week and throughout the beginning of the next one.

Hi [~dmagda], I'll do my absolute best to find free time to review. There is a chance that final review will be required by someone experienced in AWS and IpFinder.

Looks good to me (excepting code style). But I've asked someone else to join review, I have low experience with AWS.

I've linked dev.list topic

[~dpavlov], [~uday] Do we have a chance to resolve this ticket until the code freeze of 2.7?

[~NIzhikov], I need one more reviewer more experienced in AWS to finalize the review

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Java Client{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949371]]

{color:#d04437}PDS (Direct IO) 2{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949405]]

{color:#d04437}Binary Objects (Simple Mapper Basic){color} [[tests 0 JVM CRASH , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949349]]

{color:#d04437}PDS (Indexing){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949410]]

{color:#d04437}Cache (Deadlock Detection){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949439]]

{color:#d04437}Platform C++ (Linux Clang){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949448]]

{color:#d04437}Thin client: Node.js{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949415]]

{color:#d04437}JCache TCK 1.1{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949443]]

{color:#d04437}Platform .NET{color} [[tests 7|https://ci.ignite.apache.org/viewLog.html?buildId=1949398]]
* exe: DataStreamerTest.TestObjectGraphs - 0,0% fails in last 100 master runs.
* exe: DataStreamerTest.TestPropertyPropagation - 0,0% fails in last 100 master runs.
* exe: DataStreamerTest.TestStreamReceiver - 0,0% fails in last 100 master runs.
* exe: DataStreamerTest.TestStreamReceiverKeepBinary - 0,0% fails in last 100 master runs.
* exe: DataStreamerTest.TestStreamTransformer - 0,0% fails in last 100 master runs.
* exe: DataStreamerTest.TestStreamVisitor - 0,0% fails in last 100 master runs.
* exe: DataStreamerTest.TestTryFlush - 0,0% fails in last 100 master runs.

{color:#d04437}SPI{color} [[tests 43|https://ci.ignite.apache.org/viewLog.html?buildId=1949385]]
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCoordinatorNodeFailure - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCoordinatorNodeLeave - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCustomEventAckNotSend - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCustomEventCoordinatorFailure1 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCustomEventCoordinatorFailure2 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCustomEventRace1_1 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCustomEventRace1_2 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testCustomEventRace1_3 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testDiscoveryEventsDiscard - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testDuplicateId - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testDuplicatedDiscoveryDataRemoved - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailBeforeNodeAddedSent - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailBeforeNodeLeftSent - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailedNodeRestoreConnection - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailedNodes1 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailedNodes2 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailedNodes4 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailedNodes5 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailureDetectionOnNodePing1 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailureDetectionOnNodePing2 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testFailureDetectionOnNodePing3 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testGridStartTime - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testMetricsSending - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testMulticastIpFinder - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testNoExtraNodeFailedMessage - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testNoRingMessageWorkerAbnormalFailureOnSegmentation - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testNodeAdded - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testNodeConnectMessageSize - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testNodeShutdownOnRingMessageWorkerFailure - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testNonSharedIpFinder - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testOrdinaryNodeFailure - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testOrdinaryNodeLeave - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testPing - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testPingInterruptedOnNodeFailed - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testPingInterruptedOnNodeLeft - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testSystemMarshallerTypesFilteredOut - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testThreeNodesStartStop - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedUntrustedTest.testBothTrusts - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedUntrustedTest.testDifferentKeys - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: TcpDiscoverySslTrustedUntrustedTest.testSameKey - 0,0% fails in last 100 master runs.

{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1949353]]
* IgniteBinarySimpleNameMapperCacheQueryTestSuite: SchemaExchangeSelfTest.testEmptyDynamic - 0,0% fails in last 100 master runs.

{color:#d04437}ZooKeeper (Discovery) 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1949393]]
* ZookeeperDiscoverySpiTestSuite2: IgniteClientReconnectCacheTest.testReconnectMultinodeLongHistory - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 6{color} [[tests 5|https://ci.ignite.apache.org/viewLog.html?buildId=1949417]]
* IgniteCacheTestSuite6: TxRollbackAsyncNearCacheTest.testMixedAsyncRollbackTypes - 0,0% fails in last 100 master runs.
* IgniteCacheTestSuite6: TxRollbackOnTimeoutNoDeadlockDetectionTest.testRandomMixedTxConfigurations - 0,0% fails in last 100 master runs.
* IgniteCacheTestSuite6: TxRollbackOnTimeoutTest.testRandomMixedTxConfigurations - 0,0% fails in last 100 master runs.

{color:#d04437}PDS 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1949408]]
* IgnitePdsTestSuite: IgnitePdsDynamicCacheTest.testRestartAndCreate - 0,0% fails in last 100 master runs.

{color:#d04437}ZooKeeper (Discovery) 1{color} [[tests 8|https://ci.ignite.apache.org/viewLog.html?buildId=1949392]]
* ZookeeperDiscoverySpiTestSuite1: ZookeeperDiscoverySpiTest.testCommunicationFailureResolve_ConcurrentMultinode - 0,0% fails in last 100 master runs.
* ZookeeperDiscoverySpiTestSuite1: ZookeeperDiscoverySpiTest.testRandomTopologyChanges_CloseClients - 0,0% fails in last 100 master runs.
* ZookeeperDiscoverySpiTestSuite1: ZookeeperDiscoverySpiTest.testStartStop_2_Nodes_WithCache - 0,0% fails in last 100 master runs.

{color:#d04437}PDS 2{color} [[tests 5|https://ci.ignite.apache.org/viewLog.html?buildId=1949409]]
* IgnitePdsTestSuite2: IgnitePersistentStoreDataStructuresTest.testSet - 0,0% fails in last 100 master runs.
* IgnitePdsTestSuite2: IgniteWalFlushBackgroundWithMmapBufferSelfTest.testFailAfterStart - 0,0% fails in last 100 master runs.
* IgnitePdsTestSuite2: IgniteWalFlushLogOnlyWithMmapBufferSelfTest.testFailAfterStart - 0,0% fails in last 100 master runs.
* IgnitePdsTestSuite2: IgniteWalFlushLogOnlyWithMmapBufferSelfTest.testFailWhileStart - 0,0% fails in last 100 master runs.

{color:#d04437}Data Structures{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1949434]]
* IgniteCacheDataStructuresSelfTestSuite: GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreMultipleTopologyChangeNonFailoverSafe - 0,0% fails in last 100 master runs.

{color:#d04437}Java Thin Client{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1949376]]
* ClientTestSuite: ReliabilityTest.testFailover - 0,0% fails in last 100 master runs.

{color:#d04437}IGFS{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1949367]]
* IgniteIgfsTestSuite: IgfsMetaManagerSelfTest.testUpdateProperties - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1949452&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~uday], it seems a lot of failed tests were already fixed. Could you please merge current master into your branch?

[~dpavlov],

Merged the master to the branch.

[~uday], thanks, I retriggered failed suites for PR.

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}JCache TCK 1.1{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1949443]]

{color:#d04437}ZooKeeper (Discovery) 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1955459]]
* ZookeeperDiscoverySpiTestSuite1: ZookeeperDiscoverySpiTest.testRandomTopologyChanges_RestartZk - 0,0% fails in last 100 master runs.

{color:#d04437}PDS 2{color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=1955469]]
* IgnitePdsTestSuite2: IgnitePdsPartitionFilesDestroyTest.testPartitionFileDestroyAfterCheckpoint - 0,0% fails in last 100 master runs.

{color:#d04437}Data Structures{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1955467]]
* IgniteCacheDataStructuresSelfTestSuite: IgnitePartitionedQueueNoBackupsTest.testMultipleStructuresInDifferentGroups - 0,0% fails in last 100 master runs.

{color:#d04437}Basic 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1955457]]
* IgniteBasicTestSuite: GridAffinityProcessorRendezvousSelfTest.testAffinityProcessor - 0,0% fails in last 100 master runs.

{color:#d04437}PDS (Indexing){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1955463]]
* IgnitePdsWithIndexingCoreTestSuite: IgniteWalRecoveryWithCompactionTest.testHugeCheckpointRecord - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1949452&amp;buildTypeId=IgniteTests24Java8_RunAll]

I've checked all these tests history manually and it still seems to be flaky ^, so I can consider this bot result as ok.

I've retriggered JCache TCK1.1. https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_JCacheTck11&branch_IgniteTests24Java8=pull%2F4076%2Fhead&tab=buildTypeStatusDiv - we have only 1 failure and a number of canceled builds.

JCache TCK1.1 passed, so tests are completely OK.

[~dpavlov], [~uday], Igniters, we need to decide on what to do with a ticket. I think it should be moved to AI 2.8. Justification:
1) This is a feature which already missed the deadline (30 Sept) significantly.
2) No activity in the ticket for almost a week. 

Please feel free to re-include it into AI 2.7 if it will be ready to merge by 10 Oct, as per our recent release plan agreements.

[~dpavlov], [~slukyanov]

Any actions pending from my side? 

[~slukyanov] could you please take a look?

Answered on the dev-list.

[~uday] In short, I think we need to just add a new class named `TcpDiscoverAlbIpFinder` + a test. No `extends`, no code sharing, no renaming, no deprecation. This way we'll get the feature and will not mess with the existing code.

[~slukyanov], I have made the necessary changes. Please have a look.

[~uday] [~slukyanov]

Folks, any updates on this issue?

[~slukyanov], could you please finish a final review round?

[~dmagda] [~uday] [~mmuzaf] LGTM.
Maxim, could you please help to merge this?

[~slukyanov] [~dmagda]

Folks, I'm not familiar with AWS and do not support a blindly merge. Can we continue the discussion on dev-list and find the right person?


PR has conflicts, I can't merge it from GitHub interface

Let's try to find someone who can resolve the conflicts and merge PR. I'll send a message to the dev list.

Fixed conflicts and Tested on an AWS environment with an Application Load Balancer and an autoscaling group.

TcpDiscoveryAlbIpFinder works as expected.
 * On startup nodes discover each other.
 * On ec2 node down connection is lost and the cluster decreases.
 * On an extra node added the cluster size increases

[~gkatzioura],

I reviewed your PR, it looks good to me.

As far as I understand we can use this new IpFinder only on nodes deployed in AWS. For instance we cannot use it on a remote client outside of AWS cloud, can we? If it is so do you think it make sense to mention this in javadoc?

Agree on the javadoc part comment. Otherwise looks good to me (though, I'm not an expert in Amazon services).

Hi all!

Added the commend
{code:java}
Note that this finder can only be used on AWS EC2 instances that belong on a Load Balancer based auto scaling group.
{code}

All cloud-specific IP finders work within the environment only. So, I think the javadoc change was redundant but let us leave things as is as long as the note has already been added - it's not harmful anyway.

[~sergey-chugunov], as the main reviewer, would you merge the PR?

Thanks, merged to master.

[~gkatzioura],

Congratulations with this contribution merged to master! 

To finalize the work we need to add release notes and short documentation (maybe with references to javadoc) to the ticket - could you please take a look at this?

[~gkatzioura], glad to see the improvement has been merged! Thanks for your contribution! You can always reach [~Artem Budnikov] out for the questions or advice related to the documentation. Artem is our primary maintainer of the documentation.

[~sergey-chugunov], thank's for spending the time and helping with the review.





Hi all! will proceed as requested!

Hi all!
 
I submitted the changes on the Ignite documentation (readme.io) which got accepted.
Apart from that I see that the release notes for 2.8 mention
 
{code:java}
Ignite Core:
....
* Added support node discovery through AWS ELB
...
 
{code}
[line 78|https://github.com/apache/ignite/blob/eef1bd5bbd462e5941739d3722959e690ce01847/RELEASE_NOTES.txt#L78]
 
 
If this line has to do with my changes then it should be
{code:java}
* Added support node discovery through AWS ALB
{code}
 
I have a [branch|https://github.com/gkatzioura/ignite/blob/b3543e19ea5ee17e03ac2ccececc12e82c4969b8/RELEASE_NOTES.txt#L78] on that which can become a pull request . 
Please let me know
 
  
 
 

That's another IP finder that was contributed earlier:
https://github.com/apache/ignite/blob/master/modules/aws/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/elb/TcpDiscoveryElbIpFinder.java

The ALB IP finder will be released in the next version, that's why this ticket's "fix version" is set to 2.9 (even though it will be 2.8.1)

