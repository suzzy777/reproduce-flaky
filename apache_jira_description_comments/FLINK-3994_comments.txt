Thanks for looking into this. Are you working on this [~chiwanpark] or [~mxm]? Both of commented on the mailing list. Would be great if one of you assigns himself so we can fix this soon. If you don't have time, I can also look into it.

I'm looking into this issue. I've assigned myself.

Thanks [~chiwanpark]!

GitHub user chiwanpark opened a pull request:

    https://github.com/apache/flink/pull/2056

    [FLINK-3994] [ml, tests] Fix flaky KNN integration tests

    This PR is related to flaky KNN integration tests. The problem is caused by sharing `ExecutionEnvironment` between test cases. I'm not sure about exact reason. This PR makes each test case have own `ExecutionEnvironment`. Tests on my local machine and my Travis-CI [1] is passed with this PR.
    
    I have some doubt because this is not essential fix for the problem. AFAIK and @StephanEwen said, sharing `ExecutionEnvironment` should be supported. Addtionally, `mvn clean verify` has passed without this PR on my local machine.
    
    If there are any other opinions, please leave comment.
    
    [1]: https://travis-ci.org/chiwanpark/flink/builds/134104491
    
    p.s. we need to re-write commit message.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/chiwanpark/flink hotfix-ml-test

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/flink/pull/2056.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2056
    
----
commit a47ae8481bcbac2c490386089ee6b1e740f3a1f4
Author: Chiwan Park <chiwanpark@apache.org>
Date:   2016-05-31T08:50:05Z

    [hotfix] [ml] Fix flaky KNN integration tests

----


Github user mxm commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    I'm not sure whether the changes fix the problem. I think you were lucky with the build machine on Travis :) The issue on Travis is that the `ExecutionEnvironment` defaults to using the number of cores reported by `Runtime.getRuntime().availableProcessors()` as task slots. On Travis this can be `32`. We need to adjust the number of network buffers correctly. In addition, setting an upper limit for the parallelism for tests would also make sense.


Github user chiwanpark commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    Thanks for guide @mxm. I'll set upper limit for the parallelism to 4.


Github user StephanEwen commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    The limit should be set to 4 by the test tools already. I think the issue may be that the Execution Environment was prior to Chiwan's change acquired before the context was properly set by the test tool superclass.


Github user StephanEwen commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    It is a bit tricky to understand what happens when with these tests using stacked traits...


Github user StephanEwen commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    There is actually a problem with the way the Scala Tests are written:
    
    The code in the class that is outside the "it should" clauses is executed before the "before" function. That is why the tests go against a LocalEnvironment, rather than the test context environment.
    
    So Chiwan's patch will actually fix it, only for different reasons than initially expected.


Github user chiwanpark commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    Thanks for clarifying @StephanEwen! I'll merge this after Travis succeed.


Github user chiwanpark commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    Merging...


Github user asfgit closed the pull request at:

    https://github.com/apache/flink/pull/2056


Fixed via aedc0fd481a756ef2b1708f896d5500475715232.

Thanks for guidance [~sewen] and [~mxm]! :-)

Github user mxm commented on the pull request:

    https://github.com/apache/flink/pull/2056
  
    Thanks for fixing!


