There was code snippet posted previously but it is incorrect.

The main issue is that sychrnozation in the NaiveFileWALManager isn't handled properly with the normal statemachine and when another thread triggers a retransmit due to a retry timeout.  

review here: https://reviews.apache.org/r/1599/


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1599/
-----------------------------------------------------------

Review request for Flume, Arvind Prabhakar and Eric Sammer.


Summary
-------

commit 80ffaeebead83de9d7b0af55f38bd2dfe62ad931
Author: Jonathan Hsieh <jmhsieh@apache.org>
Date:   Thu Aug 18 14:05:41 2011 -0700

    FLUME-745: Race condition in NaiveFileWALDeco and retransmit logic
    
    - Setup test to run for a long time exacerbating potential race every 10ms.
    - Made test runnable from command line for arbitrary iterations
    - Eliminated possible memory leak by remove WALdata entry after completing e2eacked
    - NaiveFileWALDeco to use object lock


This addresses bug flume-745.
    https://issues.apache.org/jira/browse/flume-745


Diffs
-----

  flume-core/src/main/java/com/cloudera/flume/agent/durability/NaiveFileWALManager.java e7d5c8b 
  flume-core/src/test/java/com/cloudera/flume/agent/durability/TestFlumeNodeWALNotifierRacy.java PRE-CREATION 

Diff: https://reviews.apache.org/r/1599/diff


Testing
-------

All tests pass except for known flakies.  Ran to 500000 iterations (over 30 minutes of retry attempts every 10ms) and passed.


Thanks,

jmhsieh




-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1599/#review1576
-----------------------------------------------------------

Ship it!


This *looks* right to me, but I can't be really sure. There are some blocks that are unprotected by the lock and I'm not sure why. In some cases, inner classes are static and sometimes not and both share the lock; complicated.

- Eric


On 2011-08-19 21:57:07, jmhsieh wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1599/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-08-19 21:57:07)
bq.  
bq.  
bq.  Review request for Flume, Arvind Prabhakar and Eric Sammer.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  commit 80ffaeebead83de9d7b0af55f38bd2dfe62ad931
bq.  Author: Jonathan Hsieh <jmhsieh@apache.org>
bq.  Date:   Thu Aug 18 14:05:41 2011 -0700
bq.  
bq.      FLUME-745: Race condition in NaiveFileWALDeco and retransmit logic
bq.      
bq.      - Setup test to run for a long time exacerbating potential race every 10ms.
bq.      - Made test runnable from command line for arbitrary iterations
bq.      - Eliminated possible memory leak by remove WALdata entry after completing e2eacked
bq.      - NaiveFileWALDeco to use object lock
bq.  
bq.  
bq.  This addresses bug flume-745.
bq.      https://issues.apache.org/jira/browse/flume-745
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    flume-core/src/main/java/com/cloudera/flume/agent/durability/NaiveFileWALManager.java e7d5c8b 
bq.    flume-core/src/test/java/com/cloudera/flume/agent/durability/TestFlumeNodeWALNotifierRacy.java PRE-CREATION 
bq.  
bq.  Diff: https://reviews.apache.org/r/1599/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  All tests pass except for known flakies.  Ran to 500000 iterations (over 30 minutes of retry attempts every 10ms) and passed.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  jmhsieh
bq.  
bq.





bq.  On 2011-08-19 23:07:35, Eric Sammer wrote:
bq.  > This *looks* right to me, but I can't be really sure. There are some blocks that are unprotected by the lock and I'm not sure why. In some cases, inner classes are static and sometimes not and both share the lock; complicated.

I promise to do a refactor.  I think structurally this started one way (a single wal manager would serve multiple flows) but eventually became one wal manager per flow. Because of that some of the logic and pieces are inverted.  


- jmhsieh


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1599/#review1576
-----------------------------------------------------------


On 2011-08-19 21:57:07, jmhsieh wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1599/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-08-19 21:57:07)
bq.  
bq.  
bq.  Review request for Flume, Arvind Prabhakar and Eric Sammer.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  commit 80ffaeebead83de9d7b0af55f38bd2dfe62ad931
bq.  Author: Jonathan Hsieh <jmhsieh@apache.org>
bq.  Date:   Thu Aug 18 14:05:41 2011 -0700
bq.  
bq.      FLUME-745: Race condition in NaiveFileWALDeco and retransmit logic
bq.      
bq.      - Setup test to run for a long time exacerbating potential race every 10ms.
bq.      - Made test runnable from command line for arbitrary iterations
bq.      - Eliminated possible memory leak by remove WALdata entry after completing e2eacked
bq.      - NaiveFileWALDeco to use object lock
bq.  
bq.  
bq.  This addresses bug flume-745.
bq.      https://issues.apache.org/jira/browse/flume-745
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    flume-core/src/main/java/com/cloudera/flume/agent/durability/NaiveFileWALManager.java e7d5c8b 
bq.    flume-core/src/test/java/com/cloudera/flume/agent/durability/TestFlumeNodeWALNotifierRacy.java PRE-CREATION 
bq.  
bq.  Diff: https://reviews.apache.org/r/1599/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  All tests pass except for known flakies.  Ran to 500000 iterations (over 30 minutes of retry attempts every 10ms) and passed.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  jmhsieh
bq.  
bq.



I think this patch fixed one of the major sources of duplicate data when using E2E mode.


The unit test that beats up on the synchronization and potential race can be run manually for by running the test using 

(execute until 10000k messages and rotations handled).
'flume class com.cloudera.flume.agent.durability.TestFlumeNodeWALNotifierRacy 100000'

The test will attempt to inject retry attempts every 10ms.  

This patch fixes a particular problem, but FLUME-762 should allow flume to survive the entire class.

