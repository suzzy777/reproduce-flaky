PR for 3.11 [https://github.com/apache/cassandra/pull/681]

Hi [~jeromatron] and [~Bereng], could you review this, please? I ll create patch for trunk if proposed solution is fine here.

PR for trunk aka 4.0 [https://github.com/apache/cassandra/pull/684]

Took a stab at review and left a few comments in the PR.

[~dcapwell] please review again, I have added a test (hopefully that is something you expect otherwise I am out of ideas here) + I have moved the logging from ALAES to inspector.

Thanks for the changes.  To help show what I was trying (and failing) to say in the PR, I posted different tests that hit the read stage and show this is a problem.  

Overall the patch LGTM (only reviewed trunk so far), my main comments were in the tests; hope the example given helps.

[~stefan.miklosovic] do you have any CI runs for this patch?

python dtests failed; it looks like exceptions were not logged before and all are logged now.  Simple example is with the auth tests found in https://app.circleci.com/pipelines/github/dcapwell/cassandra/297/workflows/aefdb912-4395-498a-a1b6-b16770d46a45/jobs/1438 

test_udf_permissions_validation - auth_test.TestAuthRoles

{code}
Unexpected error found in node logs (see stdout for full details). Errors: [ERROR [Native-Transport-Requests-11] 2020-07-20 21:51:31,717 JVMStabilityInspector.java:81 - Uncaught exception in thread Thread[Native-Transport-Requests-11,10,main]
org.apache.cassandra.exceptions.UnauthorizedException: User mike has no ALTER permission on <function ks.plus_one(int)> or any of its parents
	at org.apache.cassandra.service.ClientState.ensurePermissionOnResourceChain(ClientState.java:430)
	at org.apache.cassandra.service.ClientState.ensurePermission(ClientState.java:404)
	at org.apache.cassandra.cql3.statements.schema.CreateFunctionStatement.authorize(CreateFunctionStatement.java:177)
	at org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:203)
	at org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:253)
	at org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:240)
	at org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:108)
	at org.apache.cassandra.transport.Message$Request.execute(Message.java:253)
	at org.apache.cassandra.transport.Message$Dispatcher.processRequest(Message.java:725)
	at org.apache.cassandra.transport.Message$Dispatcher.lambda$channelRead0$0(Message.java:630)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at org.apache.cassandra.concurrent.AbstractLocalAwareExecutorService$FutureTask.run(AbstractLocalAwareExecutorService.java:162)
	at org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:119)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
{code}

This exception wasn't logged before and was sent back to the user, with this patch we now log all these hidden exceptions.

FYI conversation has been happening in slack: https://the-asf.slack.com/archives/CK23JSY2K/p1595280621333400

Updates:

* the tests are flaky, looks like there is a race condition in the test where the flag isn't updated yet.  A workaround was added to query multiple times with a 5 second sleep in hopes to make the tests stable

CI 3.11 - https://app.circleci.com/pipelines/github/dcapwell/cassandra/309/workflows/b4cbed8d-868f-4640-a697-471fa03fd4bf
CI trunk - https://app.circleci.com/pipelines/github/dcapwell/cassandra/310/workflows/62969c9b-9c65-4558-9ec0-3fcc3f17d79e

Looks like this patch doesn't play nicely with commit log, this breaks the following tests

commitlog_test.py
 - test_ignore_failure_policy
 - test_stop_commit_failure_policy

Here is the log from the ignore policy test https://1573-209217594-gh.circle-artifacts.com/62/dtest_j8_without_vnodes_logs/1595547611103_test_ignore_failure_policy/node1.log

sample that stands out

{code}
ERROR [COMMIT-LOG-ALLOCATOR] 2020-07-23 23:40:08,735 CommitLog.java:499 - Failed managing commit log segments
org.apache.cassandra.io.FSWriteError: java.nio.file.AccessDeniedException: /tmp/dtest-zt17lw0m/test/node1/commitlogs/CommitLog-7-1595547598804.log
	at org.apache.cassandra.db.commitlog.CommitLogSegment.<init>(CommitLogSegment.java:180)
	at org.apache.cassandra.db.commitlog.MemoryMappedSegment.<init>(MemoryMappedSegment.java:45)
	at org.apache.cassandra.db.commitlog.CommitLogSegment.createSegment(CommitLogSegment.java:137)
	at org.apache.cassandra.db.commitlog.CommitLogSegmentManagerStandard.createSegment(CommitLogSegmentManagerStandard.java:66)
	at org.apache.cassandra.db.commitlog.AbstractCommitLogSegmentManager$1.runMayThrow(AbstractCommitLogSegmentManager.java:114)
	at org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:28)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.file.AccessDeniedException: /tmp/dtest-zt17lw0m/test/node1/commitlogs/CommitLog-7-1595547598804.log
	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:84)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	at sun.nio.fs.UnixFileSystemProvider.newFileChannel(UnixFileSystemProvider.java:177)
	at java.nio.channels.FileChannel.open(FileChannel.java:287)
	at java.nio.channels.FileChannel.open(FileChannel.java:335)
	at org.apache.cassandra.db.commitlog.CommitLogSegment.<init>(CommitLogSegment.java:175)
	... 7 common frames omitted
ERROR [COMMIT-LOG-ALLOCATOR] 2020-07-23 23:40:09,736 DefaultFSErrorHandler.java:66 - Stopping transports as disk_failure_policy is stop
{code}

Looks like the commit policy isn't respected and instead we fall back to the normal disk policy.

[~stefan.miklosovic] can you look into this?

I took a stab at back porting to 3.0: https://github.com/dcapwell/cassandra/tree/CASSANDRA-15191-3.0

I also made a few small changes from your original patch

1) calls to FSError handler now go through jvm stability
2) Instance adds default fs handler.  this was working on trunk since we fixed it there, but didn't backport; so adding it so we don't need in the test

3.0 looks good, +1.

+1 from me, getting the commit ready

Thanks [~stefan.miklosovic] for all the hard work!

CI results:

3.0: https://app.circleci.com/pipelines/github/dcapwell/cassandra/373/workflows/359198de-fb02-4a15-95c3-6341492d1f4e
3.11: https://app.circleci.com/pipelines/github/dcapwell/cassandra/374/workflows/a31e1d8a-3fd0-4665-b00e-c62919b816cb
trunk: https://app.circleci.com/pipelines/github/dcapwell/cassandra/377/workflows/dc48ffe6-d168-4cd4-a858-0f6b5e2bc730

3.0 and 3.11 failed with known broken tests or known flaky tests; trunk was green.

