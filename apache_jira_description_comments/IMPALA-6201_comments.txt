I think you've investigated similar issues, so assigning to you, Thomas.

commit 7dd28ff4316dd3191c955ef48dfc53493ff5c0af
Author: Thomas Tauber-Marshall <tmarshall@cloudera.com>
Date:   Mon Nov 27 10:22:16 2017 -0800

    IMPALA-6201: Fix test_basic_filters on ASAN
    
    TestRuntimeFilters.test_basic_filters is flaky on ASAN as sometimes
    the runtime filters aren't recieved within the specified
    RUNTIME_FILTER_WAIT_TIME_MS.
    
    This patch increases the timeout for ASAN builds.
    
    Change-Id: I8c20cbb75a9b6da73137f220657aa75dea9dfdce
    Reviewed-on: http://gerrit.cloudera.org:8080/8646
    Reviewed-by: Sailesh Mukil <sailesh@cloudera.com>
    Reviewed-by: Alex Behm <alex.behm@cloudera.com>
    Tested-by: Impala Public Jenkins

Commit f8c3e4c0a44dbfa389c195c399e17a64d38a0824 in impala's branch refs/heads/master from Janaki Lahorani
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=f8c3e4c ]

IMPALA-8064: Fix intermittent test failures from test_min_max_filters

test_min_max_filters and test_decimal_min_max_filters records the aggregated probe rows to
check whether min-max filter was exercised.  In the case of ASAN builds, the probe side
started processing before the filters reached the probe side, because ASAN builds are a
little slower.  The resolution is to increase RUNTIME_FILTER_WAIT_TIME_MS to accommodate ASAN.

This issue was also seen earlier on a runtime filter tests and fixed through IMPALA-6201.  This
fix mimics the same, by setting RUNTIME_FILTER_WAIT_TIME_MS to $RUNTIME_FILTER_WAIT_TIME_MS.

Change-Id: I111ed15947bd2812753ae68d3bbb8a9871e25b08
Reviewed-on: http://gerrit.cloudera.org:8080/12224
Reviewed-by: Tim Armstrong <tarmstrong@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


