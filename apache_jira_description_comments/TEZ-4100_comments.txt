| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 37s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 13s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 28s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 26s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  2m 23s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 15m 51s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | tez.dag.api.client.rpc.TestDAGClient |
|   | tez.dag.api.TestDagTypeConverters |
|   | tez.client.TestTezClientUtils |
|   | tez.common.security.TestACLConfigurationParser |
|   | tez.common.security.TestDAGAccessControls |
|   | tez.common.TestReflectionUtils |
|   | tez.common.TestTezCommonUtils |
|   | tez.common.security.TestTokenCache |
|   | tez.client.TestTezClient |
|   | tez.common.TestTezYARNUtils |
|   | tez.dag.api.TestHistoryLogLevel |
|   | tez.common.security.TestACLManager |
|   | tez.dag.api.TestDAGPlan |
|   | tez.dag.api.TestDAG |
|   | tez.dag.api.TestEntityDescriptor |
|   | tez.hadoop.shim.TestHadoopShimsLoader |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.5 Server=19.03.5 Image:yetus/tez:d4a62deee |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12986163/TEZ-4100.01.patch |
| Optional Tests |  dupname  asflicense  javac  javadoc  unit  xml  compile  |
| uname | Linux 9b6898a89555 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | master / 47f0f35 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_222 |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/199/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/199/testReport/ |
| Max. process+thread count | 103 (vs. ulimit of 5500) |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/199/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.



[~abstractdog], if I recall [~ahussein]'s analysis correctly, guava added single argument optimization in later versions to avoid the variable arguments function call overhead. Unfortunately, this causes binary incompatibility (though source is compatible). TEZ-4074 is the jira Reference.

[~jeagles]:  as far as I can understand, a guava upgrade bump could solve this issue, if so, shall I take care of it in the scope of hadoop 3.1.3 upgrade? (it has been already done on downstream branches)
once everything is green here, somebody can take care of the new failures coming from hadoop-3.3.0-SNAPSHOT

It's a little more complicated the way I see this. To increase compatibility, can neither upgrade nor stay the same. If Tez upgrades, then users using older versions of guava will no longer work. If Tez stays the same, hadoop 3+ continues to break. If we upgrade with need a second step to help compatibility, we can either remove the Precondition.check apis with some equivalent or we can shade guava to ensure separation between what Tez depends and what Tez users depend.

[~jeagles]
i think OOZIE-3488 could be a good example for getting rid of some guava dependencies (doing TEZ-4101 about that)

"If Tez upgrades, then users using older versions of guava will no longer work"
I understand this scenario, however IMO there should be a point where tez will follow hadoop even if it breaks users using older guava, does it make sense? I mean, let's say some next tez upstream release, which officially supports hadoop 3.3.x (as Hadoop community already upgraded guava in the scope of HADOOP-16210)

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 31s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 47s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 15s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  2m 49s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m  5s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} spotbugs {color} | {color:blue}  5m 15s{color} | {color:blue} Used deprecated FindBugs config; considering switching to SpotBugs. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  8m 16s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 42s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 46s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  2m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  2m 50s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 22s{color} | {color:orange} tez-runtime-library: The patch generated 1 new + 86 unchanged - 0 fixed = 87 total (was 86) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 33s{color} | {color:orange} tez-dag: The patch generated 1 new + 477 unchanged - 0 fixed = 478 total (was 477) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 52s{color} | {color:orange} root: The patch generated 2 new + 609 unchanged - 0 fixed = 611 total (was 609) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m  5s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  5m 20s{color} | {color:red} root generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 46s{color} | {color:green} tez-runtime-internals in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 28s{color} | {color:green} tez-runtime-library in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  5m 27s{color} | {color:red} tez-dag in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 44s{color} | {color:green} tez-ext-service-tests in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 12m 31s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  1m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 75m 42s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:root |
|  |  Null passed for non-null parameter of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:[line 588] |
|  |  Null passed for non-null parameter of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:[line 116] |
| Failed junit tests | tez.dag.app.rm.TestDagAwareYarnTaskScheduler |
|   | tez.dag.app.rm.TestDagAwareYarnTaskScheduler |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.4 Server=19.03.4 base: https://builds.apache.org/job/PreCommit-TEZ-Build/263/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12992006/TEZ-4100.02.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile spotbugs findbugs checkstyle |
| uname | Linux 9e5f27015844 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / cf111b1 |
| Default Java | 1.8.0_232 |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/263/artifact/out/diff-checkstyle-tez-runtime-library.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/263/artifact/out/diff-checkstyle-tez-dag.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/263/artifact/out/diff-checkstyle-root.txt |
| findbugs | https://builds.apache.org/job/PreCommit-TEZ-Build/263/artifact/out/new-findbugs-root.html |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/263/artifact/out/patch-unit-tez-dag.txt |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/263/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/263/testReport/ |
| Max. process+thread count | 866 (vs. ulimit of 5500) |
| modules | C: tez-runtime-internals tez-runtime-library tez-dag tez-ext-service-tests . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/263/console |
| versions | git=2.7.4 maven=3.3.9 findbugs=3.0.1 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 33s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 34s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 47s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m  4s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 47s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 23s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} spotbugs {color} | {color:blue}  4m 43s{color} | {color:blue} Used deprecated FindBugs config; considering switching to SpotBugs. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  7m 45s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 44s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m  5s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 26s{color} | {color:orange} tez-runtime-library: The patch generated 1 new + 86 unchanged - 0 fixed = 87 total (was 86) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 41s{color} | {color:orange} tez-dag: The patch generated 1 new + 509 unchanged - 0 fixed = 510 total (was 509) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 57s{color} | {color:orange} root: The patch generated 2 new + 641 unchanged - 0 fixed = 643 total (was 641) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 24s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  4m 53s{color} | {color:red} root generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 52s{color} | {color:green} tez-runtime-internals in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 48s{color} | {color:green} tez-runtime-library in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  4m  2s{color} | {color:red} tez-dag in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 56s{color} | {color:green} tez-ext-service-tests in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 60m 54s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  1m 53s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}124m 16s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:root |
|  |  Null passed for non-null parameter of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:[line 588] |
|  |  Null passed for non-null parameter of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:[line 116] |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.5 Server=19.03.5 base: https://builds.apache.org/job/PreCommit-TEZ-Build/268/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12992403/TEZ-4100.03.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile spotbugs findbugs checkstyle |
| uname | Linux b464450834a7 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / cf111b1 |
| Default Java | 1.8.0_242 |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/268/artifact/out/diff-checkstyle-tez-runtime-library.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/268/artifact/out/diff-checkstyle-tez-dag.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/268/artifact/out/diff-checkstyle-root.txt |
| findbugs | https://builds.apache.org/job/PreCommit-TEZ-Build/268/artifact/out/new-findbugs-root.html |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/268/artifact/out/patch-unit-tez-dag.txt |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/268/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/268/testReport/ |
| Max. process+thread count | 1224 (vs. ulimit of 5500) |
| modules | C: tez-runtime-internals tez-runtime-library tez-dag tez-ext-service-tests . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/268/console |
| versions | git=2.7.4 maven=3.3.9 findbugs=3.0.1 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



only TestSpeculation has failed, it seems ok locally, known flaky test
[~jeagles]: what do you think about  [^TEZ-4100.03.patch] ?
I realized that this patch doesn't comply fully with your latest comment: "If Tez upgrades, then users using older versions of guava will no longer work."
so 2 possible ways:
1. accept [^TEZ-4100.03.patch] , and accept that hadoop upgrade should involve guava upgrade
2. create a tez common Futures class (similarly to Preconditions in TEZ-4101) and move only hadoop version (I believe that's the ideal way)

I'm still looking to find the best approach for this to work. Hopefully, today I'll have something to report.

thanks for taking a look [~jeagles], regarding our CLDR downstream branch we just agreed about trying to eliminate this kind of issues by shading and relocating guava in tez and hive as well, so, at the moment, I think I will give it try, cc: [~hashutosh]
regarding upstream, I was looking at TEZ-2164 a few weeks/months ago, and I was afraid it's not that easy (considering the long comment stream, but yet not resolved), what if I would take it over, and finish that work?

[~abstractdog], it's possible some guava dependencies probably leak into public tez APIs which may cause problems. As another option, we could add a compatibility layer that makes the correct calls at runtime. For example a sample reflection based method below. (Probably needs to calculate the decision once and cache the result and handle errors correctly)

The most concerning change is the need to call a different registerApplicationMaster API to avoid NullPointerExceptions.

I imagine a solution where the two following build commands work correctly.

{code}
// Guava 27 and hadoop 3.1.3
mvn clean test -pl ./tez-dag -am

// Guava 11.0.2 and hadoop 3.0.3
mvn clean test -pl ./tez-dag -am -Dguava.version=11.0.2 -Dhadoop.version=3.0.3
{code}

{code}
package org.apache.tez.common;

import com.google.common.util.concurrent.MoreExecutors;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.concurrent.Executor;

/**
 * A interoperability layer to work with multiple versions of guava.
 */
public class GuavaShim {

  private GuavaShim() {
  }

  public static Executor directExecutor() {
    Class klass = MoreExecutors.class;
    Executor executor = null;
    try {
      Method m = klass.getDeclaredMethod("directExecutor");
      executor = (Executor)m.invoke(null);
    } catch (NoSuchMethodException nsme) {
      try {
        Method m = klass.getDeclaredMethod("sameThreadExecutor");
        executor = (Executor)m.invoke(null);
      } catch (NoSuchMethodException nsmeSame) {
      } catch (IllegalAccessException iae) {
      } catch (InvocationTargetException ite) {
      }
    } catch (IllegalAccessException iae) {
    } catch (InvocationTargetException ite) {
    }
    return executor;
  }
}
{code}

Linking the jira to shade TEZ as that is somewhat relevant here. TEZ-2164

"it's possible some guava dependencies probably leak into public tez APIs which may cause problem" <- if we can check if no public API method contains guava classes, is it ok?

"The most concerning change is the need to call a different registerApplicationMaster API to avoid NullPointerExceptions."
I'll take a further look at this one later

checked comments on TEZ-2164 again, according to that, yes, tez-api may leak guava classes...I'm proceeding with the GuavaShim you proposed above, as this solution doesn't limit the chance of shading guava in another patch if we really need that

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 32s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 48s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 13s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 42s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 37s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} spotbugs {color} | {color:blue}  5m  2s{color} | {color:blue} Used deprecated FindBugs config; considering switching to SpotBugs. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  9m  0s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 51s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 15s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  0m 25s{color} | {color:red} tez-api generated 2 new + 4 unchanged - 0 fixed = 6 total (was 4) {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  1m 20s{color} | {color:red} root generated 2 new + 40 unchanged - 0 fixed = 42 total (was 40) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 20s{color} | {color:orange} tez-api: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 33s{color} | {color:orange} tez-dag: The patch generated 1 new + 509 unchanged - 0 fixed = 510 total (was 509) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 52s{color} | {color:orange} root: The patch generated 2 new + 641 unchanged - 0 fixed = 643 total (was 641) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 35s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m  6s{color} | {color:red} tez-api generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  5m 10s{color} | {color:red} root generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0) {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 49s{color} | {color:green} tez-api in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 45s{color} | {color:green} tez-runtime-internals in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 19s{color} | {color:green} tez-runtime-library in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  3s{color} | {color:green} tez-dag in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 46s{color} | {color:green} tez-ext-service-tests in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 56m 57s{color} | {color:red} root in the patch failed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  1m 44s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}125m 47s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:tez-api |
|  |  Incorrect lazy initialization and update of static field org.apache.tez.common.GuavaShim.executorMethod in org.apache.tez.common.GuavaShim.directExecutor()  At GuavaShim.java:of static field org.apache.tez.common.GuavaShim.executorMethod in org.apache.tez.common.GuavaShim.directExecutor()  At GuavaShim.java:[lines 23-26] |
| FindBugs | module:root |
|  |  Null passed for non-null parameter of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:[line 588] |
|  |  Null passed for non-null parameter of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:[line 116] |
|  |  Incorrect lazy initialization and update of static field org.apache.tez.common.GuavaShim.executorMethod in org.apache.tez.common.GuavaShim.directExecutor()  At GuavaShim.java:of static field org.apache.tez.common.GuavaShim.executorMethod in org.apache.tez.common.GuavaShim.directExecutor()  At GuavaShim.java:[lines 23-26] |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.4 Server=19.03.4 base: https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12992953/TEZ-4100.04.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile spotbugs findbugs checkstyle |
| uname | Linux 9a93f0199480 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / b078e3a |
| Default Java | 1.8.0_242 |
| javac | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/diff-compile-javac-tez-api.txt |
| javac | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/diff-compile-javac-root.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/diff-checkstyle-tez-api.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/diff-checkstyle-tez-dag.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/diff-checkstyle-root.txt |
| findbugs | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/new-findbugs-tez-api.html |
| findbugs | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/new-findbugs-root.html |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/278/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-TEZ-Build/278/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 1189 (vs. ulimit of 5500) |
| modules | C: tez-api tez-runtime-internals tez-runtime-library tez-dag tez-ext-service-tests . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/278/console |
| versions | git=2.7.4 maven=3.3.9 findbugs=3.0.1 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 30s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 32s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 17s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 13s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 41s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 35s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} spotbugs {color} | {color:blue}  5m  3s{color} | {color:blue} Used deprecated FindBugs config; considering switching to SpotBugs. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  9m  0s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 13s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 33s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  5m 15s{color} | {color:red} root generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 49s{color} | {color:green} tez-api in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 45s{color} | {color:green} tez-runtime-internals in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 29s{color} | {color:green} tez-runtime-library in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  3s{color} | {color:green} tez-dag in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 41s{color} | {color:green} tez-ext-service-tests in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 60m  1s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  1m 54s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}127m 57s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:root |
|  |  Null passed for non-null parameter of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:[line 588] |
|  |  Null passed for non-null parameter of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:[line 116] |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.4 Server=19.03.4 base: https://builds.apache.org/job/PreCommit-TEZ-Build/279/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12992962/TEZ-4100.05.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile spotbugs findbugs checkstyle |
| uname | Linux 9409b6b95625 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / b078e3a |
| Default Java | 1.8.0_242 |
| findbugs | https://builds.apache.org/job/PreCommit-TEZ-Build/279/artifact/out/new-findbugs-root.html |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/279/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/279/testReport/ |
| Max. process+thread count | 1118 (vs. ulimit of 5500) |
| modules | C: tez-api tez-runtime-internals tez-runtime-library tez-dag tez-ext-service-tests . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/279/console |
| versions | git=2.7.4 maven=3.3.9 findbugs=3.0.1 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



timeout, taking a look
{code}
mvn clean install -pl ./tez-tests -Dtest=TestMRRJobsDAGApi
{code}
UPDATE: it can fail on master too, reported on TEZ-4123

[~jeagles]: could you please take a look at  [^TEZ-4100.06.patch] ?
you were concerned about registerApplicationMaster API changes, it was a bit tricky after YARN-6619 (call was changed in outer async wrapper: https://github.com/apache/hadoop/commit/29d9e4d5814900d5c59d77fe05d32186d4ad9385#diff-f2cc522c2f10af494f2b957451dc35a8R200-R201) , but I handled it in unit test, both of the below cases should work:
{code}
mvn clean test -pl ./tez-dag -Dguava.version=11.0.2 -Dhadoop.version=3.0.3 -Dtest=TestDagAwareYarnTaskScheduler
mvn clean test -pl ./tez-dag -Dguava.version=27.0-jre -Dhadoop.version=3.1.3 -Dtest=TestDagAwareYarnTaskScheduler
{code}


| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 10m 38s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  4m 18s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m  9s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 33s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  4m  0s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  4m  5s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} spotbugs {color} | {color:blue}  4m 42s{color} | {color:blue} Used deprecated FindBugs config; considering switching to SpotBugs. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  9m 15s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 57s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  3m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 58s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  4m 50s{color} | {color:red} root generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m  0s{color} | {color:green} tez-api in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 51s{color} | {color:green} tez-runtime-internals in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 49s{color} | {color:green} tez-runtime-library in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 25s{color} | {color:green} tez-dag in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  0s{color} | {color:green} tez-ext-service-tests in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 61m 24s{color} | {color:green} root in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  2m 30s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}152m  9s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:root |
|  |  Null passed for non-null parameter of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:of com.google.common.base.Strings.isNullOrEmpty(String) in org.apache.tez.analyzer.plugins.CriticalPathAnalyzer.createCriticalPath(DagInfo, TaskAttemptInfo, long, Map)  Method invoked at CriticalPathAnalyzer.java:[line 588] |
|  |  Null passed for non-null parameter of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:of com.google.common.base.Functions.forMap(Map, Object) in org.apache.tez.analyzer.plugins.VertexLevelCriticalPathAnalyzer.sortByValues(Map)  At VertexLevelCriticalPathAnalyzer.java:[line 116] |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.5 Server=19.03.5 base: https://builds.apache.org/job/PreCommit-TEZ-Build/286/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12993069/TEZ-4100.06.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile spotbugs findbugs checkstyle |
| uname | Linux bfe5f50e768c 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / 86182d0 |
| Default Java | 1.8.0_242 |
| findbugs | https://builds.apache.org/job/PreCommit-TEZ-Build/286/artifact/out/new-findbugs-root.html |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/286/testReport/ |
| Max. process+thread count | 1672 (vs. ulimit of 5500) |
| modules | C: tez-api tez-runtime-internals tez-runtime-library tez-dag tez-ext-service-tests . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/286/console |
| versions | git=2.7.4 maven=3.3.9 findbugs=3.0.1 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



+1. I would like to commit this in two pieces. One is the compatibility code. And one is the version upgrade. That way we can add the more guava flexible version code to branch-0.9 without upgrading the hadoop dependency or guava dependency. [~abstractdog], what do you think about that option? I would split it into two jiras to better reflect what was done.

[~jeagles]: yes, that makes sense, I'm creating a separate ticket for compatibility part -> TEZ-4124

uploaded  [^TEZ-4100.07.patch] , which depends on the changes of TEZ-4124 (and will probably fail in the next precommit)

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 26m 31s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m  1s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 38s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 59s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 49s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 49s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m  2s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  3m  0s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 50m 54s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | tez.dag.api.TestHistoryLogLevel |
|   | tez.client.TestTezClientUtils |
|   | tez.common.security.TestACLManager |
|   | tez.dag.api.TestEntityDescriptor |
|   | tez.common.TestTezYARNUtils |
|   | tez.common.security.TestACLConfigurationParser |
|   | tez.common.security.TestDAGAccessControls |
|   | tez.common.TestTezCommonUtils |
|   | tez.common.TestReflectionUtils |
|   | tez.dag.api.TestDAG |
|   | tez.dag.api.TestDagTypeConverters |
|   | tez.common.security.TestTokenCache |
|   | tez.dag.api.TestDAGPlan |
|   | tez.client.TestTezClient |
|   | tez.dag.api.client.rpc.TestDAGClient |
|   | tez.hadoop.shim.TestHadoopShimsLoader |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.5 Server=19.03.5 base: https://builds.apache.org/job/PreCommit-TEZ-Build/291/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12993203/TEZ-4100.07.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile |
| uname | Linux e18c554cd5cb 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / 86182d0 |
| Default Java | 1.8.0_242 |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/291/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/291/testReport/ |
| Max. process+thread count | 92 (vs. ulimit of 5500) |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/291/console |
| versions | git=2.7.4 maven=3.3.9 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 32s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 26s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 19s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 34s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:red}-1{color} | {color:red} mvninstall {color} | {color:red}  2m  1s{color} | {color:red} root in the patch failed. {color} |
| {color:red}-1{color} | {color:red} compile {color} | {color:red}  0m 26s{color} | {color:red} root in the patch failed. {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  0m 26s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 30s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  3m 49s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 16m 51s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.4 Server=19.03.4 base: https://builds.apache.org/job/PreCommit-TEZ-Build/293/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12993245/TEZ-4100.08.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile |
| uname | Linux a8d179655a4a 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / 86182d0 |
| Default Java | 1.8.0_242 |
| mvninstall | https://builds.apache.org/job/PreCommit-TEZ-Build/293/artifact/out/patch-mvninstall-root.txt |
| compile | https://builds.apache.org/job/PreCommit-TEZ-Build/293/artifact/out/patch-compile-root.txt |
| javac | https://builds.apache.org/job/PreCommit-TEZ-Build/293/artifact/out/patch-compile-root.txt |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/293/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/293/testReport/ |
| Max. process+thread count | 241 (vs. ulimit of 5500) |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/293/console |
| versions | git=2.7.4 maven=3.3.9 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 30s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 12s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 21s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 56m 39s{color} | {color:red} root in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 72m 19s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.4 Server=19.03.4 base: https://builds.apache.org/job/PreCommit-TEZ-Build/294/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12993245/TEZ-4100.08.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile |
| uname | Linux a9541fec56d2 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / 544290e |
| Default Java | 1.8.0_242 |
| unit | https://builds.apache.org/job/PreCommit-TEZ-Build/294/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/294/testReport/ |
| Max. process+thread count | 1158 (vs. ulimit of 5500) |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/294/console |
| versions | git=2.7.4 maven=3.3.9 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



from: https://builds.apache.org/job/PreCommit-TEZ-Build/294/artifact/out/patch-unit-root.txt
I would not tell that I can see where is the timeout...
{code}
[INFO] Running org.apache.tez.mapreduce.TestMRRJobsDAGApi
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 221.159 s - in org.apache.tez.mapreduce.TestMRRJobsDAGApi
{code}
but tez-tests  is reported as FAILURE...this should be investigated further (but not related to hadoop upgrade I think)

I believe the TestRecovery test must be hanging as it reports no results.
{noformat}
[INFO] Running org.apache.tez.test.TestAMRecovery
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 239.782 s - in org.apache.tez.test.TestAMRecovery
[INFO] Running org.apache.tez.test.TestFaultTolerance
[WARNING] Tests run: 26, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 191.445 s - in org.apache.tez.test.TestFaultTolerance
[INFO] Running org.apache.tez.test.TestTezJobs
[INFO] Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 249.451 s - in org.apache.tez.test.TestTezJobs
[INFO] Running org.apache.tez.test.TestPipelinedShuffle
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 55.006 s - in org.apache.tez.test.TestPipelinedShuffle
[INFO] Running org.apache.tez.test.TestSecureShuffle
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 275.648 s - in org.apache.tez.test.TestSecureShuffle
[INFO] Running org.apache.tez.test.TestDAGRecovery2
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 67.306 s - in org.apache.tez.test.TestDAGRecovery2
[INFO] Running org.apache.tez.test.TestExceptionPropagation
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 43.375 s - in org.apache.tez.test.TestExceptionPropagation
[INFO] Running org.apache.tez.test.TestLocalMode
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 45.654 s - in org.apache.tez.test.TestLocalMode
[INFO] Running org.apache.tez.test.TestRecovery
[INFO] Running org.apache.tez.test.TestDAGRecovery
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 97.659 s - in org.apache.tez.test.TestDAGRecovery
[INFO] Running org.apache.tez.test.TestTaskErrorsUsingLocalMode
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.775 s - in org.apache.tez.test.TestTaskErrorsUsingLocalMode
[INFO] Running org.apache.tez.mapreduce.TestMRRJobs
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 159.316 s - in org.apache.tez.mapreduce.TestMRRJobs
[INFO] Running org.apache.tez.mapreduce.TestMRRJobsDAGApi
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 221.159 s - in org.apache.tez.mapreduce.TestMRRJobsDAGApi
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 97, Failures: 0, Errors: 0, Skipped: 1
{noformat}

[~jeagles]: as far as I remember, TestRecovery has been fine so far, I tend to think that it could not be related to the hadoop upgrade, so retriggering precommit tests

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 30s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} dupname {color} | {color:green}  0m  0s{color} | {color:green} No case conflicting files found. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m  4s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 58m 32s{color} | {color:green} root in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 73m 42s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=19.03.4 Server=19.03.4 base: https://builds.apache.org/job/PreCommit-TEZ-Build/296/artifact/out/Dockerfile |
| JIRA Issue | TEZ-4100 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12993344/TEZ-4100.08.patch |
| Optional Tests | dupname asflicense javac javadoc unit xml compile |
| uname | Linux 4ca603bda7c3 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | personality/tez.sh |
| git revision | master / fd19ce6 |
| Default Java | 1.8.0_242 |
|  Test Results | https://builds.apache.org/job/PreCommit-TEZ-Build/296/testReport/ |
| Max. process+thread count | 1546 (vs. ulimit of 5500) |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-TEZ-Build/296/console |
| versions | git=2.7.4 maven=3.3.9 |
| Powered by | Apache Yetus 0.11.1 https://yetus.apache.org |


This message was automatically generated.



...and, it passed, is this ready to be committed to master [~jeagles]?

+1. Thanks, [~abstractdog]. This was a tremendous effort to get tez ready to work with hadoop 3.x. Committed to master branch only.

