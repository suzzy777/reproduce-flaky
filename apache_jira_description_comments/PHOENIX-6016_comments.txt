Adding patch file, so that precommit can check that the changes don't break 2.2 support.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/13007973/PHOENIX-6016.master.v1.patch
  against master branch at commit 6a293496ba0bb264964ea9d124bc624c14db32ce.
  ATTACHMENT ID: 13007973

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 0 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +    final Path basedir = CommonFSUtils.getTableDir(hbaseRootDir, org.apache.hadoop.hbase.TableName.valueOf(tableNameStr));
+        Path seondRegion = new Path(CommonFSUtils.getTableDir(root, fromRegion.getTable()) + Path.SEPARATOR
+        Path hfilePath = CommonFSUtils.getCurrentFileSystem(conf).listFiles(seondRegion, true).next().getPath();
+        Path firstRegionPath = new Path(CommonFSUtils.getTableDir(root, toRegion.getTable()) + Path.SEPARATOR
+            byte[] startKey, byte[] endKey, Call<T, R> callable) throws ServiceException, Throwable {
+        return delegate.batchCoprocessorService(methodDescriptor, request, startKey, endKey, responsePrototype);
+        delegate.batchCoprocessorService(methodDescriptor, request, startKey, endKey, responsePrototype);
+            byte[] startKey, byte[] endKey, Call<T, R> callable) throws ServiceException, Throwable {
+        return delegate.batchCoprocessorService(methodDescriptor, request, startKey, endKey, responsePrototype);
+        delegate.batchCoprocessorService(methodDescriptor, request, startKey, endKey, responsePrototype);

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4059//testReport/
Code Coverage results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4059//artifact/phoenix-core/target/site/jacoco/index.html
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4059//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/13007985/PHOENIX-6016.master.v3.patch
  against master branch at commit 6a293496ba0bb264964ea9d124bc624c14db32ce.
  ATTACHMENT ID: 13007985

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 0 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4060//testReport/
Code Coverage results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4060//artifact/phoenix-core/target/site/jacoco/index.html
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4060//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/13008183/PHOENIX-6016.master.v4.patch
  against master branch at commit 218a71c07259a6ac4660335bf3636325e1ee138d.
  ATTACHMENT ID: 13008183

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 0 new or modified tests.

    {color:red}-1 javac{color}.  The patch appears to cause mvn compile goal to fail .

    Compilation errors resume:
    [ERROR] COMPILATION ERROR : 
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-PHOENIX-Build/phoenix-core/src/it/java/org/apache/phoenix/end2end/BackwardCompatibilityIT.java:[132,9] non-static method checkForPreConditions() cannot be referenced from a static context
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.7.0:testCompile (default-testCompile) on project phoenix-core: Compilation failure
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-PHOENIX-Build/phoenix-core/src/it/java/org/apache/phoenix/end2end/BackwardCompatibilityIT.java:[132,9] non-static method checkForPreConditions() cannot be referenced from a static context
[ERROR] 
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <args> -rf :phoenix-core
    

Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4068//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/13008193/PHOENIX-6016.master.v5.patch
  against master branch at commit 218a71c07259a6ac4660335bf3636325e1ee138d.
  ATTACHMENT ID: 13008193

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 0 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     ./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.DynamicColumnIT

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4069//testReport/
Code Coverage results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4069//artifact/phoenix-core/target/site/jacoco/index.html
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/4069//console

This message is automatically generated.

Committed.

Thanks for the review [~elserj].

FAILURE: Integrated in Jenkins build PreCommit-PHOENIX-Build #4072 (See [https://builds.apache.org/job/PreCommit-PHOENIX-Build/4072/])
PHOENIX-6016 Support HBase 2.3.0 (stoty: rev a8d6ba036bc15eb66004a99e88a5d8a4fd1cab4c)
* (edit) phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java
* (edit) phoenix-hbase-compat-2.2.1/src/main/java/org/apache/phoenix/compat/hbase/CompatPhoenixRpcScheduler.java
* (edit) phoenix-hbase-compat-2.2.1/src/main/java/org/apache/phoenix/compat/hbase/CompatUtil.java
* (edit) phoenix-core/src/it/java/org/apache/hadoop/hbase/regionserver/wal/WALReplayWithIndexWritesAndCompressedWALIT.java
* (edit) phoenix-core/src/main/java/org/apache/phoenix/mapreduce/MultiHfileOutputFormat.java
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/CompatDelegateHTable.java
* (edit) phoenix-core/src/it/java/org/apache/phoenix/end2end/PermissionsCacheIT.java
* (edit) phoenix-hbase-compat-2.1.6/src/main/java/org/apache/phoenix/compat/hbase/CompatUtil.java
* (edit) phoenix-core/src/main/java/org/apache/phoenix/iterate/TableSnapshotResultIterator.java
* (edit) phoenix-core/src/it/resources/compatible_client_versions.json
* (edit) phoenix-core/src/main/java/org/apache/phoenix/execute/DelegateHTable.java
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/CompatStoreFileReader.java
* (edit) phoenix-core/src/main/java/org/apache/phoenix/transaction/OmidTransactionTable.java
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/CompatPermissionUtil.java
* (edit) phoenix-core/src/it/java/org/apache/phoenix/end2end/BackwardCompatibilityIT.java
* (edit) phoenix-core/src/main/java/org/apache/phoenix/coprocessor/PhoenixAccessController.java
* (edit) phoenix-core/src/main/java/org/apache/hadoop/hbase/regionserver/IndexHalfStoreFileReaderGenerator.java
* (edit) pom.xml
* (add) phoenix-hbase-compat-2.3.0/pom.xml
* (edit) phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/CompatPhoenixRpcScheduler.java
* (edit) phoenix-core/pom.xml
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/CompatOmidTransactionTable.java
* (edit) phoenix-core/src/test/java/org/apache/phoenix/jdbc/PhoenixEmbeddedDriverTest.java
* (edit) phoenix-hbase-compat-2.1.6/src/main/java/org/apache/phoenix/compat/hbase/CompatPhoenixRpcScheduler.java
* (add) phoenix-hbase-compat-2.2.1/src/main/java/org/apache/phoenix/compat/hbase/CompatOmidTransactionTable.java
* (edit) phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexScrutinyTool.java
* (add) phoenix-hbase-compat-2.1.6/src/main/java/org/apache/phoenix/compat/hbase/CompatOmidTransactionTable.java
* (add) phoenix-hbase-compat-2.1.6/src/main/java/org/apache/phoenix/compat/hbase/CompatStoreFileReader.java
* (edit) phoenix-hbase-compat-2.1.6/src/main/java/org/apache/phoenix/compat/hbase/CompatPermissionUtil.java
* (add) phoenix-hbase-compat-2.2.1/src/main/java/org/apache/phoenix/compat/hbase/CompatDelegateHTable.java
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/OffsetCell.java
* (add) phoenix-hbase-compat-2.1.6/src/main/java/org/apache/phoenix/compat/hbase/CompatDelegateHTable.java
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/CompatUtil.java
* (edit) phoenix-core/src/test/java/org/apache/phoenix/hbase/index/write/recovery/TestPerRegionIndexWriteCache.java
* (add) phoenix-hbase-compat-2.2.1/src/main/java/org/apache/phoenix/compat/hbase/CompatStoreFileReader.java
* (edit) phoenix-hbase-compat-2.2.1/src/main/java/org/apache/phoenix/compat/hbase/CompatPermissionUtil.java
* (edit) phoenix-core/src/main/java/org/apache/hadoop/hbase/regionserver/IndexHalfStoreFileReader.java
* (add) phoenix-hbase-compat-2.3.0/src/main/java/org/apache/phoenix/compat/hbase/test/DelegateCell.java


[~stoty] [~elserj], is there a trick to getting tests working with HBase 2.3? I see in the PR that you were able to get a mvn verify run to pass, but I can't.  I'm trying to run them by setting -Dhbase.profile=2.3 and getting the Hadoop error in PHOENIX-5993. Switching to Hadoop 2.10 to work around PHOENIX-5993 results in a compilation error. 

[~gjacoby] yes, you need to prime your local maven repo by rebuilding Hbase 2.3 from source locally with mvn install -Dhadoop.profile=3.0 . 

BUILDING.md has been updated with the relevant information in PHOENIX-6028 , and adds a wrapper script that handles the rebuilding.

The same applies to the 2.2 profile after PHOENIX-6028.

 

