jiridanek commented on a change in pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512#discussion_r803813675



##########
File path: tests/system_tests_multi_tenancy.py
##########
@@ -229,6 +231,17 @@ def test_16_two_router_anonymous_sender_tenant_on_both(self):
         test.run()
         self.assertIsNone(test.error)
 
+    def _cleanup_link_routes(func):
+        """Wait for all link routes to clean up before exiting the test
+        """
+        @wraps(func)
+        def wrapper(self, *args, **kwargs):
+            func(self, *args, **kwargs)
+            self.routers[0].wait_address_unsubscribed("D0.0.0.0/link")
+            self.routers[1].wait_address_unsubscribed("D0.0.0.0/link")
+        return wrapper
+
+    @_cleanup_link_routes  # type: ignore

Review comment:
       ```
   77: /home/jdanek/repos/qpid/qpid-dispatch/tests/system_tests_multi_tenancy.py:255: error: Argument 1 to "_cleanup_link_routes" has incompatible type "Callable[[RouterTest], Any]"; expected "RouterTest"  [arg-type]
   ```
   
   That is actually legit. Your `def _cleanup_link_routes(func):` is an instance method in a class, so the first argument should be `self`. So the types should be fixed.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jiridanek commented on a change in pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512#discussion_r803820024



##########
File path: tests/system_tests_multi_tenancy.py
##########
@@ -683,12 +704,8 @@ def __init__(self, first_host, second_host, first_address, second_address, dynam
         self.n_settled = 0
 
     def timeout(self):
-        self.error = "Timeout Expired: n_sent=%d n_rcvd=%d n_settled=%d" % (self.n_sent, self.n_rcvd, self.n_settled)
-        self.first_conn.close()
-        self.second_conn.close()
-        self.lookup_conn.close()
-        if self.poll_timer:
-            self.poll_timer.cancel()
+        self.fail("Timeout Expired: n_sent=%d n_rcvd=%d n_settled=%d" %
+                  (self.n_sent, self.n_rcvd, self.n_settled))

Review comment:
       All the other tests scrupulously avoid throwing in the Proton handlers. I presume there was/is a good reason for it. (Other tests have the `error` field, and always do `self.assertIsNone(test.error)` at the end). So, is throwing actually alright?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jiridanek commented on a change in pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512#discussion_r803827248



##########
File path: tests/system_tests_multi_tenancy.py
##########
@@ -229,6 +231,17 @@ def test_16_two_router_anonymous_sender_tenant_on_both(self):
         test.run()
         self.assertIsNone(test.error)
 
+    def _cleanup_link_routes(func):

Review comment:
       The 'traditional' way of using `unittest` would be to do your `setUp()` and `tearDown()` in these two methods. (With classes being understood as a way to group together tests that share setup and teardown.)
   
   I'd probably try to put the teardown into `LinkRouteTest` itself... but that does not have access to `self.routers`, so it is not such a good idea. Maybe add method `def tearDown(routers)` to it and call it in every test...
   
   Decorators are too much magic for my simple tastes, I guess.
   
   It's a matter of preference. The decorator is not too hard to understand... And if I had unlimited time, enthusiasm, and money to redesign this test "the best way", I would not actually know what to do with it right away... So, lgtm, just go ahead, I guess?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jiridanek commented on a change in pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512#discussion_r803833609



##########
File path: tests/system_tests_multi_tenancy.py
##########
@@ -683,12 +704,8 @@ def __init__(self, first_host, second_host, first_address, second_address, dynam
         self.n_settled = 0
 
     def timeout(self):
-        self.error = "Timeout Expired: n_sent=%d n_rcvd=%d n_settled=%d" % (self.n_sent, self.n_rcvd, self.n_settled)
-        self.first_conn.close()
-        self.second_conn.close()
-        self.lookup_conn.close()
-        if self.poll_timer:
-            self.poll_timer.cancel()
+        self.fail("Timeout Expired: n_sent=%d n_rcvd=%d n_settled=%d" %
+                  (self.n_sent, self.n_rcvd, self.n_settled))

Review comment:
       @kgiusti Actually, you don't even have `self.fail` available here! This is instance of `proton.handlers.MessagingHandler`, not `unittest.TestCase`. (At least, If I look right).




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kgiusti commented on a change in pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512#discussion_r804015741



##########
File path: tests/system_tests_multi_tenancy.py
##########
@@ -229,6 +231,17 @@ def test_16_two_router_anonymous_sender_tenant_on_both(self):
         test.run()
         self.assertIsNone(test.error)
 
+    def _cleanup_link_routes(func):

Review comment:
       If I had unlimited time, enthusiasm and money... well.. perhaps that's a topic left discussed.
   Yeah in the end I'm punting on the decorator approach: too many issues with the python linters.
   The LinkRouteTest now waits for the routes to expire directly from the test itself.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


kgiusti commented on a change in pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512#discussion_r804016751



##########
File path: tests/system_tests_multi_tenancy.py
##########
@@ -683,12 +704,8 @@ def __init__(self, first_host, second_host, first_address, second_address, dynam
         self.n_settled = 0
 
     def timeout(self):
-        self.error = "Timeout Expired: n_sent=%d n_rcvd=%d n_settled=%d" % (self.n_sent, self.n_rcvd, self.n_settled)
-        self.first_conn.close()
-        self.second_conn.close()
-        self.lookup_conn.close()
-        if self.poll_timer:
-            self.poll_timer.cancel()
+        self.fail("Timeout Expired: n_sent=%d n_rcvd=%d n_settled=%d" %
+                  (self.n_sent, self.n_rcvd, self.n_settled))

Review comment:
       Yeah - not the best choice of method name, but it's local to the LinkRouteTest class itself.  I've changed it from "fail" to "done" so it won't be as confusing.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 5771f8b12ab6b5bd98bc4ac093c5926481e035b4 in qpid-dispatch's branch refs/heads/main from Ken Giusti
[ https://gitbox.apache.org/repos/asf?p=qpid-dispatch.git;h=5771f8b ]

DISPATCH-2327: clean up link routes at end of tests

This closes #1512


asfgit closed pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jiridanek commented on a change in pull request #1512:
URL: https://github.com/apache/qpid-dispatch/pull/1512#discussion_r804047423



##########
File path: tests/system_tests_multi_tenancy.py
##########
@@ -229,6 +231,17 @@ def test_16_two_router_anonymous_sender_tenant_on_both(self):
         test.run()
         self.assertIsNone(test.error)
 
+    def _cleanup_link_routes(func):

Review comment:
       > Yeah in the end I'm punting on the decorator approach: too many issues with the python linters.
   
   If the only problem is the linter, that should not be hard to put right. Put the decorator as a standalone top level method in the module, and the warning you got should be gone! You were not relying on it being an instance method anyway.
   
   ```python
   def _cleanup_link_routes(func):
       @functools.wraps(func)
       def wrapper(self, *args, **kwargs):
           result = func(self, *args, **kwargs)
           # TODO something here
           return result
       return wrapper
   
   class TestClass(unittest.TestCae):
       def __init__(self, a=1, b=2):
       @decorate
       def test_something(self):
           pass
   ```
   
   I'm not sure what other problems there might be with it. I'd have to actually try it, and I don't want to poke into tests that I don't understand.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jiridanek opened a new pull request #1513:
URL: https://github.com/apache/qpid-dispatch/pull/1513


   I like to think I could do something much nicer and more wow with unlimited money and enthusiasm, but this is what I got right now
   
   ```diff
   > The decorator shall not fall into ruins
   > despite the pain of loss upon us all
   > In our hearts of hearts our fallen leader
   > is mightier than when alive
   ```
   
   Watching CI, hoping I did not screw up too badly.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jiridanek commented on pull request #1513:
URL: https://github.com/apache/qpid-dispatch/pull/1513#issuecomment-1035492779


   Ok, older Pythons don't like the `@staticmethod`, apparently. Very sad.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


jiridanek closed pull request #1513:
URL: https://github.com/apache/qpid-dispatch/pull/1513


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: dev-unsubscribe@qpid.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Commit 5771f8b12ab6b5bd98bc4ac093c5926481e035b4 in qpid-dispatch's branch refs/heads/dependabot/npm_and_yarn/console/react/react-scripts-5.0.0 from Ken Giusti
[ https://gitbox.apache.org/repos/asf?p=qpid-dispatch.git;h=5771f8b ]

DISPATCH-2327: clean up link routes at end of tests

This closes #1512


