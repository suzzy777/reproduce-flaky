Attaching v1. Sets "hbase.ipc.max.request.size" to min of 128MB or (Heap memory * 0.2 / # handlers / 2)


You mean TODO from HBASE-15177?

So when we move to reading reqs into off heap BB, the size calc based on Xmx become not relevant any more.  Any thinking on this?

bq. You mean TODO from HBASE-15177?
Yes, let me fix the typo. 
bq. So when we move to reading reqs into off heap BB, the size calc based on Xmx become not relevant any more. Any thinking on this?
It still might be relevant. Even with DBB IPC buffers, in case of Put, the edits will go to memstore until that is also DBB. This is just a heuristic to protect the server based on its heap. Lets see whether the heuristic makes sense or not (suggestions welcome): 

|| heap || numHandlers || max req size ||
|   1GB | 30 | 3.4MB | 
|   1GB | 60 | 1.7MB | 
|   4GB | 30 | 13.5MB | 
|   4GB | 60 | 6.7MB | 
|   8GB | 60 | 13.5MB | 
|   8GB | 100 | 8MB | 
|   16GB | 100 | 16MB |
|   32GB | 100 | 32MB | 

From the above, the heuristic maybe a bit too aggressive. It assumes that every handler gets a max-sized request at the same time. 

Yeah that's waaaay too aggressive. We shouldn't be guarding against lots of requests being too large. That's the job of total call queue size. We should only be guarding against things that are outrageously large.
I would vote 256mb flat or something like that otherwise we are going to break existing people pretty hard.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green} 0m 0s {color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 38s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 36s {color} | {color:green} master passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 33s {color} | {color:green} master passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 3m 59s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 17s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 52s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 30s {color} | {color:green} master passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 36s {color} | {color:green} master passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 46s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 30s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 30s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 34s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 34s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 3m 58s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 23m 21s {color} | {color:green} Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 58s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 24s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 34s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 29m 56s {color} | {color:red} hbase-server in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 31m 53s {color} | {color:red} hbase-server in the patch failed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 11s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 107m 14s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.hbase.ipc.TestAsyncIPC |
| JDK v1.7.0_91 Timed out junit tests | org.apache.hadoop.hbase.ipc.TestAsyncIPC |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-05 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12786192/hbase-15212_v1.patch |
| JIRA Issue | HBASE-15212 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 462fab42be87 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / f4d9597 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/431/artifact/patchprocess/patch-unit-hbase-server-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/431/artifact/patchprocess/patch-unit-hbase-server-jdk1.7.0_91.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HBASE-Build/431/artifact/patchprocess/patch-unit-hbase-server-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-HBASE-Build/431/artifact/patchprocess/patch-unit-hbase-server-jdk1.7.0_91.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/431/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 175MB |
| Powered by | Apache Yetus 0.1.0   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/431/console |


This message was automatically generated.



I think sooner we will be moving over to Offheap Memstore and offheap in write path. I think once that happens we have to fine tune other parameters also like flush related params as many of that are dependent on the heap Xmx which may become irrelevant to an extent once we go to Offheap. 

Alright, with offheap buffers, doing the heuristics by looking at Xmx is harder. v2 patch uses 256M flat. Let's get this in. 

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green} 0m 0s {color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 2m 36s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 30s {color} | {color:green} master passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 34s {color} | {color:green} master passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 4m 20s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 49s {color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 25s {color} | {color:green} master passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 33s {color} | {color:green} master passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 44s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 31s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 31s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 34s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 34s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 4m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 21m 48s {color} | {color:green} Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 27s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 35s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 29m 3s {color} | {color:red} hbase-server in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 30m 32s {color} | {color:red} hbase-server in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 11s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 102m 36s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.hbase.ipc.TestAsyncIPC |
| JDK v1.7.0_95 Timed out junit tests | org.apache.hadoop.hbase.ipc.TestAsyncIPC |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-16 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12788097/hbase-15212_v2.patch |
| JIRA Issue | HBASE-15212 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux bb0954919b5d 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 7063562 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/559/artifact/patchprocess/patch-unit-hbase-server-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/559/artifact/patchprocess/patch-unit-hbase-server-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HBASE-Build/559/artifact/patchprocess/patch-unit-hbase-server-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-HBASE-Build/559/artifact/patchprocess/patch-unit-hbase-server-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/559/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 174MB |
| Powered by | Apache Yetus 0.1.0   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/559/console |


This message was automatically generated.



+1 LGTM

I've ran the failed test {{TestAsyncIPC}} locally. It is one of the flaky tests I think. Will commit this shortly. 

I've committed this to 1.3+. Thanks for reviews. 

FAILURE: Integrated in HBase-1.4 #46 (See [https://builds.apache.org/job/HBase-1.4/46/])
HBASE-15212 RRCServer should enforce max request size (enis: rev b697f53be33616ceeb96bf305e7c36ee04e1bad2)
* hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/AbstractTestIPC.java


FAILURE: Integrated in HBase-1.3 #618 (See [https://builds.apache.org/job/HBase-1.3/618/])
HBASE-15212 RRCServer should enforce max request size (enis: rev a8bd8eb92e1df54b4e58ed402f8e5a75977df8d1)
* hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/AbstractTestIPC.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java


FAILURE: Integrated in HBase-Trunk_matrix #798 (See [https://builds.apache.org/job/HBase-Trunk_matrix/798/])
HBASE-15212 RRCServer should enforce max request size (enis: rev 3f3613a23485121ae72959206f4db09a0f557cd1)
* hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/AbstractTestIPC.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java


SUCCESS: Integrated in HBase-1.3-IT #576 (See [https://builds.apache.org/job/HBase-1.3-IT/576/])
HBASE-15212 RRCServer should enforce max request size (enis: rev b697f53be33616ceeb96bf305e7c36ee04e1bad2)
* hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/AbstractTestIPC.java


Seems this cause TestAsyncIPC.testRpcMaxRequestSize fail?

bq. Seems this cause TestAsyncIPC.testRpcMaxRequestSize fail?
I've ran that test locally before commit (see https://issues.apache.org/jira/browse/HBASE-15212?focusedCommentId=15207492&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15207492). It seemed like a flaky test (because I've seen the failure before this if I remember right). But maybe there is an issue. 

FAILURE: Integrated in HBase-0.98-matrix #323 (See [https://builds.apache.org/job/HBase-0.98-matrix/323/])
HBASE-15212 RPCServer should enforce max request size (apurtell: rev 0418b47ca4d7df6b55d476f43d13719b4280772a)
* hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java


FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1196 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1196/])
HBASE-15212 RPCServer should enforce max request size (apurtell: rev 0418b47ca4d7df6b55d476f43d13719b4280772a)
* hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java


