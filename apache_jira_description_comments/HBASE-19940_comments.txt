We normally thread dump when a test has gone on too long but it is predicated on all RS's going down. That is not happening in this case. The test also 'kills' the RS in an odd way. Let me add debug.

.001 is the debug I pushed on master and branch-2.

FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4533 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4533/])
HBASE-19940 TestMetaShutdownHandler flakey (stack: rev 6307689a6e03f30d7d1490fbf9fe9dff9138a7ff)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java


Add more debug w/ the below:

commit 590bee78dc9cb08a7b2d0eb5205d9dae65a8800a
Author: Michael Stack <stack@apache.org>
Date:   Tue Feb 6 06:34:49 2018 -0800

    HBASE-19940 TestMetaShutdownHandler flakey; ADDENDUM: more debug

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java
index 172c170b92..0d410fc916 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java
@@ -297,10 +297,10 @@ public class JVMClusterUtil {
         for (RegionServerThread t : regionservers) {
           if (t.isAlive()) {
             LOG.warn("RegionServerThreads taking too long to stop, interrupting; thread dump "  +
-              "if > three attempts");
+              "if > three attempts: i=" + i);
             if (i > 3) {
               try {
-                Threads.threadDumpingIsAlive(t.getRegionServer().getThread());
+                Threads.threadDumpingIsAlive(t);
               } catch (InterruptedException e) {
                 e.printStackTrace();
               }

I seem to have been passing the wrong thread.... we are not getting the wanted thread dumps out of the hanging RS. Pushed the above on master and branch-2.

Above is still not right. Inside in threadDumpinIsAlive it does a join... but then we do an interrupt on the join'd thread so we exit. I want a thread dump. .002 does explicit thread dump instead of above threadDumpingIsAlive call. Pushed to master and branch-2.

FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4538 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4538/])
HBASE-19940 TestMetaShutdownHandler flakey; ADDENDUM: more debug (stack: rev 590bee78dc9cb08a7b2d0eb5205d9dae65a8800a)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java


Ok. Got my thread dumps.

RS is here:

    java.lang.Thread.sleep(Native Method)
    org.apache.hadoop.hbase.regionserver.HRegionServer.sleep(HRegionServer.java:1419)
    org.apache.hadoop.hbase.regionserver.HRegionServer.waitOnAllRegionsToClose(HRegionServer.java:1405)
    org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:1097)
    org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer.runRegionServer(MiniHBaseCluster.java:187)
    org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer.access$000(MiniHBaseCluster.java:133)
    org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer$1.run(MiniHBaseCluster.java:171)
    java.security.AccessController.doPrivileged(Native Method)
    javax.security.auth.Subject.doAs(Subject.java:360)
    org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1726)
    org.apache.hadoop.hbase.security.User$SecureHadoopUser.runAs(User.java:307)
    org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer.run(MiniHBaseCluster.java:168)
    java.lang.Thread.run(Thread.java:748)


Regions are here:

    org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:304)
Thread 462 (RpcServer.priority.FPBQ.Fifo.handler=5,queue=0,port=44612):
  State: TIMED_WAITING
  Blocked count: 7
  Waited count: 220
  Stack:
    java.lang.Object.wait(Native Method)
    org.apache.hadoop.hbase.regionserver.wal.SyncFuture.get(SyncFuture.java:133)
    org.apache.hadoop.hbase.regionserver.wal.AbstractFSWAL.blockOnSync(AbstractFSWAL.java:718)
    org.apache.hadoop.hbase.regionserver.wal.AsyncFSWAL.sync(AsyncFSWAL.java:605)
    org.apache.hadoop.hbase.regionserver.HRegion.sync(HRegion.java:8255)
    org.apache.hadoop.hbase.regionserver.HRegion.doWALAppend(HRegion.java:7630)
    org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutate(HRegion.java:3865)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:3810)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:3741)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doBatchOp(RSRpcServices.java:977)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doNonAtomicRegionMutation(RSRpcServices.java:896)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.multi(RSRpcServices.java:2593)
    org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:41560)
    org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:406)
    org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:130)
    org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:324)
    org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:304)
Thread 461 (RpcServer.priority.FPBQ.Fifo.handler=4,queue=0,port=44612):


And here....


Thread 830 (RS_CLOSE_META-regionserver/asf906:0-0):
  State: WAITING
  Blocked count: 1
  Waited count: 1
  Waiting on java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync@60664e9b
  Stack:
    sun.misc.Unsafe.park(Native Method)
    java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
    java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
    java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
    java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
    java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:943)
    org.apache.hadoop.hbase.regionserver.HRegion.doClose(HRegion.java:1503)
    org.apache.hadoop.hbase.regionserver.HRegion.close(HRegion.java:1437)
    org.apache.hadoop.hbase.regionserver.handler.CloseRegionHandler.process(CloseRegionHandler.java:104)
    org.apache.hadoop.hbase.executor.EventHandler.run(EventHandler.java:104)
    java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    java.lang.Thread.run(Thread.java:748)


A version of HBASE-19929 ?


FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4539 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4539/])
    HBASE-19940 TestMetaShutdownHandler flakey; ADDENDUM: yet more debug (stack: rev 001f9cc5ea7d00fceb24cbcbf6399ecf272882e4)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java


This test fell off the flakies. It got addressed by fixup in WAL shutdown. Resolving as 'Cannot Reproduce'.

