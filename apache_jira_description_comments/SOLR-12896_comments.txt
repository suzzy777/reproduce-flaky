Commit 75b183196798232aa6f2dcaaaab117f309119053 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=75b1831 ]

SOLR-12801: Make massive improvements to the tests.

SOLR-12804: Remove static modifier from Overseer queue access.

SOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)

SOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)

SOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)

SOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)

SOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)

SOLR-12933: Fix SolrCloud distributed commit.


Commit eb652b84edf441d8369f5188cdd5e3ae2b151434 in lucene-solr's branch refs/heads/branch_7x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb652b8 ]

SOLR-12801: Make massive improvements to the tests.

SOLR-12804: Remove static modifier from Overseer queue access.

SOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)

SOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)

SOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)

SOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)

SOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)

SOLR-12933: Fix SolrCloud distributed commit.


There is a [commit|75b183196798232aa6f2dcaaaab117f309119053] referencing this JIRA issue that adds a SolrDispatchFilter.closeOnDestroy boolean with check for this in JettySolrRunner.stop().  It appears the change was to have close be called in a separate thread.  Yet a subsequent commit a few days later to JettySolrRunner.stop commented this out yet kept closeOnDestroy.  I think the pertinent lines of code can be reverted to thus have what existed previously, which was simpler?

BTW [~markrmiller@gmail.com] I'm looking very closely at the SolrDispatchFilter.close/destroy process to ensure I understand it thoroughly.  The background is that I neglected to notice that the reference to CoreContainer gets nulled out (on close) when I recently made changes in this class, and I started to wonder why we even bother nulling it out at all (not a change you did BTW), and then I find myself trying to simplify close/destory.  It appears cores==null is trying to signify equivalency with cores.isShutdown() maybe before there even was such a method on CoreContainer.

