I vote we add it as an option for 4.0. Basically zero risk afaict.

¬†

Any concerns with that [~cscotta]¬†/ [~jolynch]¬†/ anyone?

No concern from me ‚Äì though I'm also not a stakeholder. Discussion on the dev list was supportive. üëç

{quote}though I'm also not a stakeholder.
{quote}
Yeah, couldn't remember who'd chimed in on that list or not and was too lazy to check so just went random w/a couple folks. ;)

Changes proposed in https://github.com/newkek/cassandra/tree/15631-trunk.

As proposed on the ML, I added the test dependency and also went ahead and re-wrote one randomly chosen test to show some examples of what a full test written with AssertJ assertions would look like. Also included a custom assertions to show it helps with understanding more clearly intent of tests.

Did a first pass and overall LGTM; few comments below.

* * [at line|https://github.com/apache/cassandra/compare/trunk...newkek:15631-trunk#diff-2cccd7bf48b7a9cc113ff564acd802a8R623] 3.15 is out, maybe use that?
* [at line|https://github.com/apache/cassandra/compare/trunk...newkek:15631-trunk#diff-1dd73505fd4b8d16fb40a4aebb68e5eeR244] is there a reason you added the round?  It slightly changes the original test behavior; I don't mind, but it is a semantic difference.
* [at line|https://github.com/apache/cassandra/compare/trunk...newkek:15631-trunk#diff-1dd73505fd4b8d16fb40a4aebb68e5eeL251] you dropped this assert
* [at line|https://github.com/apache/cassandra/compare/trunk...newkek:15631-trunk#diff-e75a62e10e716a6aae0c77fe80f6f39cR30] should we change the assert message to be more clear?  This will only print out the numbers, may be nice to comment that they are object sizes.

Ill try to look closer later.  Do you also have a build which shows the tests passing?

Hey [~dcapwell] thank you very much for looking into it. For some reason I did not get a notification of your comment and have done some more work on the branch since then. Notably: I put the AssertJ dependency to 3.15.

bq. at line is there a reason you added the round? It slightly changes the original test behavior; I don't mind, but it is a semantic difference.

Right, I had rounded because {{measureDeep()}} returns a long and the signature of {{isLessThan()}} doesn't allow for a double, but instead I should change the compared value to a double so I don't have to round.

bq. at line you dropped this assert

Not sure which assert you were referring to since the code has changed since your comment, but tracing back to the line number you linked on trunk points to the assert on {{session.getSyncingTasks().size()}}. In my branch it was changed to {{assertThat(session.getSyncingTasks()).isEmpty()}}, so the functionality should be equivalent. Please let me know if you were referring to another assert.

bq. at line should we change the assert message to be more clear? This will only print out the numbers, may be nice to comment that they are object sizes.

Makes sense, will change that.

For CI, you can see the runs at https://app.circleci.com/pipelines/github/newkek/cassandra?branch=15631-trunk . Latest run (#17) had a failure that didn't seem related to these changes, and the test passed when I ran it locally.

[~dcapwell]¬†I have¬†added a new commit on the same branch that fixes the issues you mentioned. Thanks

sorry, life has been all over the place recently, I will likely get to this tomorrow.

moving to commits rather than diff so the links are stable

bq. Not sure which assert you were referring to since the code has changed since your comment

[I believe it was this|https://github.com/newkek/cassandra/commit/e10c0da352c8dc7c362f36fd081eb9970f9fd2d9#diff-1dd73505fd4b8d16fb40a4aebb68e5eeL251], you comment that it is [now here|https://github.com/newkek/cassandra/commit/e10c0da352c8dc7c362f36fd081eb9970f9fd2d9#diff-1dd73505fd4b8d16fb40a4aebb68e5eeR245].  LGTM.

bq. Latest run (#17) had a failure that didn't seem related to these changes, and the test passed when I ran it locally.

Yeah, that test is flakey, CASSANDRA-15650 fixes it.

For the most part LGTM.  I would +1 but I want to look closer at the Junit 5 thing, ill make sure to do this tomorrow.


Yeah I have been trying to figure out what was wrong here with this dependency. 

It seems a transitive dependency is trying to be pulled from maven via http and not https, and consequently it can‚Äôt because of new norms maven repo doesn‚Äôt support HTTP anymore.

I.e. I have added the assertj-core dependency, and its parent, assertj-parent-pom is trying to pull a dependency, but ant is trying to pull it via http.

It seems to be related to what‚Äôs described in here: https://clutcher.github.io/post/hybris/maven_central_repository_http_issue/

{noformat}
Starting from January 15, 2020 maven central repository is not supporting access via http://repo1.maven.org/maven2 due to security reasons. Unfortunately under the hood hybris uses ant-maven-task, which is not maintained since 2011 and has hardcoded link to http version of maven central.
{noformat}

Without the explicit dependency we get an error like:

{noformat}
/Users/kevingallardo/Documents/workspace/cassandra-trunk/build.xml:905: Unable to resolve artifact: Unable to get dependency information: Unable to read the metadata file for artifact 'org.assertj:assertj-core:jar': POM 'org.junit:junit-bom' not found in repository: Unable to download the artifact from any repository
  org.junit:junit-bom:pom:5.6.0
from the specified remote repositories:
  central (http://repo1.maven.org/maven2)
 for project org.junit:junit-bom
  org.assertj:assertj-core:jar:3.15.0
from the specified remote repositories:
  apache (https://repo.maven.apache.org/maven2),
  central (https://repo1.maven.org/maven2)
Path to dependency:
	1) org.apache.cassandra:cassandra-test-deps:jar:4.0-alpha4-SNAPSHOT
{noformat}

I ran the tests against your branch and the only failing test was org.apache.cassandra.net.ConnectionTest.testMessagePurging which is a known flaky test (see https://issues.apache.org/jira/browse/CASSANDRA-15338).

LGTM +1

Great also fwiw the tests are also run on each commit at https://app.circleci.com/pipelines/github/newkek/cassandra?branch=15631-trunk

Committed, thanks!

Awesome, thank you!

So for future reference, as mentioned on the proposal thread, the first test suite using AssertJ, to use as an example is¬†now located at [{{org.apache.cassandra.repair.RepairJobTest}}|https://github.com/apache/cassandra/blob/6d343c59f275b1165be08e2256be878ac9b95fec/test/unit/org/apache/cassandra/repair/RepairJobTest.java#L73]

