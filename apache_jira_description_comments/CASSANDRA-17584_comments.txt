I was not able to reproduce it in CircleCI - https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra?branch=17584-4.1&filter=all

But it seems flaky in Butler in both 4.1 and trunk.

It seems it was added end of March and ticket opened in April, so it might be test issue from the very beginning.

I haven't compared the tests but I see that nodetool gossipinfo and this table should be providing the same info. The nodetool gossipinfo test is stable though. 

[~frankgh], [~yifanc], [~stefan.miklosovic], can anyone of you, please, take a look into this one?    

I am on it.

PR here: https://github.com/apache/cassandra/pull/1662
Circle 500x: https://app.circleci.com/pipelines/github/instaclustr/cassandra/1025/workflows/1b958082-c873-404e-89f2-3b454547f679/jobs/4307
Jenkins: https://ci-cassandra.apache.org/view/patches/job/Cassandra-devbranch/1751/

The problem is, I think, that the map the gossiper returns consists of values (EndpointState) which are updated on the fly during the test. There is LoadBroadcaster which is updating the state every so often so these values change over time during the test.

What I did is that I am going into the test with copy of that map / EndpointState so it is not updated and values are all same for the sake of testing it.

Nice investigation, I agree that the problem is {{LoadBroadcaster}} modifying {{Gossiper#endpointStateMap}} in the background.

The failure can be reproduced locally by playing with the delays supplied by the call to {{scheduleWithFixedDelay}} that is made by {{{}LoadBroadcaster#startBroadcasting{}}}. It can also be reproduced without any changes with some more iterations in the multiplexer, as it's shown by [this run|https://app.circleci.com/pipelines/github/adelapena/cassandra/1670/workflows/314282a7-2530-4494-aa98-01b67099c3c2/jobs/17534].

The proposed patch allowing to provide a custom endpoint state map to {{GossipInfoTable}} looks good to me, I have only left a couple of minor suggestions on the PR.

Thanks [~adelapena] for the review, I would really appreciate if you answered this question (1), once resolved I think we can ship it.

(1) https://github.com/apache/cassandra/pull/1662/files#r891085898

[~smiklosovic] just answered that. I see that the other conversations are marked as resolved, but I don't see any changes nor comments about those nits. Maybe you forgot to push the changes?

[~adelapena] yes, just pushed. I ll provide circles soon.

https://app.circleci.com/pipelines/github/instaclustr/cassandra/1057/workflows/f0087467-b7ab-4055-be7d-43fb3aee0198

It seems this has been committed to 4.1 without running the pre-commit tests, nor additional multiplexer runs for the modified test. I don't see any CI results for trunk either. Here are the missed runs:
||Branch||CI||
|4.1|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1677/workflows/575d0a97-5568-4779-be06-ff8164f60c8e] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1677/workflows/9fb4e85e-fa97-4a6c-8c2c-9b5cc3ae7f05]|
|trunk|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/1678/workflows/1dd1dc71-297d-4b55-8dca-9813dca4f985] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/1678/workflows/a70374ab-b888-4931-9ec8-0940be3bfd75]|

 

All the failures on the previous CI runs seem well-known:

cassandra-4.1 j8
* {{org.apache.cassandra.distributed.test.RepairErrorsTest.testRemoteStreamFailure}}: Timeout, possibly CASSANDRA-17321

trunk j8
* {{utests_system_keyspace_directory}}: CASSANDRA-17489

trunk j11
* {{bootstrap_test.py::bootstrap_test.TestBootstrap::test_bootstrap_binary_disabled}}: CASSANDRA-17077
* {{bootstrap_test.py::bootstrap_test.TestBootstrap::test_node_cannot_join_as_hibernating_node_without_replace_address}}: CASSANDRA-16816
* {{bootstrap_test.py::bootstrap_test.TestBootstrap::test_failed_bootstrap_wiped_node_can_join}}: CASSANDRA-17308

The only one I'm not so sure about is the timeout in {{testRemoteStreamFailure}}, which we haven't see failing before.

