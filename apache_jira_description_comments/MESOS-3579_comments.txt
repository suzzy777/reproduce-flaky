Currently on my OSX 10.10.5 machine, this test will fail consistently when run as root, and will pass when run as non-root user:

As root:
{code}
[ RUN      ] FetcherCacheTest.LocalUncachedExtract
I1008 17:27:19.557225 2022589184 exec.cpp:136] Version: 0.26.0
I1008 17:27:19.559309 334864384 exec.cpp:210] Executor registered on slave 7b04b222-eeed-493f-8f07-19500c44317c-S0
E1008 17:27:19.559310 339156992 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
E1008 17:27:19.563957 339156992 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Registered executor on 192.168.99.1
Starting task 0
Forked command at 79228
sh -c './mesos-fetcher-test-acmd 0'
E1008 17:27:19.573187 339156992 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Command exited with status 0 (pid: 79228)
E1008 17:27:19.679196 339156992 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
../../src/tests/fetcher_cache_tests.cpp:295: Failure
access: Operation not permitted
I1008 17:27:20.492368 2022589184 exec.cpp:136] Version: 0.26.0
E1008 17:27:20.494282 231800832 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
I1008 17:27:20.494310 229117952 exec.cpp:210] Executor registered on slave 7b04b222-eeed-493f-8f07-19500c44317c-S0
E1008 17:27:20.499080 231800832 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Registered executor on 192.168.99.1
Starting task 1
Forked command at 79277
sh -c './mesos-fetcher-test-acmd 1'
E1008 17:27:20.507637 231800832 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Command exited with status 0 (pid: 79277)
E1008 17:27:20.614815 231800832 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
../../src/tests/fetcher_cache_tests.cpp:295: Failure
access: Operation not permitted
I1008 17:27:21.523294 2022589184 exec.cpp:136] Version: 0.26.0
E1008 17:27:21.525332 181792768 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
I1008 17:27:21.525349 178573312 exec.cpp:210] Executor registered on slave 7b04b222-eeed-493f-8f07-19500c44317c-S0
E1008 17:27:21.530045 181792768 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Registered executor on 192.168.99.1
Starting task 2
Forked command at 79326
sh -c './mesos-fetcher-test-acmd 2'
E1008 17:27:21.538776 181792768 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Command exited with status 0 (pid: 79326)
E1008 17:27:21.646376 181792768 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
../../src/tests/fetcher_cache_tests.cpp:295: Failure
access: Operation not permitted
I1008 17:27:21.647663 179109888 exec.cpp:383] Executor asked to shutdown
E1008 17:27:21.647759 181792768 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
[  FAILED  ] FetcherCacheTest.LocalUncachedExtract (2503 ms)
{code}

As non-root:
{code}
[ RUN      ] FetcherCacheTest.LocalUncachedExtract
I1008 17:27:27.067136 2022589184 exec.cpp:136] Version: 0.26.0
I1008 17:27:27.069087 240009216 exec.cpp:210] Executor registered on slave caf7bdb6-392d-473d-a244-65c294d49b10-S0
E1008 17:27:27.069103 244301824 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
E1008 17:27:27.073662 244301824 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Registered executor on 192.168.99.1
Starting task 0
Forked command at 79391
sh -c './mesos-fetcher-test-acmd 0'
E1008 17:27:27.082144 244301824 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Command exited with status 0 (pid: 79391)
E1008 17:27:27.183621 244301824 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
I1008 17:27:28.001024 2022589184 exec.cpp:136] Version: 0.26.0
E1008 17:27:28.003052 340783104 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
I1008 17:27:28.003059 340246528 exec.cpp:210] Executor registered on slave caf7bdb6-392d-473d-a244-65c294d49b10-S0
E1008 17:27:28.008353 340783104 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Registered executor on 192.168.99.1
Starting task 1
sh -c './mesos-fetcher-test-acmd 1'
Forked command at 79440
E1008 17:27:28.018365 340783104 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Command exited with status 0 (pid: 79440)
E1008 17:27:28.118818 340783104 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
I1008 17:27:29.034039 2022589184 exec.cpp:136] Version: 0.26.0
I1008 17:27:29.036036 389918720 exec.cpp:210] Executor registered on slave caf7bdb6-392d-473d-a244-65c294d49b10-S0
E1008 17:27:29.036067 392065024 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
E1008 17:27:29.040894 392065024 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Registered executor on 192.168.99.1
Starting task 2
sh -c './mesos-fetcher-test-acmd 2'
Forked command at 79489
E1008 17:27:29.049485 392065024 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
Command exited with status 0 (pid: 79489)
E1008 17:27:29.148936 392065024 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
I1008 17:27:29.150275 388308992 exec.cpp:383] Executor asked to shutdown
E1008 17:27:29.150400 392065024 process.cpp:1912] Failed to shutdown socket with fd 16: Socket is not connected
[       OK ] FetcherCacheTest.LocalUncachedExtract (2496 ms)
{code}

@greggomann Thank you! I will debug this.

Some extra code was added middle of October to log additional information on the fetcher (who looks like the culprit here) in case of failure. We should add more information  once it fails again.

Attached a more detauled log of a failure case.

The problem here seems related to unpacking the file, which happens by directly invoking {{tar -C $DEST_DIR -xf $TGZ_FILE}}.

From the shell I can successfully unpack the {{$TGZ_FILE}} for which the test failed when not specifying a destination, but from there fail like the test for the full command. I confirmed that Ubuntu trusty's version of tar ({{tar (GNU tar) 1.27.1}}) is able to unpack gzip'ed tar files with the used call syntax by creating a test file and repacking it.

Updating the test to explicitly check the integrity of the created archive (with {{tar tf $TGZ_FILE}}) but found this test to fail even though tar did not find any issues with the file when asked.

This failed test is due to a bug in GNU tar-1.28 and earlier, and was fixed in GNU tar commit {{1847ec67cec36a17354115374954fea211d1f0da}}. BSD tar seems not affected.

The problem seems to have been that an algorithm for recognition of compressed tar archives was used which had false negatives (i.e. a compressed file was not classified as compressed). Since gzip embeds archive creation timestamps in the header this only failed sporadically.

A possible workaround could be to switch to BSD tar, or for admins to test decompressibility of archives before starting executors (suggest command mirroring what we use: {{tar -C /some/destition/directory -xf /path/to/archive.tgz}}).

----

A tar user can always work around this by explicitly setting the decompression algorithm to use which disables the autoclassification. The matter is less simple for us since we explicitly rely on tar for picking the decompression algorithm automatically. With this approach there is e.g., no correlation between filename extention and used compression algorithms, so that a fix on our side which would want to be more explicit would need to e.g., examine the asset header and go from there.

----

I attached a sample archive an unfixed tar fails to recognize, confirm faulty version with
{code}
% tar -C . -xf mesos-fetcher-test-archive.tgz
{code}

Closing this as {{WONTFIX}} since an upstream fix is available, and will be released with GNU tar-1.29.

Thanks for this research [~bbannier]!

Review: https://reviews.apache.org/r/40776/

commit d723c45e043670f440bacd381826b5359e48b345
Author: Benjamin Bannier <benjamin.bannier@mesosphere.io>
Date:   Thu Dec 3 15:39:54 2015 +0100

    Fixed test flakiness in FetcherTest and FetcherCacheTest.
    
    GNU tar-1.28 and earlier can relatively randomly misidentify
    compressed files as uncompressed ones, and will then fail when
    unpacking. Avoid compressed tar files in some tests where we know we
    directly call the tar system command (in mesos-fetcher in this case).
    
    Review: https://reviews.apache.org/r/40776

