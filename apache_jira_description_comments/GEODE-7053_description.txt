This test appears to be flaky and fails intermittently with:
{noformat}
org.apache.geode.internal.cache.PREntryIdleExpirationDistributedTest > readsInOtherMemberShouldPreventExpiration FAILED
    org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.internal.cache.PREntryIdleExpirationDistributedTest$$Lambda$29/458121042.run in VM 0 running on Host 40e899358944 with 4 VMs
        at org.apache.geode.test.dunit.VM.executeMethodOnObject(VM.java:579)
        at org.apache.geode.test.dunit.VM.invoke(VM.java:406)
        at org.apache.geode.internal.cache.PREntryIdleExpirationDistributedTest.readsInOtherMemberShouldPreventExpiration(PREntryIdleExpirationDistributedTest.java:114)

Caused by:
org.junit.ComparisonFailure: expected:<[tru]e> but was:<[fals]e>
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at org.apache.geode.internal.cache.PREntryIdleExpirationDistributedTest.lambda$readsInOtherMemberShouldPreventExpiration$bb17a952$2(PREntryIdleExpirationDistributedTest.java:124)
{noformat}

This test depends on a background thread waking up every 10 ms to perform a GET which prevents another thread from expiring an entry. I think that would be very prone to failing if the thread loses CPU for any reason.