See attachments for standalone sorter code testing program with base implementation of 3-way quicksort.

Commit fe04c500d7c32606c9024259a972f6843fab678e in impala's branch refs/heads/master from noemi
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=fe04c50 ]

IMPALA-10961: Implementing adaptive 3-way quicksort in sorter

Based on a 3-way partitioning implementation by Kurt Deschler.
3-way quicksort performs much better on data with large number of
duplicates, but has a small regression in case of large NDV.
This adaptive implementation keeps the advantages of both 2-way
and 3-way quicksort. If duplicates are found during pivot selection
(among the 3 randomly selected candidates),the 3-way partitioning
function is called in SortHelper, otherwise partitioning goes 2-way.

Some benchmark results:
On a view created from 4 tpch_parquet lineitem tables
Full sort, 1 node, 1 run - no spills (only in-memory sort is changed)
Time of sorting adaptively during query execution compared to
the original implementation (sort node profile):

 +----------------------------------------------+----------------+--------------------+
 |                     Test                     | Original 2-way | Adaptive Quicksort |
 +----------------------------------------------+----------------+--------------------+
 | select * order by l_linestatus, NDV=2:       |              1 |               0.67 |
 | select l_shipmode order by l_shipmode, NDV=7 |              1 |               0.42 |
 | select * order by l_shipmode, NDV=7          |              1 |               0.57 |
 | large NDV, unique data                       |              1 |                  1 | (no difference)
 +----------------------------------------------+----------------+--------------------+

Change-Id: I81e7b36a04a43de3b83e6aeee49ca0943f0bf202
Reviewed-on: http://gerrit.cloudera.org:8080/18184
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Reviewed-by: Csaba Ringhofer <csringhofer@cloudera.com>
Tested-by: Csaba Ringhofer <csringhofer@cloudera.com>


Commit f0d4afaff1e8ed93834f5198046d137bcd03a843 in impala's branch refs/heads/master from noemi
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=f0d4afa ]

IMPALA-11144: fix testAggregationNodeGroupByCardinalityCapping

IMPALA-10961 can decrease the size of the files in
functional_parquet.alltypes, which led to breaking the test that
rely on the file size.
Lowered the expected value, so it fits in the current tolerance range
of 0,05.
See the jira for more detailed analysis

Change-Id: I7956db444549c02fab3e56cb8bd281535f679776
Reviewed-on: http://gerrit.cloudera.org:8080/18264
Reviewed-by: Csaba Ringhofer <csringhofer@cloudera.com>
Reviewed-by: Fang-Yu Rao <fangyu.rao@cloudera.com>
Tested-by: Csaba Ringhofer <csringhofer@cloudera.com>


Commit 7cfc73c2fd94335d7a19b6767b016f62ec4bde84 in impala's branch refs/heads/master from Csaba Ringhofer
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=7cfc73c ]

IMPALA-11150: Remove resource-requirements tests on functional_parquet.alltypes

These test became flaky after IMPALA-10961 as it led to smaller and
varying size for the table. This is a short term solution to make
builds green as fixing the tests properly may take some time.

Change-Id: I5bf0f963d3e053345aec27e834974eeead4190ac
Reviewed-on: http://gerrit.cloudera.org:8080/18267
Reviewed-by: Fang-Yu Rao <fangyu.rao@cloudera.com>
Reviewed-by: Csaba Ringhofer <csringhofer@cloudera.com>
Tested-by: Csaba Ringhofer <csringhofer@cloudera.com>


Commit 7b235eebd5dda9074e2b7724e6b290f49c1bb8ce in impala's branch refs/heads/master from Joe McDonnell
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=7b235eebd ]

IMPALA-11230: Add test for crash in partitioned Top-N codegen code

User workloads hit a crash for certain queries that
use partitioned Top-N operators. The crash occurred
only when codegen is enabled. After investigation,
the crash was due to a nullptr being passed into
TupleRowComparator::Compare(). The issue was fixed
as part of IMPALA-10961.

This adds a test case with a SQL statement that
triggers a crash if IMPALA-10961 is not present.

Change-Id: I6909ef660b01ad3d301273deb8a8c31120445f79
Reviewed-on: http://gerrit.cloudera.org:8080/18389
Reviewed-by: Aman Sinha <amsinha@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


