CC [~jlaskowski] [~edimitrova] 

I think you meant to ping [~jlewandowski] actually :) 

Ok, I hoped for it to be just our Jenkins turtle but it seems with 10 seconds and [two minutes|https://github.com/ekaterinadimitrova2/cassandra/commit/f0e1c893918a8af9de4a51b44c61f80994f98f39] the test fails with about the same frequency respectively [here|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1872/workflows/c96fb0fa-434b-4d4e-8023-7a80e9accfed/jobs/14677] and [here|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1873/workflows/f632eb7a-48a2-46e9-aa7b-d3d77679e2ca/jobs/14682/tests#failed-test-0] (4.1 branch) and also in two ways - the one in the ticket description and with a NullPointerException:
{code:java}
java.lang.NullPointerException at org.apache.cassandra.schema.SchemaKeyspace.applyChanges(SchemaKeyspace.java:1256) at org.apache.cassandra.schema.DefaultSchemaUpdateHandler.applyMutations(DefaultSchemaUpdateHandler.java:186) at org.apache.cassandra.schema.DefaultSchemaUpdateHandler.reset(DefaultSchemaUpdateHandler.java:262) at org.apache.cassandra.schema.Schema.resetLocalSchema(Schema.java:624) at org.apache.cassandra.distributed.test.SchemaTest.lambda$schemaReset$81c80a4a$1(SchemaTest.java:108) at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:81) at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:47) at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:57) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.base/java.lang.Thread.run(Thread.java:829){code}
I need to dig into the logs reminding myself about what s going on...it's been a month since I looked into that ticket. 

I got curious and pushed the new test with the code before CASSANDRA-17658 was committed and [it seems|https://app.circleci.com/pipelines/github/ekaterinadimitrova2/cassandra/1874/workflows/6d60a052-e3f6-44c2-9812-8ba863b32838/jobs/14687/tests#failed-test-0] the timeout error was already there, the NullPointerException is new. 

[~e.dimitrova] would you like me to take this one?

I think I know the solution

I was about to debug it today, haven’t started yet so if you already have an idea for solution, that will be great. Thanks:) Reassigning the ticket to you

So the timeout exception is a probably schema disagreement problem - I could reproduce it reliably for for 4.1 and 4.0 as well, so it is not introduced by either CASSANDRA-17044 or CASSANDRA-17658. From what I found so far this is some problem in {{MigrationCoordinator}} which does not let to pull the schema due to some conditions which decide whether to pull or not. I'll keep investigating. 

The NPE problem is probably solely related to reset schema functionality, the request to get the schema gets expired before it is sent. I'm going to try a simple retry for this problem, but first want to figure out the timeout thing.


https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/257/workflows/0b864a1b-efd9-4c08-8294-a1a891933820/jobs/1786

We will see how the rest of the tests look like

CI-wise the test seems fine but the patch broke org.apache.cassandra.distributed.test.jmx.JMXGetterCheckTest

I made a quick skim but it will take me some time to dig into the details. I left a few immediate small comments on the commit, more on Monday.

We need also 4.0 patch right? 

Maybe [~adelapena] will also want to take a look at the changes? 

OK, so I've created much simpler patch, without refactoring of MigrationCoordinator - https://github.com/apache/cassandra/pull/1804

{{SchemaTest}} repeated x100 [here|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/258/workflows/8f629e55-2dda-4d0a-bf7c-5cde9656328e/jobs/1808]

{quote}Maybe [~adelapena] will also want to take a look at the changes? 
{quote}
Sure, I'll take a look.

Just started some additional repeated runs for all the modified tests:
||Test||CI||
|o.a.c.schema.SchemaTest|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2001/workflows/0fdc2c4a-3b6e-4908-b268-d8c70943d732] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2001/workflows/71998f6e-e020-403d-a0b3-3ce8cef7990e]|
|o.a.c.distributed.test.SchemaTest|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2002/workflows/afb88a8e-94e7-46c7-a3d9-b0a5e4f33ed6] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2002/workflows/d60ab633-f080-4aa1-8348-6bc0de9ed11f]|
|o.a.c.distributed.test.MigrationCoordinatorTest|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2003/workflows/d3b21034-f3e7-4c10-8e76-1edf5c18ca05] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2003/workflows/dca2887b-47b2-45d0-ba92-c0f7ec07b2c0]|
|o.a.c.distributed.test.JMXGetterCheckTest|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2004/workflows/53d3d4b9-12b6-45a5-915b-30b6a9d9a53b] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2004/workflows/ada12085-c1d9-450f-8261-feeae1b25143]|

It seems that {{org.apache.cassandra.distributed.test.SchemaTest.schemaReset}} for [the last version of the patch|https://github.com/apache/cassandra/pull/1804/commits/b66bcfc9cfe7114f6f372ef07711c40d2cc5cf64] is flaky in the runs right above ([j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2002/workflows/afb88a8e-94e7-46c7-a3d9-b0a5e4f33ed6] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2002/workflows/d60ab633-f080-4aa1-8348-6bc0de9ed11f]). It has been repeatedly run with its entire suite, instead of just running the {{schemaReset}} method in isolation:
{code:java}
.circleci/generate.sh -m \
  -e REPEATED_UTEST_TARGET=test-jvm-dtest-some \
  -e REPEATED_UTEST_COUNT=400 \
  -e REPEATED_UTEST_CLASS=org.apache.cassandra.distributed.test.SchemaTest
{code}

Left some questions on the PR. I need to spend a bit more time on this. 

[~adelapena]  the last flakiness was a stupid thing in a test ([https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/267/workflows/871cd358-f173-458d-907d-34e59e4b205c/jobs/1959)]

 

I'll apply the comments, though I want to discuss the solution

I've applied one more modification in semantics. Now I think it works quite consistently. 

When a caller requests schema reset, we do nothing to the schema, but instead we set a flag that the reset was requested.

This flag tricks coordinator so that it thinks the node has empty schema. This will make it apply whatever schema which is received. And when the schema is received while the flag is set, the schema mutations are applied on a truncated schema table instead of merging. The flag is then cleared. If we don't manage to receive a schema within a timeout, we simply clear the flag and throw exception. This way, unless we receive the schema from other node, we do not touch the existing schema.

 

https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/270/workflows/947d9f96-ec7a-44c8-86a7-31e246de47c8/jobs/1965

Great, here is a full CI run including 400 repeated runs of the entire {{o.a.c.distributed.test.SchemaTest}} class:
 * j8: [https://app.circleci.com/pipelines/github/adelapena/cassandra/2015/workflows/365c22ee-4c9d-4cbd-8961-8a7198237121]
 * j11: [https://app.circleci.com/pipelines/github/adelapena/cassandra/2015/workflows/379e7af3-ca8e-427a-9804-cc34bed08426]

I'll take a closer look early this next week.

Thank you [~adelapena] for running that.

Oh great! CI is fully green! (/) 

I will be looking into the latest changes today, thank you both!

[~bdeggleston] do you want to take a look before we move forward with this?

yes, thanks. I'm taking a look at this today

I haven't been able to give this a full review, but I did look through it and didn't notice anything I object to

|| PR || j8 || j11 ||
| [4.0|https://github.com/apache/cassandra/pull/1850]   | [(!)|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/275/workflows/2d6b9367-a793-427e-9dee-65bc1a967c5a] | [(/)|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/275/workflows/3349df67-0f89-4a1f-9619-5fcec22e5b2e] |
| [4.1|https://github.com/apache/cassandra/pull/1804]   | [(/)|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/273/workflows/f231f426-6435-4b49-974c-34a3b31e070c] | [(/)|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/273/workflows/4ea95887-0613-436f-87bd-90f817c5dda6] |
| [trunk|https://github.com/apache/cassandra/pull/1849] | [(/)|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/272/workflows/59976998-50e7-42f4-bac9-b95dbd5d0635] | [(/)|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/272/workflows/0098baea-f393-4a8f-8478-b7e95e6ece07] |


Just started some repeated runs for the new/updated PRs:
||Test||4.0||4.1||trunk||
|o.a.c.schema.SchemaTest                        |[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2057/workflows/25bfbad2-1710-4fc3-b320-e030441bf300]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2061/workflows/6d2cf627-9998-429e-bffb-002146978c05]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2065/workflows/93d58e23-e716-4ef6-94bf-c889b7991fde]|
|o.a.c.distributed.test.SchemaTest              |[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2058/workflows/75741ce6-3948-4ac4-912b-15b275159a8a] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2058/workflows/18c1be08-fc65-4587-a87f-5246b6dce31b]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2062/workflows/182c46bf-8558-4dd4-bd5f-df803a596d19] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2062/workflows/3f78dc99-0a54-4a8a-824a-5247fd71fc06]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2066/workflows/c01f38e3-2563-4d27-8bd4-ee2d942769a1] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2066/workflows/87ede39e-9d3c-4c12-a523-4d649e3cdcfa]|
|o.a.c.distributed.test.MigrationCoordinatorTest|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2059/workflows/0b7fe946-6703-4ec6-b591-9ff4b1bef955]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2063/workflows/8ec55afa-14f7-4dcf-8dda-ea079500dd38]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2067/workflows/4540dbad-2008-47c0-bb65-f1b13c00cbbb]|
|o.a.c.distributed.test.JMXGetterCheckTest      | |[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2064/workflows/c4c370d9-0d0a-4494-8759-0cd69a301ea4]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2068/workflows/1c3f4891-d335-49f2-b441-b71c8ae254a9]|

Thank you [~adelapena] 

{quote}I haven't been able to give this a full review, but I did look through it and didn't notice anything I object to
{quote}
Thanks, [~bdeggleston] . We should also add a note in NEWS.txt about the change of behavior , only in 4.1 (the flag described by [~jlewandowski] , unless we receive the schema from other node, we do not touch the existing schema.)

I left a few questions on the 4.0 patch. Not sure whether we are allowed in patch release to change public method behavior.

About the OOM we saw in the tests, it doesn't seem related to me but probably we need follow up ticket, at least? I will sleep on It tonight and reconsider it tomorrow

Also, I think we need a follow up ticket for [this|https://github.com/apache/cassandra/pull/1804/files#diff-7ec9aec4bfac15563e5c4b3df8177622466d08bb79ee64effacdff6f019fda35R529] TODO. 

I've just looked into those OOMs, sorry, yesterday I was probably too tired to read them...
 
{noformat}
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.SchemaTest
[junit-timeout] Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
[junit-timeout] 	at java.util.Arrays.copyOf(Arrays.java:3332)
[junit-timeout] 	at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)
[junit-timeout] 	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448)
[junit-timeout] 	at java.lang.StringBuffer.append(StringBuffer.java:270)
[junit-timeout] 	at org.apache.cassandra.CassandraBriefJUnitResultFormatter.endTestSuite(CassandraBriefJUnitResultFormatter.java:174)
[junit-timeout] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.fireEndTestSuite(JUnitTestRunner.java:853)
[junit-timeout] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:577)
[junit-timeout] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1196)
[junit-timeout] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1041)
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.SchemaTest
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.SchemaTest Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 sec
[junit-timeout] 
[junit-timeout] Testcase: org.apache.cassandra.distributed.test.SchemaTest:readRepair:	Caused an ERROR
[junit-timeout] Forked Java VM exited abnormally. Please note the time in the report does not reflect the time until the VM exit.
[junit-timeout] junit.framework.AssertionFailedError: Forked Java VM exited abnormally. Please note the time in the report does not reflect the time until the VM exit.
[junit-timeout] 	at java.util.Vector.forEach(Vector.java:1277)

{noformat}

1. both OOMs are identical
2. they happen for {{readRepair}} test, which is completely unrelated to the change
3. they indicate the problem in the code which generates JUnit report after the test is done... I suppose the log flooding with more log messages may have something to do with it - there is nothing suggesting there is something beyond that 

I'll fix the log flooding problem


No OOMs on 4.0 any more: https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/278/workflows/95bb6907-220c-436a-a11b-464ea3493b60/jobs/2071
4.0 pre-commit tests look surprisingly good as well


[~e.dimitrova] [~adelapena] I've applied some of the remaining comments and reran the test: [j11|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/281/workflows/e6094c00-b611-4772-9772-205f4c76ecba], [j8|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/281/workflows/6ae07ab4-8acb-4414-b041-88d776595703], [repeated SchemaTest|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/281/workflows/6c97760d-9443-489d-a621-0ea9ab93d85c] for 4.0 branch

The test failure in {{testNoTreesRetainedAfterDifference}} is not reported on Butler, but it seems to be reproducible in unpatched 4.0 with j11: [https://app.circleci.com/pipelines/github/adelapena/cassandra/2076/workflows/8adbfe99-afb5-43af-84ad-43df2a2a86e2/jobs/20816/tests]

Created CASSANDRA-17884 for it.

The failure of {{test_drop_with_stopped_build}} can be reproduced in unpatched 4.0 with j11: [https://app.circleci.com/pipelines/github/adelapena/cassandra/2079/workflows/67b3a8fd-54f8-49bf-9984-722799e5db1c/jobs/20826]

-I'll open a ticket for it.- Created CASSANDRA-17886 for it.

The error in {{TestIncRepair::test_multiple_repair}} seems already reported in CASSANDRA-17005. So all good in the 4.0 run (y)

4.1 https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/284/workflows/d2957022-9d2b-48a4-80b6-0512e5887751 (including repeated)
trunk https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/285/workflows/8d17a0d4-4c9f-46c3-9975-d9eabb13e3b5 (including repeated)

4.0 https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/286/workflows/4a1fc543-9733-4c95-b7b9-bd7dd7145a24


4.1 j11 - https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/284/workflows/73d5e9e2-be31-4ad4-a3e1-8639ec0529aa
trunk j11 - https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/285/workflows/600dcc96-5d47-48ab-bc24-e4617decff1f


Here is another (hopefully final) round of CI including all upgrade tests and repeated runs for j8-j8, j8-j11 and j11-j11:
||PR||CI||
|[4.0  |https://github.com/apache/cassandra/pull/1850]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2085/workflows/ef81589b-7877-4e4c-812a-ea4fea033295] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2085/workflows/e4220aaf-2b81-4604-bfa3-a5741711a978]|
|[4.1  |https://github.com/apache/cassandra/pull/1804]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2083/workflows/e9e95014-81ce-4d19-b2eb-bac0f11d36f9] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2083/workflows/b24b761f-0cef-4999-992e-8dc0367eb07a]|
|[trunk|https://github.com/apache/cassandra/pull/1849]|[j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/2084/workflows/5f0f152b-ada3-4d92-bcbf-073463cf8b46] [j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/2084/workflows/5f27f917-c43c-4d05-9a8f-6bd57b921d89]|


All green in the last run, the only thing to investigate would be [this failure|https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/285/workflows/600dcc96-5d47-48ab-bc24-e4617decff1f/jobs/2291/tests] in {{{}hintedhandoff_test.py::TestHintedHandoff::test_hintedhandoff_window{}}}, which doesn't seem related. Indeed, it seems a resurrection of CASSANDRA-17144.

Thanks [~adelapena] , I will open a new ticket for that one as it seems Stefan said he will take a look but that ticket is closed and he got side-tracked. I will ping him 

+1 from me, the only things we are missing are the TODO comment referencing CASSANDRA-17883 and the NEWS.txt entry about reset

CASSANDRA-17891 opened for _hintedhandoff_test.py::TestHintedHandoff::test_hintedhandoff_window_
{quote}+1 from me, the only things we are missing are the TODO comment referencing CASSANDRA-17883 and the NEWS.txt entry about reset
{quote}
I second [~adelapena] , thanks :) 

Thank you, I'll merge today

#justfyi in case it could be related? https://app.circleci.com/pipelines/github/bereng/cassandra/836/workflows/dd9f0441-df59-40e7-b00b-c0788f0235a6/jobs/7597/tests#failed-test-0

Thanks [~bereng], as this ticket was closed In September 2022 I think it makes sense to open new one and link it to this one {*}if related{*}.

Whether it is related - I don't know as:

1) At the time the patch was submitted tests were ran many times in a loop

2) I see your example is from trunk which is quite active now so it could be something newly introduced. 

Yeah makes sense. I opened CASSANDRA-17151 and pointed toward this and the history of tickets for this test. We can remove that link if we find out it's wrong later.

I hit that too here recently: https://app.circleci.com/pipelines/github/instaclustr/cassandra/1701/workflows/6adcd572-b3dd-4f9f-af86-4f20f78d36d8/jobs/8169/tests#failed-test-1

