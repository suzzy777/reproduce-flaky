The nature of the test itself is kind of non-deterministic. The issue is that sometimes the bootstrap can complete a bit before the stream fails and in the current setup is hard to make it 100% deterministic. It is a test issue. 

The best I managed to achieve for now is by starting node3 with ring_delay_ms=5000:
 - reduce the flakiness - once in 40-50 times compared to 2 out of 10 before.

 - decrease of the running time from 90 to 60 seconds

Wanna look more into the byteman code today, too.

During the work on this ticket I observed we have also [test_bootstrap_binary_disabled|https://builds.apache.org/view/A-D/view/Cassandra%20trunk/job/Cassandra-trunk-dtest/lastBuild/testReport/bootstrap_test/TestBootstrap/test_bootstrap_binary_disabled] covering the same test and also being flakey.

I think we can remove this one as being redundant and just mark that the other one tests ALSO the resumable bootstrap. 

Unfortunately, the problem is still the same but at least we don't have it double damage. The test does not look deterministic to me. I don't see a 100% way to ensure the bootstrap won't complete at some point earlier. 

Now it completed successfully 100 times (log attached) but I think in very rare cases it might fail again.

As pointed in Jenkins - the test was 96% stable, now I guess it would be like 99%. 

[~jrwest] being the Shepard for testing, any advice? Can we leave this one with a comment on the flakiness? 

Or maybe I can add failure message, in case we see the stream failure happening when the bootstrap was already over? It will provide the reason and an advice for rerun. So people know not to investigate more? Please advise.

[Pull request|https://github.com/ekaterinadimitrova2/cassandra-dtest/pull/3]

[Branch for the patch|https://github.com/ekaterinadimitrova2/cassandra-dtest/tree/CASSANDRA-15614]

 

Thanks for the diagnosis [~e.dimitrova]. Have you thought about converting the test to in-jvm dtest? Perhaps, we could have more control and get rid of the flakiness? It would also allow us to make better assertions about streaming failure than just "is it in the logs". Then we could safely delete the old/dtest versions. 

I'd have to look at this test closer to think about ways to make it 100% solid w/in dest. Unfortunately, from the dtest level I'm not sure we have the control we need.

Thanks [~jrwest]

As we talked on slack, we will commit this one for now and keep the ticket open for the exploration of in-jvm better version later. Thanks!

[~brandon.williams], can you, please commit this patch? 

Committed, thanks!

bq. keep the ticket open for the exploration of in-jvm better version later.

Let's use a new ticket for that.

As this was closed I created ticket for improvement CASSANDRA-15632

CASSANDRA-15667 solves the issue, the test is deterministic already. 

