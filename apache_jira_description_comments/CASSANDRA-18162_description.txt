Flaky.
{noformat}
itf = ('127.0.0.3', 7000)

    def assert_socket_available(itf):
        info = socket.getaddrinfo(itf[0], itf[1], socket.AF_UNSPEC, socket.SOCK_STREAM)
        if not info:
            raise UnavailableSocketError("Failed to get address info for [%s]:%s" % itf)
    
        (family, socktype, proto, canonname, sockaddr) = info[0]
        s = socket.socket(family, socktype)
        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    
        try:
>           s.bind(sockaddr)
E           OSError: [Errno 98] Address already in use

../venv/lib/python3.8/site-packages/ccmlib/common.py:631: OSError

During handling of the above exception, another exception occurred:

self = <cqlsh_tests.test_cqlsh_copy.TestCqlshCopy object at 0x7f36a7d70580>

    def test_bulk_round_trip_non_prepared_statements(self):
        """
            Test bulk import with default stress import (one row per operation) and without
            prepared statements.
    
            @jira_ticket CASSANDRA-11053
            """
>       self._test_bulk_round_trip(nodes=3, partitioner="murmur3", num_operations=100000,
                                   copy_from_options={'PREPAREDSTATEMENTS': False})

cqlsh_tests/test_cqlsh_copy.py:2475: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cqlsh_tests/test_cqlsh_copy.py:2391: in _test_bulk_round_trip
    self.prepare(nodes=nodes, partitioner=partitioner, configuration_options=configuration_options)
cqlsh_tests/test_cqlsh_copy.py:116: in prepare
    self.cluster.populate(nodes, tokens=tokens).start()
../venv/lib/python3.8/site-packages/ccmlib/cluster.py:513: in start
    common.assert_socket_available(itf)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

itf = ('127.0.0.3', 7000)

    def assert_socket_available(itf):
        info = socket.getaddrinfo(itf[0], itf[1], socket.AF_UNSPEC, socket.SOCK_STREAM)
        if not info:
            raise UnavailableSocketError("Failed to get address info for [%s]:%s" % itf)
    
        (family, socktype, proto, canonname, sockaddr) = info[0]
        s = socket.socket(family, socktype)
        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    
        try:
            s.bind(sockaddr)
            s.close()
            return True
        except socket.error as msg:
            s.close()
            addr, port = itf
>           raise UnavailableSocketError(
                "Inet address %s:%s is not available: %s; a cluster may already be running or you may need to add the loopback alias" % (
                addr, port, msg))
E           ccmlib.common.UnavailableSocketError: Inet address 127.0.0.3:7000 is not available: [Errno 98] Address already in use; a cluster may already be running or you may need to add the loopback alias

../venv/lib/python3.8/site-packages/ccmlib/common.py:637: UnavailableSocketError
{noformat}