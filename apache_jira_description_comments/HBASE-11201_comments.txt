Attached patch v1.

{code}
-  public void barrierReleasedByMember(String member) {
+  public void barrierReleasedByMember(String member, byte[] dataFromMember) {
{code}
Should barrierReleasedByMember(String member) be kept which passes null to the new method ?
{code}
+    } catch (InterruptedException e) {
+      throw new IOException("Interrupted while creating reached node:" + reachedNode, e);
{code}
Use InterruptedIOException for the throw statement.

Hi, Ted

bq. Should barrierReleasedByMember(String member) be kept which passes null to the new method ?
{code}
Procedure.barrierReleasedByMember(String member, byte[] dataFromMember)
{code} 
is called by 
{code}
ProcedureCoordinator.memberFinishedBarrier(String procName, final String member, byte[] dataFromMember)
{code}
which in turn is called in ZKProcedureCoordinatorRpcs() if there is any 'finished' node activity.
I don't image a need to keep the old barrierReleasedByMember(String member), unless we want to do something like this:
  if there is no user data on the 'finished' node, then call the old method
But that is probably an overkill.

But a good reminder. I probably need to add guard for null checking in there.

looks good to me, the only doubt I had was when you get null from ZKUtil.getData() but that seems to be handled by isPBMagicPrefix()

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12645618/HBASE-11201-trunk-v1.patch
  against trunk revision .
  ATTACHMENT ID: 12645618

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 15 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 1 warning messages.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

    {color:red}-1 site{color}.  The patch appears to cause mvn site goal to fail.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.client.TestHCM

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/9545//console

This message is automatically generated.

Thanks for the review.
The test failures don't see to be related.  All tests passed locally, including all procedure tests.
{code}
[INFO] Reactor Summary:
[INFO]
[INFO] HBase ............................................. SUCCESS [  1.690 s]
[INFO] HBase - Common .................................... SUCCESS [ 26.081 s]
[INFO] HBase - Protocol .................................. SUCCESS [  0.260 s]
[INFO] HBase - Client .................................... SUCCESS [ 35.977 s]
[INFO] HBase - Hadoop Compatibility ...................... SUCCESS [  6.528 s]
[INFO] HBase - Hadoop Two Compatibility .................. SUCCESS [  1.343 s]
[INFO] HBase - Prefix Tree ............................... SUCCESS [  3.511 s]
[INFO] HBase - Server .................................... SUCCESS [42:17 min]
[INFO] HBase - Testing Util .............................. SUCCESS [  1.319 s]
[INFO] HBase - Thrift .................................... SUCCESS [01:42 min]
[INFO] HBase - Shell ..................................... SUCCESS [  1.082 s]
[INFO] HBase - Integration Tests ......................... SUCCESS [  1.288 s]
[INFO] HBase - Examples .................................. SUCCESS [  1.087 s]
[INFO] HBase - Assembly .................................. SUCCESS [  0.918 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 45:21 min
[INFO] Finished at: 2014-05-19T12:05:37-08:00
[INFO] Final Memory: 66M/473M
[INFO] ------------------------------------------------------------------------
{code}

I will update the patch slightly.

TestHCM is from a recent commit, not you.  TestMultiParallel has been failing for a while.  We need to fix.  Again not you.

Got the same failure of TestHCM running hadoop-qa on HBASE-11108. 

Caused by: java.lang.UnsupportedOperationException: Only supported on java 7+.
	at io.netty.channel.socket.nio.NioDatagramChannel.checkJavaVersion(NioDatagramChannel.java:103)
	at io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(NioDatagramChannel.java:381)
	at org.apache.hadoop.hbase.master.ClusterStatusPublisher$MulticastPublisher.connect(ClusterStatusPublisher.java:271)

Is there jira for that? It passes on jdk 7 locally. This multicast thing doesn't work on jdk7?

I meant, jdk 6.

Hi, guys

Thanks for the info!

Attached v2:
Addressed Ted's comment.
Added the checking for null data on the member side.
Enhanced TestZKProcedureControllers to test data from members.

Local test result:
{code}
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] HBase ............................................. SUCCESS [  1.726 s]
[INFO] HBase - Common .................................... SUCCESS [ 26.658 s]
[INFO] HBase - Protocol .................................. SUCCESS [  0.290 s]
[INFO] HBase - Client .................................... SUCCESS [ 35.998 s]
[INFO] HBase - Hadoop Compatibility ...................... SUCCESS [  6.547 s]
[INFO] HBase - Hadoop Two Compatibility .................. SUCCESS [  1.328 s]
[INFO] HBase - Prefix Tree ............................... SUCCESS [  3.518 s]
[INFO] HBase - Server .................................... SUCCESS [43:58 min]
[INFO] HBase - Testing Util .............................. SUCCESS [  1.295 s]
[INFO] HBase - Thrift .................................... SUCCESS [01:45 min]
[INFO] HBase - Shell ..................................... SUCCESS [  1.059 s]
[INFO] HBase - Integration Tests ......................... SUCCESS [  1.264 s]
[INFO] HBase - Examples .................................. SUCCESS [  1.065 s]
[INFO] HBase - Assembly .................................. SUCCESS [  0.915 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 47:06 min
[INFO] Finished at: 2014-05-20T20:05:09-08:00
[INFO] Final Memory: 69M/469M
[INFO] ------------------------------------------------------------------------
{code}

Ping [~tedyu] and [~mbertozzi]
Do you have any additional comment, concern?

+1

Good by me.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12645945/HBASE-11201-trunk-v2.patch
  against trunk revision .
  ATTACHMENT ID: 12645945

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 15 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 32 release audit warnings (more than the trunk's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +            throw new IOException("Failed to get data from finished node or data is illegally formatted:"
+    assertEquals("Incorrect number of members returnd data", expected.size(), dataFromMembers.size());

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/9604//console

This message is automatically generated.

I will correct the long line problem.
What is the release audit warning?  The result link is not accessible any more.

the audit is not your fault, is some patch in trunk

Thanks, Matteo

Attached v3 that corrected the long lines.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12647055/HBASE-11201-trunk-v3.patch
  against trunk revision .
  ATTACHMENT ID: 12647055

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 15 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 32 release audit warnings (more than the trunk's current 0 warnings).

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/9617//console

This message is automatically generated.

Integrated to trunk.

Thanks for the patch, Jerry.

Thanks for the review, Matteo.

FAILURE: Integrated in HBase-TRUNK #5151 (See [https://builds.apache.org/job/HBase-TRUNK/5151/])
HBASE-11201 Enable global procedure members to return values to procedure master (tedyu: rev cbd39422b4f219c3226436c76695689e42c18a3a)
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMemberRpcs.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedure.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/Subprocedure.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureCoordinator.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureMember.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/FlushTableSubprocedure.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedureControllers.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/SimpleRSProcedureManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java


I see fails of trunk builds since this went in it seems.  I tried it locally and it passes but it fails consistently on build box with:

Caused by: java.lang.NoSuchMethodError: org.apache.hadoop.hbase.procedure.Procedure.waitForCompleted()V
	at org.apache.hadoop.hbase.procedure.SimpleMasterProcedureManager.execProcedure(SimpleMasterProcedureManager.java:102)
	at org.apache.hadoop.hbase.master.MasterRpcServices.execProcedure(MasterRpcServices.java:637)
	at org.apache.hadoop.hbase.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod(MasterProtos.java:41511)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2005)
	... 5 more



I and Jerry noticed the above since last night.
Various efforts in reproducing the above test failure locally didn't reproduce it.

Procedure#waitForCompleted() return void is gone in code base.

This could be due to git checkout flakiness.

One option is to add Procedure#waitForCompletedWithRet() and restore Procedure#waitForCompleted() which just calls Procedure#waitForCompletedWithRet().

Yes. It is strange.
It has been successful locally and on the pre-commit jobs (including later pre-commit job with other JIRA).
But it failed on the commit jobs.

Attached addendum as Ted suggested.

bq. This could be due to git checkout flakiness.

What is this? We should fix this instead? (Thanks for patch [~jerryhe])

Looped TestProcedureManager 3 times locally with addendum and they passed.

Addendum integrated to trunk.

Thanks, Jerry.

FAILURE: Integrated in HBase-TRUNK #5155 (See [https://builds.apache.org/job/HBase-TRUNK/5155/])
HBASE-11201 Addendum restores Procedure#waitForCompleted() which returns void (Jerry He) (tedyu: rev cf896d067192328f36a838d73e43f49fe3d689b3)
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java


TestProcedureCoordinator failed this time - I couldn't reproduce.

Reverted addendum and patch v3 to give us more time to investigate root cause.

FAILURE: Integrated in HBase-TRUNK #5156 (See [https://builds.apache.org/job/HBase-TRUNK/5156/])
HBASE-11201 Revert due to unit test failures (tedyu: rev ee963a994b2dc9cf89cb02fa5446775fc961d342)
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedure.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureMember.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMemberRpcs.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureCoordinator.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/SimpleRSProcedureManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/FlushTableSubprocedure.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/Subprocedure.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedureControllers.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java


Added "clean before checkout" option to Jenkins build.

Re-integrated patch and addendum.

Depending on build outcome, will decide what to do next.

FAILURE: Integrated in HBase-TRUNK #5157 (See [https://builds.apache.org/job/HBase-TRUNK/5157/])
HBASE-11201 Enable global procedure members to return values to procedure master (Jerry He) (tedyu: rev 8c7772488c145c34ba7f7d2035deb23ae321666f)
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedure.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureCoordinator.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMemberRpcs.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestZKProcedureControllers.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/TestProcedureMember.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/Subprocedure.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/procedure/SimpleRSProcedureManager.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/FlushTableSubprocedure.java


Looking at https://builds.apache.org/job/HBase-TRUNK/5158/console , neither Procedure nor Snapshot tests failed.

Look like the "clean' step did the trick.  
Thanks, Ted!


Hi, [~yuzhihong@gmail.com]
I attached addendum-allow-null-data-from-member.patch. This makes the master coordinator tolerate null data from the procedure member.
It will help in such case:
The hmaster is updated with the patch, but some region servers have not.  
After this addendum, snapshot (or old procedure) will not fail during the scenario described.

SUCCESS: Integrated in HBase-TRUNK #5172 (See [https://builds.apache.org/job/HBase-TRUNK/5172/])
HBASE-11201 addendum allows null data from procedure member (tedyu: rev 5419bfdc8e18547a6437d297e3060f20f584cbec)
* hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java


Closing this issue after 0.99.0 release. 

