Initial notes:
 # Add Ubuntu 22 docker image for the toolchain
 ## Ubuntu 22 has different package names in order to install python2, and it doesn't set 'python' to point to python2. We can manually set that link ourselves or adjust to having only python3 available.
 ## Estimate of effort: This is easy, an hour of development plus some review
 # Build the Ubuntu 22 toolchain (alongside all other platforms) and publish to s3
 ## Based on local testing, this doesn't require any changes to the toolchain
 # bin/bootstrap_system.sh needs to adapt to the different python package names for Ubuntu 22 vs older Ubuntus
 # The development environment either needs to stop using 'python' as the binary or change our logic to add a link from 'python' to python2 on Ubuntu 22.
 # Ubuntu 22 has OpenSSL 3.0, and we don't know whether that will create problems. In general, these upgrades tend to break our backend tests related to SSL.
 # Unlike Ubuntu 20, which could use Ubuntu 18's toolchain for a while, Ubuntu 22 simply will not work at all with Ubuntu 20's toolchain due to the OpenSSL upgrade changing the libssl.so version. *This doesn't really matter, because we need to build a real Ubuntu 22 toolchain anyway.*

Commit 234d641d7bba4c2cab8e7c2b5fb72d2861bea23f in impala's branch refs/heads/master from Joe McDonnell
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=234d641d7 ]

IMPALA-11961/IMPALA-12207: Add Redhat 9 / Ubuntu 22 support

This adds support for Redhat 9 / Ubuntu 22. It updates
to a newer toolchain that has those builds, and it adds
supporting code in bootstrap_system.sh.

Redhat 9 and Ubuntu 22 use python = python3, which requires
various changes to build scripts and tests. Ubuntu 22 uses
Python 3.10, which deprecates certain ssl.PROTOCOL_TLS, so
this adapts test_client_ssl.py to that change until it
can be fully addressed in IMPALA-12219.

Various OpenSSL methods have been deprecated. As a workaround
until these can be addressed properly, this specifies
-Wno-deprecated-declarations. This can be removed once the
code is adapted to the non-deprecated APIs in IMPALA-12226.

Impala crashes with tcmalloc errors unless we update to a newer
gperftools, so this moves to gperftools 2.10. gperftools changed
the default for tcmalloc.aggressive_memory_decommit to off, so
this adapts our code to set it for backend tests. The gperftools
upgrade does not show any performance regression:

+----------+-----------------------+---------+------------+------------+----------------+
| Workload | File Format           | Avg (s) | Delta(Avg) | GeoMean(s) | Delta(GeoMean) |
+----------+-----------------------+---------+------------+------------+----------------+
| TPCH(42) | parquet / none / none | 3.08    | -0.64%     | 2.20       | -0.37%         |
+----------+-----------------------+---------+------------+------------+----------------+

With newer Python versions, the impala-virtualenv command
fails to create a Python 3 virtualenv. This switches to
using Python 3's builtin venv command for Python >=3.6.

Kudu needed a newer version and LLVM required a couple patches.

Testing:
 - Ran a core job on Ubuntu 22 and Redhat 9. The tests run
   to completion without crashing. There are test failures
   that will be addressed in follow-up JIRAs.
 - Ran dockerised tests on Ubuntu 22.
 - Ran dockerised tests on Ubuntu 20 and Rocky 8.5.

Change-Id: If1fcdb2f8c635ecd6dc7a8a1db81f5f389c78b86
Reviewed-on: http://gerrit.cloudera.org:8080/20073
Reviewed-by: Michael Smith <michael.smith@cloudera.com>
Tested-by: Joe McDonnell <joemcdonnell@cloudera.com>


I'm resolving this Jira because we now build / run successfully on Ubuntu 22. There are some test failures that will need to be resolved, but those can be tracked separately.

Commit 14a5e9a20af59af7a03a9fb480c077d1d8a38187 in impala's branch refs/heads/master from Daniel Becker
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=14a5e9a20 ]

IMPALA-12239: BitWidthZeroRepeated seems to be flaky

RleTest.BitWidthZeroRepeated seems to be flaky in release builds. A
possible error message is this:

  Value of: 0 Expected: val Which is: '\x9F' (159)
  Stacktrace

  .../Impala/be/src/util/rle-test.cc:410
  Value of: 0
  Expected: val
  Which is: '\x9F' (159)

The problem seems to be around this 'memcpy()' call:
https://github.com/apache/impala/blob/3e9408480c5285ca925576b7486b35593407a32a/be/src/util/bit-stream-utils.inline.h#L237.

We're almost certainly running into undefined behaviour because
 - the error only occurs in release mode, not in debug mode (not even in
   ASAN or UBSAN mode)
 - if we add something around the 'memcpy()', for example printing
   'buffer_pos_' or 'v', the error doesn't occur
 - the value with which the test fails, i.e. the value it reads instead
   of the expected 0 is non-deterministic.

The failure occurs since https://gerrit.cloudera.org/#/c/20073/
(IMPALA-11961/IMPALA-12207: Add Redhat 9 / Ubuntu 22 support), which
upgraded gperftools.

We couldn't find the root cause of the bug but the most probable
possibilities are the following:
 - there's a bug in Impala that leads to undefined behaviour and that
   manifests in the test failure with the new gperftools version but not
   with the old one
 - there's a bug in the new gperftools version (2.10).

Downgrading gperftools is not an option because it is necessary for
Redhat 9 and Ubuntu 22. There is a workaround that causes the test to
pass - putting the 'memcpy()' in a conditional block:

  if (LIKELY(buffer_pos_ != buffer_end_)) {
    memcpy(v, buffer_pos_, num_bytes);
    buffer_pos_ += num_bytes;
  } else {
    ...
  }

This most probably does not address the root cause, however; for more
see the Jira ticket.

Testing:
  - manually verified that the test RleTest.BitWidthZeroRepeated passes
    in a release build

Change-Id: I84645271101b4bd594dd25929924a3549c223244
Reviewed-on: http://gerrit.cloudera.org:8080/20187
Reviewed-by: Joe McDonnell <joemcdonnell@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


