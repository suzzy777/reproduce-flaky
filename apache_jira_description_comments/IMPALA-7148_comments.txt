All the tests have been re-enabled now that IMPALA-4063 has been merged.

However, there seems to be some flakiness within the test itself which led to intermittent failure. In particular,Â {{test_profile_fragment_instances}} seems to make assumption such as there will be 3 instances of each {{HDFS_SCAN_NODE}} etc. This seems flaky as the profile below shows that we could have only 2 instances of {{HDFS_SCAN_NODE}}.
{noformat}
Operator             #Hosts   Avg Time   Max Time  #Rows  Est. #Rows   Peak Mem  Est. Peak Mem  Detail
----------------------------------------------------------------------------------------------------------------------
05:AGGREGATE              1    0.000ns    0.000ns      1           1   24.00 KB       10.00 MB  FINALIZE
04:HASH JOIN              1    9.000ms    9.000ms      0           1  141.06 MB       17.00 MB  INNER JOIN, BROADCAST
|--08:EXCHANGE            1  304.006ms  304.006ms  2.00M       2.00M    8.18 MB        7.64 MB  UNPARTITIONED
|  07:EXCHANGE            1  263.005ms  263.005ms  2.00M       2.00M    1.09 MB        7.65 MB  UNPARTITIONED
|  01:UNION               2   11.000ms   11.000ms  4.00M       2.00M          0              0
|  |--03:SCAN HDFS        2    0.000ns    0.000ns      0       6.00M          0      176.00 MB  tpch.lineitem
|  02:SCAN HDFS           2    1s361ms    1s411ms  4.00M       6.00M   24.29 MB      176.00 MB  tpch.lineitem
06:EXCHANGE               1    0.000ns    0.000ns      1           1   16.00 KB       16.00 KB  UNPARTITIONED
00:SCAN HDFS              2    1s601ms    1s616ms      2           1   24.05 MB      176.00 MB  tpch.lineitem a
{noformat}
This led to test failure like below:
{noformat}
Stacktrace
query_test/test_observability.py:161: in test_profile_fragment_instances
    assert results.runtime_profile.count("HDFS_SCAN_NODE") == 12
E   assert 9 == 12
E    +  where 9 = <built-in method count of str object at 0x69f5a80>('HDFS_SCAN_NODE')
E    +    where <built-in method count of str object at 0x69f5a80> = 'Query (id=86445c4beb185e78:bf1b7fc300000000):\n  DEBUG MODE WARNING: Query profile created while running a DEBUG buil...  - OptimizationTime: 79.001ms\n           - PeakMemoryUsage: 281.00 KB (287744)\n           - PrepareTime: 23.000ms\n'.count
E    +      where 'Query (id=86445c4beb185e78:bf1b7fc300000000):\n  DEBUG MODE WARNING: Query profile created while running a DEBUG buil...  - OptimizationTime: 79.001ms\n           - PeakMemoryUsage: 281.00 KB (287744)\n           - PrepareTime: 23.000ms\n' = <tests.beeswax.impala_beeswax.ImpalaBeeswaxResult object at 0x69bd690>.runtime_profile
Standard Error
-- executing against localhost:21000

        with l as (select * from tpch.lineitem UNION ALL select * from tpch.lineitem)
        select STRAIGHT_JOIN count(*) from (select * from tpch.lineitem a LIMIT 1) a
        join (select * from l LIMIT 2000000) b on a.l_orderkey = -b.l_orderkey;;

-- 2018-11-06 18:18:22,759 INFO     MainThread: Started query 86445c4beb185e78:bf1b7fc300000000
{noformat}

Commit 7299a6aedbbb7563e465dcfc6a20a981e9f1b804 in impala's branch refs/heads/master from Michael Ho
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=7299a6a ]

IMPALA-7148: Make test_profile_fragment_instances() more robust

test_profile_fragment_instances() makes assumption about number
of instances of each scan node in the distributed query plan.
The number of instances for each scan nodes can actually vary
depending on how data is loaded and scheduler's decision.

This change relaxes the check for number of instances of each
scan node is a multiple of 3 which is the number of scan nodes
in the plan.

Change-Id: I08b068c21e9637575c85f4d54be9f7c56c106bf1
Reviewed-on: http://gerrit.cloudera.org:8080/11906
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


All tests have been re-enabled and the flaky test_profile_fragment_instances() has been addressed.

Commit 1d412a09ac807c2f7ab39ac4fdc3e21c29024190 in impala's branch refs/heads/branch-3.1.0 from Michael Ho
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=1d412a0 ]

IMPALA-7148: Make test_profile_fragment_instances() more robust

test_profile_fragment_instances() makes assumption about number
of instances of each scan node in the distributed query plan.
The number of instances for each scan nodes can actually vary
depending on how data is loaded and scheduler's decision.

This change relaxes the check for number of instances of each
scan node is a multiple of 3 which is the number of scan nodes
in the plan.

Change-Id: I08b068c21e9637575c85f4d54be9f7c56c106bf1
Reviewed-on: http://gerrit.cloudera.org:8080/11906
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Commit bc9682b36cce72c5bf073048b1e7d0bcebb7728e in impala's branch refs/heads/branch-3.1.0 from Zoltan Borok-Nagy
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=bc9682b ]

Revert "IMPALA-7148: Make test_profile_fragment_instances() more robust"

This reverts commit 1d412a09ac807c2f7ab39ac4fdc3e21c29024190.


