Does this mean you want an alter command that can add a PK or FK?  Or do you want to be able to add/drop the rely/no rely options?  The latter doesn't make any sense since we have no ability to validate a PK or FK.

[~gates] This should be an alter command which can add PK/FK with rely/no rely option. 
 We wont support validate/enable option for now since we have no ability to validate a PK/FK as you mentioned. i.e. we should support the following command :
{code}
ALTER TABLE s ADD CONSTRAINT s_fk
FOREIGN KEY (t_id) REFERENCES t (t_id) 
RELY DISABLE NOVALIDATE;
{code}

If the user does not specify any rely/disable/novalidate option the default will be norely disable novalidate.
Thus it is a limited feature which will eventually help the optimizer in making a query rewrite by removing unnecessary joins if the constraint is marked as rely disable novalidate. We are not concentrating on the data integrity aspect for now.

Here is the matrix of what all options are intended to be supported as part of this jira:

RELY   ENABLE  VALIDATE  - Not to be supported as of now.
NORELY ENABLE VALIDATE - Not to be supported as of now.
RELY DISABLE VALIDATE - Not to be supported as of now.
RELY DISABLE NOVALIDATE - Yes, to be supported
NORELY DISABLE NOVALIDATE - Yes, to be supported
RELY ENABLE NOVALIDATE - Not to be supported as of now.
NORELY ENABLE NOVALIDATE - Not to be supported as of now.
NORELY DISABLE VALIDATE - Not be supported as of now.

Thanks
Hari




Patch looks good. 
Is adding constraint with different name allowed (keeping its other properties intact) ?
If not can you add -ve test cases for it. i.e., Adding duplicate constraints (with different name) but on same column. 
Can you also add -ve test cases for  adding a constraint on non-existent column of table for both PK/FK and adding a FK constraint on non-existent table?

Is adding constraint with different name allowed (keeping its other properties intact) ?
It is allowed as of now. I have not added this check since this will require metastore to run an extra query against the db while trying to insert the constraint. That being said, it might be good to have this check in future based on how badly this feature is misused by the end user.

I will upload the -ve test cases in the next patch.

Thanks
Hari

[~ashutoshc] Added -ve test cases in patch#2.

+1 pending tests

Results of the tests run locally :
{code}
Test Result (18 failures / -3)
org.apache.hadoop.hive.llap.tezplugins.TestLlapTaskSchedulerService.testDelayedLocalityNodeCommErrorImmediateAllocation
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_create_with_constraints
org.apache.hadoop.hive.metastore.hbase.TestHBaseSchemaTool.oneMondoTest
org.apache.hadoop.hive.llap.daemon.impl.TestTaskExecutorService.testPreemptionQueueComparator
org.apache.hadoop.hive.llap.tez.TestConverters.testFragmentSpecToTaskSpec
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_dynamic
org.apache.hive.service.cli.session.TestHiveSessionImpl.testLeakOperationHandle
org.apache.hadoop.hive.llap.tezplugins.TestLlapTaskCommunicator.testFinishableStateUpdateFailure
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_static
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_selectindate
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_avrocountemptytbl
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_order_null
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_join_with_different_encryption_keys
org.apache.hive.minikdc.TestHiveAuthFactory.testStartTokenManagerForMemoryTokenStore
org.apache.hive.minikdc.TestHiveAuthFactory.testStartTokenManagerForDBTokenStore
org.apache.hive.minikdc.TestMiniHiveKdc.testLogin
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver_index_bitmap3
org.apache.hadoop.hive.cli.TestMinimrCliDriver.org.apache.hadoop.hive.cli.TestMinimrCliDriver
{code}

org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_create_with_constraints is flaky even in master as of now because of the system generated constraint names that can cause an ordering issue when the keys are listed. I have modified the test slightly to fix this issue. The rest of the above failures are unrelated to this change.

Thanks
Hari

This and other patches left a bunch of blank methods in HBaseStore. When will those be implemented? How did this get committed with a bunch of auto-generated Eclipse comments?

Doc note:  See the PDF doc attached to HIVE-13076.

* https://issues.apache.org/jira/secure/attachment/12803522/AddingPKFKconstraints.pdf

