{code:java}
"main" #1 prio=5 os_prio=0 cpu=2804.01ms elapsed=1794.04s tid=0x00007f7ec8027800 nid=0x3522c8 waiting for monitor entry  [0x00007f7ecd036000]
     java.lang.Thread.State: BLOCKED (on object monitor)
    at org.apache.ignite.internal.client.thin.ReliableChannel$ClientChannelHolder.closeChannel(ReliableChannel.java:953)
    - waiting to lock <0x00000000e54ade08> (a org.apache.ignite.internal.client.thin.ReliableChannel$ClientChannelHolder)
    at org.apache.ignite.internal.client.thin.ReliableChannel$ClientChannelHolder.close(ReliableChannel.java:969)
    at org.apache.ignite.internal.client.thin.ReliableChannel.close(ReliableChannel.java:149)
    - locked <0x00000000e54aa508> (a org.apache.ignite.internal.client.thin.ReliableChannel)
    at org.apache.ignite.internal.client.thin.TcpIgniteClient.close(TcpIgniteClient.java:168)
    at org.apache.ignite.client.ConnectionTest.testConnection(ConnectionTest.java:135)
    at org.apache.ignite.client.ConnectionTest.testValidInvalidNodeAddressesMix(ConnectionTest.java:72)
{code}

Earliest occurrence on ci2 on Jun 17: https://ci2.ignite.apache.org/buildConfiguration/IgniteTests24Java8_ThinClientJava/6483241?showRootCauses=true&expandBuildProblemsSection=true
The only related change seems to be IGNITE-16038.


*Update:*

IGNITE-16038 only caused the issue to surface, it does not introduce a new problem.

When `GridNioServer.createSession` is called concurrently with `GridNioServer.stop`, it is possible that `GridNioFuture` returned by `createSession` will never complete. An RW lock will fix that.