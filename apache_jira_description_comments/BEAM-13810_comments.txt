[~kenn] [~kileys] - Who could look into this?

Are we already setting {{--no-daemon}}? https://docs.gradle.org/current/userguide/gradle_daemon.html

Even though they recommend enabling it now, I'm not convinced it is a  good idea. My immediate suspicion based on it being a flake is that concurrent builds are blowing daemon memory. Could increase -Xmx perhaps too.

Hmm on the other hand, that is mostly for daemon terminating unexpectedly. In this case it seems like the daemon is shutting down "normally".

One downside is that this will incur a significant performance penalty in the builds.

How much of a performance penalty? Would it be worse than the cost of flakiness? (Not a rhetorical question, trying to understand the question.)

I don't currently have a specific Jenkins job or gradle scan to investigate. We can run with `--profile` to estimate. We can probably do this all the time, and it may already be included in the data uploaded by `--scan`.

The claim by the scan at https://ci-beam.apache.org/view/PostCommit/job/beam_PreCommit_Java_Cron/5164/ / https://scans.gradle.com/s/kcy27wmdenr6i/timeline?anchor=nuv4fm6q4n3ks is "2749 tasks executed in 128 projects in 12m 50.990s, with 480 avoided tasks saving 8h 2m 40.377s"

The documentation claims "The reasoning is simple: improve build speed by reusing computations from previous builds. However, the benefits are dramatic: we typically measure build times reduced by 15-75% on subsequent builds. We recommend profiling your build by using --profile to get a sense of how much impact the Gradle Daemon can have for you." but the build I link above was a fresh daemon (https://scans.gradle.com/s/kcy27wmdenr6i/performance/daemon says "0 previous builds") and still had many cache hits.

So it would appear that our local cache may make the daemon's in-memory incremental building less important.

This issue is assigned but has not received an update in 30 days so it has been labeled "stale-assigned". If you are still working on the issue, please give an update and remove the label. If you are no longer working on the issue, please unassign so someone else may work on it. In 7 days the issue will be automatically unassigned.

This issue was marked "stale-assigned" and has not received a public comment in 7 days. It is now automatically unassigned. If you are still working on it, you can assign it to yourself again. Please also give an update about the status of the work.

This issue has been migrated to https://github.com/apache/beam/issues/21474

