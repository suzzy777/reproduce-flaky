cc [~dongjoon]

I updated the title bacause the reported URL is OrcQuerySuite and added a link to `ParquetQuerySuite` because OrcQuerySuite `Enabling/disabling ignoreCorruptFiles` comes from `ParquetQuerySuite`. I'm looking at the following three together.
- ParquetyQuerySuite
- OrcQuerySuite
- FileBasedDataSourceSuite

We reduced the number of points of failures by SPARK-23457 and SPARK-23399. But, these are still reported. I'll reinvestigate the followings together.

- SPARK-23458 (ORC)
- SPARK-23505 (Parquet)
- SPARK-23390 (FileBasedDataSource for both ORC/Parquet)

BTW, these are hidden by another several flaky test failures; Hive test suites, DirectKakfaStreamSuite, ReceiverSuite, DateTimeUtilsSuite.monthsBetween. We had better resolve all of these before 2.3.1 if possible.


cc [~smilegator]

Yeah. [~dongjoon] Please investigate why they still fail. 

After your fix, I still found HiveExternalCatalogVersionsSuite never pass in this test branch. Do you know the reason? 
https://spark-tests.appspot.com/jobs/spark-master-test-sbt-hadoop-2.7



Oh, I missed your ping here, [~smilegator]. According to the given log, the remaining flakiness of HiveExternalCatalogVersionsSuite seems to be `Py4JJavaError`. It's weird.
{code}
2018-05-07 23:14:55.233 - stderr> SLF4J: Class path contains multiple SLF4J bindings.
2018-05-07 23:14:55.233 - stderr> SLF4J: Found binding in [jar:file:/tmp/test-spark/spark-2.0.2/jars/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]
2018-05-07 23:14:55.233 - stderr> SLF4J: Found binding in [jar:file:/home/sparkivy/per-executor-caches/4/.ivy2/cache/org.slf4j/slf4j-log4j12/jars/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]
2018-05-07 23:14:55.233 - stderr> SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
2018-05-07 23:14:55.233 - stderr> SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2018-05-07 23:14:55.532 - stdout> 23:14:55.532 WARN org.apache.hadoop.util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2018-05-07 23:14:57.982 - stdout> 23:14:57.982 WARN DataNucleus.General: Plugin (Bundle) "org.datanucleus" is already registered. Ensure you dont have multiple JAR versions of the same plugin in the classpath. The URL "file:/tmp/test-spark/spark-2.0.2/jars/datanucleus-core-3.2.10.jar" is already registered, and you are trying to register an identical plugin located at URL "file:/home/sparkivy/per-executor-caches/4/.ivy2/cache/org.datanucleus/datanucleus-core/jars/datanucleus-core-3.2.10.jar."
2018-05-07 23:14:57.988 - stdout> 23:14:57.988 WARN DataNucleus.General: Plugin (Bundle) "org.datanucleus.api.jdo" is already registered. Ensure you dont have multiple JAR versions of the same plugin in the classpath. The URL "file:/tmp/test-spark/spark-2.0.2/jars/datanucleus-api-jdo-3.2.6.jar" is already registered, and you are trying to register an identical plugin located at URL "file:/home/sparkivy/per-executor-caches/4/.ivy2/cache/org.datanucleus/datanucleus-api-jdo/jars/datanucleus-api-jdo-3.2.6.jar."
2018-05-07 23:14:57.99 - stdout> 23:14:57.990 WARN DataNucleus.General: Plugin (Bundle) "org.datanucleus.store.rdbms" is already registered. Ensure you dont have multiple JAR versions of the same plugin in the classpath. The URL "file:/home/sparkivy/per-executor-caches/4/.ivy2/cache/org.datanucleus/datanucleus-rdbms/jars/datanucleus-rdbms-3.2.9.jar" is already registered, and you are trying to register an identical plugin located at URL "file:/tmp/test-spark/spark-2.0.2/jars/datanucleus-rdbms-3.2.9.jar."
2018-05-07 23:15:17.844 - stdout> 23:15:17.843 WARN org.apache.hadoop.hive.metastore.ObjectStore: Version information not found in metastore. hive.metastore.schema.verification is not enabled so recording the schema version 1.2.0
2018-05-07 23:15:18.152 - stdout> 23:15:18.152 WARN org.apache.hadoop.hive.metastore.ObjectStore: Failed to get database default, returning NoSuchObjectException
2018-05-07 23:15:22.32 - stdout> Traceback (most recent call last):
2018-05-07 23:15:22.32 - stdout>   File "/home/jenkins/workspace/spark-master-test-sbt-hadoop-2.7/target/tmp/test8334480132298691726.py", line 8, in <module>
2018-05-07 23:15:22.32 - stdout>     spark.sql("create table data_source_tbl_{} using json as select 1 i".format(version_index))
2018-05-07 23:15:22.32 - stdout>   File "/tmp/test-spark/spark-2.0.2/python/lib/pyspark.zip/pyspark/sql/session.py", line 543, in sql
2018-05-07 23:15:22.321 - stdout>   File "/tmp/test-spark/spark-2.0.2/python/lib/py4j-0.10.3-src.zip/py4j/java_gateway.py", line 1133, in __call__
2018-05-07 23:15:22.321 - stdout>   File "/tmp/test-spark/spark-2.0.2/python/lib/pyspark.zip/pyspark/sql/utils.py", line 63, in deco
2018-05-07 23:15:22.321 - stdout>   File "/tmp/test-spark/spark-2.0.2/python/lib/py4j-0.10.3-src.zip/py4j/protocol.py", line 319, in get_return_value
2018-05-07 23:15:22.322 - stdout> py4j.protocol.Py4JJavaError: An error occurred while calling o28.sql.
2018-05-07 23:15:22.322 - stdout> : java.lang.ExceptionInInitializerError
2018-05-07 23:15:22.322 - stdout> 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:133)
{code}

Previously, I've been monitoring [Spark QA Dashboard|https://amplab.cs.berkeley.edu/jenkins/view/Spark%20QA%20Test%20(Dashboard)].

Actually, `HiveExternalCatalogVersionSuite` passes in that branches. Only `spark-master-test-sbt-hadoop-2.7` branch dies for other reasons.

- 4439 Build timed out (after 275 minutes) during PySpark testing.
- 4438 terminated by signal 9
- 4437 Build timed out (after 275 minutes) during SparkR testing.
- 4436 Build timed out (after 275 minutes) during PySpark testing.
- 4435 PyPy test failures.
- 4434 terminated by signal 9
- 4433 Build timed out (after 275 minutes) during PySpark testing.

For these all recent tests, `HiveExternalCatalogVersionSuite` passes, [~smilegator].

Can we increase the timeout for the branch?

SPARK-26427 will land ORC 1.5.4 to `master` branch with two ORC patches related to the reported `leaked file streams`. We can see the status of Jenkins after that.

I'm closing this issue since this is resolved as a part of SPARK-26427 and I didn't hit this issue until now. Please feel free to reopen this if you see another instance of this failure.

