I saw this issue in CASSANDRA-18292 and found it was due to the test stopping node3 but not block waiting for that to complete, so some times the test runs with node3 alive, causing repair to fail.

I fixed the test in CASSANDRA-18292 by blocking on the future, which should make it stable.  

CASSANDRA-18048 looks like a different issue, so think that is still open

Believe this issue is fixed by CASSANDRA-18292, repeat tests also show that the issue is not happening anymore

[~dcapwell] the test run you attached for CASSANDRA-18292 does not seem to prove it resolved this issue - https://app.circleci.com/pipelines/github/dcapwell/cassandra/1905/workflows/84ab75da-8b79-4236-bed6-7ec252d666cf/jobs/17205/tests

could you take a look once again? I noticed it failed on unrelated 4.1-based feature branch

Here is a fresh rerun on the current {{cassandra-4.1}} branch - https://app.circleci.com/pipelines/github/jacek-lewandowski/cassandra/665/workflows/54c999f3-5cef-4182-bd1b-e580072aaee4/jobs/7908/parallel-runs/8?filterBy=ALL


Looks like most of the flakes are cured by waiting for node3 to shutdown before starting the repair. With that fixed there are some less common issues in `legacyPurgeRepairLoop`

working in branch https://github.com/jonmeredith/cassandra/tree/C18047-4.1

Down to 1 failure across all the runs completed at this time.

*+4.1 +*
[PR|https://github.com/apache/cassandra/pull/2301]
[J8 repeats|https://app.circleci.com/pipelines/github/jonmeredith/cassandra/798/workflows/2ce56412-9b72-4c0e-9e00-398631d4f454/jobs/9039]
[J11 repeats|https://app.circleci.com/pipelines/github/jonmeredith/cassandra/798/workflows/a725c99f-2137-4f49-bfa3-fa99747b193c]

*+trunk +*
[PR|https://github.com/apache/cassandra/pull/2302] 
[J8 repeats|https://app.circleci.com/pipelines/github/jonmeredith/cassandra/797/workflows/a95af6ee-c7fa-4fe9-bc89-fc94a30e6b25]
[J11 repeats|https://app.circleci.com/pipelines/github/jonmeredith/cassandra/797/workflows/70a6f7ba-2b46-4677-8397-7c92ecedd6fa]

Failure seems to be a {{null}} in a lambda - maybe that's why it's unsafe to update the state...

{code}
[junit-timeout] Testcase: legacyPurgeRepairLoop(org.apache.cassandra.distributed.test.PaxosRepair2Test):        FAILED
[junit-timeout] null
[junit-timeout] junit.framework.AssertionFailedError
[junit-timeout]         at org.apache.cassandra.distributed.test.PaxosRepair2Test.lambda$null$13(PaxosRepair2Test.java:521)
[junit-timeout]         at org.apache.cassandra.service.paxos.PaxosState.updateStateUnsafe(PaxosState.java:557)
[junit-timeout]         at org.apache.cassandra.distributed.test.PaxosRepair2Test.lambda$legacyPurgeRepairLoop$1b03105c$1(PaxosRepair2Test.java:515)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask$1.call(FutureTask.java:81)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask.call(FutureTask.java:47)
[junit-timeout]         at org.apache.cassandra.concurrent.FutureTask.run(FutureTask.java:57)
[junit-timeout]         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
[junit-timeout]         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
[junit-timeout]         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
[junit-timeout]         at java.lang.Thread.run(Thread.java:750)
{code}

Lambda - L521
{code}
Assert.assertTrue(committed.localDeletionTime < nowInSec);
{code}

Despite the failure, it's a big improvement on failing ~50% of the time on 4.1


LGTM, thanks

Starting commit

CI Results (pending):
||Branch||Source||Circle CI||Jenkins||
|cassandra-4.1|[branch|https://github.com/jonmeredith/cassandra/tree/commit_remote_branch/CASSANDRA-18047-cassandra-4.1-0D9D9D6B-4A3B-4AF4-A734-514C7025FF98]|[build|https://app.circleci.com/pipelines/github/jonmeredith/cassandra?branch=commit_remote_branch%2FCASSANDRA-18047-cassandra-4.1-0D9D9D6B-4A3B-4AF4-A734-514C7025FF98]|[build|https://ci-cassandra.apache.org/job/Cassandra-devbranch/2446/]|
|trunk|[branch|https://github.com/jonmeredith/cassandra/tree/commit_remote_branch/CASSANDRA-18047-trunk-0D9D9D6B-4A3B-4AF4-A734-514C7025FF98]|[build|https://app.circleci.com/pipelines/github/jonmeredith/cassandra?branch=commit_remote_branch%2FCASSANDRA-18047-trunk-0D9D9D6B-4A3B-4AF4-A734-514C7025FF98]|[build|https://ci-cassandra.apache.org/job/Cassandra-devbranch/2447/]|


Only test failure was OOM in the junit formatter. Proceeding with commit.


for future ref
https://app.circleci.com/pipelines/github/jonmeredith/cassandra/804/workflows/aeae322e-da34-4dca-9e01-a2dd257d2ce0/jobs/9578/parallel-runs/8?filterBy=FAILED
{code}
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.PaxosRepair2Test
[junit-timeout] Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
[junit-timeout]         at java.util.Arrays.copyOf(Arrays.java:3332)
[junit-timeout]         at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)
[junit-timeout]         at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448)
[junit-timeout]         at java.lang.StringBuffer.append(StringBuffer.java:276)
[junit-timeout]         at org.apache.cassandra.CassandraBriefJUnitResultFormatter.endTestSuite(CassandraBriefJUnitResultFormatter.java:174)
[junit-timeout]         at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.fireEndTestSuite(JUnitTestRunner.java:853)
[junit-timeout]         at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:577)
[junit-timeout]         at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1196)
[junit-timeout]         at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1041)
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.PaxosRepair2Test
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.PaxosRepair2Test Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 sec
[junit-timeout]
[junit-timeout] Testcase: org.apache.cassandra.distributed.test.PaxosRepair2Test:paxosRepairHistoryIsntUpdatedInForcedRepair:   Caused an ERROR
[junit-timeout] Forked Java VM exited abnormally. Please note the time in the report does not reflect the time until the VM exit.
[junit-timeout] junit.framework.AssertionFailedError: Forked Java VM exited abnormally. Please note the time in the report does not reflect the time until the VM
exit.
[junit-timeout]         at java.util.Vector.forEach(Vector.java:1277)
[junit-timeout]         at java.util.Vector.forEach(Vector.java:1277)
{code}

