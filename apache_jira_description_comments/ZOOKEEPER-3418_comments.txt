[~hanm] we're thinking of optimizing other throughput of not proposing and quorum voting on error txns like version conflict, node not exist during setData, etc.

Current plan is to having the leader prepare the txn and send the error response directly to the server who forwarded that request if there is error, and not propose to other learners. This will introduce more changes including protocol changes, which is more complexity than check locally. But it goes through leader and provides better guarantee of the order, and maximize the possibility of reducing unnecessary txns.

What's your thought on this?

[~lvfangmin] I like this idea. If a transaction does not change the state of the system, we should not let it flow through the consensus part, which is by design not scalable. This is similar to what this Jira is doing, though this Jira scopes the check to local server only.

I was thinking about what could go wrong if we do this in particular what would happen if LE happen (as error transactions will not be sync on followers anymore). Since error transactions don't change state of the data tree it seems OK of their absence on followers, from a recovery point of view. I'd imagine we just need a conditional processing pipeline for leader, instead of unconditionally send every requests from preprocessor to proposal processor, we only send requests that pass the validation. Is this the "protocol changes" you referred to, or there are other cases we need consider here?

 

Yes, that's the protocol change I mentioned, we need the leader/learner to understand the error out case, which we don't have for now. Need to deal with things like backward compatible, but it should be doable, what's your idea on this? 

-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4069//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4069//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4069//console

This message is automatically generated.

+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4072//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4072//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4072//console

This message is automatically generated.

Issue resolved by pull request 971
[https://github.com/apache/zookeeper/pull/971]

FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #475 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/475/])
ZOOKEEPER-3418: Improve quorum throughput through eager ACL checks of (eolivelli: rev b2f5548bd5757edbf1887838a487a90523ed2b52)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/PrepRequestProcessorMetricsTest.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderRequestProcessor.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/QuorumBase.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/FinalRequestProcessor.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java


FAILURE: Integrated in Jenkins build ZooKeeper-trunk #641 (See [https://builds.apache.org/job/ZooKeeper-trunk/641/])
ZOOKEEPER-3418: Improve quorum throughput through eager ACL checks of (eolivelli: rev b2f5548bd5757edbf1887838a487a90523ed2b52)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderRequestProcessor.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/PrepRequestProcessorMetricsTest.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/QuorumBase.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/FinalRequestProcessor.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java


