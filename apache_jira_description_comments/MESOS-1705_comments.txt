This would be because we recently turned on google-logging stacktraces in the libprocess tests. Note that the test is still passing but the child process seems to have received the SIGTERM after the fork but before the exec, which is fine but produces this unfortunate stack trace.

[~vinodkone] perhaps we should drop the SIGTERM stacktracing, like we do within the mesos logging initialization.

https://reviews.apache.org/r/24753/

commit dd990c53cc136fb92003b81eaa01f989ac5ae467
Author: Vinod Kone <vinodkone@gmail.com>
Date:   Fri Aug 15 16:26:35 2014 -0700

    Moved 'mesos::internal::logging::installSignalFailureHandler()' to stout/logging.hpp.
    
    Review: https://reviews.apache.org/r/24753


Still seems to be flaky after disabling SIGTERM handling.

[ RUN      ] SubprocessTest.Status
W0825 23:36:57.464468 28970 glog.hpp:41] RAW: Received signal SIGTERM; exiting.
src/tests/subprocess_tests.cpp:92: Failure
Value of: WIFSIGNALED(status)
  Actual: false
Expected: true
src/tests/subprocess_tests.cpp:93: Failure
Value of: (((*(int *) &(status))) & 0x7f)
  Actual: 0
Expected: 15
[  FAILED  ] SubprocessTest.Status (60238 ms)




Did some digging along with [~jieyu].

AFAICT, the standard says that a pending signal during a fork() should be inherited and delivered to the execve() process (http://pubs.opengroup.org/onlinepubs/009695399/functions/exec.html).

But some distros/glibc do not follow the standard and actually clear the pending signals in the new execve() process :/ (http://unixhelp.ed.ac.uk/CGI/man-cgi?execve+2 , http://manpages.ubuntu.com/manpages/hardy/man2/execve.2.html).

We setup a handler to catch and re-raise SIGTERM (to print a helpful log message and suppress glog stack trace) in all our tests and this triggered the above issue in SubprocessTest.Status because this test issues a SIGTERM to subprocess which might be in the process of fork()/execve() when the signal is delivered. 

Fix: I'm going to partially roll back the signal handler setup changes in tests, so that we only handle signals we are interested in (e.g., SIGSEGV). 


commit 0386b6ef3fa4fea20d1f5de7b6c8c02b1e21967e
Author: Vinod Kone <vinodkone@gmail.com>
Date:   Wed Aug 27 15:53:07 2014 -0700

    Fixed signal handling in libprocess.
    
    Review: https://reviews.apache.org/r/25128

commit 1f695fa2dd676a66c8dbe1d3d41fe4ecc958b5ea
Author: Vinod Kone <vinodkone@gmail.com>
Date:   Wed Aug 27 15:47:27 2014 -0700

    Fixed signal handling for stout.
    
    Review: https://reviews.apache.org/r/25126


