I think we should discuss this. 

Supporting 2.11 is going to have some not-insignificant maintenance and support implications.  Its not just a question of changing the build scripts. 

The benefits from supporting 2.11 are not clear to me. 

(Anyone who's tried running Spark with 2.11 in production will know what I'm talking about.)



In my organization we have moved development to 2.11. We would like to add Zeppelin to the stack but are held back by this incompatibility (which as you note is not trivially overcome).

Some factors to consider:

Typesafe is no longer supporting Scala 2.10:
  https://www.typesafe.com/blog/scala-212-road-map
  http://www.scala-lang.org/news/2016-schedule

The default build of Spark is apparently going to become 2.11 soon. [https://issues.apache.org/jira/browse/SPARK-6363]


If we implemented this, then anything built in scala would have to change to support two different versions of scala. 

Supporting two versions would also complicate a build process that is already very complicated.  Right now a large part of the build is creating a version of scala that lives under zeppelin_home.  I've been promised that that will be taken out in not-too-long.  

Once its taken out, your issue should resolve immediately without anyone needing to make any changes to other code. 

I'm very opposed to anything that would add more complexity and burden to the code, only for the purpose of continuing to work-around issues created by a legacy "feature" that we want taken out. 

I checked those links, and I don't see them saying anything about ceasing support for scala 2.10.  

I suggest that we confirm that removing spark-under-spark-home fixes the 2.11 compatibility issue.  If we need to have a scala version after that, I think we should switch at the same time Spark does. 

I think there will need to be at least some Zeppelin code changes to accommodate Scala 2.11. The Spark REPL has separate implementations for Scala 2.10 and 2.11. It appears that the zeppelin-spark project has some dependencies on classes that are only in the Scala 2.10 version of the Spark REPL (e.g. org.apache.spark.repl.SparkIMain).

-----------

Regarding support for Scala 2.10.

From the "Timing" section of (http://www.scala-lang.org/news/2016-schedule/)

  "2.10.5	Mar 4, 2015	EOL two years after 2.10.1"

My reading is that 2.10 reached End Of Life (EOL) in March 2015.

Note that this is just a few month after the original estimate for Scala 2.10 end of life made in the original Scala 2.11 release notes (https://www.typesafe.com/blog/scala-211-has-arrived):

"With the arrival of 2.11, the 2.10 series goes into maintenance mode, and will likely conclude by the end of 2014 with version 2.10.5, two years after the initial 2.10.0 release."





If that page is right, then 2.10 was EOL'd almost a year ago, and its not something that's an issue now.  

I wasn't aware of the REPL changes.  Honestly, from my perspective, that isn't what I'm concerned with, because I don't maintain that.  What I'm concerned with is code built in scala, where two versions would be required.  

Except that, if the part of Zeppelin that talks to the REPL changes, that's kind of a big deal, because that part of the codebase has been changing very rapidly.  It makes me think we should look for an alternative design. 

Other than the REPL change, would getting rid of the spark-under-zeppelin-home resolve the issue, do you think?  Maybe the solution is do that and handle the repl alternatives.  

Can you provide a link to the REPL stuff?

The build of the Spark REPL switches between two source directories [scala-2.10/src|https://github.com/apache/spark/tree/master/repl/scala-2.10/src] vs. [scala-2.11/src|https://github.com/apache/spark/tree/master/repl/scala-2.11/src] depending on the version of Scala for which you are building Spark. The [pom.xml|https://github.com/apache/spark/blob/master/repl/pom.xml] does it with Maven profiles. Seems like the source split has been around at least since Spark 1.2. With Spark 1.5 the differences became quite large.

In Zeppelin an example dependent on the 2.10 version of Spark is [SparkInterpreter.java|https://github.com/apache/incubator-zeppelin/blob/master/spark/src/main/java/org/apache/zeppelin/spark/SparkInterpreter.java] which depends on `SparkIMain` which is only in the 2.10 build of Spark.

We are testing Zeppelin and have it working with Spark 1.6.0/Scala 2.10. We want to transition to Spark 1.6.0/Scala 2.11. Are there plans in the near future for Zeppelin to support Spark 1.6.0 with Scala 2.11? 

[~chrismattmann]

GitHub user lresende opened a pull request:

    https://github.com/apache/incubator-zeppelin/pull/747

    [ZEPPELIN-605] Add support for Scala 2.11

    Enable Zeppelin to be built with both Scala 2.10
    and Scala 2.11, mostly to start supporting interpreters
    that are moving to Scala 2.11 only such as Spark.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lresende/incubator-zeppelin scala-210-211

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/incubator-zeppelin/pull/747.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #747
    
----
commit 69f755bac133c05de979154b96cd2c27bc69fc8b
Author: Luciano Resende <lresende@apache.org>
Date:   2016-02-25T04:46:46Z

    [ZEPPELIN-605] Add support for Scala 2.11
    
    Enable Zeppelin to be built with both Scala 2.10
    and Scala 2.11, mostly to start supporting interpreters
    that are moving to Scala 2.11 only such as Spark.

----


Glad to see some movement on this really appreciate the forward progress. [~rojeh] can you please test out https://github.com/apache/incubator-zeppelin/pull/747?

We are encountering the following error using Zeppelin (Spark 1.6.0) with Scala 2.11: 
java.lang.ClassNotFoundException: org.apache.spark.repl.SparkCommandLine

Any ideas? 

[~rojeh] and [~chrismattmann] I have made a little more progress here, but still have some modules failing with Scala 2.11, and I think i will have to create some specific code to make the build actually complete. 

I have mead good progress on the last couple days, the only remaining issue now is in the spark module, where REPL from Spark (Scala 2.10) is a bit different compared to Scala 2.11, and I might have to handle/rewrite some of the zeppelin interpreter code on that part... 

Github user lresende commented on the pull request:

    https://github.com/apache/incubator-zeppelin/pull/747#issuecomment-210890683
  
    The current status of this PR is that it's working ok with Scala 2.10 and Scala 2.11, I need to try to have one source for both versions of scala, and also rebase to pickup the most recent projects added to trunk


Luciano, thank you for working on this. We look forward to testing Zeppelin with Scala 2.11 support. 

Hi Luciano, 

[~chrismattmann] was asking if we could deploy Zeppelin with Spark 1.6 and Scala 2.11. 

Any updates on this? Thanks for your time with this issue. 



Github user lresende commented on the issue:

    https://github.com/apache/incubator-zeppelin/pull/747
  
    @Leemoonsoo @felixcheung Any ideas what might be causing these build issues in [TravisCI](https://s3.amazonaws.com/archive.travis-ci.org/jobs/133750597/log.txt) ?
    
     
    [INFO] Running 'npm install --color=false' in /home/travis/build/apache/incubator-zeppelin/zeppelin-web
    [ERROR] npm WARN package.json zeppelin-web@0.0.0 No license field.
    [ERROR] npm WARN deprecated graceful-fs@2.0.3: graceful-fs v3.0.0 and before will fail on node releases >= v7.0. Please update to graceful-fs@^4.0.0 as soon as possible. Use 'npm ls graceful-fs' to find it in the tree.
    [ERROR] npm WARN deprecated lodash@1.0.2: lodash@<3.0.0 is no longer maintained. Upgrade to lodash@^4.0.0.
    [ERROR] npm WARN deprecated graceful-fs@3.0.8: graceful-fs v3.0.0 and before will fail on node releases >= v7.0. Please update to graceful-fs@^4.0.0 as soon as possible. Use 'npm ls graceful-fs' to find it in the tree.
    [ERROR] npm WARN deprecated graceful-fs@1.2.3: graceful-fs v3.0.0 and before will fail on node releases >= v7.0. Please update to graceful-fs@^4.0.0 as soon as possible. Use 'npm ls graceful-fs' to find it in the tree.
    [ERROR] npm WARN deprecated CSSselect@0.7.0: the module is now available as 'css-select'
    [ERROR] npm WARN deprecated CSSwhat@0.4.7: the module is now available as 'css-what'
    [ERROR] npm WARN optional dep failed, continuing fsevents@1.0.12
    [INFO] 
    [INFO] > phantomjs@1.9.20 install /home/travis/build/apache/incubator-zeppelin/zeppelin-web/node_modules/karma-phantomjs-launcher/node_modules/phantomjs
    [INFO] > node install.js


Github user felixcheung commented on the issue:

    https://github.com/apache/incubator-zeppelin/pull/747
  
    it looks like error with NPM?
    
    ```
    [ERROR] npm ERR! Linux 3.13.0-40-generic
    [ERROR] npm ERR! argv "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node" "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node_modules/npm/bin/npm-cli.js" "install" "--color=false"
    [ERROR] npm ERR! node v0.12.13
    [ERROR] npm ERR! npm  v2.15.0
    [ERROR] 
    [ERROR] npm ERR! shasum check failed for /tmp/npm-10098-08b17b7f/registry.npmjs.org/multiparty/-/multiparty-2.2.0.tgz
    [ERROR] npm ERR! Expected: a567c2af000ad22dc8f2a653d91978ae1f5316f4
    [ERROR] npm ERR! Actual:   2f4894420f76a8277eeaf59a8c94ca43623484bd
    [ERROR] npm ERR! From:     https://registry.npmjs.org/multiparty/-/multiparty-2.2.0.tgz
    [ERROR] npm ERR! 
    [ERROR] npm ERR! If you need help, you may report this error at:
    [ERROR] npm ERR!     <https://github.com/npm/npm/issues>
    [ERROR] npm ERR! Linux 3.13.0-40-generic
    [ERROR] npm ERR! argv "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node" "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node_modules/npm/bin/npm-cli.js" "install" "--color=false"
    [ERROR] npm ERR! node v0.12.13
    [ERROR] npm ERR! npm  v2.15.0
    [ERROR] npm ERR! code ECONNRESET
    [ERROR] npm ERR! errno ECONNRESET
    [ERROR] npm ERR! syscall read
    [ERROR] 
    [ERROR] npm ERR! network read ECONNRESET
    [ERROR] npm ERR! network This is most likely not a problem with npm itself
    [ERROR] npm ERR! network and is related to network connectivity.
    [ERROR] npm ERR! network In most cases you are behind a proxy or have bad network settings.
    [ERROR] npm ERR! network 
    [ERROR] npm ERR! network If you are behind a proxy, please make sure that the
    [ERROR] npm ERR! network 'proxy' config is set properly.  See: 'npm help config'
    [ERROR] npm ERR! Linux 3.13.0-40-generic
    [ERROR] npm ERR! argv "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node" "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node_modules/npm/bin/npm-cli.js" "install" "--color=false"
    [ERROR] npm ERR! node v0.12.13
    [ERROR] npm ERR! npm  v2.15.0
    [ERROR] npm ERR! code ECONNRESET
    [ERROR] npm ERR! errno ECONNRESET
    [ERROR] npm ERR! syscall read
    [ERROR] 
    [ERROR] npm ERR! network read ECONNRESET
    [ERROR] npm ERR! network This is most likely not a problem with npm itself
    [ERROR] npm ERR! network and is related to network connectivity.
    [ERROR] npm ERR! network In most cases you are behind a proxy or have bad network settings.
    [ERROR] npm ERR! network 
    [ERROR] npm ERR! network If you are behind a proxy, please make sure that the
    [ERROR] npm ERR! network 'proxy' config is set properly.  See: 'npm help config'
    [ERROR] npm ERR! Linux 3.13.0-40-generic
    [ERROR] npm ERR! argv "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node" "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node_modules/npm/bin/npm-cli.js" "install" "--color=false"
    [ERROR] npm ERR! node v0.12.13
    [ERROR] npm ERR! npm  v2.15.0
    [ERROR] npm ERR! code ECONNRESET
    [ERROR] npm ERR! errno ECONNRESET
    [ERROR] npm ERR! syscall read
    [ERROR] 
    [ERROR] npm ERR! network read ECONNRESET
    [ERROR] npm ERR! network This is most likely not a problem with npm itself
    [ERROR] npm ERR! network and is related to network connectivity.
    [ERROR] npm ERR! network In most cases you are behind a proxy or have bad network settings.
    [ERROR] npm ERR! network 
    [ERROR] npm ERR! network If you are behind a proxy, please make sure that the
    [ERROR] npm ERR! network 'proxy' config is set properly.  See: 'npm help config'
    [ERROR] npm ERR! Linux 3.13.0-40-generic
    [ERROR] npm ERR! argv "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node" "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node_modules/npm/bin/npm-cli.js" "install" "--color=false"
    [ERROR] npm ERR! node v0.12.13
    [ERROR] npm ERR! npm  v2.15.0
    [ERROR] npm ERR! code ECONNRESET
    [ERROR] npm ERR! errno ECONNRESET
    [ERROR] npm ERR! syscall read
    [ERROR] 
    [ERROR] npm ERR! network read ECONNRESET
    [ERROR] npm ERR! network This is most likely not a problem with npm itself
    [ERROR] npm ERR! network and is related to network connectivity.
    [ERROR] npm ERR! network In most cases you are behind a proxy or have bad network settings.
    [ERROR] npm ERR! network 
    [ERROR] npm ERR! network If you are behind a proxy, please make sure that the
    [ERROR] npm ERR! network 'proxy' config is set properly.  See: 'npm help config'
    [ERROR] npm ERR! Linux 3.13.0-40-generic
    [ERROR] npm ERR! argv "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node" "/home/travis/build/apache/incubator-zeppelin/zeppelin-web/node/node_modules/npm/bin/npm-cli.js" "install" "--color=false"
    [ERROR] npm ERR! node v0.12.13
    [ERROR] npm ERR! npm  v2.15.0
    [ERROR] npm ERR! code ECONNRESET
    [ERROR] npm ERR! errno ECONNRESET
    [ERROR] npm ERR! syscall read
    [ERROR] 
    [ERROR] npm ERR! network read ECONNRESET
    [ERROR] npm ERR! network This is most likely not a problem with npm itself
    [ERROR] npm ERR! network and is related to network connectivity.
    [ERROR] npm ERR! network In most cases you are behind a proxy or have bad network settings.
    [ERROR] npm ERR! network 
    [ERROR] npm ERR! network If you are behind a proxy, please make sure that the
    [ERROR] npm ERR! network 'proxy' config is set properly.  See: 'npm help config'
    [ERROR] 
    [ERROR] npm ERR! Please include the following file with any support request:
    [ERROR] npm ERR!     /home/travis/build/apache/incubator-zeppelin/zeppelin-web/npm-debug.log
    [INFO]                                                        
    ```


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/incubator-zeppelin/pull/747
  
    I think it's temporary failing. npm ERR will disappear when trigger CI again


We need a Zeppelin version compatible with Scala 2.11 because our libraries are written targetting that version. And they are not compatible with 2.10 including several using reflection methods only found in Scala 2.11.

Github user pabloa commented on the issue:

    https://github.com/apache/incubator-zeppelin/pull/747
  
    Hello @lresende,
    
    I tried your pull request and I am getting some NPE. Notebooks are not stored either. I tried the branch scala-210-211-NEW and I am getting compilation errors.
    
    Do you have some estimated time about getting a testable version of Zeppelin under 2.11? I will be happy to test it and report feedback.


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/incubator-zeppelin/pull/747
  
    Still working in progress, created a pullrequest to this branch, https://github.com/lresende/incubator-zeppelin/pull/1 which is trying to merge 2.10 and 2.11 code using reflection


Github user chbrown commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    I just tried out the `scala-210-211-rebased-moon` branch from `lresende/incubator-zeppelin.git` and it seems to be working, using Spark 1.6.1 built from source for Scala 2.11.8, but I ran into several web interface issues:
    * the interpreter settings page won't let me commit changes (console error: "scripts.js:1 Uncaught TypeError: Cannot read property 'propertyKey' of undefined"), so I had to set the `master` value directly in `conf/interpreter.json`
    * notebooks are not persisted, and the notebook import feature doesn't work (no discernible error message)
    
    Are these known issues, given that `scala-210-211-rebased-moon` isn't too far off master, or are they something that would be useful to look into fixing?


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @chbrown Thanks for testing and sharing problem. Let me see how interpreter setting page and notebook persistent problem can be fixed in this branch.


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @lresende I have merged both scala 2.11 and 2.10 on lresende#1. Could you take a look and merge if you think it is good?  CI is keep failing on download spark packages.
    
    After merge lresende#1, it's good idea to merge master to fix problem reported @chbrown and CI failure. If CI continues to fail after merge master, i can take a look.


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Thank you @Leemoonsoo, let me look at this tonight/tomorrow morning. And provide any findings on the reported issues.


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @Leemoonsoo this is now merged and rebased, will still do some test and investigate the issues reported. Others are welcome to help testing as well.


Github user prasadwagle commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @lresende I am getting a compiler error "package MutableSettings does not exist". This is the same error in the travis ci build. Here are the build commands I used.
    ```
    tw-172-25-130-145 incubator-zeppelin-prasadwagle (master) $ git fetch upstream pull/747/head:scala211_2
    tw-172-25-130-145 incubator-zeppelin-prasadwagle (master) $ git checkout scala211_2
    
    tw-172-25-130-145 incubator-zeppelin-prasadwagle (scala211_2) $ mvn install -DskipTests -Dcobertura.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Dscala-2.11 -Pscala-2.11 -Pscalding -Psparkr
    
    [ERROR] /Users/pwagle/workspace/zeppelin/incubator-zeppelin-prasadwagle/spark/src/main/java/org/apache/zeppelin/spark/SparkInterpreter.java:[525,20] package MutableSettings does not exist
    ```


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @prasadwagle Looks like a merge conflict, waiting for local build before pushing a fix for this.


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Ok, things are looking better now, the branch is rebased and I have started more testing based on Zeppelin and Spark 1.6.1 both compiled with Scala 2.11. I can run parts of the Zeppelin tutorial notebook, but the sql queries are hanging on the zeppelin side and I am investigating it now.


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Ok, looks like the hanging I was seeing was mostly a local issue in my Spark conf and is now fixed. 
    
    I have Zeppelin and Spark built with Scala 2.11, and the tutorial notebook works well, I can also update the interpreter properties and that works well as well. Export is working, but Importing as mentioned by @chbrown just don't do anything. I will try with master and see if this is an issue specific to the scala 2.11 branch or not.
    
    Btw,  I am not sure if the CI build these days is helping or not, as it's very hard to trust that failures are related to changes.


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @Leemoonsoo What should be our next step here ?


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @lresende we have some problem on CI build nowadays, but i can see an error comes from this branch with the second test profile (with scala-2.11). Let me take a look
    
    ```
    org.apache.zeppelin.interpreter.LazyOpenInterpreter@5275ffcf
    Exception in thread "pool-1-thread-3" java.lang.NoSuchMethodError: org.apache.spark.repl.SparkILoop.intp()Lscala/tools/nsc/interpreter/IMain;
    	at org.apache.zeppelin.spark.SparkInterpreter.open(SparkInterpreter.java:553)
    	at org.apache.zeppelin.interpreter.LazyOpenInterpreter.open(LazyOpenInterpreter.java:69)
    	at org.apache.zeppelin.interpreter.LazyOpenInterpreter.getProgress(LazyOpenInterpreter.java:110)
    	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getProgress(RemoteInterpreterServer.java:404)
    	at org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getProgress.getResult(RemoteInterpreterService.java:1509)
    	at org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getProgress.getResult(RemoteInterpreterService.java:1494)
    	at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39)
    	at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39)
    	at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:285)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    Exception in thread "pool-1-thread-2" java.lang.NoSuchMethodError: scala.runtime.ObjectRef.create(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
    	at org.apache.zeppelin.rinterpreter.RContext$.apply(RContext.scala:280)
    	at org.apache.zeppelin.rinterpreter.RInterpreter.rContext$lzycompute(RInterpreter.scala:44)
    	at org.apache.zeppelin.rinterpreter.RInterpreter.rContext(RInterpreter.scala:44)
    	at org.apache.zeppelin.rinterpreter.RInterpreter.getScheduler(RInterpreter.scala:95)
    	at org.apache.zeppelin.rinterpreter.KnitR.getScheduler(KnitR.java:98)
    	at org.apache.zeppelin.interpreter.LazyOpenInterpreter.getScheduler(LazyOpenInterpreter.java:116)
    	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus(RemoteInterpreterServer.java:502)
    	at org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getStatus.getResult(RemoteInterpreterService.java:1590)
    	at org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getStatus.getResult(RemoteInterpreterService.java:1575)
    	at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39)
    	at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39)
    	at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:285)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    ```


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @Leemoonsoo great, let me investigate the issue


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @lresende I've made PR https://github.com/lresende/incubator-zeppelin/pull/2 that fixes scala 2.11 test profile. Please take a look and merge if it looks fine.


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @Leemoonsoo Thanks for your help, this is now rebased and most of the test jobs are passing, except with one issue that I am seeing in Travis, but seems to work ok locally:
    ...
    [INFO] Zeppelin: Display system apis ...................... FAILURE [  2.747 s]
    ...
    [31m*** RUN ABORTED ***[0m
    [31m  java.lang.NoSuchMethodError: scala.runtime.IntRef.create(I)Lscala/runtime/IntRef;[0m
    [31m  at org.apache.zeppelin.display.angular.AbstractAngularElemTest$$anonfun$1.apply$mcV$sp(AbstractAngularElemTest.scala:62)[0m
    [31m  at org.apache.zeppelin.display.angular.AbstractAngularElemTest$$anonfun$1.apply(AbstractAngularElemTest.scala:59)[0m
    [31m  at org.apache.zeppelin.display.angular.AbstractAngularElemTest$$anonfun$1.apply(AbstractAngularElemTest.scala:59)[0m
    [31m  at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
    [31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
    [31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
    [31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
    [31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
    [31m  at org.scalatest.FlatSpecLike$$anon$1.apply(FlatSpecLike.scala:1647)[0m
    [31m  at org.scalatest.Suite$class.withFixture(Suite.scala:1122)[0m
    
    Any ideas ?



Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    If you see lines above, scalatest plugin works with scala-2.10 libraries.
    ```
    [INFO] ------------------------------------------------------------------------
    [INFO] Building Zeppelin: Display system apis 0.7.0-SNAPSHOT
    [INFO] ------------------------------------------------------------------------
    [INFO] Downloading: http://repo.maven.apache.org/maven2/org/scala-lang/scala-library/2.10.5/scala-library-2.10.5.pom
    [INFO] Downloaded: http://repo.maven.apache.org/maven2/org/scala-lang/scala-library/2.10.5/scala-library-2.10.5.pom (2 KB at 31.2 KB/sec)
    [INFO] Downloading: http://repo.maven.apache.org/maven2/org/scalatest/scalatest_2.10/2.2.4/scalatest_2.10-2.2.4.pom
    [INFO] Downloaded: http://repo.maven.apache.org/maven2/org/scalatest/scalatest_2.10/2.2.4/scalatest_2.10-2.2.4.pom (6 KB at 210.9 KB/sec)
    [INFO] Downloading: http://repo.maven.apache.org/maven2/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.pom
    [INFO] Downloaded: http://repo.maven.apache.org/maven2/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.pom (2 KB at 86.2 KB/sec)
    [INFO] Downloading: http://repo.maven.apache.org/maven2/org/scala-lang/scala-library/2.10.5/scala-library-2.10.5.jar
    [INFO] Downloading: http://repo.maven.apache.org/maven2/org/scalatest/scalatest_2.10/2.2.4/scalatest_2.10-2.2.4.jar
    [INFO] Downloading: http://repo.maven.apache.org/maven2/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar
    [INFO] Downloaded: http://repo.maven.apache.org/maven2/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar (3129 KB at 15260.4 KB/sec)
    [INFO] Downloaded: http://repo.maven.apache.org/maven2/org/scala-lang/scala-library/2.10.5/scala-library-2.10.5.jar (6964 KB at 26886.7 KB/sec)
    [INFO] Downloaded: http://repo.maven.apache.org/maven2/org/scalatest/scalatest_2.10/2.2.4/scalatest_2.10-2.2.4.jar (7358 KB at 25635.6 KB/sec)
    ```
    
    It's because of `-Dscala-2.11` flag is not effective in testing. 
    I think you'll need move `-Dscala-2.11` (and `-Dscala-2.10`) flag from `BUILD_FLAG` to `PROFILE` in .travis.yml


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    We finally got a green build with Scala 2.11 thanks for @Leemoonsoo help on resolving the couple remaining issues... I now also rebased to latest master and this PR should be ready to final review.


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @lresende Could you trigger CI again and see if scala-2.11 profile pass the flaky test?


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @Leemoonsoo All green again.


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @lresende Awesome!
    
    Tested and Looks good to me!


Github user bzz commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Looks 👍 💯  to me
     


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @bzz and @Leemoonsoo 
    
    I have updated the readme to match the ci, and also refactored the reflection utility methods to a separate class.


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Looks like there were some network problem on last CI bulid. Could you trigger ci once again and see if it goes to green?


Github user lresende commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @Leemoonsoo all back to green


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Looks good to me!


Github user bzz commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Looks great to me! Thank you @lresende 
    
    Let's merge if there is no further discussion


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    Merging it into master and branch-0.6


Github user asfgit closed the pull request at:

    https://github.com/apache/zeppelin/pull/747


Github user bzz commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @Leemoonsoo could you into non-trivial merge conflicts that happen on merging to `branch-0.6` ?


Github user Leemoonsoo commented on the issue:

    https://github.com/apache/zeppelin/pull/747
  
    @bzz Sure


[~luciano resende] why did you change {{ignite.version}} property in {{ignite/pom.xml}} file from 1.6.0 to 1.5.0.final? Did you have any problems with Ignite 1.6.0?
I've created ticket ZEPPELIN-1308. Could Ignite version upgrade break something?

It might have been a mistake, I wanted to remove the specific scala properties :
-    <ignite.scala.binary.version>2.10</ignite.scala.binary.version>
-    <ignite.scala.version>2.10.4</ignite.scala.version>

Ok, thanks for reply, Luciano.

