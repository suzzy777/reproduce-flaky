Could you please post some logs about your failures sir? Where is the actual slow down happens? For zk server or zk client?

Whoops. I'd actually put aside errors and meant to add them here.

[~Apache9] Here are some of the failures I'd see:

Here is what I'd get if we didn't wait on zk to connect:


[INFO] Results:
[INFO]
[ERROR] Errors:
[ERROR] org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient.org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient
[ERROR]   Run 1: TestReadOnlyZKClient.setUp:74 Â» ConnectionLoss KeeperErrorCode = ConnectionLos...
[ERROR]   Run 2: TestReadOnlyZKClient.tearDown:91 NullPointer
[INFO]


Same was happening in TestZKNodeTracker


This is the error I'd get sometimes after session was closed:

[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.579 s - in org.apache.hadoop.hbase.zookeeper.TestZKMulti
[INFO] Running org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient
[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.84 s <<< FAILURE! - in org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient
[ERROR] testSessionExpire(org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient)  Time elapsed: 2.431 s  <<< ERROR!
java.util.concurrent.ExecutionException: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test
        at org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient.testSessionExpire(TestReadOnlyZKClient.java:145)
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test

Other failures happened because default TestZKMainServer timeout was way too short at 1second.

[~Apache9] you ok w/ my committing this. Got a good test run over in HBASE-19694 (I'd posted the patch here there by mistake).

Mind uploading the whole surefire output file for TestReadOnlyZKClient? It is a bit strange, the retry number is 30 IIRC and the retry interval is 1 second, but we fail in 5.84 seconds...

Thanks.

I'm OK with the waiting until connected modification and increasing session timeout.

The only concern is that we catch and ignore a exception in TestZKReadOnlyClient...

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 17s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 13s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m 38s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m 34s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 14m  1s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 35s{color} | {color:green} hbase-zookeeper in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  8s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 26m 24s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905556/HBASE-19753.branch-2.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  shadedjars  hadoopcheck  xml  compile  findbugs  hbaseanti  checkstyle  |
| uname | Linux 0a33f57e072e 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / d524768528 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
| whitespace | https://builds.apache.org/job/PreCommit-HBASE-Build/10993/artifact/patchprocess/whitespace-eol.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/10993/testReport/ |
| modules | C: hbase-zookeeper U: hbase-zookeeper |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/10993/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



Thanks for taking a look [~Apache9] Here is info.

Here is failure:

[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient
[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 250.187 s <<< FAILURE! - in org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient
[ERROR] testSessionExpire(org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient)  Time elapsed: 156.005 s  <<< ERROR!
java.util.concurrent.ExecutionException: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test
        at org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient.testSessionExpire(TestReadOnlyZKClient.java:145)
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test


{code}
119 2018-01-10 15:22:41,604 INFO  [main] hbase.ResourceChecker(148): before: zookeeper.TestReadOnlyZKClient#testSessionExpire Thread=13, OpenFileDescriptor=112, MaxFileDescriptor=32000, SystemLoadAverage=67, ProcessCount=833, AvailableMemoryMB=12065
120 2018-01-10 15:22:41,605 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(438): Initiating client connection, connectString=localhost:51573 sessionTimeout=90000 watcher=org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient$$Lambda$11/1499902826@57a14636
121 2018-01-10 15:22:41,607 INFO  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1032): Opening socket connection to server user-164-127-0-0.play-internet.pl/164.127.0.0:51573. Will not attempt to authenticate using SASL (unknown error)
122 2018-01-10 15:22:44,606 INFO  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient(305): 0x57f23557 no activities for 3000 ms, close active connection. Will reconnect next time when there are new requests.
123 2018-01-10 15:22:44,606 DEBUG [ReadOnlyZKClient] zookeeper.ZooKeeper(673): Closing session: 0x0
124 2018-01-10 15:22:44,606 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1370): Closing client for session: 0x0
125 2018-01-10 15:23:26,648 WARN  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1108): Client session timed out, have not heard from server in 45043ms for sessionid 0x0
126 2018-01-10 15:23:26,648 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1146): An exception was thrown while closing send thread for session 0x0 : Client session timed out, have not heard from server in 45043ms for sessionid 0x0
127 2018-01-10 15:23:26,649 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(203): Ignoring exception during shutdown input
128 java.net.SocketException: Socket is not connected
129   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
130   at sun.nio.ch.Net.translateException(Net.java:157)
131   at sun.nio.ch.Net.translateException(Net.java:163)
132   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:401)
133   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
134   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
135   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
136 Caused by: java.nio.channels.NotYetConnectedException
137   at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:782)
138   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
139   ... 3 more
140 2018-01-10 15:23:26,653 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(210): Ignoring exception during shutdown output
141 java.net.SocketException: Socket is not connected
142   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
143   at sun.nio.ch.Net.translateException(Net.java:157)
144   at sun.nio.ch.Net.translateException(Net.java:163)
145   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:409)
146   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
147   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
148   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
149 Caused by: java.nio.channels.NotYetConnectedException
150   at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:799)
151   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
152   ... 3 more
153 2018-01-10 15:23:26,754 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1354): Disconnecting client for session: 0x0
154 2018-01-10 15:23:26,755 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(684): Session: 0x0 closed
155 2018-01-10 15:23:26,755 INFO  [ReadOnlyZKClient-EventThread] zookeeper.ClientCnxn$EventThread(519): EventThread shut down for session: 0x0
156 2018-01-10 15:23:26,755 WARN  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient$ZKTask$1(178): 0x57f23557 failed for get of /test, code = CONNECTIONLOSS, retries = 1
157 2018-01-10 15:23:26,855 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(438): Initiating client connection, connectString=localhost:51573 sessionTimeout=90000 watcher=org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient$$Lambda$11/1499902826@57a14636
158 2018-01-10 15:23:26,857 INFO  [ReadOnlyZKClient-SendThread(localhost:51573)] zookeeper.ClientCnxn$SendThread(1032): Opening socket connection to server localhost/127.0.0.1:51573. Will not attempt to authenticate using SASL (unknown error)
159 2018-01-10 15:23:26,858 INFO  [ReadOnlyZKClient-SendThread(localhost:51573)] zookeeper.ClientCnxn$SendThread(876): Socket connection established to localhost/127.0.0.1:51573, initiating session
160 2018-01-10 15:23:26,858 INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:51573] server.NIOServerCnxnFactory(192): Accepted socket connection from /127.0.0.1:34294
161 2018-01-10 15:23:26,858 DEBUG [ReadOnlyZKClient-SendThread(localhost:51573)] zookeeper.ClientCnxn$SendThread(949): Session establishment request sent on localhost/127.0.0.1:51573
162 2018-01-10 15:23:26,859 DEBUG [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:51573] server.ZooKeeperServer(884): Session establishment request from client /127.0.0.1:34294 client's lastZxid is 0x0
163 2018-01-10 15:23:26,859 INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:51573] server.ZooKeeperServer(942): Client attempting to establish new session at /127.0.0.1:34294
164 2018-01-10 15:23:26,860 DEBUG [SyncThread:0] server.FinalRequestProcessor(88): Processing request:: sessionid:0x160e261f37a0002 type:createSession cxid:0x0 zxid:0xb txntype:-10 reqpath:n/a
165 2018-01-10 15:23:26,861 DEBUG [SyncThread:0] server.FinalRequestProcessor(160): sessionid:0x160e261f37a0002 type:createSession cxid:0x0 zxid:0xb txntype:-10 reqpath:n/a
166 2018-01-10 15:23:26,862 INFO  [SyncThread:0] server.ZooKeeperServer(687): Established session 0x160e261f37a0002 with negotiated timeout 40000 for client /127.0.0.1:34294
167 2018-01-10 15:23:26,862 INFO  [ReadOnlyZKClient-SendThread(localhost:51573)] zookeeper.ClientCnxn$SendThread(1299): Session establishment complete on server localhost/127.0.0.1:51573, sessionid = 0x160e261f37a0002, negotiated timeout = 40000
168 2018-01-10 15:23:26,863 DEBUG [SyncThread:0] server.FinalRequestProcessor(88): Processing request:: sessionid:0x160e261f37a0002 type:getData cxid:0x1 zxid:0xfffffffffffffffe txntype:unknown reqpath:/test
169 2018-01-10 15:23:26,863 DEBUG [SyncThread:0] server.FinalRequestProcessor(160): sessionid:0x160e261f37a0002 type:getData cxid:0x1 zxid:0xfffffffffffffffe txntype:unknown reqpath:/test
170 2018-01-10 15:23:26,865 DEBUG [ReadOnlyZKClient-SendThread(localhost:51573)] zookeeper.ClientCnxn$SendThread(843): Reading reply sessionid:0x160e261f37a0002, packet:: clientPath:/test serverPath:/test finished:false header:: 1,4  replyHeader:: 1,11,0  request:: '/test,F  response:: #ffffffc77867ffffffcbffffffa7ffffffd12dffffffa5ffffffb46f,s{2,2,1515626558454,15
2018-01-10 15:23:26,865 INFO  [main] server.ZooKeeperServer(337): Closing session 0x160e261f37a0002
172 2018-01-10 15:23:26,866 INFO  [ProcessThread(sid:0 cport:51573):] server.PrepRequestProcessor(486): Processed session termination for sessionid: 0x160e261f37a0002
173 2018-01-10 15:23:26,866 DEBUG [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:51573] server.ZooKeeperServer(754): Dropping request: No session with sessionid 0x160e261f37a0002 exists, probably expired and removed
174 2018-01-10 15:23:26,866 DEBUG [SyncThread:0] server.FinalRequestProcessor(88): Processing request:: sessionid:0x160e261f37a0002 type:closeSession cxid:0x0 zxid:0xc txntype:-11 reqpath:n/a
175 2018-01-10 15:23:26,867 INFO  [SyncThread:0] server.NIOServerCnxn(1044): Closed socket connection for client /127.0.0.1:34294 which had sessionid 0x160e261f37a0002
176 2018-01-10 15:23:26,868 INFO  [ReadOnlyZKClient-SendThread(localhost:51573)] zookeeper.ClientCnxn$SendThread(1158): Unable to read additional data from server sessionid 0x160e261f37a0002, likely server has closed socket, closing socket connection and attempting reconnect
177 2018-01-10 15:23:26,968 WARN  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient$ZKTask$1(178): 0x57f23557 failed for get of /test, code = CONNECTIONLOSS, retries = 1
178 2018-01-10 15:23:27,190 INFO  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1032): Opening socket connection to server user-164-127-0-0.play-internet.pl/164.127.0.0:51573. Will not attempt to authenticate using SASL (unknown error)
179 2018-01-10 15:23:30,069 INFO  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient(305): 0x57f23557 no activities for 3000 ms, close active connection. Will reconnect next time when there are new requests.
180 2018-01-10 15:23:30,069 DEBUG [ReadOnlyZKClient] zookeeper.ZooKeeper(673): Closing session: 0x160e261f37a0002
181 2018-01-10 15:23:30,069 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1370): Closing client for session: 0x160e261f37a0002
182 2018-01-10 15:23:46,976 WARN  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1108): Client session timed out, have not heard from server in 20008ms for sessionid 0x160e261f37a0002
183 2018-01-10 15:23:46,977 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1146): An exception was thrown while closing send thread for session 0x160e261f37a0002 : Client session timed out, have not heard from server in 20008ms for sessionid 0x160e261f37a0002
184 2018-01-10 15:23:46,977 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(203): Ignoring exception during shutdown input
185 java.net.SocketException: Socket is not connected
186   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
187   at sun.nio.ch.Net.translateException(Net.java:157)
188   at sun.nio.ch.Net.translateException(Net.java:163)
189   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:401)
190   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
191   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
192   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
193 Caused by: java.nio.channels.NotYetConnectedException
194   at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:782)
195   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
196   ... 3 more
197 2018-01-10 15:23:46,977 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(210): Ignoring exception during shutdown output
198 java.net.SocketException: Socket is not connected
199   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
200   at sun.nio.ch.Net.translateException(Net.java:157)
201   at sun.nio.ch.Net.translateException(Net.java:163)
202   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:409)
203   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
204   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
205   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
206 Caused by: java.nio.channels.NotYetConnectedException
207   at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:799)
208   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
209   ... 3 more
210 2018-01-10 15:23:47,078 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1354): Disconnecting client for session: 0x160e261f37a0002
211 2018-01-10 15:23:47,079 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(684): Session: 0x160e261f37a0002 closed
212 2018-01-10 15:23:47,079 INFO  [ReadOnlyZKClient-EventThread] zookeeper.ClientCnxn$EventThread(519): EventThread shut down for session: 0x160e261f37a0002
213 2018-01-10 15:23:47,079 WARN  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient$ZKTask$1(178): 0x57f23557 failed for get of /test, code = CONNECTIONLOSS, retries = 2
214 2018-01-10 15:23:47,179 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(438): Initiating client connection, connectString=localhost:51573 sessionTimeout=90000 watcher=org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient$$Lambda$11/1499902826@57a14636
215 2018-01-10 15:23:47,180 INFO  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1032): Opening socket connection to server user-164-127-0-0.play-internet.pl/164.127.0.0:51573. Will not attempt to authenticate using SASL (unknown error)
216 2018-01-10 15:23:50,180 INFO  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient(305): 0x57f23557 no activities for 3000 ms, close active connection. Will reconnect next time when there are new requests.
217 2018-01-10 15:23:50,181 DEBUG [ReadOnlyZKClient] zookeeper.ZooKeeper(673): Closing session: 0x0
218 2018-01-10 15:23:50,181 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1370): Closing client for session: 0x0
219 2018-01-10 15:24:32,222 WARN  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1108): Client session timed out, have not heard from server in 45042ms for sessionid 0x0
220 2018-01-10 15:24:32,223 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1146): An exception was thrown while closing send thread for session 0x0 : Client session timed out, have not heard from server in 45042ms for sessionid 0x0
221 2018-01-10 15:24:32,223 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(203): Ignoring exception during shutdown input
222 java.net.SocketException: Socket is not connected
223   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
224   at sun.nio.ch.Net.translateException(Net.java:157)
225   at sun.nio.ch.Net.translateException(Net.java:163)
226   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:401)
227   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
228   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
229   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
230 Caused by: java.nio.channels.NotYetConnectedException
231   at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:782)
232   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
233   ... 3 more
234 2018-01-10 15:24:32,223 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(210): Ignoring exception during shutdown output
235 java.net.SocketException: Socket is not connected
236   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
237   at sun.nio.ch.Net.translateException(Net.java:157)
238   at sun.nio.ch.Net.translateException(Net.java:163)
239   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:409)
240   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
241   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
242   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
243 Caused by: java.nio.channels.NotYetConnectedException
244   at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:799)
245   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
246   ... 3 more
247 2018-01-10 15:24:32,324 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1354): Disconnecting client for session: 0x0
248 2018-01-10 15:24:32,325 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(684): Session: 0x0 closed
249 2018-01-10 15:24:32,325 INFO  [ReadOnlyZKClient-EventThread] zookeeper.ClientCnxn$EventThread(519): EventThread shut down for session: 0x0
250 2018-01-10 15:24:32,325 WARN  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient$ZKTask$1(178): 0x57f23557 failed for get of /test, code = CONNECTIONLOSS, retries = 3
251 2018-01-10 15:24:32,425 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(438): Initiating client connection, connectString=localhost:51573 sessionTimeout=90000 watcher=org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient$$Lambda$11/1499902826@57a14636
252 2018-01-10 15:24:32,427 INFO  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1032): Opening socket connection to server user-164-127-0-0.play-internet.pl/164.127.0.0:51573. Will not attempt to authenticate using SASL (unknown error)
253 2018-01-10 15:24:35,427 INFO  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient(305): 0x57f23557 no activities for 3000 ms, close active connection. Will reconnect next time when there are new requests.
254 2018-01-10 15:24:35,427 DEBUG [ReadOnlyZKClient] zookeeper.ZooKeeper(673): Closing session: 0x0
255 2018-01-10 15:24:35,427 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1370): Closing client for session: 0x0
256 2018-01-10 15:25:17,468 WARN  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1108): Client session timed out, have not heard from server in 45042ms for sessionid 0x0
257 2018-01-10 15:25:17,469 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1146): An exception was thrown while closing send thread for session 0x0 : Client session timed out, have not heard from server in 45042ms for sessionid 0x0
258 2018-01-10 15:25:17,469 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(203): Ignoring exception during shutdown input
259 java.net.SocketException: Socket is not connected
260   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
261   at sun.nio.ch.Net.translateException(Net.java:157)
262   at sun.nio.ch.Net.translateException(Net.java:163)
263   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:401)
264   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
265   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
266   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
267 Caused by: java.nio.channels.NotYetConnectedException
268   at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:782)
269   at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
270   ... 3 more
271 2018-01-10 15:25:17,469 DEBUG [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxnSocketNIO(210): Ignoring exception during shutdown output
272 java.net.SocketException: Socket is not connected
273   at sun.nio.ch.Net.translateToSocketException(Net.java:123)
274   at sun.nio.ch.Net.translateException(Net.java:157)
275   at sun.nio.ch.Net.translateException(Net.java:163)
276   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:409)
277   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
278   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
279   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1182)
280 Caused by: java.nio.channels.NotYetConnectedException
281   at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:799)
282   at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
283   ... 3 more
284 2018-01-10 15:25:17,570 DEBUG [ReadOnlyZKClient] zookeeper.ClientCnxn(1354): Disconnecting client for session: 0x0
285 2018-01-10 15:25:17,571 INFO  [ReadOnlyZKClient] zookeeper.ZooKeeper(684): Session: 0x0 closed
286 2018-01-10 15:25:17,571 INFO  [ReadOnlyZKClient-EventThread] zookeeper.ClientCnxn$EventThread(519): EventThread shut down for session: 0x0
287 2018-01-10 15:25:17,571 WARN  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient$ZKTask$1(182): 0x57f23557 failed for get of /test, code = CONNECTIONLOSS, retries = 3, give up
288 2018-01-10 15:25:17,609 INFO  [main] hbase.ResourceChecker(172): after: zookeeper.TestReadOnlyZKClient#testSessionExpire Thread=12 (was 13), OpenFileDescriptor=108 (was 112), MaxFileDescriptor=32000 (was 32000), SystemLoadAverage=6 (was 67), ProcessCount=833 (was 833), AvailableMemoryMB=12090 (was 12065) - AvailableMemoryMB LEAK? -
{code}

This is pretty:

125 2018-01-10 15:23:26,648 WARN  [ReadOnlyZKClient-SendThread(user-164-127-0-0.play-internet.pl:51573)] zookeeper.ClientCnxn$SendThread(1108): Client session timed out, have not heard from server in 45043ms for sessionid 0x0

Will take a look soon.

Let me dump this info in here in case it helps... 

I'm looking at flakies. It seems like TestHCM hangs on occasion because we can't read clusterid using the ReadOnlyZKClient that is in the ZKAsyncRegistry.

The Master has written it (I have it dump the log when it thinks it wrote it)... then later I see the ReadOnlyZKClient not being able to find it. The Master startup fails because we are stuck at this spot. Here is a bit of log...


{code}
2018-01-10 15:43:06,512 INFO  [M:0;ve0524:60789] master.HMaster(805): CLUSTERID SET
2018-01-10 15:43:06,536 INFO  [M:0;ve0524:60789] balancer.BaseLoadBalancer(1037): slop=0.001, tablesOnMaster=false, systemTablesOnMaster=false
2018-01-10 15:43:06,537 INFO  [M:0;ve0524:60789] balancer.StochasticLoadBalancer(214): Loaded config; maxSteps=1000000, stepsPerRegion=800, maxRunningTime=30000, isByTable=false, etc.
2018-01-10 15:43:06,538 DEBUG [M:0;ve0524:60789] zookeeper.ZKUtil(355): master:60789-0x160e26d00200010, quorum=localhost:50723, baseZNode=/hbase Set watcher on existing znode=/hbase/balancer
2018-01-10 15:43:06,539 DEBUG [M:0;ve0524:60789] zookeeper.ZKUtil(357): master:60789-0x160e26d00200010, quorum=localhost:50723, baseZNode=/hbase Set watcher on znode that does not yet exist, /hbase/normalizer
2018-01-10 15:43:06,541 DEBUG [M:0;ve0524:60789] zookeeper.ZKUtil(357): master:60789-0x160e26d00200010, quorum=localhost:50723, baseZNode=/hbase Set watcher on znode that does not yet exist, /hbase/switch/split
2018-01-10 15:43:06,541 DEBUG [M:0;ve0524:60789] zookeeper.ZKUtil(357): master:60789-0x160e26d00200010, quorum=localhost:50723, baseZNode=/hbase Set watcher on znode that does not yet exist, /hbase/switch/merge
2018-01-10 15:43:06,543 DEBUG [Time-limited test-EventThread] zookeeper.ZKWatcher(460): regionserver:35280-0x160e26d00200011, quorum=localhost:50723, baseZNode=/hbase Received ZooKeeper Event, type=NodeCreated, state=SyncConnected, path=/hbase/running
2018-01-10 15:43:06,543 DEBUG [Time-limited test-EventThread] zookeeper.ZKWatcher(460): regionserver:57007-0x160e26d00200012, quorum=localhost:50723, baseZNode=/hbase Received ZooKeeper Event, type=NodeCreated, state=SyncConnected, path=/hbase/running
2018-01-10 15:43:06,543 DEBUG [Time-limited test-EventThread] zookeeper.ZKWatcher(460): master:60789-0x160e26d00200010, quorum=localhost:50723, baseZNode=/hbase Received ZooKeeper Event, type=NodeCreated, state=SyncConnected, path=/hbase/running
2018-01-10 15:43:06,546 INFO  [M:0;ve0524:60789] zookeeper.ReadOnlyZKClient(129): Start read only zookeeper connection 0x655063fa to localhost:50723, session timeout 90000 ms, retries 30, retry interval 1000 ms, keep alive 60000 ms
2018-01-10 15:43:18,316 INFO  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient(305): 0x1cbc2aa9 no activities for 60000 ms, close active connection. Will reconnect next time when there are new requests.
2018-01-10 15:43:33,249 INFO  [ReadOnlyZKClient] zookeeper.ReadOnlyZKClient(305): 0x7dc94b7b no activities for 60000 ms, close active connection. Will reconnect next time when there are new requests.                                                                                                                                                                        Process Thread Dump: Thread dump because Master not active after 30000 seconds
....
{code}

I added threadumping if Master can't start and Master seems stuck here:

{code}
Thread 1646 (M:0;ve0524:60789):
  State: WAITING
  Blocked count: 74
  Waited count: 130
  Waiting on java.util.concurrent.CompletableFuture$Signaller@2b7d5aee
  Stack:
    sun.misc.Unsafe.park(Native Method)
    java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
    java.util.concurrent.CompletableFuture$Signaller.block(CompletableFuture.java:1693)
    java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3323)
    java.util.concurrent.CompletableFuture.waitingGet(CompletableFuture.java:1729)
    java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1895)
    org.apache.hadoop.hbase.client.ConnectionImplementation.retrieveClusterId(ConnectionImplementation.java:526)
    org.apache.hadoop.hbase.client.ConnectionImplementation.<init>(ConnectionImplementation.java:286)
    org.apache.hadoop.hbase.client.ConnectionUtils$ShortCircuitingClusterConnection.<init>(ConnectionUtils.java:141)
    org.apache.hadoop.hbase.client.ConnectionUtils$ShortCircuitingClusterConnection.<init>(ConnectionUtils.java:132)
    org.apache.hadoop.hbase.client.ConnectionUtils.createShortCircuitConnection(ConnectionUtils.java:185)
    org.apache.hadoop.hbase.regionserver.HRegionServer.createClusterConnection(HRegionServer.java:770)
    org.apache.hadoop.hbase.regionserver.HRegionServer.setupClusterConnection(HRegionServer.java:801)
    org.apache.hadoop.hbase.master.HMaster.createServerManager(HMaster.java:1035)
    org.apache.hadoop.hbase.master.HMaster.initializeZKBasedSystemTrackers(HMaster.java:726)
    org.apache.hadoop.hbase.master.HMaster.finishActiveMasterInitialization(HMaster.java:811)
    org.apache.hadoop.hbase.master.HMaster.startActiveMasterManager(HMaster.java:2028)
    org.apache.hadoop.hbase.master.HMaster.run(HMaster.java:546)
    java.lang.Thread.run(Thread.java:748)
{code}

The timeout for readonly is > how long we wait for Master to come up.

This latter seems to make for test flakeyness on my internal cluster at least. Usually this TestHCM passes.

The problem is that, the keepalive time is too small, that it will close the connection to zk while we are still trying to connect to zk.

The design philosophy here is that the keep alive time is usually much greater than the operation time. The default value is 1 minute. Here we want to test the keep alive mechanism so we set the keep alive time to 3 seconds, which is too small for your environment. You can try up it to see if it helps.

And it is really strange that, why a zk connecting can take even more than 3 seconds? There must be something wrong. What's your OS sir? Linux or mac?

Thanks.

{code}
conf.setInt(ReadOnlyZKClient.KEEPALIVE_MILLIS, 3000);
{code}

Up the 3000 here to 10000, or even more.

And in testGetAndExists, also up the wait time.

You can try this to see if it works for you [~stack].

Thanks.

This is on a linux machine: $ more /etc/issue
Ubuntu 14.04.4 LTS \n \l

Yeah, I need to figure why zk setup is slow -- some network config I need to figure. For now it is turning up some interesting issues.

I'm looking at ReadOnlyZKClient#getZk...  It returns a new ZooKeeper w/o waiting on connecting.  But adding a wait until connected doesn't seem to help...  At least in the case I describe above.

I think add a wait until connected in getZk could help, the keep alive logic and getZk are in the same thread so it will not close the zk if you are waiting on the connecting.

Thanks.

.002 adds wait to getZK in ReadOnlyZKClient.
.003 Fixes a type.

+1 on the approach of patch v3. But let's introduce a helper method for waiting the zk to be connected? The same code appears several times in the patch.

Thanks.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 11s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m  5s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 28s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 30s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 35s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m  8s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 31s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:red}-1{color} | {color:red} mvninstall {color} | {color:red}  1m 24s{color} | {color:red} root in the patch failed. {color} |
| {color:red}-1{color} | {color:red} compile {color} | {color:red}  0m 11s{color} | {color:red} hbase-client in the patch failed. {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  0m 11s{color} | {color:red} hbase-client in the patch failed. {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 24s{color} | {color:red} hbase-client: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:red}-1{color} | {color:red} shadedjars {color} | {color:red}  1m 30s{color} | {color:red} patch has 68 errors when building our shaded downstream artifacts. {color} |
| {color:red}-1{color} | {color:red} hadoopcheck {color} | {color:red}  2m 34s{color} | {color:red} The patch causes 68 errors with Hadoop v2.6.5. {color} |
| {color:red}-1{color} | {color:red} hadoopcheck {color} | {color:red}  3m 40s{color} | {color:red} The patch causes 68 errors with Hadoop v2.7.4. {color} |
| {color:red}-1{color} | {color:red} hadoopcheck {color} | {color:red}  4m 49s{color} | {color:red} The patch causes 68 errors with Hadoop v3.0.0. {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m  9s{color} | {color:red} hbase-client in the patch failed. {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  0m 11s{color} | {color:red} hbase-client in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 34s{color} | {color:green} hbase-zookeeper in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 15s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 20m 53s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905589/HBASE-19753.branch-2.002.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  |
| uname | Linux 479e5beb0570 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / d524768528 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
| mvninstall | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/artifact/patchprocess/patch-mvninstall-root.txt |
| compile | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/artifact/patchprocess/patch-compile-hbase-client.txt |
| javac | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/artifact/patchprocess/patch-compile-hbase-client.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/artifact/patchprocess/diff-checkstyle-hbase-client.txt |
| javadoc | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/artifact/patchprocess/patch-javadoc-hbase-client.txt |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/artifact/patchprocess/patch-unit-hbase-client.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/testReport/ |
| modules | C: hbase-client hbase-zookeeper U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11001/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



Running .003 on three machines in a loop, TestReadOnlyZKClient passes reliably. Running the hbase-zookeeper suite, they all pass on these machines now too. Let me make a patch w/ a helper.


| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  2s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 13s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 15s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 42s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 54s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 38s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m  9s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 16m  0s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 47s{color} | {color:green} hbase-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 36s{color} | {color:green} hbase-zookeeper in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 16s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 40m 21s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905592/HBASE-19753.branch-2.003.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  |
| uname | Linux 5ec3f371abc1 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / d524768528 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11002/testReport/ |
| modules | C: hbase-client hbase-zookeeper U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11002/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



.004 implements the [~Apache9] suggestion removing dupe'd code.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  9s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 47s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 42s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 46s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 31s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 28s{color} | {color:red} hbase-client: The patch generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0) {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 12s{color} | {color:red} hbase-zookeeper: The patch generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m  8s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 16m 10s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 46s{color} | {color:green} hbase-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 35s{color} | {color:green} hbase-zookeeper in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 17s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 36m  1s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905596/HBASE-19753.branch-2.005.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  |
| uname | Linux 536e23cc4955 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / 47326729fe |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11004/artifact/patchprocess/diff-checkstyle-hbase-client.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11004/artifact/patchprocess/diff-checkstyle-hbase-zookeeper.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11004/testReport/ |
| modules | C: hbase-client hbase-zookeeper U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11004/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



.006 fixes checkstyle. Will push this soon. Shout if have any other input [~Apache9] Thanks for the help.

Yeah, this patch has been running last couple of hours and all zk pass now on my dodgy machines.

+1.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 32s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 38s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 31s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 30s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 26s{color} | {color:red} hbase-client: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  3m 56s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 15m 22s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 37s{color} | {color:green} hbase-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 35s{color} | {color:green} hbase-zookeeper in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 17s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 34m  7s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905609/HBASE-19753.branch-2.006.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  |
| uname | Linux 60d8924e3e15 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / 0885fe161a |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11009/artifact/patchprocess/diff-checkstyle-hbase-client.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11009/testReport/ |
| modules | C: hbase-client hbase-zookeeper U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11009/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



I can't commit this patch. As is it makes TestAdmin2 fail. It has a test that has us connect to a non-existent cluster. We just hang for ever trying to connect instead of giving up promptly. Here is an alternative. It waits a while on creation of zk in ROZKClient. If we fail to connect, just carry-on. The first usage will fail if we are not connected.

I tried doing w/o the change in ROZKClient but tests in hbase-zk started failing w/o it.

Then how about modifying the UTs only as I described above? Increasing the keep alive time, so that we do not close the zookeeper too frequently. And also increasing the wait time in tests.

.007 Change how we wait on connection in ROZKClient. Don't wait so long either. [~Apache9] would you +1 this one? Testing on a few machines, it keeps the robustness of the old patch and TestAdmin2 passes.

The approach in v7 is fine. +1.

bq. Then how about modifying the UTs only as I described above? Increasing the keep alive time, so that we do not close the zookeeper too frequently. And also increasing the wait time in tests.

I tried it. It'd still fail. The wait for connection in ROZKClient seems effective; it makes the real difference.

Thanks for the review on v7. Let me wait on qa run to be sure. Thanks for help [~Apache9]

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  9s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 34s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 32s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 38s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 41s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 30s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 22s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 32s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 32s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 59s{color} | {color:red} hbase-client: The patch generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  3s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  6m 26s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 26m 27s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 33s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 50s{color} | {color:green} hbase-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 25s{color} | {color:green} hbase-zookeeper in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  1m  0s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 53m 48s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905641/HBASE-19753.branch-2.007.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  |
| uname | Linux d7cb01f46634 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / 814d08a2d6 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11013/artifact/patchprocess/diff-checkstyle-hbase-client.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11013/testReport/ |
| modules | C: hbase-client hbase-zookeeper U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11013/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



You can try this sir [~stack].

Added a logic that we will not close a zk when there is pending requests. I think this could solve the flakey testSessionExpired.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 11s{color} | {color:blue} Docker mode activated. {color} |
| {color:blue}0{color} | {color:blue} patch {color} | {color:blue}  0m  2s{color} | {color:blue} The patch file was not named according to hbase's naming conventions. Please see https://yetus.apache.org/documentation/0.6.0/precommit-patchnames for instructions. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m  4s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 12s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 19s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 33s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 20m  2s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 40s{color} | {color:green} hbase-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  8s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 39m 48s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905669/keepalive.diff |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux fbf45f1469eb 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 71a1192d67 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11017/testReport/ |
| modules | C: hbase-client U: hbase-client |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11017/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



Did some quick tests this morning. Replacing the wait-on-connect with the keepalive patch had hbase-zookeeper large tests timeout occasionally. I didn't dig too much. The keepalive looks like we need it. .008 wraps it in.

I ran some tests this morning on .007, no timeout addendum, and got failures like below

[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 159.169 s <<< FAILURE! - in org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient
[ERROR] testSessionExpire(org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient)  Time elapsed: 110.726 s  <<< ERROR!
java.util.concurrent.ExecutionException: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test
        at org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient.testSessionExpire(TestReadOnlyZKClient.java:140)
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test



[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 204.377 s <<< FAILURE! - in org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient
[ERROR] testSessionExpire(org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient)  Time elapsed: 110.708 s  <<< ERROR!
java.util.concurrent.ExecutionException: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test
        at org.apache.hadoop.hbase.zookeeper.TestReadOnlyZKClient.testSessionExpire(TestReadOnlyZKClient.java:140)
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /test

Let me try this combined .008. Running it on cluster machines too though am less and less inclined to believe results out of these machines.


| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 11s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  1s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 17s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 42s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 45s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 18s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 38s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 31s{color} | {color:red} hbase-client: The patch generated 4 new + 0 unchanged - 0 fixed = 4 total (was 0) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 33s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 17m 47s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  9s{color} | {color:green} hbase-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 43s{color} | {color:green} hbase-zookeeper in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 40m 22s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db |
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905702/HBASE-19753.branch-2.008.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  |
| uname | Linux 39b4a165936b 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | branch-2 / 814d08a2d6 |
| maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) |
| Default Java | 1.8.0_151 |
| checkstyle | https://builds.apache.org/job/PreCommit-HBASE-Build/11020/artifact/patchprocess/diff-checkstyle-hbase-client.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/11020/testReport/ |
| modules | C: hbase-client hbase-zookeeper U: . |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11020/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



Ok. Compound patch is hanging on my dodgy hardware... its a hard hang so I'm going to punt on bundling the keepalive for now.

What I pushed which is .007 with checkstyle fixes. Let me open issue to do keepalive.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HBASE-19753 does not apply to master. Rebase required? Wrong Branch? See https://yetus.apache.org/documentation/0.6.0/precommit-patchnames for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905728/0001-HBASE-19753-Miscellany-of-fixes-for-hbase-zookeeper-.patch |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/11024/console |
| Powered by | Apache Yetus 0.6.0   http://yetus.apache.org |


This message was automatically generated.



FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4384 (See [https://builds.apache.org/job/HBase-Trunk_matrix/4384/])
HBASE-19753 Miscellany of fixes for hbase-zookeeper tests to make them (stack: rev a7f9668c339eefecc58f25263c6e7809063a75f2)
* (edit) hbase-zookeeper/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKNodeTracker.java
* (edit) hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ReadOnlyZKClient.java
* (edit) hbase-zookeeper/pom.xml
* (edit) hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKMainServer.java
* (edit) hbase-zookeeper/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKMainServer.java
* (edit) hbase-zookeeper/src/test/resources/log4j.properties
* (add) hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperHelper.java
* (edit) hbase-zookeeper/src/test/java/org/apache/hadoop/hbase/zookeeper/TestReadOnlyZKClient.java


[~stack] - can we resolve this and open a new issue for the keepalive work?

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  4s{color} | {color:red} HBASE-19753 does not apply to master. Rebase required? Wrong Branch? See https://yetus.apache.org/documentation/0.7.0/precommit-patchnames for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HBASE-19753 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905728/0001-HBASE-19753-Miscellany-of-fixes-for-hbase-zookeeper-.patch |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/13446/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



