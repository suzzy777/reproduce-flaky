This is our 'compactAndBlockUntilDone' method.
{code:title=TestEndToEndSplitTransaction.java}
  public static void compactAndBlockUntilDone(Admin admin, HRegionServer rs, byte[] regionName)
      throws IOException, InterruptedException {
    log("Compacting region: " + Bytes.toStringBinary(regionName));
    admin.majorCompactRegion(regionName);
    log("blocking until compaction is complete: " + Bytes.toStringBinary(regionName));
    Threads.sleepWithoutInterrupt(500);
    while (rs.compactSplitThread.getCompactionQueueSize() > 0) {
      Threads.sleep(50);
    }
  }
{code}

It uses the thread pool's workQueue size as condition. But
{code}
  public static void main(String[] args) throws InterruptedException {
    ThreadPoolExecutor pool =
        new ThreadPoolExecutor(1, 1, 60, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>());
    pool.execute(new Runnable() {
      
      @Override
      public void run() {
        try {
          Thread.currentThread().join();
        } catch (InterruptedException e) {}
      }
    });
    Thread.sleep(2000);
    System.out.println(pool.getActiveCount());
    System.out.println(pool.getQueue().size());
    pool.shutdownNow();
  }
{code}
The output is 
{noformat}
1
0
{noformat}
A thread pool's queue size does not include the running tasks. So if there is only one running compaction, then the compaction queue size will be zero...

So, it is not safe to use compaction queue size as condition.

Use memstore size and store file count as condition variable.

Also cleanup old APIs.

+1 if test passes

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12706143/HBASE-13308.patch
  against master branch at commit 8dfed5dc88f1c8008345b22e99224cb945fd0941.
  ATTACHMENT ID: 12706143

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13351//console

This message is automatically generated.

Pushed to master and branch-1.

Thanks [~tedyu] for reviewing.

SUCCESS: Integrated in HBase-TRUNK #6287 (See [https://builds.apache.org/job/HBase-TRUNK/6287/])
HBASE-13308 Fix flaky TestEndToEndSplitTransaction (zhangduo: rev a9b73b600e551749358a61bab27588e9074132d9)
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEndToEndSplitTransaction.java


FAILURE: Integrated in HBase-1.1 #310 (See [https://builds.apache.org/job/HBase-1.1/310/])
HBASE-13308 Fix flaky TestEndToEndSplitTransaction (zhangduo: rev bbf9a90ff25b30f5412958783fd712e7a1542eaf)
* hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEndToEndSplitTransaction.java


Closing issues released in 1.1.0.

