[~avinogradov] this test works properly well under 1.9 and 2.1 versions.

[~zstan],

I still see it fails each run 
https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=-7156699299480689009&tab=testDetails&branch_Ignite20Tests=%3Cdefault%3E

Please assign issue to yourself, create pullrequest with unmuted test and make several runs. 
In case you'll find no issues - lets unmute test.

GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/2930

    IGNITE-1593 GridCachePartitionedSetFailoverSelfTest.testNodeRestart r…

    …efactoring and fix

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-1593

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2930.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2930
    
----
commit 432ac97cfe4d5dda75675708777858f732f51b17
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-10-26T08:52:05Z

    IGNITE-1593 GridCachePartitionedSetFailoverSelfTest.testNodeRestart refactoring and fix

----


test have been refactored: 
testIterationAfterNodeFail - need to throw exception if iteration already started during node fail.
testNodeRestart - for NPE test on CacheDataStructuresManager.removeSetData
testNodeFailBeforeIteration - if iterator already initialized and node failed before iteration start no fail expected.

TC https://ci.ignite.apache.org/viewModification.html?modId=442057&personal=false&init=1&tab=vcsModificationTests
!tc1.png!

mute flaky test, now all ok https://ci.ignite.apache.org/viewLog.html?buildId=928695&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteDataStructures
!tc2.png!


[~zstan],

I reviewed changes, I do not think that this retry logic should be implemented in CacheWeakQueryIteratorsHolder and GridCacheSetImpl. This should be handled inside GridCacheQueryAdapter.execute, in this case it will be also reused for SpiQuery/ScanQuery.

Thanks

Moved to 2.8 due to inactivity. Please feel free to move back if you will be able to complete the ticket by AI 2.7 code freeze date, September 30, 2018.

