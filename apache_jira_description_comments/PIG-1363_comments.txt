Ideal solution of this problem is to have {{{LoadFunc}}} implements {{{Serializable}}}. Then LoadFunc will be instantiated once first time its needed (in LoLoad) and then everywhere this one object is used. But this will be backward incompatible as all the load func implementation then have to be necessarily implement Serializable. So, for now we will live with this. 
This patch gets rid of the multiple load func instantiation in front end where it could be avoided without the need of making it Serializable. No test cases are needed since this is purely code cleanup and doesn't add/delete/modify any existing functionality, so current regression tests suffice. 

Hudson is flaky (again). Result of test-patch:
{noformat}
     [exec] 
     [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no tests are needed for this patch.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     [exec] 

{noformat} 
Patch is ready for review.

+1

Patch checked-in.

Issue patch is supposed to fix at one place, breaks it at another place. Need to Re-fix.

Can't get away without pasing loader signature to backend for Merge Join. So, set it.

+1

Patch committed.

-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12441862/pig-1363_1.patch
  against trunk revision 934488.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/298/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/298/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/298/console

This message is automatically generated.

