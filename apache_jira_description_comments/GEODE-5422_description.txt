Flaky test failure in CI but run fine most runs and locally.

{noformat}
org.apache.geode.internal.cache.partitioned.PersistentColocatedPartitionedRegionDUnitTest > testReplaceOfflineMemberAndRestart FAILED
    java.lang.AssertionError: Suspicious strings were written to the log during this run.
    Fix the strings or use IgnoredException.addIgnoredException to ignore.
    -----------------------------------------------------------------------
    Found suspect string in log4j at line 3784

    [error 2018/07/11 22:24:00.904 UTC <ResourceManagerRecoveryThread 0> tid=1075] Unexpected exception during bucket recovery
    java.lang.IllegalStateException: Region specified in 'colocated-with' (PersistentColocatedPartitionedRegionDUnitTest_testReplaceOfflineMemberAndRestartRegion) for region /region2 does not exist. It should be created before setting 'colocated-with' attribute for this region.
    	at org.apache.geode.internal.cache.ColocationHelper.getColocatedRegion(ColocationHelper.java:94)
    	at org.apache.geode.internal.cache.ColocationHelper.getLeaderRegion(ColocationHelper.java:455)
    	at org.apache.geode.internal.cache.partitioned.PartitionedRegionRebalanceOp.<init>(PartitionedRegionRebalanceOp.java:134)
    	at org.apache.geode.internal.cache.partitioned.PartitionedRegionRebalanceOp.<init>(PartitionedRegionRebalanceOp.java:114)
    	at org.apache.geode.internal.cache.PRHARedundancyProvider$3.run2(PRHARedundancyProvider.java:1586)
    	at org.apache.geode.internal.cache.partitioned.RecoveryRunnable.run(RecoveryRunnable.java:58)
    	at org.apache.geode.internal.OneTaskOnlyExecutor$DelegatingRunnable.run(OneTaskOnlyExecutor.java:134)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
    	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    	at java.lang.Thread.run(Thread.java:748)
{noformat}
