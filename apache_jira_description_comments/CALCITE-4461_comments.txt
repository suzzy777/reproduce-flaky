There might be unintended consequences if a rule that used to match only, say, {{EnumerableFilter}} now also matches {{LogicalFilter}} and {{JdbcFilter}}.

Rather than modifying existing rule instances, how about creating new instances with more lenient criteria?

Can someone please review whether current rule instances are consistent? It would be nice if there were some consistent convention. Although I know that may directly conflict with the goal of not changing existing instances.

[~vozerov], Back-ticks don't work in JIRA. Please use double-curly brace.

Hi [~julianhyde], let me clarify the intent of the ticket. The goal is only to change the lines like {{LogicalFilter filter = (LogicalFilter) rel}} to {{Filter filter = (Filter) rel}}. This way, it becomes possible to create a custom config for the rule and apply it to non-logical operators. The default configuration pattern remains the same, so by default enumerable rules will fire only for {{Logical}} operators.

Does it make sense? 

I realize, that my changes to JavaDoc in the PR bring confusion, I can reformulate them like "Converts LogicalSomething to EnumerabeSomething. You may provide a custom configuration to match non-Logical operators."

[~vozerov] IMO it makes sense.
As you say, maybe the new javadoc can be confusing (sorry about that, it was me who suggested the change). I think something along the lines of your proposal could make it more clear.

[~rubenql] no worries, I reformulated JavaDoc. I hope, now it should be clear that by default rules are applied to logical nodes still, but there is an option to change this behavior if needed.

merged via https://github.com/apache/calcite/commit/1bf6b08a81f471f979e1b52174f225f03ff77a2e!

Resolved in release 1.27.0 (2021-06-03)

