PR 11440  didn't fix the flakiness, it only added a GRPC timeout to mitigate the failure. The test will now take at most 30s if there is no activity on the GRPC channel between the test_stream_service and test_stream.

Copying comment from Ning in duped JIRA: 

> We'll probably need to remove such integration test from being executed on Jenkins.

> The Jenkins machines could be executing many different things at the same time. It's possible that the machine does nothing for the test at all in the given 5-second timeout

FYI Python PreCommit is pretty flaky due to this. 

[https://builds.apache.org/job/beam_PreCommit_Python_Cron/2688/]

[https://builds.apache.org/job/beam_PreCommit_Python_Cron/2683/]

 

 

Should we disable the flaky tests ?

Sam, could you please disable the flaky test. This is resulting pre-commit failures.

https://github.com/apache/beam/pull/11624 is merged. Can we close this now?

Seems to still be happening with 30s timeout: https://builds.apache.org/job/beam_PreCommit_Python_Cron/2726
```
    def wrapper(*args, **kwargs):
      def call_fn():
        try:
          fn(*args, **kwargs)
        except:  # pylint: disable=bare-except
          exc_info[:] = sys.exc_info()
    
      thread = threading.Thread(target=call_fn)
      thread.daemon = True
      thread.start()
      thread.join(timeout_secs)
      if exc_info:
        t, v, tb = exc_info  # pylint: disable=unbalanced-tuple-unpacking
        raise_(t, v, tb)
>     assert not thread.is_alive(), 'timed out after %s seconds' % timeout_secs
E     AssertionError: timed out after 30 seconds
```

Thanks for the update Brian, I have root caused it and have a PR out now. Seems to be an edge case around the StreamingCache.

 

EDIT: PR is [https://github.com/apache/beam/pull/11663]

https://github.com/apache/beam/pull/11663 is merged. Does this address the flake?

Yep, it should be the fix.

