[~kozdemir] This is the actual reason why the other tests didn't run in first Hadoop QA run.

FYI [~jisaac]

GitHub user karanmehta93 opened a pull request:

    https://github.com/apache/phoenix/pull/400

    PHOENIX-5000 Make SecureUserConnectionsTest as Integration test

    @twdsilva Please review.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/karanmehta93/phoenix PHOENIX-5000

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/phoenix/pull/400.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #400
    
----
commit 9448c78133b462b25728dc6f8ceb4c556a51c7ae
Author: Karan Mehta <karanmehta93@...>
Date:   2018-10-30T19:40:00Z

    PHOENIX-5000 Make SecureUserConnectionsTest as Integration test

----


Github user twdsilva commented on the issue:

    https://github.com/apache/phoenix/pull/400
  
    LGTM, Thanks for fixing this @karanmehta93. Can you please submit the patch to JIRA to confirm that the precommit build runs the test during the IT phase. 


Also attaching the stacktrace from one the builds here.Â 

[https://builds.apache.org/job/PreCommit-PHOENIX-Build/2112//testReport/org.apache.phoenix.jdbc/SecureUserConnectionsTest/org_apache_phoenix_jdbc_SecureUserConnectionsTest/]

[~elserj] Any thoughts why is this flapping? I see that this test was flapping earlier and you introduced retry to fix it.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12946280/PHOENIX-5000.master.001.patch
  against master branch at commit 76ffd8af10571e67bc2f9dd77c09898e687149d9.
  ATTACHMENT ID: 12946280

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the master's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +     * Requires {@link #createUsers(int)} to have been called with a value greater than {@code offset}.
+     * @param offset The "number" for the principal whose keytab should be returned. One-based, not zero-based.
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugiCopy = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi1 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi2 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ2, keytab2.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     ./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.IndexMetadataIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.monitoring.PhoenixMetricsIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.SystemCatalogCreationOnConnectionIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitReverseScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.TableDDLPermissionsIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ConcurrentMutationsIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.UpsertSelectAutoCommitIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.MigrateSystemTablesToSystemNamespaceIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitForwardScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ViewIT

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2122//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2122//artifact/patchprocess/patchReleaseAuditWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2122//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12946600/PHOENIX-5000.master.003.patch
  against master branch at commit 59a7dd138c661c743d58421776cb5e731e1cda99.
  ATTACHMENT ID: 12946600

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the master's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +     * Requires {@link #createUsers(int)} to have been called with a value greater than {@code offset}.
+     * @param offset The "number" for the principal whose keytab should be returned. One-based, not zero-based.
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugiCopy = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi1 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi2 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ2, keytab2.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     ./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ConcurrentMutationsIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitForwardScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.UpsertSelectAutoCommitIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.IndexMetadataIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.TableDDLPermissionsIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitReverseScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ViewIT

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2132//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2132//artifact/patchprocess/patchReleaseAuditWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2132//console

This message is automatically generated.

{quote}Any thoughts why is this flapping? I see that this test was flapping earlier and you introduced retry to fix it.
{quote}
I've not figured out why this happens. It seems almost like, sometimes, it doesn't find the miniKDC's krb5.conf. I don't know if this is environmental, or something else. If we can narrow down when/how it fails, that would be helpful (something I can sink my teeth into).

Fine to make it an IT. +1

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12947888/PHOENIX-5000.master.004.patch
  against master branch at commit d9d8fd0c449553f3abc9a6e7cba917378ee12e8d.
  ATTACHMENT ID: 12947888

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the master's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +     * Requires {@link #createUsers(int)} to have been called with a value greater than {@code offset}.
+     * @param offset The "number" for the principal whose keytab should be returned. One-based, not zero-based.
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugiCopy = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi1 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi2 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ2, keytab2.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     ./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitForwardScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitReverseScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ViewIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.UpsertSelectAutoCommitIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ConcurrentMutationsIT

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2142//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2142//artifact/patchprocess/patchReleaseAuditWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2142//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12947888/PHOENIX-5000.master.004.patch
  against master branch at commit d9d8fd0c449553f3abc9a6e7cba917378ee12e8d.
  ATTACHMENT ID: 12947888

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings (more than the master's current 0 warnings).

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +     * Requires {@link #createUsers(int)} to have been called with a value greater than {@code offset}.
+     * @param offset The "number" for the principal whose keytab should be returned. One-based, not zero-based.
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugi = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));
+        UserGroupInformation ugiCopy = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi1 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ1, keytab1.getPath());
+        UserGroupInformation ugi2 = UserGroupInformation.loginUserFromKeytabAndReturnUGI(princ2, keytab2.getPath());
+                connections.add(ConnectionInfo.create(url).normalize(ReadOnlyProps.EMPTY_PROPS, EMPTY_PROPERTIES));

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     ./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitReverseScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.PartialIndexRebuilderIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ConcurrentMutationsIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.UpsertSelectAutoCommitIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.index.MutableIndexSplitForwardScanIT
./phoenix-core/target/failsafe-reports/TEST-org.apache.phoenix.end2end.ViewIT

Test results: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2143//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2143//artifact/patchprocess/patchReleaseAuditWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-PHOENIX-Build/2143//console

This message is automatically generated.

[~karanmehta93], any changes in v4 over v3?

No differences in any of these files, but had to change the name otherwise Hadoop QA wont run it.

+1

Thanks [~tdsilva] and [~elserj], Will commit it shortly.

Committed it to master (5.x-HBase-2.0), 4.x-HBase-1.4,Â 4.x-HBase-1.3 andÂ 4.x-HBase-1.2 branches. Resolving this Jira.

SUCCESS: Integrated in Jenkins build Phoenix-4.x-HBase-1.3 #260 (See [https://builds.apache.org/job/Phoenix-4.x-HBase-1.3/260/])
PHOENIX-5000 Make SecureUserConnectionsTest as Integration test (karanmehta93: rev 4581516eaea432962c9b61332a5f3f8117792823)
* (add) phoenix-core/src/it/java/org/apache/phoenix/jdbc/SecureUserConnectionsIT.java
* (delete) phoenix-core/src/test/java/org/apache/phoenix/jdbc/SecureUserConnectionsTest.java


[~karanmehta93] You need to add the @Category(NeedsOwnMiniClusterTest.class) to get this test to run.

ABORTED: Integrated in Jenkins build PreCommit-PHOENIX-Build #2150 (See [https://builds.apache.org/job/PreCommit-PHOENIX-Build/2150/])
PHOENIX-5000 Make SecureUserConnectionsTest as Integration test (karanmehta93: rev cd31ed5e8cef8ad8b6d20f7417974c47002f4297)
* (delete) phoenix-core/src/test/java/org/apache/phoenix/jdbc/SecureUserConnectionsTest.java
* (add) phoenix-core/src/it/java/org/apache/phoenix/jdbc/SecureUserConnectionsIT.java


FAILURE: Integrated in Jenkins build Phoenix-omid2 #156 (See [https://builds.apache.org/job/Phoenix-omid2/156/])
PHOENIX-5000 Make SecureUserConnectionsTest as Integration test (karanmehta93: rev 4581516eaea432962c9b61332a5f3f8117792823)
* (delete) phoenix-core/src/test/java/org/apache/phoenix/jdbc/SecureUserConnectionsTest.java
* (add) phoenix-core/src/it/java/org/apache/phoenix/jdbc/SecureUserConnectionsIT.java


Thanks [~tdsilva] forÂ pointing it out. Will add the addendum.

Pushed the addendum patches to master (5.x-HBase-2.0), 4.x-HBase-1.4,Â 4.x-HBase-1.3 andÂ 4.x-HBase-1.2 branches.

FAILURE: Integrated in Jenkins build Phoenix-4.x-HBase-1.4 #7 (See [https://builds.apache.org/job/Phoenix-4.x-HBase-1.4/7/])
PHOENIX-5000 Make SecureUserConnectionsTest as Integration test (karanmehta93: rev c48c3670acc9677c29ce195fda1778ea366d01f1)
* (edit) phoenix-core/src/it/java/org/apache/phoenix/jdbc/SecureUserConnectionsIT.java


SUCCESS: Integrated in Jenkins build Phoenix-4.x-HBase-1.3 #267 (See [https://builds.apache.org/job/Phoenix-4.x-HBase-1.3/267/])
PHOENIX-5000 Make SecureUserConnectionsTest as Integration test (karanmehta93: rev ddf036ebaab53b3f41879955b7b1403b0e7aa790)
* (edit) phoenix-core/src/it/java/org/apache/phoenix/jdbc/SecureUserConnectionsIT.java


ABORTED: Integrated in Jenkins build PreCommit-PHOENIX-Build #2152 (See [https://builds.apache.org/job/PreCommit-PHOENIX-Build/2152/])
PHOENIX-5000 Make SecureUserConnectionsTest as Integration test (karanmehta93: rev cfcf615d98c682df3b60aa7bd82c6706082bdac2)
* (edit) phoenix-core/src/it/java/org/apache/phoenix/jdbc/SecureUserConnectionsIT.java


Bulk closing Jiras for the 4.15.0 release.

