Though CI only has the [one failure|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/497/tests] it doesn't really have enough history to see what's happened here.  Hoping I could bisect, I tried to find a good revision, but even the fix for the last time it was flaky in CASSANDRA-15797 does not pass 100 iterations on either j11 or j8 on multiple machines with just a single test runner.  It doesn't seem like this could have been failing sporadically for this long and been lost in the noise each time, but I don't have any other explanation at this point.

Checking nightlies, there is one other failure from November 9th of last year:

{noformat}
      <testcase classname="org.apache.cassandra.utils.binlog.BinLogTest" name="testTrucationReleasesLogSpace-cdc" time="5.043">
          <failure message="missing currentCycle, file=/home/jenkins/jenkins-slave/workspace/Cassandra-trunk-test-cdc/jdk/jdk_1.8_latest/label/cassandra/tmp/foo17bar/20201109-222009.cq4" type="junit.framework.A
ssertionFailedError">junit.framework.AssertionFailedError: missing currentCycle, file=/home/jenkins/jenkins-slave/workspace/Cassandra-trunk-test-cdc/jdk/jdk_1.8_latest/label/cassandra/tmp/foo17bar/20201109-2220
09.cq4
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueue$StoreSupplier.nextCycle(SingleChronicleQueue.java:931)
        at net.openhft.chronicle.queue.impl.WireStorePool.nextCycle(WireStorePool.java:106)
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueue.nextCycle(SingleChronicleQueue.java:412)
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts$StoreTailer.nextIndexWithNextAvailableCycle0(SingleChronicleQueueExcerpts.java:1509)
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts$StoreTailer.nextIndexWithNextAvailableCycle(SingleChronicleQueueExcerpts.java:1465)
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts$StoreTailer.endOfCycle(SingleChronicleQueueExcerpts.java:1255)
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts$StoreTailer.next0(SingleChronicleQueueExcerpts.java:1230)
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts$StoreTailer.readingDocument(SingleChronicleQueueExcerpts.java:1175)
        at net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts$StoreTailer.readDocument(SingleChronicleQueueExcerpts.java:1096)
        at org.apache.cassandra.utils.binlog.BinLogTest.readBinLogRecords(BinLogTest.java:481)
        at org.apache.cassandra.utils.binlog.BinLogTest.lambda$testTrucationReleasesLogSpace$8(BinLogTest.java:444)
        at org.apache.cassandra.Util.spinAssertEquals(Util.java:599)
        at org.apache.cassandra.Util.spinAssertEquals(Util.java:589)
        at org.apache.cassandra.utils.binlog.BinLogTest.testTrucationReleasesLogSpace(BinLogTest.java:444)
</failure>
{noformat}


What I've determined is that any of these tests can run together in the suite with no problem, as long as testPut and/or testOffer are not mixed with the truncation test, and even then most of time nothing fails.

But every once in a while, through no fault of their own, these tests seem to confuse Chronicle when it goes to read logs in testTrucationReleasesLogSpace, where it sometimes expects to see a file _that it deleted itself_.  Since these work fine in isolation and the failure is quite rare, I've taken the route of running it twice under the flakyTest handler so that a failure one time is tolerated.  The patch also modernizes the temporary directory creation and fixes the 'trucation' typo in the test name.

[!https://ci-cassandra.apache.org/job/Cassandra-devbranch/530/badge/icon!|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/530/pipeline]


The approach is sensible.

+1

It is very hard to reproduce. I have loop'd the test for over 100 times but still failed to reproduce.

There is a shared {{QueueFileShrinkManager}} in the chronicle queue internal. Whenever the file rolls to the next cycle, it schedules an async shrinking task that often runs after the test is finished. Maybe it has something to do with the failed test. (I have not looked deep into it.) It is probably worthy to make the shrink task synchronized to run it as part of the test. However, with the change proposed, I need to increase the sleep time in the {{testTrucationReleasesLogSpace}} from 2 seconds to 4 seconds.

Committed.

