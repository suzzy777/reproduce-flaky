I am currently working on this ticket.

I've never seen codecov work well in OSS projects :)

[~tison] (almost) the same code got integrated to Apache ZooKeeper, HBase and Phoenix repositories and we use it as it works well.

Please see ZOOKEEPER-4490, HBASE-27685, HBASE-27272, HBASE-27196, PHOENIX-6774, PHOENIX-6775, PHOENIX-6836, PHOENIX-6857.

Please reconsider reviewing and merging it.

 

[~tison] Would you please elaborate a bit more on what do you mean by "never seen codecov work well in OSS projects"?

I see [~dora.horvath] already submitted a PR with the necessary changes. Have you checked how does it work or how it doesn't work?

She has put efforts into making it work and happy to get feedback to improve the patch. Please justify your decision, because Apache communities are not supposed to work like this.

[~tamaas] [~andor] [~dora.horvath] Many projects have such scripts or integrations, but few contributors/reviewers really take it into account when deciding whether or not to merge a patch.

See https://github.com/apache/zookeeper/pull/1905 sonatype-lift complains a lot but we don't care about.
See more on https://github.com/apache/pulsar/pulls codecov comments on every PR, but no contributor or reviewer care about the report.

However, adding such scripts do no harm, so I can merge the patch and see if the situation is different to Curator. Also, the origin patch isn't integrated into an automation workflow so I doubt more about its benefit.

Reopen the ticket and retract the comment "codecov doesn’t work well in OSS projects".

-1 because:

Different from checkstyle or license header checker, contributors hardly review the codecov report and also the “test coverage” is seldom correct (Experiencing many times I change a comment and codecov complains that the test coverage is lowered, I don’t think it’s a good experience for the following contributors). However, as the patch (PR-442) is not integrated into automation, it won’t complain following PRs also.

Here are my previous comments on codecov alike tools: https://lists.apache.org/thread/806ktn2h5q9omogv2t9j28mcvnttkqqr.

I also reject other patchs that do no harm but do no benefit, like https://github.com/apache/curator/pull/418.

Metrics, reports, ..., only if the contributors or reviewers take it into account, it can help. If other Curator contributors support that they need such a script, we can give it a try.

Hi [~tison] ,
the main goal of this task is to enable the option for teams, developers to be able to get coverage information about the code. The aim is usually not to reach 100% coverage, but it gives a useful additional feedback about the code.
The script is parameterised and uploading the results to SonarQube is only optional.
As [~tamaas] mentioned, a similar script got integrated into ZooKeeper and multiple other projects as well and they are all used in our organisation. We believe it can be useful for others as well.

{quote}However, as the patch (PR-442) is not integrated into automation, it won’t complain following PRs also.
{quote}
That's the point. The patch doesn't touch current Curator builds or Maven profile and don't want to change your existing workflows. It's an optional feature which adds a custom maven profile which makes easier for users to integrate code coverage in their CI flow.
{quote} Metrics, reports, ..., only if the contributors or reviewers take it into account, it can help.
{quote}
Agreed, but this patch is not about adding any of these.

Closing...

In favor of https://github.com/apache/curator/pull/459. We can integrate INFRA provided https://ge.apache.org/ to have a one-stop test reports viewer.

Thanks for your reply [~dora.horvath][~andor]!

Recently, I noticed that Curator tests are sometimes flaky and consume a lot of time. Thus I filed CURATOR-669 to integrate with NFRA provided https://ge.apache.org/ to have a one-stop test reports viewer.

As you said above, such a script can be useful for downstream projects, and the patch is here. So they can find it and use it if necessary. 

> .. a similar script got integrated into ZooKeeper and multiple other projects as well and they are all used in our organisation. We believe it can be useful for others as well.

Different projects make different choices. Since this script is unlikely to introduce conflict, you can add it to your organization's fork.

I ever brought best practices somewhere else if that project needed it, and was also rejected when they didn't think a build change was good for their project.

* https://github.com/cockroachdb/cockroach/pull/78694
* https://github.com/tikv/tikv/pull/11080
* https://github.com/apache/pulsar-client-node/pull/314
* https://issues.apache.org/jira/browse/RATIS-1795

So maybe another sponsor who is an active contributor is a good reason to accept such changes. Said I never use {{merge-pr.py}}, but the original contributor uses it, so it’s OK to keep it there.

