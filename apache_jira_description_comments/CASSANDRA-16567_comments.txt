I think that this test is not failing in regular cassandra-ci jobs, at leat [not recently|https://ci-cassandra.apache.org/job/Cassandra-trunk/416/testReport/org.apache.cassandra.cql3/ViewTest/].

I haven't been able to reproduce it locally with 2000 rounds. Our internal Jenkins-based multiplexer hasn't been able to reproduce it with 600 runs for the {{testCompoundPartitionKey}} method, nor with another 600 rounds for the entire {{ViewTest}} class.

Since we don't have an analogous multiplexer for ci-cassandra nor CircleCI, I have created [this ugly test|https://github.com/adelapena/cassandra/commit/d37ba480a0006cc1eeffa4c9f402f85bb7d0fae0] that just repeats {{testCompoundPartitionKey}} 100 times, so we can try to reproduce the failure on our CI envs. This test passes multiple times both locally and on ci-cassandra, whereas it relatively easily reproduces the investigated failure on CircleCI.

So it seems that by now this is looking like a CircleCI-only failure.

I think that the failure happens because the truncation of a table doesn't stop the asynchronous builders of its materialized views. As a result, it's possible that, after truncating a table, still running MV builders insert pre-truncate rows into the MV. The proposed PR simply makes sure to stop any ongoing MV builds when a table is truncated, [this way|https://github.com/apache/cassandra/pull/967/commits/3e3a6fd699c819c3642a810074f5fcbe174cda64]. Also, the PR adds [a simple test|https://github.com/apache/cassandra/pull/967/commits/c5eea8d0311c9aba8e223072cd600a87c86dec6d] reproducing the problematic scenario more consistently than {{testCompoundPartitionKey}}.

Also, although it's not related to the failure, I've noticed that {{ViewTest}} still uses {{ProtocolVersion.V4}} instead of the current one. I think this is not intentional so I've also [changed|https://github.com/apache/cassandra/pull/967/commits/f30007a990b16e5f9c1c151051c1a21ccb689030] the test to use {{CQLTester.getDefaultVersion}} instead.

CI runs:
 * [CircleCI j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/269/workflows/9e5b7540-b8aa-4ecb-97e7-476f88c01a59]
 * [CircleCI j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/269/workflows/50b4e9c0-151e-42fe-84a3-7953030637b2]
 * [Jenkins|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/653/pipeline]
 * [Internal multiplexer|https://jenkins-dse.build.dsinternal.org/view/Parameterized/job/parameterized-testall/788/]

The latest version LGTM, +1. Thank you! Also, CASSANDRA-16613 was opened and I am already fixing other places where we need to consider the new protocol version, too. Fortunately, for now I think we had that only in some tests and testing with V5 didn't produce any failures to the tests I worked on up to now.
I will post a patch later today

CI for the three branches:

 3.0
 * [CircleCI|https://app.circleci.com/pipelines/github/adelapena/cassandra/284/workflows/ab3142b3-e135-4561-bca6-a3b4c52aa58c]
 * [ci-cassandra|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/698/pipeline]

3.11
 * [CircleCI|https://app.circleci.com/pipelines/github/adelapena/cassandra/283/workflows/8f6ee0f9-8f0f-456b-a522-c48b5d191808]
 * [ci-cassandra|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/696/pipeline]

trunk
 * [CircleCI j8|https://app.circleci.com/pipelines/github/adelapena/cassandra/285/workflows/ca47738e-cffb-4fe6-998c-d9759452d7dd]
 * [CircleCI j11|https://app.circleci.com/pipelines/github/adelapena/cassandra/285/workflows/81c42289-2620-4f2a-b5e5-227dd11c5c7d]
 * [ci-cassandra|https://ci-cassandra.apache.org/blue/organizations/jenkins/Cassandra-devbranch/detail/Cassandra-devbranch/697/pipeline]

The most notable differences between 3.0/3.11 and trunk are that only trunk has the parallelized MV builder introduced by CASSANDRA-12245, and that 3.0/3.11 don't wait for the finalization of the builders when stopping them. The latter is necessary when truncating a table, so I have added a small mechanism to allow waiting for it.

+1

The failing tests don't seem related.

I am curious why the dtests jars are failing again on 3.0 and 3.11 as they were fixed and your branches seem rebased but that is topic for another conversation, not related to this patch.

I also think that those are not related. It seems that the CI builds for 3.0 and 3.11 have been failing lately, we'll have to look into that.

Committed to 3.0 as [ca40e770a5bbdeed69700ae498866f940782864b|https://github.com/apache/cassandra/commit/ca40e770a5bbdeed69700ae498866f940782864b] and merged up to [3.11|https://github.com/apache/cassandra/commit/d9cdf2d6d95d0f19b12af68d21f7beee22b43264] and [trunk|https://github.com/apache/cassandra/commit/2c11dfcb5bc2dc25390a4b312911b8401d4a46e6].

Thanks for the review.

-Unfortunately, I just found it failing in Jenkins [here|https://jenkins-cm4.apache.org/job/Cassandra-devbranch/1119/testReport/junit/org.apache.cassandra.cql3/ViewTest/testTruncateWhileBuilding/]-

-I can open a new ticket or we can reopen this one.- 

Wrong ticket sorry. Please ignore

