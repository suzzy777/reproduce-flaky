User 'cloud-fan' has created a pull request for this issue:
https://github.com/apache/spark/pull/21518

Issue resolved by pull request 21518
[https://github.com/apache/spark/pull/21518]

[~cloud_fan] Does this mean users also have to call this function when writing tests ? Where is this documented ? I would hope closing a spark session is enough...

Mostly you don't need to care about it. But when you write low-level tests without creating SparkSession, you need to pay attention to not call `SQLConf.get`.

Find it hard to believe above pull requests were accepted, rather than tackling the root cause which is the apparent resource leakage when closing a spark session.

We are upstepping from Spark 2.2.1 to 2.3.1 and we find our tests have become flaky as well (when running them consecutively). Even in our production code we are creating and closing multiple spark sessions... 

I prefer not to pollute our code with those boilerplate statements.

There is no resource leakage. Users need to manage the active and default SparkSession manually, by calling `get/set/clearActiveSession` and `get/set/clearDefaultSession`. This is not very user-friendly, but it's what it is.

Unfortunately, our test framework had a bug: it didn't clear active/default session when a spark session is stopped. This causes a problem because we use `SQLConf.get` a lot in the test code. My PR fixed it. 

It's totally fine if you create and close multiple spark sessions in the production code, there is no resource leak. But you need to pay attention if you get active/default session. It's the same in Spark 2.2.

I'm adding a safeguard for SQLConf.get: https://issues.apache.org/jira/browse/SPARK-25076 . Hopefully this problem can be eased.

We are only creating SparkSessions with a SparkSessionBuilder.getOrCreate() and then calling sparkSession.close() when we are done.

Can you confirm this is not enough then ?

 

This is enough. The places you need to pay attention to is where you call `SparkSession.getActiveSession`. Make sure you can handle the case that the session is stopped.

