https://reviews.apache.org/r/40935/

{code}
commit fe4be25fa6011787751547b06f70676fd79bb87b
Author: Neil Conway <neil.conway@gmail.com>
Date:   Fri Dec 4 11:54:18 2015 -0500

    Fixed flakiness in MasterMaintenanceTest.InverseOffersFilters.
    
    There were two problems:
    
    (1) After launching two tasks, we assumed that we would see TASK_RUNNING
        updates for the tasks in the same order they were launched. This is
        not guaranteed, so adjust the test to handle TASK_RUNNING updates in
        the order they are received.
    
    (2) The test used this pattern:
    
            Mesos m;
            Call c;
    
            m.send(c);
            Clock::settle();
            // Trigger a new batch allocation that reflects the call
            Clock::advance();
    
        However, this is actually unsafe (see MESOS-3760): the send() call
        might not have reached the master by the time `Clock::settle()`
        happens. This was fixed by blocking using `FUTURE_DISPATCH` on the
        downstream logic in the allocator that is invoked to handle the
        delivered event.
    
    Review: https://reviews.apache.org/r/40935
{code}

Note: This issue is not resolved yet because the above commit does not completely resolve the "flakiness in the first inverse offer filter".  See [this comment in the review|https://reviews.apache.org/r/40935/#review108911].

Fix for the other flakiness (and hopefully the last one):
https://reviews.apache.org/r/41945/

{noformat}
commit c9cc01cb153ca01e6109848ee9832ff9c84c8421
Author: Joseph Wu <joseph@mesosphere.io>
Date:   Tue Jan 5 15:12:12 2016 -0800

    Fixed remaining flakiness in MasterMaintenanceTest.InverseOffersFilters.

    There were three inverse offer updates in the test body, but only two
    `FUTURE_DISPATCH` expectations on `updateInverseOffer`. This patch adds
    the missing `FUTURE_DISPATCH` after the first inverse offer update.

    Prior to this change, the first `FUTURE_DISPATCH` was expected to
    correspond to the second inverse offer.  In some cases, the first
    inverse offer would trigger the expectation instead (and/or the
    test would reach the `Clock::settle()` prior to one of the
    `Call`'s reaching the master).

    Review: https://reviews.apache.org/r/41945/
{noformat}

