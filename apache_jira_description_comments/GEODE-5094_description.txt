{noformat}
org.apache.geode.cache.ProxyJUnitTest > testExpiration FAILED
    org.apache.geode.cache.RegionDestroyedException: org.apache.geode.internal.cache.DistributedRegion[path='/rEMPTY';scope=DISTRIBUTED_NO_ACK';dataPolicy=EMPTY; concurrencyChecksEnabled]
        at org.apache.geode.internal.cache.LocalRegion.checkRegionDestroyed(LocalRegion.java:7391)
        at org.apache.geode.internal.cache.LocalRegion.checkReadiness(LocalRegion.java:2723)
        at org.apache.geode.internal.cache.LocalRegion.get(LocalRegion.java:1356)
        at org.apache.geode.internal.cache.LocalRegion.get(LocalRegion.java:1314)
        at org.apache.geode.internal.cache.LocalRegion.get(LocalRegion.java:1299)
        at org.apache.geode.internal.cache.AbstractRegion.get(AbstractRegion.java:313)
        at org.apache.geode.cache.ProxyJUnitTest.testExpiration(ProxyJUnitTest.java:1106)
{noformat}
The test is scheduling a region to be destroyed if it is not used for 500 miliseconds. It then starting doing gets which will keep using the region. But it is possible for the gets to lose the cpu and be prevented from using the region and it then expiring. That is what is happening in this test.

This test as currently written is flaky and needs to be rewritten.