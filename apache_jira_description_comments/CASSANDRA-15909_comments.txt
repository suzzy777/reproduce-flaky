As long as this is done without breaking the old names, then sounds good to me.

I suppose that means we deprecate the old names and simply add the consistent names in their place. It seems that can be done without too much trouble - it's just like adding an alias to an existing metric. I can document the names as deprecated in the {{metrics.rst}} file (but would likely just do that as a single documentation task on CASSANDRA-15821). If there is some other method of not "breaking the old names" please let me know or if there is another form of "deprecation" I should consider beyond what is described I'd be happy to hear. Otherwise, I've mostly implemented the approach I've described and should have a something for review shortly.

{quote}
  * Table.RepairedDataTrackingOverreadRows == Keyspace.RepairedOverreadRows
  * Table.RepairedDataTrackingOverreadTime == Keyspace.RepairedOverreadTime
{quote}

Sorry, that particular inconsistency is my fault. The good news is that these two are really new and only present in trunk (and only added in the last few weeks), so we don't need to bother with deprecation. 

bq. The good news is that these two are really new and only present in trunk (and only added in the last few weeks), so we don't need to bother with deprecation.

Sounds good to me

I've beat this one back and forth a bunch in terms of how to best implement this. Ultimately I chose to just keep the changes fairly focused in on where the "deprecation" occurred with the metrics so as not to overhaul too much existing code. I imagine it would have been nicer to build the concept of "metric deprecation" into the {{CassandraMetricsRegistry}} a bit more as a first class feature of it, but given the proximity to release of 4.0 it is perhaps best to save such larger changes for a future date.

My changes can be reviewed here:

https://github.com/spmallette/cassandra/pull/2

As I alluded to earlier, when this change merges I will rebase CASSANDRA-15821 and make the appropriate documentation changes there. Those documentation changes will probably be necessary to explain the slightly differently named metrics that now appear in JMX. 



[~spmallette] should this be "Patch Available" ?

yes - changing the status.

I've made a pass at review and left my comments [inline|https://github.com/spmallette/cassandra/pull/2]. Most of my suggestions are simple clean-ups and readability enhancements. [~spmallette] When those are in a good place, I'd be more than willing to kick off the necessary CI runs.

From the discussion I've seen so far, it doesn't look like we have any appetite to do this in 4.0, but I'd really push to remove the "alias" metric name factory in {{TableMetrics}}, which is what is making this patch more complex than it could be, in our next major release. At minimum, we should use CASSANDRA-15821 to indicate very clearly (via {{metrics.rst}}) that both the aliases we've added here and the "ColumnFamily"-based paths are going away eventually.

I don't think I'm going to have time to get to make any further changes on this. Sorry to leave it a bit unfinished but perhaps it won't be hard for someone else to finish things up. I've removed myself as the "Assignee". 

Thanks [~spmallette]. I'll throw this one (and possibly CASSANDRA-15821) in my knapsack and carry it forward.

[~djoshi] Any interest in picking this one up as a committer/reviewer once I finalize the patch?

I've made changes following my own review suggestions and posted a new, rebased version of the patch.

[trunk|https://github.com/apache/cassandra/pull/728], [j8 tests|https://app.circleci.com/pipelines/github/maedhroz/cassandra/99/workflows/72c69ea8-f347-4b00-aed8-bd465f3549ff], [j11 tests|https://app.circleci.com/pipelines/github/maedhroz/cassandra/99/workflows/fdac8d5b-2f3d-46f9-8e67-a5a9ed8ab966]

I think the {{ConnectionTest}}Â failure is a pre-existing issue. {{TestDiskBalance::test_disk_balance_after_boundary_change_stcs}} is preexisting as well, but I don't know if we have Jira yet. (UPDATE: created CASSANDRA-16089)

Been reviewing, using CASSANDRA-16082 to help test to make sure no metric gets skipped (only missing metrics are from MigrationStage so I think the two clusters used for diff happened to start up stages differently)

in PR

Looks like the randomized testing in {{MessageSerializationPropertyTest}} may have caught something [here|https://app.circleci.com/pipelines/github/maedhroz/cassandra/99/workflows/fdac8d5b-2f3d-46f9-8e67-a5a9ed8ab966/jobs/494].

sorry about that, fixing in https://issues.apache.org/jira/browse/CASSANDRA-16086

Code LGTM.  I would love to see a test which releases and validates that all metrics were in fact released. Will also need to retest this against https://issues.apache.org/jira/browse/CASSANDRA-16082 to make sure everything registered correctly.

+1

Created CASSANDRA-16090 to track eventual removal of the (new and existing) clutter in {{TableMetrics}}, and CASSANDRA-16094 to address the preexisting flaky test in {{TestIncRepair}}.

UPDATE: Looking for a second committer +1 here...

I'll take a look this week.

+1 LGTM.

CI results: https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-15909-trunk-5C734EDF-D2F6-4775-BD26-D0D9B391C162

