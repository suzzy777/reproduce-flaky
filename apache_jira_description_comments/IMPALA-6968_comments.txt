I tried the obvious thing of looping a release version of this test and it passed consistently. Could be specific to the environment its running in somehow.
It doesn't make a whole lot of sense to me why this would be flaky, unless the write to the file failed somehow.
{code}
  // Modify the data in the scratch file and check that a read error occurs.
  FILE* file = fopen(file_path.c_str(), "rb+");
  fputc('?', file);
  fclose(file);
  vector<uint8_t> tmp;
  tmp.resize(data.size());
  Status read_status = file_group.Read(handle.get(), MemRange(tmp.data(), tmp.size()));
  LOG(INFO) << read_status.GetDetail();
  EXPECT_EQ(TErrorCode::SCRATCH_READ_VERIFY_FAILED, read_status.code())
      << read_status.GetDetail();
{code}
I'll try to reproduce and maybe add some additional checks.

Spoke too soon - I reproduced it locally after a few more minutes.

I know what the bug is - it's a dumb one. The data on data/in memory is encrypted with a randomly generated key, so the bytes are effectively random.  I'm only changing to first byte to '?'. There's a 1/256 chance that the first byte of the encrypted data was already '?', so the test will fail 1/256 tries on average.

Commit d6dad9cdf8b6d2bf10ed3b54e00ca3765638c7a7 in impala's branch refs/heads/master from [~tarmstrong@cloudera.com]
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=d6dad9c ]

IMPALA-6968: Fix TestBlockVerification flakiness

The bug is that the byte in the encrypted data is '?' around 1/256 runs
of the test. Instead, flip a bit in the original data so that it's
always different from the input.

Change-Id: Ibdf063ff32848035af667c7cd2a1268f5b785cfe
Reviewed-on: http://gerrit.cloudera.org:8080/10301
Reviewed-by: Sailesh Mukil <sailesh@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Commit d1476d1e06dded6ca0f78aebc879f7ca34ee685b in impala's branch refs/heads/2.x from [~tarmstrong@cloudera.com]
[ https://git-wip-us.apache.org/repos/asf?p=impala.git;h=d1476d1 ]

IMPALA-6968: Fix TestBlockVerification flakiness

The bug is that the byte in the encrypted data is '?' around 1/256 runs
of the test. Instead, flip a bit in the original data so that it's
always different from the input.

Change-Id: Ibdf063ff32848035af667c7cd2a1268f5b785cfe
Reviewed-on: http://gerrit.cloudera.org:8080/10301
Reviewed-by: Sailesh Mukil <sailesh@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


