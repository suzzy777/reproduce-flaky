[SPARK-18099|https://issues.apache.org/jira/browse/SPARK-18099] added an exception to be thrown if same file gets added multiple times to distributed cache. 
If user has application jar in workflow/lib directory and he/she mentions relative path of the jar in <jar> tag, then it results in distributing application jar multiple times. Earlier (before spark 2.1) this wasn't an issue, because spark used to show a WARN message.

Solution is to include complete hdfs path while specifying application jar and exclude it from --files option.

Testing JIRA OOZIE-2787

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
.    {color:red}WARNING: the current HEAD has 1 RAT warning(s), they should be addressed ASAP{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [core].
.    {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1868
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}.   There is at least one warning, please check{color}

The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3610/

[~satishsaley] thanks for the patch!

Some observations:
* please add test case to {{TestSparkMain}} or elsewhere
* please rename new Maven profile to {{spark-2.1-kafka-1.6.2}} to get a better idea what's in there
* I'd extract the {{filterJars()}} to a nested class for better testability and SRP, like {{JarURIFilter}}. In that case you could pass all the necessary parameters via constructor, and have a {{toString()}} method that calls {{StringUtils.join()}}
* it's OK w/ me if all the JAR files of the current directory are filtered, supposing all those ones are application JARs. What about other packages like {{.py}} and {{.zip}} files? Maybe worth having unit tests for those as well

Comments:
   - Instead of adding a new profile spark-2.1, please just upgrade version of spark in spark-2 profile. 
   - fixFsDefaultUris is also doing filtering of the application jar path. Just do that in one place in filterJars.

- OOZIE-2554 is created for adding test cases for Spark action.
- Upgraded spark version in spark-2 profile
- updated filterJars method and included in separate class. OOZIE-2554 would add test cases for it.


Moving it to a JarFilter class is nice and code is more cleaner. Just need two more minor changes.

private class JarFilter -> private static class JarFilter
LinkedList<URI> listUris = null; -> private LinkedList<URI> listUris = null;

- Made class static
- Made listUri private

- minor changes in java doc comment

+1

+1 (non-binding)

Testing JIRA OOZIE-2787

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
.    {color:red}WARNING: the current HEAD has 1 RAT warning(s), they should be addressed ASAP{color}
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [core].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1868
.    Tests failed: 4
.    Tests errors: 0

.    The patch failed the following testcases:

.      testMemoryUsageAndSpeed(org.apache.oozie.service.TestPartitionDependencyManagerEhcache)
.      testMemoryUsageAndSpeed(org.apache.oozie.service.TestPartitionDependencyManagerService)
.      testCoordMaterializeTriggerService3(org.apache.oozie.service.TestCoordMaterializeTriggerService)
.      testTimeOutWithUnresolvedMissingDependencies(org.apache.oozie.command.coord.TestCoordPushDependencyCheckXCommand)

.    Tests failing with errors:
.      

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}

{color:red}.   There is at least one warning, please check{color}

The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3612/

Tested locally, failures are flaky.

Thank you Rohini and Andras for review. Committed to master.

Reopening as there is a regression.

{code}
pi.py is under oozie.wf.application.path and workflow configuration is -

<name>pyspark example</name>
<jar>pi.py</jar>
<spark-opts>${testConf}</spark-opts>
<file>pi.py#pi-renamed.py</file>
{code}

With the change we added in this jira, it will call run the Spark job with following params:

{code}
--master
yarn-cluster
--name
pyspark example
--conf
spark.driver.extraJavaOptions=-Dlog4j.configuration=spark-log4j.properties
--conf
spark.ui.view.acls=*
--queue
default
--conf
spark.executor.extraClassPath=$PWD/*
--conf
spark.driver.extraClassPath=$PWD/*
--conf
spark.yarn.security.tokens.hive.enabled=false
--conf
spark.yarn.security.tokens.hbase.enabled=false
--conf
spark.executor.extraJavaOptions=-Dlog4j.configuration=spark-log4j.properties
--properties-file
spark-defaults.conf
--files
<<list of files excluding pi.py>>
--conf
spark.yarn.jar=hdfs://localhost/share/spark/lib/spark-assembly.jar
--verbose
hdfs://localhost/user/saley/examples/apps/spark-yarn-cluster/pi.py#pi-renamed.py
10
{code} 

The job fails saying - 
{code}
2017-02-07 21:59:24,847 [Driver] ERROR org.apache.spark.deploy.yarn.ApplicationMaster  - User application exited with status 2
2017-02-07 21:59:24,849 [Driver] INFO  org.apache.spark.deploy.yarn.ApplicationMaster  - Final app status: FAILED, exitCode: 2, (reason: User application exited with status 2)
python: can't open file 'pi.py#pi-renamed.py': [Errno 2] No such file or directory
{code}
Spark does not understand the {{#}} sign.
Therefore, we need to pass in the direct path for the file.
But at the same time, we also need to make sure that application jar won't get distributed twice.

Solution - Mention the direct path for the application jar/py file if there is a {{#}} sign (fragment) in the path. We can do so, because file is already available in the launcher's local directory i.e. current directory. Also, at the same time remove the application jar from *--files* option. 

[~satishsaley] It would be nice to document the same for oozie-spark action. Some thing like "How to specify application path in Oozie-Spark action". Thanks.

[~satishsaley] Thx for the patch. Two minor suggestions:
1. java doc for 'isApplicationJar' seems outdated.
2. It would be great if we can add some simple unit test for either 'filter()' or 'isApplicationJar()' to ensure the behavior we want.

Testing JIRA OOZIE-2787

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:red}-1{color} the patch does not add/modify any testcase
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [core].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1872
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3634/

Thank you for review [~abhishekbafna]  [~zhengxb2005].
Users don't need to do any extra work, they will continue using current configuration. I added an example in doc. Also added some test cases for JarFilter.

Testing JIRA OOZIE-2787

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [core].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [tools].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1873
.    Tests failed: 1
.    Tests errors: 1

.    The patch failed the following testcases:

.      testNone(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommand)

.    Tests failing with errors:
.      testJMXInstrumentation(org.apache.oozie.util.TestMetricsInstrumentation)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3637/

Testing JIRA OOZIE-2787

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [core].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1873
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:green}*+1 Overall result, good!, no -1s*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3638/

Renaming the title for section in documentation. 

+1 for OOZIE-2787-amend-5.patch.

Testing JIRA OOZIE-2787

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1{color} There are no new bugs found in total.
.    {color:green}+1{color} There are no new bugs found in [server].
.    {color:green}+1{color} There are no new bugs found in [client].
.    {color:green}+1{color} There are no new bugs found in [tools].
.    {color:green}+1{color} There are no new bugs found in [docs].
.    {color:green}+1{color} There are no new bugs found in [examples].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hcatalog].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive].
.    {color:green}+1{color} There are no new bugs found in [sharelib/distcp].
.    {color:green}+1{color} There are no new bugs found in [sharelib/pig].
.    {color:green}+1{color} There are no new bugs found in [sharelib/spark].
.    {color:green}+1{color} There are no new bugs found in [sharelib/oozie].
.    {color:green}+1{color} There are no new bugs found in [sharelib/sqoop].
.    {color:green}+1{color} There are no new bugs found in [sharelib/hive2].
.    {color:green}+1{color} There are no new bugs found in [sharelib/streaming].
.    {color:green}+1{color} There are no new bugs found in [hadooplibs/hadoop-utils-2].
.    {color:green}+1{color} There are no new bugs found in [core].
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:green}+1 TESTS{color}
.    Tests run: 1873
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:green}*+1 Overall result, good!, no -1s*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/3639/

Thank you Puru, Abhishek and Xiaobin for review. Committed to master.

Is this released to AWS spark yet?
I did not quite understand the workaround.  How do I exclude the jar file from the --files spark-opts.  I already have a --files spark-opts that does not include the jar location.


Cherry-picked from master to branch-4.3.


Closing issue; Oozie 4.3.1 is released.

