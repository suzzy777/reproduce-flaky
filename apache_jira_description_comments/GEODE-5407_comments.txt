[http://files.apachegeode-ci.info/builds/1.8.0-build.1106/test-results/distributedTest/1531169915/classes/org.apache.geode.management.JMXMBeanReconnectDUnitTest.html#testLocalBeans_MaintainServerAndCrashLocator]

http://files.apachegeode-ci.info/builds/1.8.0-build.1106/test-results/distributedTest/1531169915/classes/org.apache.geode.management.JMXMBeanReconnectDUnitTest.html#testRemoteBeanKnowledge_MaintainServerAndCrashLocator

Commit 442e7aac8c4fa4ed5a91cfbe77520240321d1532 in geode's branch refs/heads/develop from jinmeiliao
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=442e7aa ]

GEODE-5407: increase timeout and provide more logging (#2120)

Co-authored-by: Mark Hanson <mhanson@pivotal.io>

This reoccurred 3 times in 300 runs of DistributedTest with 8661b1e0347cbd4574fbb26c8e0999a646b4bd7

{noformat}
org.apache.geode.management.JMXMBeanReconnectDUnitTest:  3 failures (98.993% success rate)
 |  .testLocalBeans_MaintainServerAndCrashLocator:  1 failures (99.664% success rate)
 |   |  Failed build 238  at https://concourse.apachegeode-ci.info/teams/main/pipelines/concourse-staging/jobs/DistributedTest/builds/238
 |  .testLocalBeans_MaintainLocatorAndCrashServer:  2 failures (99.329% success rate)
 |   |  Failed build 242  at https://concourse.apachegeode-ci.info/teams/main/pipelines/concourse-staging/jobs/DistributedTest/builds/242
 |   |  Failed build 221  at https://concourse.apachegeode-ci.info/teams/main/pipelines/concourse-staging/jobs/DistributedTest/builds/221
{noformat}

{noformat}
org.apache.geode.management.JMXMBeanReconnectDUnitTest > testLocalBeans_MaintainServerAndCrashLocator FAILED
    org.awaitility.core.ConditionTimeoutException: Condition with lambda expression in org.apache.geode.management.JMXMBeanReconnectDUnitTest was not fulfilled within 1 minutes.
        at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:145)
        at org.awaitility.core.CallableCondition.await(CallableCondition.java:79)
        at org.awaitility.core.CallableCondition.await(CallableCondition.java:27)
        at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:890)
        at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:848)
        at org.apache.geode.management.JMXMBeanReconnectDUnitTest.waitForLocatorsToAgreeOnMembership(JMXMBeanReconnectDUnitTest.java:280)
        at org.apache.geode.management.JMXMBeanReconnectDUnitTest.before(JMXMBeanReconnectDUnitTest.java:96)

{noformat}




Attached the latest failures from this test. [^Test results - Class org.apache.geode.management.JMXMBeanReconnectDUnitTest.html] 

Commit 4ca93d8ee867de270dc32d9b2ce16513005fa11b in geode's branch refs/heads/develop from Helena A. Bales
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=4ca93d8 ]

GEODE-5407: fix JMXMBeanReconnectDUnitTest timing

This test class had several timing isses for the remote MBean tests.
This PR fixes all known timing issues, which were MBean inconsistencies
in the before() and trouble reconnecting stopped members, as well as
insufficiently strict assertions (comparing lists with
.containsExactlyElementsOf() is not commutative). This commit also
changes MemberVM's forceDisconnect to use a blackboard mailbox instead
of a fixed amount of time to decid when to start reconnecting. It also
adds functionality to the ConcurrencyRule to act as an awaitility.

* In waitForLocatorsToAgreeOnMembership, called from the before, the
MBeans that each locator has were only compared by list size. Now they
are compared element by element, and the sizes are checked to be
correct.

* In waitForLocatorToAgreeOnMembership, the wait was returning
prematurely after the first pass due to Awaitlity.untilAsserted not
working correctly. For this method, a simple implementation using
assertions and Awaitility caused memory issues, so the current
implementation uses do/while loops, compares the lists element by
element, and starts a single thread that is allowed to run for 300
seconds.

* In the tests, the timing was not strictly enforced. The disconnect and
starting the reconnect now happen in different threads. The thread that
starts the reconnect checks that the disconnect has happened, gathers
relevant information, then signals that reconnect can start, which the
reconnect thread now checks for. This ensures that we don't gather
MBeans before the member has fully stopped, and that reconnect does not
start until we've gathered the MBeans.

* Assertions have been made more strict by checking that lists against
each other twice, since Assertions.containsExactlyElementsOf() is not
commutative.

* Use a blackboard entry to check if the stopped member should start
reconnecting in the reconnect listener attached from MemberVM when
forcing a member to disconnect.

* Add functionality to ConcurrencyRule to act as an awaitility,
expecting a value to eventually be true. This was added during the
process of trying to solve this bug but is not used in the final
implementation.


Commit f84a5c040ea5f2cd3b3bc1864f13051c0f4d45ed in geode's branch refs/heads/develop from Helena A. Bales
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=f84a5c0 ]

Merge branch 'develop' into GEODE-5407


Commit f873d3482e06e883dd560e90ed1de1a4cbc06325 in geode's branch refs/heads/develop from [~balesh2]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=f873d34 ]

GEODE-5407: fix JMXMBeanReconnectDUnitTest timing (#2833)

* GEODE-5407: fix JMXMBeanReconnectDUnitTest timing

This test class had several timing isses for the remote MBean tests.
This PR fixes all known timing issues, which were MBean inconsistencies
in the before() and trouble reconnecting stopped members, as well as
insufficiently strict assertions (comparing lists with
.containsExactlyElementsOf() is not commutative). This commit also
changes MemberVM's forceDisconnect to use a blackboard mailbox instead
of a fixed amount of time to decid when to start reconnecting. It also
adds functionality to the ConcurrencyRule to act as an awaitility.

* In waitForLocatorsToAgreeOnMembership, called from the before, the
MBeans that each locator has were only compared by list size. Now they
are compared element by element, and the sizes are checked to be
correct.

* In waitForLocatorToAgreeOnMembership, the wait was returning
prematurely after the first pass due to Awaitlity.untilAsserted not
working correctly. For this method, a simple implementation using
assertions and Awaitility caused memory issues, so the current
implementation uses do/while loops, compares the lists element by
element, and starts a single thread that is allowed to run for 300
seconds.

* In the tests, the timing was not strictly enforced. The disconnect and
starting the reconnect now happen in different threads. The thread that
starts the reconnect checks that the disconnect has happened, gathers
relevant information, then signals that reconnect can start, which the
reconnect thread now checks for. This ensures that we don't gather
MBeans before the member has fully stopped, and that reconnect does not
start until we've gathered the MBeans.

* Assertions have been made more strict by checking that lists against
each other twice, since Assertions.containsExactlyElementsOf() is not
commutative.

* Use a blackboard entry to check if the stopped member should start
reconnecting in the reconnect listener attached from MemberVM when
forcing a member to disconnect.

* Add functionality to ConcurrencyRule to act as an awaitility,
expecting a value to eventually be true. This was added during the
process of trying to solve this bug but is not used in the final
implementation.

* fail the test when waits timeout

* create a single connection per locator and reuse it

* make suggested changes from PR comments


Commit f873d3482e06e883dd560e90ed1de1a4cbc06325 in geode's branch refs/heads/develop from [~balesh2]
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=f873d34 ]

GEODE-5407: fix JMXMBeanReconnectDUnitTest timing (#2833)

* GEODE-5407: fix JMXMBeanReconnectDUnitTest timing

This test class had several timing isses for the remote MBean tests.
This PR fixes all known timing issues, which were MBean inconsistencies
in the before() and trouble reconnecting stopped members, as well as
insufficiently strict assertions (comparing lists with
.containsExactlyElementsOf() is not commutative). This commit also
changes MemberVM's forceDisconnect to use a blackboard mailbox instead
of a fixed amount of time to decid when to start reconnecting. It also
adds functionality to the ConcurrencyRule to act as an awaitility.

* In waitForLocatorsToAgreeOnMembership, called from the before, the
MBeans that each locator has were only compared by list size. Now they
are compared element by element, and the sizes are checked to be
correct.

* In waitForLocatorToAgreeOnMembership, the wait was returning
prematurely after the first pass due to Awaitlity.untilAsserted not
working correctly. For this method, a simple implementation using
assertions and Awaitility caused memory issues, so the current
implementation uses do/while loops, compares the lists element by
element, and starts a single thread that is allowed to run for 300
seconds.

* In the tests, the timing was not strictly enforced. The disconnect and
starting the reconnect now happen in different threads. The thread that
starts the reconnect checks that the disconnect has happened, gathers
relevant information, then signals that reconnect can start, which the
reconnect thread now checks for. This ensures that we don't gather
MBeans before the member has fully stopped, and that reconnect does not
start until we've gathered the MBeans.

* Assertions have been made more strict by checking that lists against
each other twice, since Assertions.containsExactlyElementsOf() is not
commutative.

* Use a blackboard entry to check if the stopped member should start
reconnecting in the reconnect listener attached from MemberVM when
forcing a member to disconnect.

* Add functionality to ConcurrencyRule to act as an awaitility,
expecting a value to eventually be true. This was added during the
process of trying to solve this bug but is not used in the final
implementation.

* fail the test when waits timeout

* create a single connection per locator and reuse it

* make suggested changes from PR comments


Failed on release/1.9.0 branch

 

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  Test Results URI =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[*http://files.apachegeode-ci.info/builds/apache-release-1-9-0-main/1.9.0-SNAPSHOT.0023/test-results/distributedTest/1553892502/*]
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Test report artifacts from this job are available at:

[*http://files.apachegeode-ci.info/builds/apache-release-1-9-0-main/1.9.0-SNAPSHOT.0023/test-artifacts/1553892502/distributedtestfiles-OpenJDK8-1.9.0-SNAPSHOT.0023.tgz*]

Failed during JDK 11 run on 7/22/19:

[https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK11/builds/902]

faile again: [https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK8/builds/1030]

Failed again: [https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK8/builds/1121]

Failed again: https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK11/builds/1159

Suspect this is an actual product bug.

Looks like the two locators don't agree on what JMX beans exist after 5 minutes, in the @Before method:

{noformat}
org.apache.geode.management.JMXMBeanReconnectDUnitTest > testLocalBeans_MaintainServerAndCrashLocator FAILED
        GemFire:service=CacheServer,port=44657,type=Member,member=server-3,
        GemFire:type=Member,member=server-3]>
    to contain exactly (and in same order):
      <[GemFire:service=Region,name="/test-region-1",type=Distributed,
        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,
        GemFire:service=AccessControl,type=Distributed,
        GemFire:service=FileUploader,type=Distributed,
        GemFire:service=System,type=Distributed,
        GemFire:service=Locator,type=Member,member=locator-0,
        GemFire:type=Member,member=locator-0,
        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,
        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,
        GemFire:service=Locator,type=Member,member=locator-1,
        GemFire:type=Member,member=locator-1,
        GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,
        GemFire:service=CacheServer,port=45533,type=Member,member=server-2,
        GemFire:type=Member,member=server-2,
        GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,
        GemFire:service=CacheServer,port=44657,type=Member,member=server-3,
        GemFire:type=Member,member=server-3]>
    but some elements were not expected:
      <[GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,
        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0]>

{noformat}

This @Before method has changed over the lifetime of this bug report. But at least the most recent three failures look very similar.

Occurred again on JDK11:
http://files.apachegeode-ci.info/builds/apache-develop-main/1.11.0-SNAPSHOT.0228/test-results/distributedTest/1571415089/


Failed again: https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK11/builds/1215

{noformat}
org.apache.geode.management.JMXMBeanReconnectDUnitTest > testLocalBeans_MaintainLocatorAndCrashServer FAILED
    org.awaitility.core.ConditionTimeoutException: Condition with alias 'Locators must agree on the state of the system' didn't complete within 300 seconds because assertion condition defined as a lambda expression in org.apache.geode.management.JMXMBeanReconnectDUnitTest 
    Expecting:
      <[GemFire:service=Region,name="/test-region-1",type=Distributed,
        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,
        GemFire:service=AccessControl,type=Distributed,
        GemFire:service=FileUploader,type=Distributed,
        GemFire:service=System,type=Distributed,
        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,
        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0,
        GemFire:service=Locator,type=Member,member=locator-0,
        GemFire:type=Member,member=locator-0,
        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,
        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,
        GemFire:service=Locator,type=Member,member=locator-1,
        GemFire:type=Member,member=locator-1,
        GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,
        GemFire:service=CacheServer,port=36159,type=Member,member=server-2,
        GemFire:type=Member,member=server-2,
        GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,
        GemFire:service=CacheServer,port=37581,type=Member,member=server-3,
        GemFire:type=Member,member=server-3]>
    to contain exactly (and in same order):
      <[GemFire:service=Region,name="/test-region-1",type=Distributed,
        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,
        GemFire:service=AccessControl,type=Distributed,
        GemFire:service=FileUploader,type=Distributed,
        GemFire:service=System,type=Distributed,
        GemFire:service=Locator,type=Member,member=locator-0,
        GemFire:type=Member,member=locator-0,
        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,
        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,
        GemFire:service=Locator,type=Member,member=locator-1,
        GemFire:type=Member,member=locator-1,
        GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,
        GemFire:service=CacheServer,port=36159,type=Member,member=server-2,
        GemFire:type=Member,member=server-2,
        GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,
        GemFire:service=CacheServer,port=37581,type=Member,member=server-3,
        GemFire:type=Member,member=server-3]>
    but some elements were not expected:
      <[GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,
        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0]>
    .
        at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:145)
        at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:122)
        at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:32)
        at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:902)
        at org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:723)
        at org.apache.geode.management.JMXMBeanReconnectDUnitTest.before(JMXMBeanReconnectDUnitTest.java:94)

        Caused by:
        java.lang.AssertionError: 
        Expecting:
          <[GemFire:service=Region,name="/test-region-1",type=Distributed,
            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,
            GemFire:service=AccessControl,type=Distributed,
            GemFire:service=FileUploader,type=Distributed,
            GemFire:service=System,type=Distributed,
            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,
            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0,
            GemFire:service=Locator,type=Member,member=locator-0,
            GemFire:type=Member,member=locator-0,
            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,
            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,
            GemFire:service=Locator,type=Member,member=locator-1,
            GemFire:type=Member,member=locator-1,
            GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,
            GemFire:service=CacheServer,port=36159,type=Member,member=server-2,
            GemFire:type=Member,member=server-2,
            GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,
            GemFire:service=CacheServer,port=37581,type=Member,member=server-3,
            GemFire:type=Member,member=server-3]>
        to contain exactly (and in same order):
          <[GemFire:service=Region,name="/test-region-1",type=Distributed,
            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,
            GemFire:service=AccessControl,type=Distributed,
            GemFire:service=FileUploader,type=Distributed,
            GemFire:service=System,type=Distributed,
            GemFire:service=Locator,type=Member,member=locator-0,
            GemFire:type=Member,member=locator-0,
            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,
            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,
            GemFire:service=Locator,type=Member,member=locator-1,
            GemFire:type=Member,member=locator-1,
            GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,
            GemFire:service=CacheServer,port=36159,type=Member,member=server-2,
            GemFire:type=Member,member=server-2,
            GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,
            GemFire:service=CacheServer,port=37581,type=Member,member=server-3,
            GemFire:type=Member,member=server-3]>
        but some elements were not expected:
          <[GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,
            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0]>
            at org.apache.geode.management.JMXMBeanReconnectDUnitTest.lambda$before$0(JMXMBeanReconnectDUnitTest.java:95)
{noformat}


More failures: 

       testLocalBeans_MaintainServerAndCrashLocator       https://concourse.apachegeode-ci.info/teams/main/pipelines/mhansonp-mhanson-mass-test-ru-main/jobs/DistributedTestOpenJDK8/builds/1273

         testLocalBeans_MaintainLocatorAndCrashServer       https://concourse.apachegeode-ci.info/teams/main/pipelines/mhansonp-mhanson-mass-test-ru-main/jobs/DistributedTestOpenJDK8/builds/1433

         testLocalBeans_MaintainLocatorAndCrashServer       https://concourse.apachegeode-ci.info/teams/main/pipelines/mhansonp-mhanson-mass-test-ru-main/jobs/DistributedTestOpenJDK8/builds/1282

         testLocalBeans_MaintainLocatorAndCrashServer       https://concourse.apachegeode-ci.info/teams/main/pipelines/mhansonp-mhanson-mass-test-ru-main/jobs/DistributedTestOpenJDK8/builds/1255

Another failure: https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK11/builds/1279

failed again: https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK11/builds/1321


{noformat}
org.apache.geode.management.JMXMBeanReconnectDUnitTest > testLocalBeans_MaintainServerAndCrashLocator FAILED

    org.awaitility.core.ConditionTimeoutException: Condition with alias 'Locators must agree on the state of the system' didn't complete within 300 seconds because assertion condition defined as a lambda expression in org.apache.geode.management.JMXMBeanReconnectDUnitTest 

    Expecting:

      <[GemFire:service=Region,name="/test-region-1",type=Distributed,

        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,

        GemFire:service=AccessControl,type=Distributed,

        GemFire:service=FileUploader,type=Distributed,

        GemFire:service=System,type=Distributed,

        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,

        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0,

        GemFire:service=Locator,type=Member,member=locator-0,

        GemFire:type=Member,member=locator-0,

        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,

        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,

        GemFire:service=Locator,type=Member,member=locator-1,

        GemFire:type=Member,member=locator-1,

        GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,

        GemFire:service=CacheServer,port=34975,type=Member,member=server-2,

        GemFire:type=Member,member=server-2,

        GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,

        GemFire:service=CacheServer,port=40243,type=Member,member=server-3,

        GemFire:type=Member,member=server-3]>

    to contain exactly (and in same order):

      <[GemFire:service=Region,name="/test-region-1",type=Distributed,

        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,

        GemFire:service=AccessControl,type=Distributed,

        GemFire:service=FileUploader,type=Distributed,

        GemFire:service=System,type=Distributed,

        GemFire:service=Locator,type=Member,member=locator-0,

        GemFire:type=Member,member=locator-0,

        GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,

        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,

        GemFire:service=Locator,type=Member,member=locator-1,

        GemFire:type=Member,member=locator-1,

        GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,

        GemFire:service=CacheServer,port=34975,type=Member,member=server-2,

        GemFire:type=Member,member=server-2,

        GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,

        GemFire:service=CacheServer,port=40243,type=Member,member=server-3,

        GemFire:type=Member,member=server-3]>

    but some elements were not expected:

      <[GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,

        GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0]>

    .

        at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:145)

        at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:122)

        at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:32)

        at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:902)

        at org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:723)

        at org.apache.geode.management.JMXMBeanReconnectDUnitTest.before(JMXMBeanReconnectDUnitTest.java:94)


        Caused by:

        java.lang.AssertionError: 

        Expecting:

          <[GemFire:service=Region,name="/test-region-1",type=Distributed,

            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,

            GemFire:service=AccessControl,type=Distributed,

            GemFire:service=FileUploader,type=Distributed,

            GemFire:service=System,type=Distributed,

            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,

            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0,

            GemFire:service=Locator,type=Member,member=locator-0,

            GemFire:type=Member,member=locator-0,

            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,

            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,

            GemFire:service=Locator,type=Member,member=locator-1,

            GemFire:type=Member,member=locator-1,

            GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,

            GemFire:service=CacheServer,port=34975,type=Member,member=server-2,

            GemFire:type=Member,member=server-2,

            GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,

            GemFire:service=CacheServer,port=40243,type=Member,member=server-3,

            GemFire:type=Member,member=server-3]>

        to contain exactly (and in same order):

          <[GemFire:service=Region,name="/test-region-1",type=Distributed,

            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Distributed,

            GemFire:service=AccessControl,type=Distributed,

            GemFire:service=FileUploader,type=Distributed,

            GemFire:service=System,type=Distributed,

            GemFire:service=Locator,type=Member,member=locator-0,

            GemFire:type=Member,member=locator-0,

            GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-1,

            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-1,

            GemFire:service=Locator,type=Member,member=locator-1,

            GemFire:type=Member,member=locator-1,

            GemFire:service=Region,name="/test-region-1",type=Member,member=server-2,

            GemFire:service=CacheServer,port=34975,type=Member,member=server-2,

            GemFire:type=Member,member=server-2,

            GemFire:service=Region,name="/test-region-1",type=Member,member=server-3,

            GemFire:service=CacheServer,port=40243,type=Member,member=server-3,

            GemFire:type=Member,member=server-3]>

        but some elements were not expected:

          <[GemFire:service=LockService,name=__CLUSTER_CONFIG_LS,type=Member,member=locator-0,

            GemFire:service=DiskStore,name=cluster_config,type=Member,member=locator-0]>

            at org.apache.geode.management.JMXMBeanReconnectDUnitTest.lambda$before$0(JMXMBeanReconnectDUnitTest.java:95)


8882 tests completed, 1 failed, 515 skipped
{noformat}


No archive:

 !screenshot-1.png! 

More failures...

 

testLocalBeans_MaintainLocatorAndCrashServer 

[https://concourse.apachegeode-ci.info/teams/main/pipelines/mhansonp-mhanson-mass-test-ru-main/jobs/DistributedTestOpenJDK8/builds/2441]

[https://concourse.apachegeode-ci.info/teams/main/pipelines/mhansonp-mhanson-mass-test-ru-main/jobs/DistributedTestOpenJDK8/builds/2337]

[https://concourse.apachegeode-ci.info/teams/main/pipelines/mhansonp-mhanson-mass-test-ru-main/jobs/DistributedTestOpenJDK8/builds/2287]

Commit 21fce819826f79e6f52adb829a5b2636a1213d9a in geode's branch refs/heads/develop from Kirk Lund
[ https://gitbox.apache.org/repos/asf?p=geode.git;h=21fce81 ]

GEODE-5407: Fix JMXMBeanReconnectDUnitTest

* Rewrite test with standard Geode and JMX APIs
* Use CountDownLatch instead of Blackboard
* Use SharedErrorCollector for remote listener errors
* Always consistently use Awaitility before checking GemFire MXBeans

Co-authored-by: Ivan Godwin <igodwin@pivotal.io>

