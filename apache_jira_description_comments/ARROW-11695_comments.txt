This seems like a packaging problem. The conda environment has gRPC 1.35.0, yet Flight complains about a gRPC version less than 1.27.

[~lidavidm] [~uwe]

Hmm, at least, the nightly Conda build found support: [https://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=1309&view=logs&j=cf796865-97b7-5cd1-be8e-6e00ce4fd8cf&t=88ee2fb8-46fd-5c68-fde3-1c8d31ba2a5f]

But the conda-forge build did not: [https://dev.azure.com/conda-forge/84710dde-1620-425b-80d0-4cf5baca359d/_apis/build/builds/278925/logs/198] 

Not sure what's up with that. Doesn't seem there are build artifacts to look at (the detection works by trying to compile a C++ snippet and seeing if it succeeds/fails, CMake saves the log somewhere IIRC).

The build fails with the latest gRPC 1.35 release:

{code}
check_tls_opts_132.cc: /Users/uwe/mambaforge/conda-bld/arrow-cpp-ext_1614003135390/work/cpp/src/arrow/flight/try_compile/check_tls_opts_132.cc:29:61: error: no member named 'server_verification_option' in 'grpc::experimental::TlsCredentialsOptions'
check_tls_opts_132.cc:   grpc_tls_server_verification_option server_opt = options->server_verification_option()
check_tls_opts_132.cc:                                                    ~~~~~~~  ^
check_tls_opts_132.cc: /Users/uwe/mambaforge/conda-bld/arrow-cpp-ext_1614003135390/work/cpp/src/arrow/flight/try_compile/check_tls_opts_132.cc:34:39: warning: unused variable 'opt' [-Wunused-variable]
check_tls_opts_132.cc:   grpc_tls_server_verification_option opt = check(nullptr)
check_tls_opts_132.cc:                                       ^
check_tls_opts_132.cc: 1 warning and 1 error generated.
check_tls_opts_132.cc: ninja: build stopped: subcommand failed.
check_tls_opts_132.cc:
{code}

Looks like gRPC 1.35 removed the getter, so we'll have to change up how we detect this option. There's now only a setter: [https://grpc.github.io/grpc/cpp/classgrpc_1_1experimental_1_1_tls_channel_credentials_options.html] 

Hmm. The API was completely changed in 1.34. And then the API was changed again, incompatibly, in 1.36. It's going to be hard keeping up with these changes in gRPC unless they actually stabilize, or we get community support to test & implement all the variations for different gRPC versions. We need separate implementations for 1.27, 1.32, 1.34, and (what will be) 1.36.

Here's a branch with the beginnings of a fix: [https://github.com/lidavidm/arrow/tree/arrow-11695-detection]

But this targets the API from (unreleased) gRPC 1.36; 1.34/1.35 need more work (TlsChannelCredentialsOptions has no default constructor). It doesn't help that there is no documentation and no usage examples outside of the gRPC sources themselves. I probably won't have this finished anytime soon.

[~lidavidm] It would be nice to have a CMake option that requires this check to pass. I would set that then in the conda packages so that we are sure that it is always compiled in. Then we would at least be notified if future versions break again. 

Good idea. I've added an option in my branch. I'm still trying to figure out why gRPC segfaults when the new API is used, before I put up a formal PR.

Issue resolved by pull request 9569
[https://github.com/apache/arrow/pull/9569]

When we could expect a new version to be released either on `pypi` or `conda`?

The conda package is already fixed, on PyPI you need to wait for Arrow 4.0

After new conda package installation there is a problem with certs:


{code:java}
E0226 09:16:14.615553000 4724039104 ssl_utils.cc:568]                  load_file: {"created":"@1614327374.615536000","description":"Failed to load file","file":"../src/core/lib/iomgr/load_file.cc","file_line":72,"filename":"/usr/share/grpc/roots.pem","referenced_errors":[{"created":"@1614327374.615533000","description":"No such file or directory","errno":2,"file":"../src/core/lib/iomgr/load_file.cc","file_line":45,"os_error":"No such file or directory","syscall":"fopen"}]}
E0226 09:16:14.615568000 4724039104 ssl_utils.cc:404]                  Could not get default pem root certs.
E0226 09:16:14.615572000 4724039104 tls_security_connector.cc:351]     Update handshaker factory failed.
E0226 09:16:14.809187000 4724039104 tls_security_connector.cc:196]     Client BlockOnInitialCredentialHandshaker not supported yet.
Traceback (most recent call last):
  File "....py", line 32, in <module>
    readClient.authenticate(token_client)
  File "pyarrow/_flight.pyx", line 1155, in pyarrow._flight.FlightClient.authenticate
  File "pyarrow/_flight.pyx", line 70, in pyarrow._flight.check_flight_status
pyarrow._flight.FlightUnavailableError: gRPC returned unavailable error, with message: failed to connect to all addresses
{code}

[~amasend] please update and try again, I have pushed a new build with the final patch.

[~uwe] Thanks! It is working now! Great work.

This issue has been migrated to [issue #27557|https://github.com/apache/arrow/issues/27557] on GitHub. Please see the [migration documentation|https://github.com/apache/arrow/issues/14542] for further details.

