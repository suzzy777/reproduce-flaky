Trivial patch. There's multiple conditions to identify a failed build - including looking for target files. -fn I believe results in an exit code of 0 - which should not matter.

[~zjffdu] - please review.

Shouldn't use "-ff,--fail-fast" to bail out early regarding the mvn help ?
{code}
 -fae,--fail-at-end                     Only fail the build afterwards;
                                        allow all non-impacted builds to
                                        continue
 -ff,--fail-fast                        Stop at first failure in
                                        reactorized builds
 -fn,--fail-never                       NEVER fail the build, regardless
                                        of project result
{code}
bq. -fn I believe results in an exit code of 0 - which should not matter.
At least I see the exit code is used in the following code, not sure about the effect. [~hitesh] may know about this. 
{code}
  if [[ $test_build_result != 0 && -z "$module_failed_tests" && -z "$module_test_timeouts" ]] ; then
    failed_test_builds="$module $failed_test_builds"
  fi
{code}


{color:red}-1 overall{color}.  Here are the results of testing the latest attachment
  http://issues.apache.org/jira/secure/attachment/12776992/TEZ-2990.1.txt
  against master revision b03faf1.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in :
                   org.apache.tez.dag.app.dag.impl.TestVertexImpl

Test results: https://builds.apache.org/job/PreCommit-TEZ-Build/1360//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-TEZ-Build/1360//artifact/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-TEZ-Build/1360//console

This message is automatically generated.

It should not fail fast. It's better to run through all
tests and report all errors. Currently, flakey tests are causing most of the tests to be skipped.

May need to change the condition a bit. Had assumed it to be an ||

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment
  http://issues.apache.org/jira/secure/attachment/12776992/TEZ-2990.1.txt
  against master revision 460e0b2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in :
                   org.apache.tez.dag.app.dag.impl.TestVertexImpl

Test results: https://builds.apache.org/job/PreCommit-TEZ-Build/1362//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-TEZ-Build/1362//artifact/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-TEZ-Build/1362//console

This message is automatically generated.

I think the patch is OK in the current form. The && condition does not matter too much.

Most of this was just a copy of hadoop's test-patch. At some point, we should probably look at yetus. As for the change, in this case, the mvn test command will return 0 but the grep for failed test should probably catch the failures and return a -1. 

In any case, getting a consolidated list will be useful to see which tests are flaky all the time. In time we can probably think of reverting it if we get a more stabilized build. 

@Sid, can you commit the change, try out a test patch on a different jira before resolving this? 


Committing and submitting a dummy CHANGES.txt patch to this jira itself should also work. 

Thanks for taking a look. Committed. Triggering a test run for TEZ-2920.

Results on TEZ-2920 look good, with failures etc being posted correctly, and all tests run.

Closing as released. 

