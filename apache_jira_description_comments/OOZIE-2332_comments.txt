Attached a patch for this. 

here's a link to a version easier to read: https://github.com/apache/oozie/compare/master...prateek:hive2-query

Testing JIRA OOZIE-2332

Cleaning local git workspace

----------------------------

{color:red}-1{color} Patch failed to apply to head of branch

----------------------------

attaching a patch without any git formatting.

Thanks for working on this Prateek, it sounds like a useful change.  Can you upload a copy to [ReviewBoard|https://reviews.apache.org/dashboard/] and paste a link here?
(For Jenkins to be happy, you need to do {{--no-prefix}} when generating the patch.  Unfortunately, RB requires the prefix, so you have to generate two versions of the patch)

Ah thanks for the pointer. Here's the RB link: https://reviews.apache.org/r/37448/

`OOZIE-2332.patch` was generated with `format-patch` and  `OOZIE-2332-2.patch` was generated with `--no-prefix`. Do I need to do anything additional to kick off a build?

Nope.  Jenkins just looks for the latest attachment that hasn't run yet on JIRAs which have "Patch Available" status.

Perfect, thanks!

Testing JIRA OOZIE-2332

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:green}+1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:green}+1{color} the patch does not seem to introduce new javac warnings
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/2503/

Attached new patch with changes per the RB discussion.

Not sure what's up with the Jenkins build. It failed to compile core due to a VM issue: 

[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.2:test (default-test) on project oozie-core: Execution default-test of goal org.apache.maven.plugins:maven-surefire-plugin:2.12.2:test failed: The forked VM terminated without saying properly goodbye. VM crash or System.exit called ? -> [Help 1]

Look familiar?

Ya, there's something wrong lately with Jenkins.

Testing JIRA OOZIE-2332

Cleaning local git workspace

----------------------------

{color:red}-1{color} Patch failed to apply to head of branch

----------------------------

One of these days I'm going to remember which patch to upload to JIRA v RB. Sorry for the spam .. 

attached new patch with query inlining in both Hive2-actions & Hive-actions

- Attached patch with comments to detail getTextTrim v getText (RB has deetz)



Testing JIRA OOZIE-2332

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:red}-1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:red}-1{color} the patch contains 1 line(s) longer than 132 characters
.    {color:green}+1{color} the patch does adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases
{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/2509/

I'm not sure why Jenkins is acting so broken lately.  I'll run all of the Test*ActionExecutor and Test*Main tests before committing.

[~prateekrungta], can you look into the line that's too long and the new javac warning?  

New patch with smaller line.

[~rkanter] Attached a new patch with the line length fix. Not sure what the deal with the javac warning is - I tried looking through the changes but couldn't find anything that the patch causes. Here's the list I used to verify: https://pastee.org/9ug4v (the command on the first line was executed with the cwd set to `oozie` and my feature branch was active). Does Jenkins explicitly list the cause of the new javac warning(s)?

Testing JIRA OOZIE-2332

Cleaning local git workspace

----------------------------

{color:green}+1 PATCH_APPLIES{color}
{color:green}+1 CLEAN{color}
{color:green}+1 RAW_PATCH_ANALYSIS{color}
.    {color:green}+1{color} the patch does not introduce any @author tags
.    {color:green}+1{color} the patch does not introduce any tabs
.    {color:green}+1{color} the patch does not introduce any trailing spaces
.    {color:green}+1{color} the patch does not introduce any line longer than 132
.    {color:green}+1{color} the patch does adds/modifies 3 testcase(s)
{color:green}+1 RAT{color}
.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings
{color:green}+1 JAVADOC{color}
.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings
{color:red}-1 COMPILE{color}
.    {color:green}+1{color} HEAD compiles
.    {color:green}+1{color} patch compiles
.    {color:red}-1{color} the patch seems to introduce 1 new javac warning(s)
{color:green}+1 BACKWARDS_COMPATIBILITY{color}
.    {color:green}+1{color} the patch does not change any JPA Entity/Colum/Basic/Lob/Transient annotations
.    {color:green}+1{color} the patch does not modify JPA files
{color:red}-1 TESTS{color}
.    Tests run: 1687
.    Tests failed: 3
.    Tests errors: 0

.    The patch failed the following testcases:

.      testWrongHost(org.apache.oozie.service.TestProxyUserService)
.      testAdminInstrumentation(org.apache.oozie.client.TestOozieCLI)
.      testNone(org.apache.oozie.command.coord.TestCoordActionInputCheckXCommandNonUTC)

{color:green}+1 DISTRO{color}
.    {color:green}+1{color} distro tarball builds with the patch 

----------------------------
{color:red}*-1 Overall result, please check the reported -1(s)*{color}


The full output of the test-patch run is available at

.   https://builds.apache.org/job/oozie-trunk-precommit-build/2511/

Dunno what's up, are these flaky tests? They're passing on multiple local runs for me.

For the javac warnings, I usually just do a diff between the COMPILE-clean.txt and COMPILE-patch.txt and look for anything that's legit.  I found this:
{noformat}
1578c1498,1499
< [WARNING] /home/jenkins/jenkins-slave/workspace/oozie-trunk-precommit-build/sharelib/hive/src/test/java/org/apache/oozie/action/hadoop/TestHiveActionExecutor.java:[168,21] [deprecation] isDirectory(Path) in FileSystem has been deprecated
---
> [WARNING] /home/jenkins/jenkins-slave/workspace/oozie-trunk-precommit-build/sharelib/hive/src/test/java/org/apache/oozie/action/hadoop/TestHiveActionExecutor.java:[196,25] [deprecation] isDirectory(Path) in FileSystem has been deprecated
> [WARNING] /home/jenkins/jenkins-slave/workspace/oozie-trunk-precommit-build/sharelib/hive/src/test/java/org/apache/oozie/action/hadoop/TestHiveActionExecutor.java:[230,25] [deprecation] isDirectory(Path) in FileSystem has been deprecated
1586,1589d1506
{noformat}
I think that's fine to ignore.

We've been having some trouble with Jenkins lately, so I'd say those failures are unrelated.  

+1 LGTM.  I'll commit the patch later today.

Awesome, thank you [~rkanter]!

Thanks for the patch Prateek.  Good job on your first contribution.
Committed to trunk!

Closing issue; Oozie 4.3.0 is released.

