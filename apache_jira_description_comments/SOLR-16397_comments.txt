To be a little more explicit about the APIs we want this ticket to cover, the [v2 API spreadsheet|https://docs.google.com/spreadsheets/d/1HAoBBFPpSiT8mJmgNZKkZAPwfCfPvlc08m5jz3fQBpA/edit?usp=sharing] has a specific tab ("Document APIs") that lists out the changes needed in this chunk of Solr's API surface area.

It's a relatively sizeable list.  IMO it makes sense to split these up across different PRs, doing some small number (i.e. 1 or 2) of APIs per-PR.  If anyone wants to help chip away at this, just call out which APIs from this list you intend to work on and we can tackle them in parallel .

In terms of the steps required, the JIRA comments [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17617806&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17617806] and [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17617923&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17617923] give some good background and step-by-step instructions for switching APIs over to the new JAX-RS framework, which is usually helpful or even required as the traditional v2 framework doesn't lend itself very readily to RESTful APIs.  (Those comments describe creating a new API "from scratch", but the steps are still applicable to modifying an existing API.)  The PR [here|https://github.com/apache/solr/pull/1053] also serves as a helpful example to work from.

Not all API modifications require the new JAX-RS framework, though it is preferred going forward.  Instructions for updating APIs using the older, traditional v2 framework can be found [here|https://issues.apache.org/jira/browse/SOLR-15737?focusedCommentId=17565076&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17565076], and an example PR can be found [here|https://github.com/apache/solr/pull/1061].

I started working on one of these APIs.  I am working on the *MoreLikeThis* api whose V2  is *GET /solr/collName/mlt.*

Great, thanks for picking it up [~aalbahem]!

Hey [~aalbahem], anything I can do to help with the MoreLikeThis API you picked up?

Don't be shy about pushing up whatever you've got by the way, even if it's not totally done.  We're big fans of "[Yonik's Law of Patches|https://grep.codeconsult.ch/2007/04/28/yoniks-law-of-half-baked-patches/]" around here:

bq. A half-baked patch with no documentation, no tests and no backwards compatibility is better than no patch at all.




I have done it, but each time I tried to run the test, the Solr tests fail.
Not because of my code or my changes but some random unit tests.

I will push the changes.

Regards
Ameer

On Sat, 11 Feb 2023 at 4:58 am, Jason Gerlowski (Jira) <jira@apache.org>



bq. the Solr tests fail. Not because of my code or my changes but some random unit tests.

Solr does have a lot of flaky tests unfortunately.  Partially this is "by design", as early in the project's life its developers decided to lean heavily into randomized certain factors in test suite execution to aggressively flush out certain types of bugs.  But a lot of it is accidental.  Regardless of the cause - it's a pain for sure.

There's been a lot of recent improvement in this area though - I'm a little surprised you had so much trouble, but I'm sorry to hear it.

I accidentally missed your comment back in February, but I'm still very interested in seeing this move forward [~aalbahem].  Just saw PR #1349 as well.  Will take a look shortly, sorry for the delay!

Commit a6c5fa676226f52f614422f655bfe48c72e5d71f in solr's branch refs/heads/main from Ameer Albahem
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=a6c5fa67622 ]

SOLR-16397: Adding MLT API V2 (#1349)


Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 1dc5b7ea68ec674fb360673061b4692f1dbc0036 in solr's branch refs/heads/branch_9x from Ameer Albahem
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=1dc5b7ea68e ]

SOLR-16397: Adding MLT API V2 (#1349)


Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Thanks again for your work on this [~aalbahem]!  I was able to get tests passing without too much trouble and have merged and backported the PR to branch_9x, so it'll be available in the upcoming 9.2 release.

Please feel free to take a crack at any of the other APIs that catch your eye here.  If you're feeling particularly ambitious you could also convert the API definitions to the JAX-RS framework as well.  That's our goal eventually - to get everything moved over to JAX-RS.  (You can find an example of one of these v2 API conversions [here|https://github.com/apache/solr/pull/1053])

[~gerlowskija] Thanks for improving and merging my code. I am going to tackle *GET /solr/collName/sql* API.

 

I plan to tackle the missing ones from the Document API tab in google Sheets. I plan to make a pull request for each of them. Let me know if you prefer otherwise.

 

 

No that's perfect - please do!

Commit 5ecb21e992a30b620b9248b677946847ee4bea1f in solr's branch refs/heads/main from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=5ecb21e992a ]

SOLR-16397: Convert reload-core API to JAX-RS (#1903)

The API is now available at `POST /api/cores/coreName/reload`

----
Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 5bf79fd18648a10d612008f74e4d00d6b1b5301f in solr's branch refs/heads/branch_9x from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=5bf79fd1864 ]

SOLR-16397: Convert reload-core API to JAX-RS (#1903)

The API is now available at `POST /api/cores/coreName/reload`

----
Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 8a88b745b4eda9b8840f45a0dea714b3c295a14f in solr's branch refs/heads/main from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=8a88b745b4e ]

SOLR-16397: Create v2 (JAX-RS) endpoint for unload-core (#1933)

No v2 equivalent existed prior to this commit.  The new V2 API is
`POST /api/cores/cName/unload {...}`.

---------

Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 9763026b5f841b463220e4e6d4df27cb8e2d5c69 in solr's branch refs/heads/branch_9x from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=9763026b5f8 ]

SOLR-16397: Create v2 (JAX-RS) endpoint for unload-core (#1933)

No v2 equivalent existed prior to this commit.  The new V2 API is
`POST /api/cores/cName/unload {...}`.

---------

Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 88dbe12873d0474f48e087194a33e8fc411849a9 in solr's branch refs/heads/main from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=88dbe12873d ]

SOLR-16397: Tweak v2 'swapcore' API to be more REST-ful

This commit changes the v2 "swapcore" API to be more in line
with the REST-ful design we're targeting for Solr's v2 APIs.

Following these changes, the v2 API now appears as:
  `POST /api/cores/coreName/swap {...}`

Although not shown above, the 'swap' command specifier
has been removed from the request body.

This commit also converts the API to the new JAX-RS framework.

---------

Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit d3e0ffcd8d9026158b6ae65e89d7356b630197ef in solr's branch refs/heads/branch_9x from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=d3e0ffcd8d9 ]

SOLR-16397: Tweak v2 'swapcore' API to be more REST-ful

This commit changes the v2 "swapcore" API to be more in line
with the REST-ful design we're targeting for Solr's v2 APIs.

Following these changes, the v2 API now appears as:
  `POST /api/cores/coreName/swap {...}`

Although not shown above, the 'swap' command specifier
has been removed from the request body.

This commit also converts the API to the new JAX-RS framework.

---------

Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>


Commit 4c4ef2ea1e51399a925383943008153816a9a5f4 in solr's branch refs/heads/main from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=4c4ef2ea1e5 ]

SOLR-16397: Tweak v2 'renamecore' API to be more REST-ful (#2072)

This commit changes the v2 "renamecore" API to be more in line
with the REST-ful design we're targeting for Solr's v2 APIs.

Following these changes, the v2 API now appears as:
  1POST /api/cores/coreName/rename {...}`

(Although not shown above, the 'rename' command specifier
no longer appears in the request body.)

This commit also converts the API to the new JAX-RS framework.

---------

Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

Commit 77fc70764e2cba177ac43e0307c329e3d0be901f in solr's branch refs/heads/branch_9x from Sanjay Dutt
[ https://gitbox.apache.org/repos/asf?p=solr.git;h=77fc70764e2 ]

SOLR-16397: Tweak v2 'renamecore' API to be more REST-ful (#2072)

This commit changes the v2 "renamecore" API to be more in line
with the REST-ful design we're targeting for Solr's v2 APIs.

Following these changes, the v2 API now appears as:
  1POST /api/cores/coreName/rename {...}`

(Although not shown above, the 'rename' command specifier
no longer appears in the request body.)

This commit also converts the API to the new JAX-RS framework.

---------

Co-authored-by: iamsanjay <sanjaydutt.india@yahoo.com>
Co-authored-by: Jason Gerlowski <gerlowskija@apache.org>

