I went through several recent failures and didn't see any failures related to license pull related tasks.

One common pattern I observed is *[Execution failed for task ':sdks:go:resolveBuildDependencies'|https://ci-beam.apache.org/job/beam_PreCommit_PythonDocker_Commit/1908/console].* 
Execution failed for task ':sdks:go:resolveBuildDependencies'.
10:38:06 > Exception in resolution, message is:
10:38:06   Cannot resolve dependency:github.com/coreos/etcd: commit='11214aa33bf5a47d3d9d8dafe0f6b97237dfe921', urls=[https://github.com/coreos/etcd.git, git@github.com:coreos/etcd.git]
10:38:06   Resolution stack is:
10:38:06   +- github.com/apache/beam/sdks/go

Some other errors are 
1. [ProtocolError: ("Connection broken: error(104, 'Connection reset by peer')", error(104, 'Connection reset by peer'))
|https://ci-beam.apache.org/job/beam_PreCommit_PythonDocker_Commit/1746/consoleFull] when downloading tensorflow for Py2. 
2. [91mERROR: Could not install packages due to an EnvironmentError: [Errno 28] No space left on device
|https://ci-beam.apache.org/job/beam_PreCommit_PythonDocker_Commit/1905/console] <- This tends to happen to several consecutive runs until the space is released.

I looked through last 14 failed runs, and around 80% of time, it failed with the :sdks:go:resolveBuildDependencies task. In order to fix the flaky, we should look into this task. No failures are due to license job.

Another way to reduce the flakiness is merging this task to PythonPrecommit, because some tasks are duplicated, like the one mentioned above. By merging these two, we will have one failure, instead of two failures.
The reason PythonDocker task is created is that 1. PythonPrecommit is huge enough, don't want to add more tasks when it's reasonable to separate them. Docker images are not created with PythonPrecommit tests. 2. The job should run with --info option to print error logs from docker image, otherwise, it's hard to debug. PythonPrecommit doesn't run with --info option, so we need to add it, but if we do, it prints out too many logs. 
Merging or not is a trade-off.




  

Still happening: https://ci-beam.apache.org/job/beam_PreCommit_PythonDocker_Cron/494/consoleFull

Still happening:
https://ci-beam.apache.org/job/beam_PreCommit_Portable_Python_Phrase/712/consoleFull#gradle-task-229
https://ci-beam.apache.org/job/beam_PreCommit_PythonDocker_Phrase/63/consoleFull

Same failure as the description, except exit code = 1

The first one doesn't seem to have any additional debugging, and only py2 failed. The second one py{2,3.5,3.6,3.7,3.8} all failed with some additional logging:
{code}
7:40:22 > Task :sdks:python:container:py35:docker FAILED
17:40:22 Skip pulling license for  apache-beam
17:40:22 Traceback (most recent call last):
17:40:22   File "/tmp/license_scripts/pull_licenses_py.py", line 151, in <module>
17:40:22     how_to=how_to))
17:40:22 RuntimeError: Could not retrieve licences for packages ['pbr'] in Python3.5 environment. 
17:40:22  These licenses were not able to be pulled automatically. Please search code source of the dependencies on the internet and add urls to RAW license file at sdks/python/container/license_scripts/dep_urls_py.yaml for each missing license and rerun the test. If no such urls can be found, you need to manually add LICENSE and NOTICE (if available) files at sdks/python/container/license_scripts/manual_licenses/{dep}/ and add entries to sdks/python/container/license_scripts/dep_urls_py.yaml.
17:40:22 The command '/bin/sh -c if [ "$pull_licenses" = "true" ] ; then     pip install 'pip-licenses<3.0.0;python_version>="3.5"' &&     pip install 'pip-licenses==1.18.0;python_version<="2.7"' &&     python /tmp/license_scripts/pull_licenses_py.py &&     pip uninstall -y pip-licenses &&     rm -rf /root/.cache/pip ;    else     rm -rf /opt/apache/beam/third_party_licenses ;    fi' returned a non-zero code: 1
{code}

[~tysonjh] - Could we track the license puller stabilization as part of the custom containers work? Perhaps we can add retries?

PythonDocker PreCommit looks much more stable now. I only see one recent failure (https://ci-beam.apache.org/job/beam_PreCommit_PythonDocker_Cron/757) with a different error (copied below). I think this can be closed.

{code}
11:09:59 Collecting pyarrow==0.16.0
11:09:59   Downloading pyarrow-0.16.0-cp38-cp38-manylinux2014_x86_64.whl (63.2 MB)
11:09:59 ERROR: Exception:
11:09:59 Traceback (most recent call last):
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_vendor/urllib3/response.py", line 437, in _error_catcher
11:09:59     yield
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_vendor/urllib3/response.py", line 519, in read
11:09:59     data = self._fp.read(amt) if not fp_closed else b""
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_vendor/cachecontrol/filewrapper.py", line 62, in read
11:09:59     data = self.__fp.read(amt)
11:09:59   File "/usr/local/lib/python3.8/http/client.py", line 458, in read
11:09:59     n = self.readinto(b)
11:09:59   File "/usr/local/lib/python3.8/http/client.py", line 502, in readinto
11:09:59     n = self.fp.readinto(b)
11:09:59   File "/usr/local/lib/python3.8/socket.py", line 669, in readinto
11:09:59     return self._sock.recv_into(b)
11:09:59   File "/usr/local/lib/python3.8/ssl.py", line 1241, in recv_into
11:09:59     return self.read(nbytes, buffer)
11:09:59   File "/usr/local/lib/python3.8/ssl.py", line 1099, in read
11:09:59     return self._sslobj.read(len, buffer)
11:09:59 ConnectionResetError: [Errno 104] Connection reset by peer
11:09:59 
11:09:59 During handling of the above exception, another exception occurred:
11:09:59 
11:09:59 Traceback (most recent call last):
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/cli/base_command.py", line 228, in _main
11:09:59     status = self.run(options, args)
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/cli/req_command.py", line 182, in wrapper
11:09:59     return func(self, options, args)
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/commands/install.py", line 323, in run
11:09:59     requirement_set = resolver.resolve(
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/resolution/legacy/resolver.py", line 183, in resolve
11:09:59     discovered_reqs.extend(self._resolve_one(requirement_set, req))
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/resolution/legacy/resolver.py", line 388, in _resolve_one
11:09:59     abstract_dist = self._get_abstract_dist_for(req_to_install)
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/resolution/legacy/resolver.py", line 340, in _get_abstract_dist_for
11:09:59     abstract_dist = self.preparer.prepare_linked_requirement(req)
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/operations/prepare.py", line 467, in prepare_linked_requirement
11:09:59     local_file = unpack_url(
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/operations/prepare.py", line 255, in unpack_url
11:09:59     file = get_http_url(
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/operations/prepare.py", line 129, in get_http_url
11:09:59     from_path, content_type = _download_http_url(
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/operations/prepare.py", line 282, in _download_http_url
11:09:59     for chunk in download.chunks:
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/cli/progress_bars.py", line 168, in iter
11:09:59     for x in it:
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_internal/network/utils.py", line 64, in response_chunks
11:09:59     for chunk in response.raw.stream(
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_vendor/urllib3/response.py", line 576, in stream
11:09:59     data = self.read(amt=amt, decode_content=decode_content)
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_vendor/urllib3/response.py", line 541, in read
11:09:59     raise IncompleteRead(self._fp_bytes_read, self.length_remaining)
11:09:59   File "/usr/local/lib/python3.8/contextlib.py", line 131, in __exit__
11:09:59     self.gen.throw(type, value, traceback)
11:09:59   File "/usr/local/lib/python3.8/site-packages/pip/_vendor/urllib3/response.py", line 455, in _error_catcher
11:09:59     raise ProtocolError("Connection broken: %r" % e, e)
11:09:59 pip._vendor.urllib3.exceptions.ProtocolError: ("Connection broken: ConnectionResetError(104, 'Connection reset by peer')", ConnectionResetError(104, 'Connection reset by peer'))
11:10:02 The command '/bin/sh -c pip install -r /tmp/base_image_requirements.txt &&     python -c "from google.protobuf.internal import api_implementation; assert api_implementation._default_implementation_type == 'cpp'; print ('Verified fast protobuf used.')" &&     rm -rf /root/.cache/pip &&     rm -rf /tmp/base_image_requirements.txt' returned a non-zero code: 2
11:10:02 
11:10:02 > Task :sdks:python:container:py38:docker FAILED
11:10:02 :sdks:python:container:py38:docker (Thread[Execution worker for ':' Thread 8,5,main]) completed. Took 1 mins 3.255 secs.
{code}

Hello! Due to a bug in our Jira configuration, this issue had status:Resolved but resolution:Unresolved.

I am bulk editing these issues to have resolution:Fixed

If a different resolution is appropriate, please change it. To do this, click the "Resolve" button (you can do this even for closed issues) and set the Resolution field to the right value.

