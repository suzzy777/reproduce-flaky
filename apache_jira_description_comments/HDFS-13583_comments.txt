Hi [~dibyendu_hadoop], I think this has been reported and fixed in HDFS-13346.

Hi [~linyiqun],  HDFS-13346 handles the synchronization part but if you see the RouterAdmin

 
{code:java}
private boolean clrQuota(String mount) throws IOException {
  return updateQuota(mount, HdfsConstants.QUOTA_DONT_SET,
      HdfsConstants.QUOTA_DONT_SET);
}
{code}
clrQuota() is sending HdfsConstants.QUOTA_DONT_SET to clear the quota, because of this quota is not getting cleared in nameservice side.

In FSDirAttrOp#unprotectedSetQuota 
{code:java}
if (nsQuota == HdfsConstants.QUOTA_DONT_SET) {
  nsQuota = oldNsQuota;
}
if (ssQuota == HdfsConstants.QUOTA_DONT_SET) {
  ssQuota = oldSsQuota;
}{code}
So, Instead of HdfsConstants.QUOTA_DONT_SET  we need to send HdfsConstants.QUOTA_RESET to clear the quota.

Comment makes sense to me. Feel free to attach the patch.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 25s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m  3s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 19s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 12s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 12s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 15m 59s{color} | {color:green} hadoop-hdfs-rbf in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 72m 56s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |
| JIRA Issue | HDFS-13583 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12925402/HDFS-13583-000.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux c67ce258d646 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 7c34366 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_162 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24314/testReport/ |
| Max. process+thread count | 954 (vs. ulimit of 10000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-rbf U: hadoop-hdfs-project/hadoop-hdfs-rbf |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24314/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



Added the patch. [~linyiqun] could you please take a look.

[~dibyendu_hadoop], almost looks great. Three minor comments:

In *RouterAdmin.java* class,
{code:java}
      // If nsQuota and ssQuota were unset, clear nsQuota and ssQuota.
      if (nsQuota == HdfsConstants.QUOTA_DONT_SET &&
          ssQuota == HdfsConstants.QUOTA_DONT_SET) {
{code}
Use {{HdfsConstants.QUOTA_RESET}} instead.

In *RouterQuotaUsage.java*,
{code:java}
+ if (getSpaceQuota() == HdfsConstants.QUOTA_DONT_SET ||
+        getQuota() == HdfsConstants.QUOTA_RESET) {
{code}
{{getQuota()}} should be {{getSpaceQuota}}.

In *RouterQuotaManager.java*:
{code:java}
// once nsQuota or ssQuota was set, this mount table is quota set
      if (nsQuota != HdfsConstants.QUOTA_DONT_SET
          || ssQuota != HdfsConstants.QUOTA_DONT_SET) {
        return true;
      }
{code}
We should add the additional check:
{code:java}
 // once nsQuota or ssQuota was set, this mount table is quota set
      if ((nsQuota != HdfsConstants.QUOTA_DONT_SET && nsQuota != HdfsConstants.QUOTA_RESET)
          || (ssQuota != HdfsConstants.QUOTA_DONT_SET && ssQuota != HdfsConstants.QUOTA_RESET)) {
        return true;
      }
{code}

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HDFS-13583 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HDFS-13583 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12927940/HDFS-13583-001.patch |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24451/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



Updated the patch. Tackled all the comment. While doing this fixes I observed that using 
HdfsConstants.QUOTA_DONT_SET & HdfsConstants.QUOTA_RESET
for quota not set value is making it very confusing, So I have made it similar to existing hdfs quota. HdfsConstants.QUOTA_RESET will be the actual value present, where quota is not set. HdfsConstants.QUOTA_DONT_SET will be used during quota modification operations to decide whether we want to change the quota for that field or not.

 

 

Sorry for the delay repsonse, [~dibyendu_hadoop]. I am agreed with your comment. Some comments from me:

*RouterQuotaUsage*
{code}
-    if (getQuota() == HdfsConstants.QUOTA_DONT_SET) {
+    if (getQuota() == HdfsConstants.QUOTA_DONT_SET ||
+        getQuota() == HdfsConstants.QUOTA_RESET) {
       nsQuota = "-";
       nsCount = "-";
     }
{code}
Actually {{HdfsConstants.QUOTA_DONT_SET}} won't not be set into mount table after this patch. We can just use {{HdfsConstants.QUOTA_RESET}} to replace {{HdfsConstants.QUOTA_DONT_SET}}.

*RouterAdmin*
{code}
-    if (nsQuota <= 0 || ssQuota <= 0) {
+    if ((nsQuota <= 0 && nsQuota != HdfsConstants.QUOTA_DONT_SET
+        && nsQuota != HdfsConstants.QUOTA_RESET)
+        || ssQuota <= 0 && ssQuota != HdfsConstants.QUOTA_DONT_SET
+            && ssQuota != HdfsConstants.QUOTA_RESET) {
       throw new IllegalArgumentException(
           "Input quota value should be a positive number.");
     }
{code}
Current check for quota logic should be okay and no need to change. We assume users must set a positive number, set to -1 is also not allowed.

*TestRouterAdmin*
The change under this class is not related with current issue. Can we remove this change?

*TestRouterAdminCLI*
{code}
+    cluster.startCluster();
     // Start routers
     cluster.startRouters();
+    cluster.waitClusterUp();
+
+    cluster.registerNamenodes();
+    cluster.waitNamenodeRegistration();
 
     routerContext = cluster.getRandomRouter();
     Router router = routerContext.getRouter();
@@ -100,12 +102,6 @@ public static void globalSetUp() throws Exception {
     admin = new RouterAdmin(routerConf);
     client = routerContext.getAdminClient();
 
-    // Add two fake name services to testing disabling them
-    ActiveNamenodeResolver membership = router.getNamenodeResolver();
-    membership.registerNamenode(
-        createNamenodeReport("ns0", "nn1", HAServiceState.ACTIVE));
-    membership.registerNamenode(
-        createNamenodeReport("ns1", "nn1", HAServiceState.ACTIVE));
     stateStore.refreshCaches(true);
{code}
This change also can be removed. Use fake name services should be okay. I mean we don't need to start full cluster and it will take longer time to run unit test.

Hi [~dibyendu_hadoop], this is also a good fix for Router quota, I would prefer to fixe this in version 3.1.1. 
Are you still working on this? If not, I can continue your work, :).

Thanks [~linyiqun], currently I am working on this. I will fix this for 3.1.1 also :)

Hi, [~linyiqun] regarding your comment on TestRouterAdminCLI and TestRouterAdmin, in this two test classes some of the test cases which are related to updating mount table will fail if we use fake nameservice. 

Now, every updateMountTableEntry call will go to synchronizeQuota and there we are checking whether the directory is present in the filesystem.  
{code:java}
private void synchronizeQuota(MountTable mountTable) throws IOException {
    String path = mountTable.getSourcePath();
    long nsQuota = mountTable.getQuota().getQuota();
    long ssQuota = mountTable.getQuota().getSpaceQuota();

    if (nsQuota != HdfsConstants.QUOTA_DONT_SET
        || ssQuota != HdfsConstants.QUOTA_DONT_SET) {
      HdfsFileStatus ret = this.router.getRpcServer().getFileInfo(path);
      if (ret != null) {
        this.router.getRpcServer().getQuotaModule().setQuota(path, nsQuota,
            ssQuota, null);
      }
    }
  }
{code}
for fake nameservice getFileInfo call will fail. That's why I was starting the cluster.

I am not aware if we can do this with fake nameservice. Do you have any suggestion?

 

The changes in TestRouterAdmin is also related to this patch only, in testEditMountTable test case we were using "/" root dir as the target dir, so during synchronizeQuota namenode will throw "Cannot clear namespace quota on root."

 

Hi [~dibyendu_hadoop], 
{quote}
I am not aware if we can do this with fake nameservice. Do you have any suggestion?
{quote}
We can do some mock to return non-null value like we did for the call {Quota#setQuota}} in {{TestRouterAdminCLI}}. Please let me know if this comment makes sense to you.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 29s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 5 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 31m 24s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 18s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 38s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 23s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  2s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 58s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 18m 12s{color} | {color:red} hadoop-hdfs-rbf in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 29s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 85m 43s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.federation.router.TestRouterAllResolver |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HDFS-13583 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12932542/HDFS-13583-002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux fa8637b02ddf 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 993ec02 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24632/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs-rbf.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24632/testReport/ |
| Max. process+thread count | 962 (vs. ulimit of 10000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-rbf U: hadoop-hdfs-project/hadoop-hdfs-rbf |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24632/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.



Thanks [~dibyendu_hadoop] for updating the patch. I have verified the failed UT, it's a flaky test, sometimes failed in my local. But I'm sure this is not related with current change.
+1. Commit this shortly.

Committed this to trunk, branch-3.1 and branch-2.
Thanks [~dibyendu_hadoop] for the contribution!

SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #14620 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/14620/])
HDFS-13583. RBF: Router admin clrQuota is not synchronized with (yqlin: rev 17a87977f29ced49724f561a68565217c8cb4e94)
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterQuotaManager.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MountTablePBImpl.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/store/records/TestMountTable.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterQuotaUsage.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterAdminCLI.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterQuotaManager.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterAdmin.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterAdminServer.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/MountTable.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterQuota.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterQuotaUpdateService.java


Thanks [~linyiqun] for commiting it. 

