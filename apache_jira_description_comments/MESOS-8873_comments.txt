This is because this (and some other) tests rely on the assumption that the second `UpdateSlaveMessage` contains resource providers. But the resource estimator might trigger a racy `UpdateSlaveMessage` that breaks this assumption.

{noformat}
commit 8d2cebe5eeb7574caa3d10b7ff6018d8f307fe0e
Author: Chun-Hung Hsiao <chhsiao@mesosphere.io>
Date: Mon Jun 11 16:46:00 2018 -0700

Made `NoopResourceEstimator` return a forever-pending future.

There is no need for the noop resource estimator to return a ready
future of empty resource since it is only activated when the user
does not want to use an resource estimator.

Review: https://reviews.apache.org/r/67541{noformat}

-Reopening this because it appears to be flaky again on CI debian-9-SSL_GRPC, attached log "StorageLocalResourceProviderTest_ROOT_ZeroSizedDisk_badrun.txt".-

The failed test is not {{ZeroSizedDisk}}, and the failure reason is different. Can you create another ticket and close this one?

ah, blind me. Closing this.

Observed the same flaky on test {{StorageLocalResourceProviderTest.ROOT_RetryOperationStatusUpdateAfterRecovery}} on our internal 1.6.x CI:
{noformat}
../../src/tests/storage_local_resource_provider_tests.cpp:2706: Failure
Value of: updateSlave2->has_resource_providers()
Actual: false
Expected: true{noformat}
The root cause seems to be the same as this one: {{NoopResourceEstimator}} returns zero oversubscribed resources and triggers the second {{UpdateSlaveMessage}} containing no resource provider.

