This assert is possibly just a bit too stringent, values above would be about 26% below max and the assertion error wants 20% or less.

I'm going to consider the following failure as part of the same bug here:

http://cassci.datastax.com/job/trunk_offheap_dtest/65/testReport/disk_balance_test/TestDiskBalance/disk_balance_decommission_test/

This is a failure on the offheap-memtable trunk job; it's only flapped once, but is worth looking into. [~krummas], what's expected behavior here?

I guess it is a bad test - the randomness of vnode allocation makes the disks unbalanced. I will have a look if I can improve the test

[~krummas], would writing more data possibly help? Or is the problem the allocation of vnodes to disks?

[~philipthompson] yeah since we only write 10k keys it could be, can you try it?

[~krummas], even bumping it up to 1 million keys does not solve the problem. Not of the other disk balance tests flake at that level though:

http://cassci.datastax.com/view/Parameterized/job/parameterized_dtest_multiplexer/41/

assigning to me so I don't forget about this

The failing asserts mostly test how well we allocate vnodes over the local drives (which we don't optimize for currently, see CASSANDRA-11643)

Patch to remove those asserts here: https://github.com/krummas/cassandra-dtest/commits/marcuse/11279 - now we test that the bootstrapping node is balanced

Should we maybe keep the asserts while unsetting {{allocate_tokens_for_keyspace}} to test that disks are balanced for the random allocation bootstrap case?

We can extend these after CASSANDRA-11643 to include the balanced bootstrap case.

[~pauloricardomg] I don't think that will improve things? The randomness will still make those asserts fail at times, or am I missing something?

shouldn't disks be balanced (with a 20% tolerance) for a random distribution of workload + tokens? At least we could guarantee that, not much, but better than nothing :)

The new bootstrapping node is balanced, but the asserts check that the nodes we take ranges from are still balanced after running cleanup, and this is not as easy to do, and that is the reason we need CASSANDRA-11643

got it, thanks for the clarification!

+1, marking as ready to commit.

and merged, thanks!

