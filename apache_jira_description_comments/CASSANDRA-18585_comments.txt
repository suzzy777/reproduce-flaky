I wonder if we should back port this to 4.0 as well... this is a very annoying bug to keep around...

I think we should fix this everywhere it's present, I imagine this is easy to get into but very difficult to get out of.

agree, I am cool with 4.x back ports, the code is very similar so it should be LHF to fix in 4.x+

[~dcapwell] Hi! Could you review please?

4.1 PR: [https://github.com/apache/cassandra/pull/2536]

Few things:

1)

CreateTypeStatement contains this logic

{code}
        for (CQL3Type.Raw type : rawFieldTypes)
        {
            if (type.isCounter())
                throw ire("A user type cannot contain counters");

            if (type.isUDT() && !type.isFrozen())
                throw ire("A user type cannot contain non-frozen UDTs");
        }
{code}

Your patch only adds the first check. I think we should also add the second one.

2) 

Why is there only branch for 4.1? I think there should be branches for 4.0, 4.1 and trunk as well, no?

[~smiklosovic] 

1) Will do.

2) Wanted to make sure I am moving in the right direction. Branches for 4.0 and trunk will follow soon.

Hi [~urbanchef], kindly asking if there is any progress here.

Hi,

[~smiklosovic] I am planning to wrap it up this weekend (Aug 12-13). Sorry for delay.

4.0 PR: [https://github.com/apache/cassandra/pull/2582]

4.1 PR: [https://github.com/apache/cassandra/pull/2536]

trunk PR: [https://github.com/apache/cassandra/pull/2583]

 

Looks good to me, except for a nit on the 4.0 PR.

Shouldn't we apply the fix to {{3.0}} and {{3.11}} too? I think those branches are supported until 5.0 is released.

"except for a nit on the 4.0 PR"

Fixed. 

[~urbanchef] would you mind to take a look at 3.11 and 3.0 too? 

I have added patches for 3.11 and 3.0. 

[~adelapena] would you mind to take a look for 3.0 and 3.11? This is going to be shipped to 6 branches and I do not want to build something prematurely. 

For 3.0, there is already a condition for UDTs that they can not be unfrozen on alter but this logic was reworked in 3.11. So for 3.0 only counter case is needed as the other one is already there. I added a test for that though.

[~smiklosovic] thanks for stepping in! Didn't see your update in time. 

The patches for 3.0 and 3.11 look good to me, except for a detail on {{CQLTester#createType}}.

[3.0 j8|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2988/workflows/e0bedf8c-6811-4920-b23b-bdc487bcaf9d]

[3.11 j8|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2987/workflows/1d7ee3f0-f9c2-45f4-b676-820828c59e19]

[4.0 j11|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2989/workflows/75778cfc-8384-47c4-ab93-c8fd861c3455]
[4.0 j8|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2989/workflows/e38f3c21-b6a1-418a-b799-eebdb7a336f0]

[4.1 j11|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2990/workflows/33ab8bee-b6c0-44af-ac6e-3584280b84d8]
[4.1 j8|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2990/workflows/65d794ba-7449-4695-ba56-072bc9589926]

[5.0 j17|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2994/workflows/29886a9c-23b1-42c0-b221-e2d16f30dcfc]
[5.0 j11|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2994/workflows/f5b229e8-c72a-4ec0-a31b-b9ec97611216]

[trunk j17|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2993/workflows/80ac4db3-fc3d-4908-bc39-dfff6ab88871]
[trunk j11|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2993/workflows/b3716506-2997-4b80-815d-16ed3e380acb]

 

[~adelapena] 

Most of the failures are known:

* {{test_dead_sync_initiator}} in 3.0 and 3.11 is CASSANDRA-17702
* {{test_compactionstats}} in 3.0 and 3.11 looks like a timeout
* {{test_readrepair}} doesn't have a ticket but it is [on Butler|https://ci-cassandra.apache.org/job/Cassandra-3.11/484/testReport/dtest-novnode.consistency_test/TestConsistency/test_readrepair/]
* {{test_multiple_concurrent_repairs}} in 3.11 doesn't have a ticket but seems to be [on Butler|https://butler.cassandra.apache.org/#/ci/upstream/workflow/Cassandra-3.11/failure/repair_tests.repair_test/TestRepair/test_multiple_concurrent_repairs]
* {{testReprepareMixedVersionWithoutReset}} in 3.11 is CASSANDRA-18021
* {{test_bootstrap_with_reset_bootstrap_state}} in 3.11 and 4.0 is CASSANDRA-17086
* {{testFailingMessage}} in 4.0 is CASSANDRA-18366
* {{test_failing_manual_rebuild_index}} in 5.0 is CASSANDRA-18361
* {{runQueriesWithoutCollisions}} in 5.0 looks like and env issue (address already in use)
* {{testServiceTopPartitionsSingleTable}} in trunk is CASSANDRA-17798

However, I haven't found related tickets nor previous Butler failures for:

* [{{test_optional_outbound_tls}}|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2989/workflows/e38f3c21-b6a1-418a-b799-eebdb7a336f0/jobs/104883/tests] in 4.0
* [{{testLoggedPartitionsPerBatch}}|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2989/workflows/e38f3c21-b6a1-418a-b799-eebdb7a336f0/jobs/104894/tests] in 4.0
* [{{test_paxos_any}}|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2990/workflows/65d794ba-7449-4695-ba56-072bc9589926/jobs/105051/tests] in 4.1
* [{{test_move_forwards_between_and_cleanup}}|https://app.circleci.com/pipelines/github/instaclustr/cassandra/2993/workflows/80ac4db3-fc3d-4908-bc39-dfff6ab88871/jobs/105464/tests] in trunk

test_optional_outbound_tls on 4.0 passes locally, seems like timeout on the patch
testLoggedPartitionsPerBatch on 4.0 passes locally, it timeouted in the patch, probably some glitch
test_paxos_any on 4.1 passes locally (10 runs, all passed), again seems like a timeout / glitch
test_move_forwards_between_and_cleanup on trunk passes locally,  seems like flakiness

Anyway I do not think that any failure is related to this patch.

 

{{TableMetrics.testLoggedPartitionsPerBatch}} turns out to be CASSANDRA-17245

{{test_move_forwards_between_and_cleanup}} can be [reproduced on trunk|https://app.circleci.com/pipelines/github/adelapena/cassandra/3128/workflows/b0cf2754-81fd-491e-bac4-cc7fe8b0ac1b/jobs/70390/tests], I have opened CASSANDRA-18792 for it.

I haven't been able to repro with the multiplexer the failures at:
* {{test_paxos_any}}: https://app.circleci.com/pipelines/github/adelapena/cassandra/3129/workflows/4c76bfd7-c91e-4b64-abba-b5bd29d737b2
* {{test_optional_outbound_tls}}: https://app.circleci.com/pipelines/github/adelapena/cassandra/3127/workflows/43402ea7-64ba-4177-809f-daa71fd879d3
 

