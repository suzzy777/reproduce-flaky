We're now using 2.12-TRUNK-HBASE-2.

It's a private version, built on the 2.12 trunk (i.e.: it does not contain eveyrthing that will be in 2.12 final).

Surefire: Could be for Surefire 2.12. Issues to monitor are:
329 (category support): fixed, we use the official implementation from the trunk
773 (forked processes not killed after timeout): not fixed in trunk, not fixed in our version
786 (@Category with forkMode=always): fixed, we use the official implementation from the trunk
791 (incorrect elapsed time on test failure): fixed, we use the official implementation from the trunk
793 (incorrect time in the XML report): Not fixed (reopen) in trunk, partial fixed in our version.
760 (does not take into account the test method): fixed, we use the official implementation from the trunk
798 (print immediately the test class name): not fixed in trunk, not fixed in our version
799 (Allow test parallelization when forkMode=always): fixed in trunk, fixed in our version with some minimal differences.
800 (redirectTestOutputToFile not taken into account): not yet fix on trunk, fixed in our version
806 (Ignore selection criteria when -Dtest= is specified):  not fixed in trunk, not fixed in our version
813 (Randomly wrong tests count and empty summary files): fixed in trunk, fixed in our version 

800 & 793 are the more important to monitor, it's the only ones that are fixed in our version but not on trunk.

Small update:
- No news from JUnit team. Issues was raised in november and they classified it as a bug, but my one line fix is not yet integrated. The main committers don't have a lot of time to spend on the project...
- Surefire 2.12 is available, but there is a regression (SUREFIRE-827) that they are currently fixing, so it seems better to wait for the 2.13.

Monthly update:
 - The JUnit team merged my fix on the JUnit trunk, so the next JUnit version (should be 4.11) will be ok for us. I don't have the release date however.
 - The surefire regression (SUREFIRE-827) is not yet fixed, still planned for 2.13. No release date.

Update: Still waiting for JUnit 4.11 & Surefire 2.13, still no release date.

Update: Still waiting. There is some life on Surefire, for JUnit there won't be anything before Q4 I guess.

There is a new surefire 2.12.1 version. It fixes the regression #827, #800 is reopened. Our fix is different, but I suppose that if I didn't propose my fix it was for a good reason. I will need to have a look at this. Will wait a little however to see if someone fixes it. And anyway this new version could contain new regressions, so there is no reasons to be the first users.

They're adding stuff into JUnit, so hopefully their will deliver something soon and it won't contain regressions...



2.12.2 is now available, and there are some activity on surefire, so we could have a 2.13 "soon". I tested the snapshot version on HBase trunk, the only issue I found is #800.

I proposed a reasonable (imho) fix for it in surefire. It covers the case for forkMode=perthread (i.e. medium & large tests). I don't have a non hacky fix for small tests (they are on a different code path in surefire), so we will have either to accept output on the console for small tests either to change the verbose small tests to medium.

The former option would likely put us with very simple tests that we should be able to parallelize within a single jvm, so it's reasonable.

Thanks for update.  I'd say if 2.13 works even though we have to move a good few tests to medium, lets use it so we can undo our dependency on custom surefire.  Good on you N.

No feedback from surefire author yet, but usually (but not always...) he replies quite fast on patch proposal; so I hope to know where I stand with #800 next week.

Actions are forecast to close this are:
1) Change some tests from small to medium.
2) Check if we can parallelize small within a single JVM
3) Make the profile localTests activated if we define a test (hence users won't have to know about -P localTests)
3.1) As a side effect we would use only in JUnit provider & JUnit version instead of 2 as of today.
4) Push the number of parallel process to 5 instead of 4.
5) Simplify the .pom by removing some profile not used imho: singleJVMTests, parallelTests, nonParallelTests, runSmallTests, runMediumTests
6) See what to do with long running tests, tests should not last more than 2 or 3 minutes, more makes the tests cumbersome to run...

Except one, they're all nice to have. Will do that slowly.

I've done more tests on 2.13-SNAPSHOT + #800 fix and saw:
- wrong test elapsed time when a test fails. Confusion within milliseconds & seconds in Surefire. No need to fix.
- TestReplication does not finish. It seems surefire waits for it (so may be 900s), then stops without killing the process. This last point is not new, but we didn't get an error in surefire before. Now we have "The forked VM terminated without saying properly goodbye.". May be it"s an improvement. Will see.


With surefire 2.12, we are getting a build error on our Jenkins server with message "Error occurred in starting fork". 
This appears to be due to SUREFIRE-870, which is fixed in 2.12.1 and above.  We are currently experimenting with surefire 2.12.3 to get build working.

Yeah, I've never tried 2.12, it was too smelly. I'm targeting the next release (likely numbered  2.13); i.e. trunk as of today + #800. I'm still awaiting feedback for this last one.
I've done some tests on hadoop-qa, there are in HBASE-6674. Don't hesitate to add your findings.

Monthly update...
Surefire: the regression on elapsed time is fixed on 2.12.4 (not tested). Still waiting for #800. May be it will make it to the 2.13. No date.
JUnit: no life there. Still a release this quarter is likely...



From JUnit mailing list (15th oct) ??I am happy to announce the release of JUnit 4.11-beta-1. There have been a lot of contributions by a full cast of contributors.?? So we will have the release this quarter with some luck.
Surefire: Still waiting for #800. May be it will make it to the 2.13. No date.

Monthly update: same status as a month ago....

Junit 4.11 is now available (wow!). Let's test it on trunk (locally it's ok), I will backport to 0.94 if it's ok.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553691/4955.v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 93 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 16 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestZooKeeper
                  org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.client.TestMultiParallel

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3348//console

This message is automatically generated.

@nkeywal That'd be sweet undoing one of our custom dependencies

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553768/4955.v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 99 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 24 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel
                  org.apache.hadoop.hbase.TestZooKeeper

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3351//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553786/4955.v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 99 warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 24 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.master.TestSplitLogManager
                  org.apache.hadoop.hbase.TestZooKeeper

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/3354//console

This message is automatically generated.

This is annoying: 3 times the same errors. I'm gonna wait a little. Will retry in a week or so.

Local test on trunk: errors on TestAdmin / TestZooKeeper / TestMultiParallel as previously in precommit. I will wait another week.

Failed tests:testFlushCommitsWithAbort(org.apache.hadoop.hbase.client.TestMultiParallel): Server count=2, abort=true expected:<1> but was:<2>
  testVerifyRepJob(org.apache.hadoop.hbase.replication.TestReplication): Waited too much time for truncate
  testSmallBatch(org.apache.hadoop.hbase.replication.TestReplication): Waited too much time for truncate
  testDisableEnable(org.apache.hadoop.hbase.replication.TestReplication): Waited too much time for truncate
  testSimplePutDelete(org.apache.hadoop.hbase.replication.TestReplication): Waited too much time for truncate
  testDeleteEditUnknownColumnFamilyAndOrTable(org.apache.hadoop.hbase.client.TestAdmin)

Tests in error:
  testReadModifyWrite(org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint): Failed after attempts=1, exceptions:(..)
  testZNodeDeletes(org.apache.hadoop.hbase.TestZooKeeper): KeeperErrorCode = NoAuth for /l1


Retested 3 times again on trunk, these errors are always there. I don't always have then when I test with the current JUnit:
 testZNodeDeletes(org.apache.hadoop.hbase.TestZooKeeper): KeeperErrorCode = NoAuth for /l1
 testFlushCommitsWithAbort(org.apache.hadoop.hbase.client.TestMultiParallel): Server count=2, abort=true expected:<1> but was:<2>

JUnit 4.11 is out for a month, no one raised an issue about it. So may be we have flaky tests that are now just failed tests on 4.11 (i.e. a bug on out side that always appears with 4.11?). We can either wait a little bit more, for example waiting for more validation work on 0.96, either push it now, expecting someone will be motivated about finding the root issue, either try to fix the issue before pushing :-).

If just two test failures, I'm inclined to think it flakey tests rather than junit version and that we should move to junit 4.11 and fix the tests

I've got 2 to 5 failures, but these two are always in the failed, while the others vary. So do I push the 'commit' button? It's likely to fail all builds until we fix the issue :-(

Normally I would say commit but since you are so regular checking in on this issue, lets put off the commit till the next time you make your cycle through this issue.  Hopefully trunk will be more stable then and we'll be able to take on these new failures and fix them quickly.  Thanks [~nkeywal]

Surefire 2.13 is nearly out. I tried it, it seems to work for us, with the restriction mentioned above: we will have to accept some partial output on screen or to recategorize the tests. It's anyway better to wait for the official release and see what the other users find: we don't need to be the first users. But 2.13 is likely the winner.

I tried again with JUnit, and here the news are not so good: we still have errors:
{noformat}
  TestServerCustomProtocol.testSingleProxy:219 null
  TestMultiParallel.testFlushCommitsWithAbort:226->doTestFlushCommits:267 Server count=2, abort=true expected:<1> but was:<2>
  TestAdmin.testDeleteEditUnknownColumnFamilyAndOrTable:203 null
  TestReplication.setUp:180 Waited too much time for truncate

Tests in error:
  TestZooKeeper.testZNodeDeletes:291 Â» NoAuth KeeperErrorCode = NoAuth for /l1
{noformat}

I checked the JUnit mailing lists and bug tracking, there is nothing. So it's likely us and we will have to investigate I guess.

Waiting for 2.14 or more info on SUREFIRE-943 before going further in Surefire. For JUnit 4.11, the work is on our side.

Its a while since we got an update Mr [~nkeywal]

For JUnit, it's now done and we have 4.11 now. As guessed above, the work was on our side (order dependant tests, fixed in various jiras).
For Surefire, the safer is to wait for 2.14 and SUREFIRE-943. It was supposed to be released beginning of February, but I had no news since. Hopefully in will be for March.

Technically, we will use the 'reusable fork' for small tests. This allows to have isolated logs (we have this in our patch today but the official release messes them), good performances (forks would be too expensive for small tests) and even parallelization for small tests. Tested ok on 2.13.


The regression in SUREFIRE-970 makes the move to 2.14 problematic. It would be nice to have SUREFIRE-969 as well bu it's more mandatory. A bigger issue is that in my tests it seems that having multiple execution with different parameters does not work anymore. I will need to have a look at that to get it fixed in a release...

Thanks [~nkeywal] for the update

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12574003/4955.v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

    {color:red}-1 site{color}.  The patch appears to cause mvn site goal to fail.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestHTableMultiplexer

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/4848//console

This message is automatically generated.

bq. Tests run: 35, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 281.479 sec
Useless log lines. That's SUREFIRE-969 

bq. Took 2 mo. 7 d.
That's SUREFIRE-970.

bq. 2,158 tests (-274)
It should be the flakiness of TestHTableMultiplexer.testHTableMultiplexer


I'm going to retry because of the point 3.
For the first 2 ones, I tend to think it should not prevent us from committing. We don't have any issue today because I built a version that included all we need. If we want to come back to an official version, we need to compromise. We can expect these points are likely to be solved in a later version, but these later version can also include regressions.. We need to jump in at a moment, and we've been waiting for more than a year now.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12574127/4955.v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

    {color:red}-1 site{color}.  The patch appears to cause mvn site goal to fail.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/4861//console

This message is automatically generated.

Likely a bad news... Among the missing tests, we have this:

@RunWith(Parameterized.class)
@Category(SmallTests.class)
public class TestFixedFileTrailer {


i.e. there could be issues with parametized tests (and that could not be enough to explain the 200 missing tests).

Looking...


It's fun, because if I do:
mvn clean test -Dsurefire.part2.skip=true -q -PrunAllTests -Dsurefire.part1.forkCount=10
the number of executed tests is a random number above 600

while with
mvn clean test -Dsurefire.part2.skip=true -q -PrunAllTests -Dsurefire.part1.forkCount=1
It's always 543

more parallism == less randomness (logic) but less tests executed (not logic)

I don't reproduce it on a surefire unit tests. I'm going to try a little bit more then we will have the option to wait for 2.15, hoping it will be identified and fixed.


[~nkeywal] Thanks for staying on top of this one.  So, we only host surefire now?  It is in Gary's repo or in yours?

Yes, JUnit 4.11 contains what we need. Surefire contains what we need as well, we just need to get a version that comes up with an acceptable set of regressions.

Our Surefire is in Gary's repo. He will be the one getting the blame if Apache complains :-).
BTW, I haven't done the update to JUnit in HBase 0.94, as it implies backporting a few jiras as well (in the required section). So we still need to have it in Gary's repo as well.

Rebased patch, new invisible stack:
{noformat}
Running org.apache.hadoop.hbase.mapreduce.TestMultithreadedTableMapper
Exception in thread "ThreadedStreamConsumer" java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2882)
	at java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:100)
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:390)
	at java.lang.StringBuilder.append(StringBuilder.java:119)
	at org.apache.maven.plugin.surefire.report.TestSetRunListener.getAsString(TestSetRunListener.java:221)
	at org.apache.maven.plugin.surefire.report.TestSetRunListener.wrap(TestSetRunListener.java:228)
	at org.apache.maven.plugin.surefire.report.TestSetRunListener.testSucceeded(TestSetRunListener.java:159)
	at org.apache.maven.plugin.surefire.booterclient.output.ForkClient.consumeLine(ForkClient.java:111)
	at org.apache.maven.plugin.surefire.booterclient.output.ThreadedStreamConsumer$Pumper.run(ThreadedStreamConsumer.java:67)
	at java.lang.Thread.run(Thread.java:662)
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 111.181 sec
parallel='none', perCoreThreadCount=true, threadCount=2, useUnlimitedThreads=false
{noformat}


{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577504/4955.v3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5180//console

This message is automatically generated.

tests: 2,116 tests (-370)
=> still missing some

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577507/4955.v3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5181//console

This message is automatically generated.

Here is the gap between the two runs;
> Running org.apache.hadoop.hbase.io.hfile.TestFixedFileTrailer
95a97
> Running org.apache.hadoop.hbase.io.hfile.TestHFileBlockCompatibility
103a106
> Running org.apache.hadoop.hbase.io.hfile.TestScannerSelectionUsingKeyRange
244d246
< Running org.apache.hadoop.hbase.regionserver.TestScanWithBloomError



All these tests have something in common: they are parameterized. That's unlikely to be an accident.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577511/4955.v3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.access.TestAccessController
                  org.apache.hadoop.hbase.master.TestMasterFailover

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5182//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577543/4955.v4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.procedure.TestProcedureCoordinator

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5185//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577547/4955.v4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5186//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577560/4955.v4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5187//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577582/4955.v4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5189//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577768/4955.v5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5213//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577768/4955.v5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 findbugs{color}.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5216//testReport/
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5216//console

This message is automatically generated.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577768/4955.v5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 24 new or modified tests.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestHLog

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/5218//console

This message is automatically generated.

And the winner is: SUREFIRE-985


SUREFIRE-985 is fixed (it took less than 1 day between the jira creation & the fix). There is as well an acceptable workaround. SUREFIRE-969 is now fixed as well. So absolutely all our (known) issues are fixed now.

We now have 3 options:
 1) go with 2.14.1 + the workaround. We will have the log line all over the place.
 2) wait for 2.15
 3) Do a private build. Without modifications, just the trunk as of today.

Imho, the only reasonable option is 2. I wanted to go for the first one but everybody will complain about the log line. I will build locally a version to validate that we're fine (usual stuff: an issue can hide another...). I don't have a target date for 2.15, but I hope it won't take too long (less than 2 months).





With 1), is it possible to suppress the log line?  Is 3) relatively stable?  How big is the difference between the trunk and the latest release?

bq. With 1), is it possible to suppress the log line? 
It means 3) or a trivial private change. Best option is 3).

bq. Is 3) relatively stable?
I think so. On the other hand, not everybody uses parallel tests and categories. For example, SUREFIRE-985 was there for a year in Surefire (you have to use parameterized tests + categories + parallel to get it). But it won't be different with an official release.

bq.  How big is the difference between the trunk and the latest release?
2.14.1 is just out, it could be that the only differences are the fixes for SUREFIRE-985 and SUREFIRE-969.


+1 for 3). We can move to official surefire after 2.14.2/2.15 is released.

Undoing this from 0.95.1  This issue moves at a rate independent of our releases.  Upped the priority though.

Surefire 2.15 is available. I will give it a try 'soon'.

hopes hopes hopes... Partly tested locally, worked. [~stack] may be it will improve some test reports when things go wrong. And at least we will be back to the official release.

Go for it [~nkeywal]!  I can back it out if it makes things worse.  My full time job is watching build box tests these times.

Looking at https://builds.apache.org/job/PreCommit-HBASE-Build/6377/console it seems stuck. This was working two months ago...
Trying locally as well.

Totally stuck. Interrupted after 4 hours. Stuck locally as well: even the timeout does not work.


dang

It was working with the snapshot a 2 months ago. I may have to try all the surefire commits to find the problematic one. I had a look at jiras on surefire. I don't see anything releated but the 2.16 seems to be released soon. I will try with this one first.

Related, I am into a new domain of failures.  The zombie script found a few but it maybe that zombies are inevitable up on apache as sometimes the load is VERY high -- up in the hundreds -- and I see that we can also be up against the file limits (4k on some machines).  Besides zombies, there are fails where the zombie trap has nothing in it and "all" tests fail (it looks like some tests just don't show in the list... these are the ones I am looking at).  Maybe a new surefire would at least list these problematic tests?  E.g. http://54.241.6.143/job/HBase-0.95/661/testReport/  (Clues for how to debug these failing tests appreciated).

On the precommit env, there is only one application tested at a time. So the load should be limited. Or more exactly, this load is suspicious. IIRC there are some improvements in the last surefire versions, but I can't say if they will work for us.

v7 is about trying surefire 2.16 with the latest trunk. 3 tries:
1) local: tests seems to run well, but get stuck at a moment in the middle of the tests.
2) apache attempt 1: stuck. Some tests had errors.
3) apache attempt 2: as attempt 1.


So it means that I will have to go after each surefire commit to find the guilty one. Will do, but later.

v8 results:

# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 1021944 bytes for Arena::Amalloc
# An error report file with more information is saved as:
# /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hs_err_pid12566.log

likely an env problem.

2.17-SNAPSHOT 867b33c8e3c8bbd656ed01bed2b6acf122c62d25 nok
2.16 nok
2.15 nok
2.15-SNAPSHOT 8315562ededdbf80f059f843fa34e793b6b25ac7 nok
2.15-SNAPSHOT 199c6162596b19d5b6e25cc0c3706bd657d92b1e nok
2.14.1 nok
2.14 nok


It means that we changed something in HBase that broke surefire. In the past (see above 09/Apr/13 14:04), it was missing some tests but it was not hanging...

How could we break surefire?  How would we find what broke it?  A bisect would take for ever.

I know... May be we log more than before, may be we have a conflict of some sort. I don't know. I looked at the stack trace, nothing obvious. I will need to spend more time on this.

I am not sure I understand where you are at the mo Nicolas.  You are trying new surefire but it runs out of memory?  Whereas current hacked surefire is fine?

The memory issue is a pure transient apache build issue. When we use the official release of surefire, the tests do not finish. It seems to be a hbase related issue as in the past this part was working (not the others, but it's another story).

I've tried again a couple of month ago, same result. I'm waiting for surefire 2.17 to try again.

Still waiting for 2.17.

2.17 is out. Let's try it.

Ping, did you try it?

(back from vacation)
Yes. It failed. My feeling is that HBase is logging to much for this poor surefire, but I didn't dig. I will test again with the 2.18 version. Some other tries are possible (run the tests with the log level set to info or warning for example..). 


So I got it working with the new surefire, that being said it prints a bunch of stuff to the test output rather than redirecting to a file. I am trying to fix that now

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12639183/4955.v9.patch
  against trunk revision .
  ATTACHMENT ID: 12639183

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10461//console

This message is automatically generated.

[~stack] [~liochon]

So I got this working really well using parallel forks as opposed to threads. It also runs faster and seems to have less test interference this way. 

Did you post a patch [~posix4e]?

Nope I did not. I was curious if that's a deal breaker.



bq. I was curious if that's a deal breaker.

What is a deal breaker?  Post a patch so we can see if it runs to completion on hadoopqa and it runs all the tests.  That'd be a nice argument in favor.  [~nkeywal] shoudl be online about time test finishes.

I suppose by "deal breaker" for you mean fork vs. threads? It's not at all a deal breaker. And may be it's actually the same thing. Surefire renamed its configuration parameters, the new names are better. Previously, threads could mean fork.
Here what we have today:
 - small tests are executed in a single jvm, single thread. This could be multitreaded. The idea here is that these tests are very small, so a fork is expensive. if something else work it's fine. The issue I had initially with fork here was OOM because I had too many JVM (the fork happens while the previous process is still alive), but it was a loooong time ago.
 - all other tests are executed with a fork per test class (even if the parameter says "thread", it's actually a fork). 

[~posix4e], if you have something working it's just great :-). 


You can watch my progress at https://github.com/Ohmdata/hbase-public/tree/4955

I am testing it on my local buildserver and I seem to be having some issues.
 org.apache.hadoop.hbase.http.TestServletFilter.testServletFilter fails with
https://gist.github.com/posix4e/4512c3e6ca49ed1a04ac

On Tue, Aug 19, 2014 at 12:53 AM, Nicolas Liochon (JIRA)


I am testing it on my local buildserver and I seem to be having some issues.
 org.apache.hadoop.hbase.http.TestServletFilter.testServletFilter fails with
https://gist.github.com/posix4e/4512c3e6ca49ed1a04ac

It's different from what I was having a few months ago on the Apache build: my tests were just hanging. If it's the only test that fails it's a good progress already.

Its a 'foriegn' test, one that came in from hadoop when we copy/pasted http.  Its second class. Could comment it out if only failing test (as per @nkeywal -- sort of)

OK I disabled that. It seems to work ok on our build server. I'd be interested to see how apache build is working.

Here's our build https://gist.github.com/posix4e/0b585d776aa86d1aa206

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12662865/HBASE-4955-v10.patch
  against trunk revision .
  ATTACHMENT ID: 12662865

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 7 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +              <!-- exclude all the packages that are empty after the public annotation only filter -->
+                org.apache.hadoop.hbase.backup*:org.apache.hadoop.hbase.catalog:org.apache.hadoop.hbase.client.coprocessor:org.apache.hadoop.hbase.client.metrics:org.apache.hadoop.hbase.codec*:org.apache.hadoop.hbase.constraint:org.apache.hadoop.hbase.coprocessor.*:org.apache.hadoop.hbase.executor:org.apache.hadoop.hbase.fs:org.apache.hadoop.hbase.generated.*:org.apache.hadoop.hbase.io.hfile.*:org.apache.hadoop.hbase.mapreduce.hadoopbackport:org.apache.hadoop.hbase.mapreduce.replication:org.apache.hadoop.hbase.master.*:org.apache.hadoop.hbase.metrics*:org.apache.hadoop.hbase.migration:org.apache.hadoop.hbase.monitoring:org.apache.hadoop.hbase.p*:org.apache.hadoop.hbase.regionserver.compactions:org.apache.hadoop.hbase.regionserver.handler:org.apache.hadoop.hbase.regionserver.snapshot:org.apache.hadoop.hbase.replication.*:org.apache.hadoop.hbase.rest.filter:org.apache.hadoop.hbase.rest.model:org.apache.hadoop.hbase.rest.p*:org.apache.hadoop.hbase.security.*:org.apache.hadoop.hbase.thrift*:org.apache.hadoop.hbase.tmpl.*:org.apache.hadoop.hbase.tool:org.apache.hadoop.hbase.trace:org.apache.hadoop.hbase.util.byterange*:org.apache.hadoop.hbase.util.test:org.apache.hadoop.hbase.util.vint:org.apache.hadoop.hbase.zookeeper.lock:org.apache.hadoop.metrics2*

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.TestPerTableCFReplication

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10487//console

This message is automatically generated.

So it seems as though the failed test TestPerTableCFReplication
also ran in https://builds.apache.org/job/PreCommit-HBASE-Build/10473/console (The last successful build). I was worried I was running a different set of tests. That being said, it passes locally and failed on this jenkins. I was hoping these configs would make the build less flakey, but perhaps some of these larger tests need to be better isolated.

What if we added a third level to the tests, where tests will only be run one at a time.

bq. What if we added a third level to the tests, where tests will only be run one at a time.
At a point it's better to fix the test, if not they will all end up in the "run one" category.

Is it the final patch?

{code}
         <surefire.provider>surefire-junit4</surefire.provider>
-        <surefire.firstPartForkMode>always</surefire.firstPartForkMode>
{code}

This profile is used when a test is specified on the command line. Does it work for you with this changes for all categories of tests?



Agreed about the third level for tests. I would like someone to review this patch. I understand if you want the formatting changes in a separate patch. I am not sure what the protocol for that should be. I am also trying to spawn another build on the apache build server, to see if it is reliably red. I can tell you, the tests run blue on our jenkins for the first time, in a while.

IMHO, we should either use threadcount or forkcount. Not both. Thus the specification for a forkmode should also be unneeded. From http://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html 
"The important thing to remember with the parallel option is: the concurrency happens within the same JVM process. That is efficient in terms of memory and execution time, but you may be more vulnerable towards race conditions or other unexpected and hard to reproduce behavior."

"The other possibility for parallel test execution" [other than thread parallelism] "is setting the parameter forkCount to a value higher than 1. The next section covers the details about this and the related reuseForks property." 

For now, lets learn to walk before we run and use the more reliable test mechanism generally. In addition, it has the advantage of maven.test.redirectTestOutputToFile working. Which I couldn't get working with the new version of surefire and the old parallel options.This may be related to https://jira.codehaus.org/browse/SUREFIRE-800.

bq.  I understand if you want the formatting changes in a separate patch.
That's ok, I can deal with the formatting changes included. 

bq. For now, lets learn to walk before we run and use the more reliable test mechanism generally
Ok, let's do that.

I will review the patch today.


Yep. Tested as well the mvn test=XX stuff with small medium & large tests. Works.

+1. I will commit if nobody disagrees.

Anyway, and in parallel, I'm restarting a run to see what happens.

Great news, Alex.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663097/HBASE-4955-v10.patch
  against trunk revision .
  ATTACHMENT ID: 12663097

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 6 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +              <!-- exclude all the packages that are empty after the public annotation only filter -->
+                org.apache.hadoop.hbase.backup*:org.apache.hadoop.hbase.catalog:org.apache.hadoop.hbase.client.coprocessor:org.apache.hadoop.hbase.client.metrics:org.apache.hadoop.hbase.codec*:org.apache.hadoop.hbase.constraint:org.apache.hadoop.hbase.coprocessor.*:org.apache.hadoop.hbase.executor:org.apache.hadoop.hbase.fs:org.apache.hadoop.hbase.generated.*:org.apache.hadoop.hbase.io.hfile.*:org.apache.hadoop.hbase.mapreduce.hadoopbackport:org.apache.hadoop.hbase.mapreduce.replication:org.apache.hadoop.hbase.master.*:org.apache.hadoop.hbase.metrics*:org.apache.hadoop.hbase.migration:org.apache.hadoop.hbase.monitoring:org.apache.hadoop.hbase.p*:org.apache.hadoop.hbase.regionserver.compactions:org.apache.hadoop.hbase.regionserver.handler:org.apache.hadoop.hbase.regionserver.snapshot:org.apache.hadoop.hbase.replication.*:org.apache.hadoop.hbase.rest.filter:org.apache.hadoop.hbase.rest.model:org.apache.hadoop.hbase.rest.p*:org.apache.hadoop.hbase.security.*:org.apache.hadoop.hbase.thrift*:org.apache.hadoop.hbase.tmpl.*:org.apache.hadoop.hbase.tool:org.apache.hadoop.hbase.trace:org.apache.hadoop.hbase.util.byterange*:org.apache.hadoop.hbase.util.test:org.apache.hadoop.hbase.util.vint:org.apache.hadoop.hbase.zookeeper.lock:org.apache.hadoop.metrics2*

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10501//console

This message is automatically generated.

The zombie is org.apache.hadoop.hbase.io.hfile.bucket.TestBucketWriterThread.setUp(TestBucketWriterThread.java:78)

So the last version of surefire does not fix this issue...

Still I plan to commit.

https://circleci.com/gh/OhmData/hbase-public/4 Seems to pass. I just think we are getting test interference.

We have right number of tests run?  If so, hot dog!

Good point. I haven't checked, but I think it should be ok.

However, while trying to checked, I found out that the build is actually blocked: the final report is not generated. And this is an issue. 

{code}
Recording test results
Publish JUnit test result report is waiting for a checkpoint on PreCommit-HBASE-Build #10499
{code}

I don't understand. Could you be a bit more detailed on the things which we
should fix to get this through?



Retry to see if hangs on end when we go to publish results again....

It looks like it hanged at

TestBuckCache.java

   while(!bc.ramCache.isEmpty()) {
      Threads.sleep(1);
    }

I wonder if this should give up and fail if we try for too long?


{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663201/HBASE-4955-v10.patch
  against trunk revision .
  ATTACHMENT ID: 12663201

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified tests.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 7 warning messages.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 lineLengths{color}.  The patch introduces the following lines longer than 100:
    +              <!-- exclude all the packages that are empty after the public annotation only filter -->
+                org.apache.hadoop.hbase.backup*:org.apache.hadoop.hbase.catalog:org.apache.hadoop.hbase.client.coprocessor:org.apache.hadoop.hbase.client.metrics:org.apache.hadoop.hbase.codec*:org.apache.hadoop.hbase.constraint:org.apache.hadoop.hbase.coprocessor.*:org.apache.hadoop.hbase.executor:org.apache.hadoop.hbase.fs:org.apache.hadoop.hbase.generated.*:org.apache.hadoop.hbase.io.hfile.*:org.apache.hadoop.hbase.mapreduce.hadoopbackport:org.apache.hadoop.hbase.mapreduce.replication:org.apache.hadoop.hbase.master.*:org.apache.hadoop.hbase.metrics*:org.apache.hadoop.hbase.migration:org.apache.hadoop.hbase.monitoring:org.apache.hadoop.hbase.p*:org.apache.hadoop.hbase.regionserver.compactions:org.apache.hadoop.hbase.regionserver.handler:org.apache.hadoop.hbase.regionserver.snapshot:org.apache.hadoop.hbase.replication.*:org.apache.hadoop.hbase.rest.filter:org.apache.hadoop.hbase.rest.model:org.apache.hadoop.hbase.rest.p*:org.apache.hadoop.hbase.security.*:org.apache.hadoop.hbase.thrift*:org.apache.hadoop.hbase.tmpl.*:org.apache.hadoop.hbase.tool:org.apache.hadoop.hbase.trace:org.apache.hadoop.hbase.util.byterange*:org.apache.hadoop.hbase.util.test:org.apache.hadoop.hbase.util.vint:org.apache.hadoop.hbase.zookeeper.lock:org.apache.hadoop.metrics2*

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
     

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/10511//console

This message is automatically generated.

bq. I wonder if this should give up and fail if we try for too long?
We could. At the end of the day, it's a surefire bug: it should stop properly the process.

bq. Could you be a bit more detailed on the things which we should fix to get this through?
On the previous test, we did not generate the final report (iirc it was the issue I got as well a few months ago). I don't know how to fix this.
On the test you relaunched, it worked. I don't know if it's linked to this new surefire version, and what is the probability to have the issue.

I'm going to commit the patch, we will see and we can always revert.  Guys, don't hesitate to revert. I'm leaving the office at 6pm my time today, so if there is an issue during the bay area office hours I won't be able to handle it.


FAILURE: Integrated in HBase-TRUNK #5417 (See [https://builds.apache.org/job/HBase-TRUNK/5417/])
HBASE-4955 Use the official versions of surefire (Alex Newman) (nkeywal: rev 018bbc09931d45afa349a76fcc72283013e1d3a2)
* hbase-server/src/test/java/org/apache/hadoop/hbase/http/TestServletFilter.java
* pom.xml


I am going to take a look at the zombie test, and see if i can make it better.

Any reason this wasn't committed to other branches? It would be nice to remove the forked surefire so I don't have to convince my security team to trust the personal repo.

Assign it to me. I'll see what I can do.



This should be fine for branch-1 if we have a patch and tests runs are working. 

ok pulling this into branch-1. We've tested this internally enough that I feel confident pulling this to branch-1.

Go for it [~eclark]

FAILURE: Integrated in HBase-1.0 #312 (See [https://builds.apache.org/job/HBase-1.0/312/])
HBASE-4955 Use the official versions of surefire (Alex Newman) (eclark: rev 921d331fa326072c8df2dc5a870884aba3de9c77)
* pom.xml
* hbase-server/src/test/java/org/apache/hadoop/hbase/http/TestServletFilter.java


Closing this issue after 0.99.2 release.

