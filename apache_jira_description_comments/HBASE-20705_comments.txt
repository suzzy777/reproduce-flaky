{quote}Space quota is set to {{REMOVE => true}}
{quote}
[~gsbiju], where are you getting this syntax from? If you're trying to remove a space quota, you would provide the {{LIMIT => NONE}}
{code:java}
Space quotas can also be removed via this command. To remove a space quota, provide NONE
for the limit.

For example:

  hbase> set_quota TYPE => SPACE, TABLE => 't1', LIMIT => NONE
  hbase> set_quota TYPE => SPACE, NAMESPACE => 'ns1', LIMIT => NONE{code}

Hi [~elserj], {{TABLE => t2 TYPE => SPACE, TABLE => t2, REMOVE => true}} is the output from {{list_quota}} after dropping the table on which RPC and space quota is set. 

Hey [~gsbiju] , Do you mind if I take up this?

 

I am able to reproduce this issue in HDP-2.6.2.0/hbase 1.1.2. If you remove both SPACE and THROTTLE for the table then the exception goes away. 

 
{noformat}
hbase(main):015:0> list_quotas 
OWNER QUOTAS 
0 row(s) in 0.1520 seconds 

hbase(main):016:0> set_quota TYPE => SPACE, TABLE => 'default:t1', LIMIT => '1G', POLICY => NO_WRITES 

hbase(main):017:0> set_quota TYPE => THROTTLE, TABLE => 'default:t1', LIMIT => '10M/sec' 

hbase(main):018:0> list_quotas 
OWNER QUOTAS 
TABLE => t1 TYPE => THROTTLE, THROTTLE_TYPE => REQUEST_SIZE, LIMIT => 10M/sec, SCOPE => MACHINE 
TABLE => t1 TYPE => SPACE, TABLE => t1, LIMIT => 1073741824, VIOLATION_POLICY => NO_WRITES 
2 row(s) in 0.1600 seconds 

hbase(main):019:0> set_quota TYPE => SPACE, TABLE => 'default:t1', LIMIT => NONE 

hbase(main):020:0> list_quotas 
OWNER QUOTAS 

ERROR: Cannot handle SpaceQuota without a soft limit

 

hbase(main):027:0> set_quota TYPE => SPACE, TABLE => 'default:t1', LIMIT => NONE 
hbase(main):029:0> set_quota TYPE => THROTTLE, TABLE => 'default:t1', LIMIT => NONE 

hbase(main):030:0> list_quotas 
OWNER QUOTAS 
0 row(s) in 0.1400 seconds 

 

{noformat}

I have a question. If a table has only RPC quota set and then the table is dropped off, does the quota still remain intact? Does it need to be removed from the hbase:quota table? In short, is the below scenario valid:

{noformat}

hbase(main):023:0> create 't2','cf1'
 Created table t2
 Took 0.7405 seconds
 => Hbase::Table - t2
 hbase(main):024:0>
 hbase(main):025:0*
 hbase(main):026:0* set_quota TYPE => THROTTLE, TABLE => 't2', LIMIT => '10M/sec'
 Took 0.0082 seconds
 hbase(main):027:0> list_quotas
 OWNER QUOTAS
 TABLE => t2 TYPE => THROTTLE, THROTTLE_TYPE => REQUEST_SIZE, LIMIT => 10M/sec, SCOPE => MACHINE
 1 row(s)
 Took 0.0291 seconds
 hbase(main):028:0> scan 'hbase:quota'
 ROW COLUMN+CELL
 t.t2 column=q:s, timestamp=1530165010888, value=PBUF\x12\x0B\x12\x09\x08\x04\x10\x80\x80\x80\x05 \x02
 1 row(s)
 Took 0.0037 seconds
 hbase(main):029:0> disable 't2'
 Took 0.4328 seconds
 hbase(main):030:0> drop 't2'
 Took 0.2285 seconds
 hbase(main):031:0> list_quotas
 OWNER QUOTAS
 TABLE => t2 TYPE => THROTTLE, THROTTLE_TYPE => REQUEST_SIZE, LIMIT => 10M/sec, SCOPE => MACHINE
 1 row(s)
 Took 0.0230 seconds
 hbase(main):032:0> scan 'hbase:quota'
 ROW COLUMN+CELL
 t.t2 column=q:s, timestamp=1530165010888, value=PBUF\x12\x0B\x12\x09\x08\x04\x10\x80\x80\x80\x05 \x02
 1 row(s)
 Took 0.0038 seconds
{noformat}

bq. If a table has only RPC quota set and then the table is dropped off, does the quota still remain intact?
In case of space quota (by default) this scenario is handled. This can be disabled too. See [https://hbase.apache.org/book.html#ops.space.quota.deletion|https://hbase.apache.org/book.html#ops.space.quota.deletion]
I think the behaviour should be same in case of rpc quota too. But from the code, I see there's no handling for this scenario in case a rpc quota is set on table. I am not sure whether it is designed to be like this. May be [~elserj] can throw some more light on this.


Yes, My question exactly (whether it was designed to like this). Josh's thoughts would surely be helpful.

{quote}In case of space quota (by default) this scenario is handled
{quote}
This was definitely something conscious we added because there isn't any reason to keep around a (space) quota for a table you no longer need. My guess would be that the similar convenience doesn't exit for RPC quotas. You could copy this feature from space quotas if you want to build it for rpc quotas, or just delete the rpc quota yourself if you want a quick cleanup.

Perfect! Thanks [~elserj]. I am going to create a sub-task to keep a track on this(RPC quota removal after table removal) separately.

Tested using shell. Added 2 test cases to make sure that having space quota & rpc quota on a table/namespace doesn't hinder in having both of them being dropped off when the table/namespace is dropped.

[~elserj], please review.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 55s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 54s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 19s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  5m 21s{color} | {color:green} branch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 22s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 32s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  2m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  2m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedjars {color} | {color:green}  4m 51s{color} | {color:green} patch has no errors when building our shaded downstream artifacts. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 10m 59s{color} | {color:green} Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}182m 22s{color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 26s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}232m  5s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.replication.TestSyncReplicationStandbyKillRS |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b |
| JIRA Issue | HBASE-20705 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12934716/hbase-20705.master.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux d62b6c07a456 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 4329330cf1 |
| maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC3 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/13965/artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/13965/testReport/ |
| Max. process+thread count | 4481 (vs. ulimit of 10000) |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/13965/console |
| Powered by | Apache Yetus 0.7.0   http://yetus.apache.org |


This message was automatically generated.



[~elserj], the test failure look unrelated to my changes. Could you please confirm?

[~jatsakthi], _you_ should be making the effort to understand what you changed and if you happened to have broke something else :)

That said, you only made changes to TestMasterQuotasObserver, so I can't imagine how you would have broken that other test.

Looking at [https://builds.apache.org/job/HBASE-Find-Flaky-Tests/lastSuccessfulBuild/artifact/dashboard.html,] that test which failed has been reported as being flaky.

[~elserj], I agree and I'll keep that in mind. Thanks for your advice and for confirming as well. I should have taken a look at the flaky beforehand. My bad.

If the patch looks ok, could you please +1?

Working on committing to 2.2 and master.

[~Apache9], [~stack], another for your braches, gents. Test-only.

Results for branch branch-2
	[build #1120 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/1120/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/1120//General_Nightly_Build_Report/]




(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/1120//JDK8_Nightly_Build_Report_(Hadoop2)/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2/1120//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Results for branch master
	[build #438 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/master/438/]: (x) *{color:red}-1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/master/438//General_Nightly_Build_Report/]




(x) {color:red}-1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/master/438//JDK8_Nightly_Build_Report_(Hadoop2)/]


(x) {color:red}-1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/master/438//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


+1.

Results for branch branch-2.1
	[build #204 on builds.a.o|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.1/204/]: (/) *{color:green}+1 overall{color}*
----
details (if available):

(/) {color:green}+1 general checks{color}
-- For more information [see general report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.1/204//General_Nightly_Build_Report/]




(/) {color:green}+1 jdk8 hadoop2 checks{color}
-- For more information [see jdk8 (hadoop2) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.1/204//JDK8_Nightly_Build_Report_(Hadoop2)/]


(/) {color:green}+1 jdk8 hadoop3 checks{color}
-- For more information [see jdk8 (hadoop3) report|https://builds.apache.org/job/HBase%20Nightly/job/branch-2.1/204//JDK8_Nightly_Build_Report_(Hadoop3)/]


(/) {color:green}+1 source release artifact{color}
-- See build output for details.


(/) {color:green}+1 client integration test{color}


Gentle nudge, [~stack].

Sorry about that. Thought I'd replied. I pushed on branch-2.0 and updated above fix version. Thanks for nudge.

Thanks much, Stack.

Resolving as this has landed everywhere. Thanks for the unit tests, Sakthi.

Thanks [~elserj], [~stack] & [~Apache9].

FYI:

Even after the patch, this problem can be reproduced if the "hbase.quota.remove.on.table.delete" is set as false. HBASE-21225 has been opened to solve the issue where space quota removal(using 'NONE') doesn't happen completely if a rpc quota is already set.

