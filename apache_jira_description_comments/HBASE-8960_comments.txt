[~jeffreyz], do you want to take a look? I can take a look as well.

[~jxiang] Sure. I can take a look at this. Thanks!

The test failure is caused due to that there is no online regions of the "table" for the RS we picked. Therefore, makeHLog doesn't write anything for regions of "table" and recovery doesn't do anything as well. In the end, verification failed with 0 lines.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592700/hbase-8960.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

     {color:red}-1 core tests{color}.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.thrift.TestThriftServer

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6368//console

This message is automatically generated.

LGTM.  Would suggest go ahead and commit to trunk and 0.95 and just leave issue open.  Can close if we don't see this after a bunch of builds (it was pretty regular fail).  Thanks Jeffrey (I do not think that TestThriftServer related but check).

Thanks [~jxiang] for reporting the issue and [~saint.ack@gmail.com] for review. I integrated the fix into 0.95.2 and trunk branch.

FAILURE: Integrated in hbase-0.95-on-hadoop2 #183 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/183/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes (jeffreyz: rev 1504322)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #621 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/621/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes (jeffreyz: rev 1504321)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK #4264 (See [https://builds.apache.org/job/HBase-TRUNK/4264/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes (jeffreyz: rev 1504321)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in hbase-0.95 #334 (See [https://builds.apache.org/job/hbase-0.95/334/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes (jeffreyz: rev 1504322)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


How about this failure [~jeffreyz]?  http://54.241.6.143/job/HBase-0.95/org.apache.hbase$hbase-server/704/testReport/junit/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testMasterStartsUpWithLogReplayWork/

What you reckon?

The cause of the failure of testMasterStartsUpWithLogReplayWork is same reason as the JIRA. Basically the test run picked a RS which doesn't has any region on it so the later recovery didn't do anything as it's shown in the log below:

{code}
wal.HLogSplitter(341): Processed 0 edits across 0 regions
{code}

Let me scan through TestDistributedLogSplitting to fix other test cases like this. Thanks.

[~jeffreyz] Thanks.

1. Refactor code in order for test cases to choose RS with right regions
2. Close ZooKeeperWatcher to avoid running out of zookeeper connection.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12594639/hbase-8960-addendum.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6507//console

This message is automatically generated.

+1 on commit.  Nice clean up of a bunch of duplicated code.  Thanks [~jeffreyz]

Thanks @Stack for the review! I've integrated the addendum into 0.95 and trunk branch.

How about this one http://54.241.6.143/job/HBase-0.95/org.apache.hbase$hbase-server/723/testReport/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testLogReplayTwoSequentialRSDown/  ?  Is it related?  Thanks [~jeffreyz]

[~saint.ack@gmail.com] Indeed, you're right. It's due to the same reason that we picked a RS without any regions for the test table. Seems we had some change which make the cluster less balanced. Here is the log line:
{code}
master.TestDistributedLogSplitting(1121): Creating wal edits across 0 regions.
{code}


Fixed another two test cases which missed out from last addendum.

I integrated the addendum2 to 0.95 and trunk as well to cover two more test cases missed from last check in. Thanks.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12595107/hbase-8960-addendum-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6537//console

This message is automatically generated.

[~jeffreyz] Thank you sir.

SUCCESS: Integrated in hbase-0.95 #387 (See [https://builds.apache.org/job/hbase-0.95/387/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes - Addendum2 (jeffreyz: rev 1508712)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK #4323 (See [https://builds.apache.org/job/HBase-TRUNK/4323/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes - Addendum2 (jeffreyz: rev 1508711)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in hbase-0.95-on-hadoop2 #210 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/210/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes - Addendum2 (jeffreyz: rev 1508712)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #645 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/645/])
HBASE-8960: TestDistributedLogSplitting.testLogReplayForDisablingTable fails sometimes - Addendum2 (jeffreyz: rev 1508711)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


Just noting that this failure here http://54.241.6.143/job/HBase-0.95/729/ when I compare the set of Tests to those from the adjacent successful shows TestDistributedLogSplitting as the difference (it is not in the list of tests for the failed run).  The bad test run has a total of 1583 tests completed.  The good run has 1597.  TestDistributedLogSplitting has 14 tests.  All the tests have timeouts which usually converts them from 'zombie' to timeout.  ugh.  Not sure what it is.



Hmm.. There is no log for the time out so I don't know what caused issue. The test suite normally take 5-6 mins to complete. Not sure what would happen on a slower box. We can split TestDistributedLogSplitting to smaller ones to work around this issue. 

[~jeffreyz] This TDLS seems to be the only one that hangs on occasion now.  Lets see if I can get more info on fails.  BTW, where is that fancy jenkins test checker of yours!  We need it here!

The flaky test detector is tracked in hbase-8018. I run the tool(which doesn't work on http://54.241.6.143 yet because its Jenkins set up is different than builds.apache.org) against 0.95 and the fail test case summary of the past 30 runs is shown below(where 1 means pass, 0 means didn't run, -1 means fail): You can see TestDistributedLogSplitting is stable there.

{code}
java -jar buildstats-1.0-jar-with-dependencies.jar  https://builds.apache.org hbase-0.95 30
{code}

Failed Test Cases               366  367  368  369  370  371  372  373  374  375  376  377  378  379  381  382  383  384  385  386  387  388  389  390  391  392
========================================================

org.apache.hadoop.hbase.coprocessor.testmastercoprocessorexceptionwithremove.testexceptionfromcoprocessorwhencreatingtable    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.mapreduce.testhfileoutputformat.testmrincrementalloadwithsplit    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.master.cleaner.testsnapshotfrommaster.testsnapshothfilearchiving    1    1    1    1    1    1    1    1    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.master.testsplitlogmanager.testmultipleresubmits    1    1    1    1    1    0    1    1    1    1    1    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.regionserver.testregionmergetransactiononcluster.testwholesomemerge    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.regionserver.wal.testlogrolling.testlogrollonpipelinerestart    1    1    1    1    1    1    1    1    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.snapshot.testflushsnapshotfromclient.testconcurrentsnapshottingattempts    1    1    1    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.testiofencing.testfencingaroundcompactionafterwalsync    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1   -1    0    1    1    1    1    1
org.apache.hadoop.hbase.testzookeeper.testlogsplittingaftermasterrecoveryduetozkexpiry    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1   -1    0    1
org.apache.hadoop.hbase.testzookeeper.testregionserversessionexpired    1    1    1    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.thrift.testthriftserver.testall    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
org.apache.hadoop.hbase.zookeeper.lock.testzkinterprocessreadwritelock.testreadlockexcludeswriters    1    1    1    1    1    1   -1    0    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1

[~jeffreyz] If you run your tool again, what does it s how for this test failure: https://builds.apache.org/job/hbase-0.95-on-hadoop2/216/changes

When I look at the difference between this fail and a good run, I see the following differences:

durruti:0.95 stack$ diff /tmp/b.txt /tmp/g.txt
33a34
> Running org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient
100a102
> Running org.apache.hadoop.hbase.master.TestDistributedLogSplitting
171d172
< Running org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort
217a219
> Running org.apache.hadoop.hbase.util.TestHBaseFsck

The '>' are tests that show in the good run but are missing from the bad run (TestLogRollAbort was just added so it shows in the bad run and not in the good).  Thanks.

My tool currently only show how a failed test performs in recent runs. If a test doesn't fail at all and just miss one run, the tool won't print any thing. 

Below is the failed test case summary of the last 10 runs on hbase-0.95-on-hadoop2:

{code}
Failed Test Cases               207  208  209  210  211  212  213  214  215  216
========================================================

org.apache.hadoop.hbase.snapshot.testflushsnapshotfromclient.testflushtablesnapshot    1    1   -1    0    1    1    1    1    1    1
{code}

[~jeffreyz] So could your tool be improved so that if a test has been present in the previous three builds and not in the fouth (caveat missing tests is less than some threshold -- say ten or so), could it print an error?  Thanks

[~saint.ack@gmail.com] A good suggestion. I'm thinking to extend the tool to include stats for "skipped" ones as well so we can cover the test suite timeout situations. The end result is printing stats of failed and skipped tests in last N runs instead of just failed ones. 

There is one more time out situation happened on http://54.241.6.143/job/HBase-0.95-Hadoop-2/759/. Let me split TestDistributedLogSplitting into two test suites one with replay on and the rest with replay off to see if we can make things better and possibly get some error messages.

[~jeffreyz] Thanks boss.

Thanks [~jeffreyz]

Failed this morning: http://54.241.6.143/job/HBase-0.95-Hadoop-2/759/org.apache.hbase$hbase-server/


[~saint.ack@gmail.com] The changes in hbase-8960 make the TestDistributedLogSplitting test case complete within two mins(by not killing & restarting dfscluster and zkcluster for each test case) so I think there is no need to split the TestDistributedLogSplitting test suite. I'll try to enhance the failure detection tool to include the skipped ones. Thanks.

There was a fail this morning: https://builds.apache.org/job/HBase-TRUNK/4387/testReport/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testDisallowWritesInRecovering/

I checked the failure and it's due to a unmatched exception type. Since the test is stable in the past 20 runs, I also run the test case 20 times locally in a row and no failure. It may failed due to disturbances from recent checkins. Let's wait a little bit to see how it goes. Thanks. 

[~jeffreyz] Thanks for taking a look.

How about this one https://builds.apache.org/job/HBase-TRUNK/4407/testReport/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testLogReplayForDisablingTable/

or this one....


https://builds.apache.org/view/H-L/view/HBase/job/hbase-0.95/463/testReport/junit/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testMasterStartsUpWithLogSplittingWork/

Thanks



Here is another http://54.241.6.143/job/HBase-0.95-Hadoop-2/org.apache.hbase$hbase-server/840/testReport/junit/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testWorkerAbort/

or here...

http://54.241.6.143/job/HBase-TRUNK/org.apache.hbase$hbase-server/456/testReport/junit/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testDisallowWritesInRecovering/



The testWorkerAbort failed due to a race condition as it kills all region servers and in some case a log split task will be resigned as the result of killing and anther log split work could also be done around the same time.

The testDisallowWritesInRecovering failed also with a race condition such as a log replay recovery could be done before we issue a put request. I increased the recovery time and print out details when it fails for future debugging.

{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12598706/hbase-8690-v4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:green}+1 hadoop1.0{color}.  The patch compiles against the hadoop 1.0 profile.

    {color:green}+1 hadoop2.0{color}.  The patch compiles against the hadoop 2.0 profile.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

     {color:red}-1 core zombie tests{color}.  There are 1 zombie test(s): 	at org.apache.hadoop.hdfs.TestDFSStorageStateRecovery.testDNStorageStates(TestDFSStorageStateRecovery.java:381)

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6805//console

This message is automatically generated.

It looks like our zombie detector is picking up tests from a concurrent hadoop run.  So you applied debug code [~jeffreyz]?  If so, thanks.  And thanks for taking a look

I just integrated the v4 patch into 0.95 and trunk branch. Thanks.

SUCCESS: Integrated in hbase-0.95 #470 (See [https://builds.apache.org/job/hbase-0.95/470/])
HBASE-8960: TestDistributedLogSplitting - fix testWorkerAbort & testDisallowWritesInRecovering (jeffreyz: rev 1515552)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in hbase-0.95-on-hadoop2 #254 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/254/])
HBASE-8960: TestDistributedLogSplitting - fix testWorkerAbort & testDisallowWritesInRecovering (jeffreyz: rev 1515552)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK #4412 (See [https://builds.apache.org/job/HBase-TRUNK/4412/])
HBASE-8960: TestDistributedLogSplitting - fix testWorkerAbort & testDisallowWritesInRecovering (jeffreyz: rev 1515550)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #686 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/686/])
HBASE-8960: TestDistributedLogSplitting - fix testWorkerAbort & testDisallowWritesInRecovering (jeffreyz: rev 1515550)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


The testDisallowWritesInRecovering failed again. Let me rework the testDisallowWritesInRecovering test case to make it solid. Thanks.

Reworked the test case "disallowWritesInRecovering" to make it stable. I integrated the patch into 0.95 and trunk as well. Thanks.

[~jeffreyz] Thanks for working on this.

FAILURE: Integrated in hbase-0.95 #481 (See [https://builds.apache.org/job/hbase-0.95/481/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering (jeffreyz: rev 1516252)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


FAILURE: Integrated in hbase-0.95-on-hadoop2 #261 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/261/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering (jeffreyz: rev 1516252)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


FAILURE: Integrated in HBase-TRUNK #4421 (See [https://builds.apache.org/job/HBase-TRUNK/4421/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering (jeffreyz: rev 1516248)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #690 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/690/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering (jeffreyz: rev 1516248)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


The reworked one failed in the Jenkins build once. I applied the addendum. Sorry for the spamming. 

SUCCESS: Integrated in hbase-0.95 #482 (See [https://builds.apache.org/job/hbase-0.95/482/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering - addendum (jeffreyz: rev 1516329)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


FAILURE: Integrated in hbase-0.95-on-hadoop2 #262 (See [https://builds.apache.org/job/hbase-0.95-on-hadoop2/262/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering - addendum (jeffreyz: rev 1516329)
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #691 (See [https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/691/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering - addendum (jeffreyz: rev 1516328)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


FAILURE: Integrated in HBase-TRUNK #4422 (See [https://builds.apache.org/job/HBase-TRUNK/4422/])
HBASE-8960: TestDistributedLogSplitting fails sometime - stablize testDisallowWritesInRecovering - addendum (jeffreyz: rev 1516328)
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12599303/hbase-8960-fix-disallowWritesInRecovering-addendum.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified tests.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/6891//console

This message is automatically generated.

[~saint.ack@gmail.com] Should I close this JIRA now because TestDistributedLogSplitting hasn't failed in last 10+ builds on trunk, 0.95 and 0.95 on hadoop2? Thanks.

Resolving.  This test is better though another instance failed recently, I made another issue to cover it.

This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).

