Tests on 0.90 branch that use the wrong convention:

TestMultiParallel (UTIL.getMiniHBaseCluster().shutdown();)
TestRestartCluster (starts but doesn't close on some tests)
TestHLog (starts but doesn't cleanup)
TestMasterRestartAfterDisablingTable (start but no cleanup)
TestHBaseTestingUtility.testMiniCluster() (doesn't cleanup after itself)
TestImportTsv


Its seems to generate a random dir unless a test.build.data system property is set.  If it is set the entire suite of tests may clash.

How does one get the properties set before the build/test suites are run? 

We'd have to add something to dump them out.  Do you want to do it for every test that is run Jon?  I took a quick look at surefire-tests goal and there doesn't seem to be a pre-test goal that we could add something to (nor did I see a system properties dump config -- there is a way to add system properties to the test context so we could set a flag that HBaseTestingUtility read and dumped all props if set?).

Actually, if the HBaseTestingUtility calls dump the root dir they are using for temp hdfs storage to logs/console, we don't need the system properties.  It would be helpful to know where potential leftover files on runs are stored and to know where if and where temp files are being left behind.   



Hm.. looks like this actually done, but apache jenkins truncates the data so that it is not available from the build's logs.  I've noticed some similar flaky test failures on my side and will do some runs to try to duplicate failures and  that keeps the full stdout/logs so we can debug.

Adding @AfterClass shutdown to TestHLog seems to make the testLogCleaning tests hang when it attempts to shutdown.

I checked the status for the tests mentionned:
TestMultiParallel (UTIL.getMiniHBaseCluster().shutdown()  ==> ok
TestRestartCluster (starts but doesn't close on some tests)  ==> shutdown in tearDown ==> ok
TestHLog (starts but doesn't cleanup)  ==> shutdown the minidfs cluster, should be ok, I will anyway shutdown the whole cluster (will do that as a part of a bigger jira in progress)
TestMasterRestartAfterDisablingTable (start but no cleanup) ==> ok
TestHBaseTestingUtility.testMiniCluster() (doesn't cleanup after itself)   ==> ok
TestImportTsv ==> ok

Note that the cleanup is not done if the directory is not empty. I think it makes sense to add a shutdown hook to do a full cleanup.

note: check done on trunk, not .90

