Thanks for your contribution to the Load Test framework! I'd happy to review your changes once you are ready

I just saw your comment here. Thank you. I added streaming tests in https://github.com/apache/beam/pull/11558. Have a look if you want.

I've created a dashboard here: https://apache-beam-testing.appspot.com/explore?dashboard=5751884853805056

Cron: https://builds.apache.org/job/beam_LoadTests_Python_ParDo_Flink_Streaming/
PR: https://builds.apache.org/job/beam_LoadTests_Python_ParDo_Flink_Streaming_PR/

[~mxm]Â I have one question about this test. You used _StatefulLoadGenerator_ instead of _SyntheticSources_. Why Flink streaming tests should use this method?

[~kasiak] We wanted to have support for streaming which we can't have until SDF is implemented in streaming mode. The StatefulLoadGenerator uses timers to generate the load which work in streaming.

> have support for streaming which we can't have until SDF is implemented in streaming mode

[~mxm] Does it apply only to Flink? We've successfully run streaming pipelines with `SyntheticSource` on Dataflow, which would mean SDF does work in streaming mode (SyntheticSource executes as SDF because a wrapper is used). Also, a JIRA ticket related to streaming SDF in Python has been closed: https://issues.apache.org/jira/browse/BEAM-3742

You're right, seems like this is now possible thanks to BEAM-3742.

