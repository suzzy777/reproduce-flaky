Still happening:
https://builds.apache.org/job/beam_PostCommit_Python2/lastCompletedBuild/testReport/junit/apache_beam.io.gcp.big_query_query_to_table_it_test/BigQueryQueryToTableIT/test_big_query_legacy_sql/

I fixed BigqueryFullResultMatcher, but BigqueryMatcher has the same bug.

Still buggy, PR forthcoming.

https://builds.apache.org/job/beam_PostCommit_Python35/lastCompletedBuild/testReport/junit/apache_beam.io.gcp.big_query_query_to_table_it_test/BigQueryQueryToTableIT/test_big_query_legacy_sql/
{code}
  File "/usr/lib/python3.5/unittest/case.py", line 58, in testPartExecutor
    yield
  File "/usr/lib/python3.5/unittest/case.py", line 600, in run
    testMethod()
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/sdks/python/apache_beam/io/gcp/big_query_query_to_table_it_test.py", line 146, in test_big_query_legacy_sql
    big_query_query_to_table_pipeline.run_bq_pipeline(options)
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", line 82, in run_bq_pipeline
    result = p.run()
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/sdks/python/apache_beam/testing/test_pipeline.py", line 107, in run
    else test_runner_api))
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/sdks/python/apache_beam/pipeline.py", line 406, in run
    self._options).run(False)
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/sdks/python/apache_beam/pipeline.py", line 419, in run
    return self.runner.run_pipeline(self, self._options)
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/sdks/python/apache_beam/runners/direct/test_direct_runner.py", line 51, in run_pipeline
    hc_assert_that(self.result, pickler.loads(on_success_matcher))
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/build/gradleenv/1398941889/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/build/gradleenv/1398941889/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 55, in _assert_match
    matcher.describe_mismatch(actual, description)
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/build/gradleenv/1398941889/lib/python3.5/site-packages/hamcrest/core/core/allof.py", line 25, in describe_mismatch
    self.matches(item, mismatch_description)
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/build/gradleenv/1398941889/lib/python3.5/site-packages/hamcrest/core/core/allof.py", line 16, in matches
    if not matcher.matches(item):
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/build/gradleenv/1398941889/lib/python3.5/site-packages/hamcrest/core/base_matcher.py", line 28, in matches
    match_result = self._matches(item)
  File "/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python35/src/sdks/python/apache_beam/io/gcp/tests/bigquery_matcher.py", line 89, in _matches
    self.checksum = compute_hash(response)
local variable 'response' referenced before assignment

{code}

Is this a different error? 
https://builds.apache.org/job/beam_PostCommit_Python37_PR/16/
{noformat}
apache_beam.io.gcp.bigquery_write_it_test.BigQueryWriteIntegrationTests.test_big_query_write_without_schema (from nosetests)

Expected: (Expected data is [(b'xyw', datetime.date(2011, 1, 1), datetime.time(23, 59, 59, 999999)), (b'abc', datetime.date(2000, 1, 1), datetime.time(0, 0)), (b'\xe4\xbd\xa0\xe5\xa5\xbd', datetime.date(3000, 12, 31), datetime.time(23, 59, 59)), (b'\xab\xac\xad', datetime.date(2000, 1, 1), datetime.time(0, 0))])
     but: Expected data is [(b'xyw', datetime.date(2011, 1, 1), datetime.time(23, 59, 59, 999999)), (b'abc', datetime.date(2000, 1, 1), datetime.time(0, 0)), (b'\xe4\xbd\xa0\xe5\xa5\xbd', datetime.date(3000, 12, 31), datetime.time(23, 59, 59)), (b'\xab\xac\xad', datetime.date(2000, 1, 1), datetime.time(0, 0))] Actual data is []

{noformat}

