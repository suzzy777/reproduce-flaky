Started a run with DEBUG on. https://builds.apache.org/job/PreCommit-HBASE-Build/7651/

+1 on https://issues.apache.org/jira/secure/attachment/12877377/HBASE-18376.master.001.patch

oh! but it'd be good to add an else clause to the downloads that did {{yetus_debug "downloading failed."}} or similar

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  4s{color} | {color:red} HBASE-18376 does not apply to master. Rebase required? Wrong Branch? See https://yetus.apache.org/documentation/0.4.0/precommit-patchnames for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HBASE-18376 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12877377/HBASE-18376.master.001.patch |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7663/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



since it's error, echoing irrespective of whether yetus_debug is on/off made sense to me. What do you think?

sure. {{yetus_error}} is the function for that.

SUCCESS: Integrated in Jenkins build HBase-Trunk_matrix #3376 (See [https://builds.apache.org/job/HBase-Trunk_matrix/3376/])
HBASE-18376 Add debug logs to hbase-personality.sh to make it possible (appy: rev ea0062fa54bba3c31a597e94b62f4130624b6f82)
* (edit) dev-support/hbase-personality.sh


FAILURE: Integrated in Jenkins build HBASE-14070.HLC #69 (See [https://builds.apache.org/job/HBASE-14070.HLC/69/])
HBASE-18376 Add debug logs to hbase-personality.sh to make it possible (appy: rev ea0062fa54bba3c31a597e94b62f4130624b6f82)
* (edit) dev-support/hbase-personality.sh


From the build https://builds.apache.org/job/PreCommit-HBASE-Build/7662/consoleFull
Looks like the environment variable EXCLUDE_TESTS_URL is not being set /passed on correctly.
{noformat}
[Fri Jul 14 20:28:15 UTC 2017 DEBUG]: MultiJDK not configured.
[Fri Jul 14 20:28:15 UTC 2017 DEBUG]: Personality: patch unit
[Fri Jul 14 20:28:15 UTC 2017 DEBUG]: Personality: clear queue
[Fri Jul 14 20:28:15 UTC 2017 DEBUG]: EXCLUDE_TESTS_URL = 
[Fri Jul 14 20:28:15 UTC 2017 DEBUG]: INCLUDE_TESTS_URL = 
[Fri Jul 14 20:28:15 UTC 2017 DEBUG]: Personality: enqueue hbase-server -DHBasePatchProcess -PrunAllTests
[Fri Jul 14 20:28:15 UTC 2017 DEBUG]: MultiJDK not configured.
{noformat}

Have we done a run without docker active? I'd guess the issue is that the docker container gets a clean ENV.

That means we'll need to switch to a cli arg. :/

with docker: https://builds.apache.org/job/PreCommit-HBASE-Build/7682/consoleFull
env var is found to be empty by hbase-personality.sh

without docker: https://builds.apache.org/job/PreCommit-HBASE-Build/7683/console
env var is set and {{-Dtest.exclude.pattern}} gets set correctly. Although i don't know why did the job failed in 7 min.

So yes, you're right [~busbey], we need to propagate the var into the container.

So after researching a bit on docker, passing env variables to containers, and what yetus supports, here what i came up with:
> Use of --env=Foo=value : Not possible since yetus builds the docker command internally and doesn't provide any hook to inject args into docker cmd.
> Dockerfile ENV: Not sure if variables set in this way are only used in dockerfile context, or also set for 'docker run' commands. (Ref: https://docs.docker.com/engine/reference/builder/#env ). This suggests latter, but not sure how to set an ENV variable from bash env variable. As in "ENV foo=${foo}" wont work.

Looked at yetus source code to find any undocumented hook but no luck.
 (https://github.com/apache/yetus/blob/master/precommit/core.d/docker.sh)

[~busbey]'s suggestion is to file yetus jira to ask for "ability for plugins to alter the docker invocation cli". 

we could also reimplement this as a command line argument, I think that would work

Do you mean --env cli argument or something else? Coz ability to specify extra docker cli args would require changes in yetus.

I mean {{--flaky-exclude-list}} or similar, that our personality uses to get the URL to build the exclusion list.

Doesn't personality run inside docker container? In which case our core problem still remains, how do we pass information from jenkins job params to  docker container env?
Once we can breach the barrier, it can be env variable, or cli or anything else.

I think the best fix would be in yetus here: https://github.com/apache/yetus/blob/master/precommit/core.d/docker.sh#L50
Adding --dockercmdextraargs or DOCKERCMDEXTRAARGS which will be added to all docker cmd runs. Will make a lot more customizations possible in future.
What do you say?


All of the cli args passed to the original test-patch invocation are passed to the re-execution within the docker container. So if we pass it to yetus the first time via a CLI arg, it'll still be there when the personality is invoked.

ah! I looked at the yetus docs a bit more.

http://yetus.apache.org/documentation/0.5.0/precommit-advanced/#important-variables

bq. DOCKER_EXTRAARGS[@] is an array of command line arguments to apply to the docker run command.

I don't think personalities have all of the tooling plugins do, we could handle both the cli args part and the docker part by defining a plugin for the excludes and then using {{pluginname_parse_args}} and {{pluginname_docker_support}}:

http://yetus.apache.org/documentation/0.5.0/precommit-advanced/#common-plug-in-functions

I suspect adding to DOCKER_EXTRAARGS is the fastest path to works-at-all.

So me and [~busbey] tried to fix precommit job using DOCKER_EXTRAARGS. Let's see if this build (https://builds.apache.org/job/PreCommit-HBASE-Build/7804/console) shows the maven command with excluded tests.

Btw, following is what worked.
DOCKER_EXTRAARGS=--env=EXCLUDE_TESTS_URL="$\{EXCLUDE_TESTS_URL}"

And these are what didn't work :-/
DOCKER_EXTRAARGS=--env EXCLUDE_TESTS_URL="$\{EXCLUDE_TESTS_URL}"
DOCKER_EXTRAARGS=-env EXCLUDE_TESTS_URL="$\{EXCLUDE_TESTS_URL}"



I don't think it's working, though the parameter is definitely getting propogated into the personality running in the container.

{code}

21:41:55 ============================================================================
21:41:55 ============================================================================
21:41:55                             Running unit tests
21:41:55 ============================================================================
21:41:55 ============================================================================
21:41:55 
21:41:55 
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: MultiJDK not configured.
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: Personality: patch unit
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: Personality: clear queue
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: EXCLUDE_TESTS_URL = "https://builds.apache.org/job/HBase-Find-Flaky-Tests/lastSuccessfulBuild/artifact/excludes/"
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: INCLUDE_TESTS_URL = 
21:41:55 "https://builds.apache.org/job/HBase-Find-Flaky-Tests/lastSuccessfulBuild/artifact/excludes/": Scheme missing.
21:41:55 Wget error 1 in fetching excludes file from url "https://builds.apache.org/job/HBase-Find-Flaky-Tests/lastSuccessfulBuild/artifact/excludes/". Ignoring and proceeding.
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: Personality: enqueue hbase-protocol-shaded -DHBasePatchProcess -PrunAllTests
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: Personality: enqueue hbase-procedure -DHBasePatchProcess -PrunAllTests
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: Personality: enqueue hbase-server -DHBasePatchProcess -PrunAllTests
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: MultiJDK not configured.
21:41:55 [Wed Jul 26 21:41:55 UTC 2017 DEBUG]: Start clock
21:41:58 cd /testptch/hbase/hbase-protocol-shaded
21:41:58 mvn -Dmaven.repo.local=/home/jenkins/yetus-m2/hbase-master-patch-0 -DHBasePatchProcess -PrunAllTests clean test -fae > /testptch/patchprocess/patch-unit-hbase-protocol-shaded.txt 2>&1
21:42:24 [Wed Jul 26 21:42:24 UTC 2017 DEBUG]: Stop clock
21:42:24 Elapsed:   0m 29s
21:42:24 [Wed Jul 26 21:42:24 UTC 2017 DEBUG]: Start clock
21:42:27 cd /testptch/hbase/hbase-procedure
21:42:27 mvn -Dmaven.repo.local=/home/jenkins/yetus-m2/hbase-master-patch-0 -DHBasePatchProcess -PrunAllTests clean test -fae > /testptch/patchprocess/patch-unit-hbase-procedure.txt 2>&1
21:45:21 [Wed Jul 26 21:45:21 UTC 2017 DEBUG]: Stop clock
21:45:21 Elapsed:   2m 57s
21:45:21 [Wed Jul 26 21:45:21 UTC 2017 DEBUG]: Start clock
21:45:24 cd /testptch/hbase/hbase-server
21:45:24 mvn -Dmaven.repo.local=/home/jenkins/yetus-m2/hbase-master-patch-0 -DHBasePatchProcess -PrunAllTests clean test -fae > /testptch/patchprocess/patch-unit-hbase-server.txt 2>&1
{code}

huh, and I think we might be causing failures for RAT checks now [eg|https://builds.apache.org/job/PreCommit-HBASE-Build/7809/artifact/patchprocess/patch-asflicense-problems.txt]

{code}
Lines that start with ????? in the ASF License  report indicate files that do not have an Apache license header:
 !????? excludes
{code}

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 45s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 40s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 32m  9s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 16s{color} | {color:green} hbase-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  7s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 42m 47s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-18376 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12879271/HBASE-18376.master.002.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 97b7b20f58d9 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / c5d3de0 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC3 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7820/testReport/ |
| modules | C: hbase-common U: hbase-common |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7820/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Successful run: https://builds.apache.org/job/PreCommit-HBASE-Build/7820/console
It's excluding flaky tests in mvn command line.
Also, not seeing any license issues in the last run, so should be fine to call this one fixed.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 13m  7s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 43s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 15s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m  9s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 32s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 14s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 29m 30s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 13s{color} | {color:green} hbase-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m  8s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 52m 22s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-18376 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12879271/HBASE-18376.master.002.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 0fba93309813 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / c5d3de0 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC3 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7821/testReport/ |
| modules | C: hbase-common U: hbase-common |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7821/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



