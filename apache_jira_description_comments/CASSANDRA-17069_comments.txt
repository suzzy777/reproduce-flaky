patch is almost ready for review; finishing testing.

a few minor nits on the PR, otherwise lgtm, +1

looking into jvm-dtest failures: NetstatsBootstrapWithEntireSSTablesCompressionStreamingTest (takes a long time but passes on trunk; fails locally), BootstrapTest

Here are my results so far with org.apache.cassandra.distributed.test.NetstatsBootstrapWithEntireSSTablesCompressionStreamingTest.testWithStreamingEntireSSTablesWithoutCompressionWithoutThrottling

The stack trace is for the following line

{code}
final Future<AbstractNetstatsStreaming.NetstatResults> netstatsFuture = executorService.submit(new NetstatsCallable(cluster.get(1)));

final AbstractNetstatsStreaming.NetstatResults results = netstatsFuture.get(1, MINUTES); // timeout here
{code}

This future calls nodetool in a loop with sleeps (Thread.sleep(500)).  It stops looping after it no longer sees Receiving/Sending in the logs (aka streaming ran but is no longer running).  After this point it awaits for the node to come up (2m timeout)...

I do not believe this patch impacts this test (ran locally and hard to hit this case), but just in case I plan to patch the test (see a flake, fix a flake) to wait longer for node to come up (before was practically 3m) and then check for streaming (if we are not done streaming after node2 is up... what happened?).

ran bootstrap test on trunk and repro the issue; so its not related to this patch

{code}
testclasslist:
[junit-timeout] Picked up _JAVA_OPTIONS: -Djava.net.preferIPv4Stack=true
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.ring.BootstrapTest
[junit-timeout] Testsuite: org.apache.cassandra.distributed.test.ring.BootstrapTest Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 285.181 sec
[junit-timeout]
[junit-timeout] Testcase: readWriteDuringBootstrapTest(org.apache.cassandra.distributed.test.ring.BootstrapTest):       Caused an ERROR
[junit-timeout] java.util.concurrent.TimeoutException
[junit-timeout] java.lang.RuntimeException: java.util.concurrent.TimeoutException
[junit-timeout]         at org.apache.cassandra.utils.Throwables.maybeFail(Throwables.java:71)
[junit-timeout]         at org.apache.cassandra.utils.FBUtilities.waitOnFutures(FBUtilities.java:497)
[junit-timeout]         at org.apache.cassandra.distributed.impl.AbstractCluster.close(AbstractCluster.java:930)
[junit-timeout]         at org.apache.cassandra.distributed.test.ring.BootstrapTest.readWriteDuringBootstrapTest(BootstrapTest.java:101)
[junit-timeout] Caused by: java.util.concurrent.TimeoutException
[junit-timeout]         at java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1784)
[junit-timeout]         at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1928)
[junit-timeout]         at org.apache.cassandra.utils.FBUtilities.waitOnFutures(FBUtilities.java:489)
[junit-timeout]
[junit-timeout]
[junit-timeout] Test org.apache.cassandra.distributed.test.ring.BootstrapTest FAILED
{code}

looks like something else is going on with org.apache.cassandra.distributed.test.NetstatsBootstrapWithEntireSSTablesCompressionStreamingTest#testWithStreamingEntireSSTablesWithoutCompressionWithoutThrottling; it failed after I patched it to wait 1m after node2 finishes coming up... this implies the exit condition isn't being met...

looking closer at the code I think its a race condition; which also matches as there is no throttling in the test which times out.  If streaming starts/completes within the gap between seeing nodetool netstats results and the next query, then the test keeps looping waiting. 

Going to test this by grepping for "[Stream (.*)?] All sessions completed" when no stream was seen yet in nodetool.  If this happens we know we hit the edge case and can mark the test as success (stream passed; which is all the test is checking).

I am marking this as "not this JIRAs issue" and will file a new issue for it.  I have a patch locally which detects this race condition to make progress, but best to get the original author to take a look to make sure it smells ok.

Filed CASSANDRA-17143 to fix that test; going to start the merge now.

Starting commit

CI Results (pending):
||Branch||Source||Circle CI||Jenkins||
|trunk|[branch|https://github.com/dcapwell/cassandra/tree/commit_remote_branch/CASSANDRA-17069-trunk-C37ADF4F-278A-4D9A-9326-72031B112478]|[build|https://app.circleci.com/pipelines/github/dcapwell/cassandra?branch=commit_remote_branch%2FCASSANDRA-17069-trunk-C37ADF4F-278A-4D9A-9326-72031B112478]|[build|unknown]|


I didn't link a Jenkins build as Jenkins is currently broken: see https://the-asf.slack.com/archives/CK23JSY2K/p1636751694163800

:sigh:  test failures with

{code}
        try:
>           s.bind(sockaddr)
E           OSError: [Errno 98] Address already in use
{code}

Will try to rerun the jobs...

just found CASSANDRA-17139 for the bootstrap issue.

There were many failures... so need to justify here...

* python dtest in j8 looked to have a CI issue where another process was listening on the port; the tests were passing in j11, so ignoring the bad results from j8
* jvm dtest is 2 known issues: CASSANDRA-17143 and the bootstrap one I just linked
* python dtest hinted handoff failed, but confirmed using butler this is a known flaky test; there wasn't a JIRA so filed CASSANDRA-17144
* jvm dtest upgrade tests are still failing for compact storage, not seen them passing in trunk yet
* python dtest upgrade tests, all known issues

