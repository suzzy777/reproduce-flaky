[~agoncharuk] are you going to implement this ticket? If not could you please move it to unassigned?

[~agoncharuk],

I would like to take this ticket for myself and start investigation. Can I?

No objections from my side, unassigned the ticket.

Changes are ready. Implementation details:
 # Moved binary recovery at the node startup – {{readCheckpointAndRestoreMemory}}
 # Resume WAL logging inside PME – {{onDoneRestoreBinaryMemory}}
 # Perform recovery on the node start after all caches initialized – {{cacheProcessorStarted}}
 # Start memory regions at the moment of first usage – {{initAndStartRegions}}
 # Save FileWriteHandler tail on activate\deactivate for resuming logging – {{FileWriteAheadLogManager#walTail}}
 # Check recovery on the middle of checkpoint – {{testBinaryRecoverBeforePMEWhenMiddleCheckpoint}}

PR: [Pull Request #4520|https://github.com/apache/ignite/pull/4520/files]
Upsource: [IGNT-CR-727|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-727]
TC: [#4342 (10 Sep 18 20:45)|https://ci.ignite.apache.org/viewLog.html?buildId=1835822&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]

[~dpavlov] , [~Jokser] , [~DmitriyGovorukhin]

Folks,

I need our help with the review.

Current TC `Run:All` looks good. Test looks a bit suspicious \{{IgnitePdsPageReplacementTest#testPageReplacement}}, but I've checked it and it passes. I will rerun TC and thoroughly recheck all tests before merge after we will come to an agreement with these PR changes.

 

[~Mmuzaf] Thanks for your work, I left my comments in UpSource review.

[~Mmuzaf] Also, please add a link to TC run in links block, same place as for PR link.

[~DmitriyGovorukhin]

I've added TC link for the latest test results.
Also, I've also answered to your comments in Upsouce. We can continue the discussion here or there, as you like.

[~Mmuzaf] Let's fix an issue related to init for persistence cache description and double initialize fort metastorage.

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}ZooKeeper (Discovery) 2{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1929135]]

{color:#d04437}Thin client: Node.js{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1929157]]

{color:#d04437}Cache 6{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1929159]]
* IgniteCacheTestSuite6: TxRollbackOnTimeoutTest.testSimple - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 8{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1929184]]
* IgniteCacheTestSuite8: GridCacheConcurrentEvictionConsistencySelfTest.testPolicyConsistencyLruLocalFewKeys - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 5{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=1929175]]
* IgniteCacheTestSuite5: IgniteCachePartitionLossPolicySelfTest.testReadWriteSafeAfterKillTwoNodes - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 4{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1929174]]
* IgniteCacheTestSuite4: CacheStoreUsageMultinodeDynamicStartTxTest.testDynamicStartFromClientWriteBehindStore - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1929194&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~DmitriyGovorukhin] ,

I've fixed cache persistence initialization according to our discussion, but I think, unfortunately, we can't avoid double initialization of meta storage for now. On cluster de-activation we destroy `FilePageStore's` related to particular cache holders and on cluster activation they have to be created by calling init method.

To avoid ambiguity I've created a new lifecycle database manager method `beforeResumeWalLogging`. I will file a new ticket to move `metastorage.initializeForMetastorage()` method to database lifecycle interface. So we will avoid double-call of it.

I've re-run TC and tests mentioned by `Ignite TC Bot` passed successfully. Exception messages are not due to my changes.
But I'm a little bit worry about timeouts in `ZooKeeper (Discovery) 2`, generally, timeouts are not related to my changes, but I'd like to double-check it.

Summary,

[Without minor changes - Run :: All #4342 (10 Sep 18 20:45)|https://ci.ignite.apache.org/viewLog.html?buildId=1835822&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]
[Run :: All #4832 (24 Sep 18 12:11)|https://ci.ignite.apache.org/viewLog.html?buildId=1929194&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]
[ZooKeeper (Discovery) 2 #3538 (24 Sep 18 20:11)|https://ci.ignite.apache.org/viewLog.html?buildId=1933147&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_ZooKeeperDiscovery2]

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Cache 5{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1934224]]
* CacheLateAffinityAssignmentTest.testConcurrentStartStaticCachesWithClientNodes (last started)

{color:#d04437}SPI{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=1934176]]
* IgniteSpiTestSuite: TcpCommunicationSpiFaultyClientTest.testNoServerOnHost - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1934243&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~DmitriyGovorukhin]

I've re-run these suites:
 [Cache 5 - #3864 (25 Sep 18 15:12)|https://ci.ignite.apache.org/viewLog.html?buildId=1939408&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Cache5] – all tests passed.
 [SPI - #3410 (25 Sep 18 03:46)|https://ci.ignite.apache.org/viewLog.html?buildId=1934176&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Spi] – {{testNoServerOnHost}} test passed accoring suite report.
 [SPI - #3425 (25 Sep 18 15:12)|https://ci.ignite.apache.org/viewLog.html?buildId=1939410&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Spi] – some tests failed due to infrastructure problem - {{Caused by: java.net.BindException: Address already in use}}

[~Mmuzaf] if all tests passed you can re-issue TC Bot visa and it will be green.

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Hadoop{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1942720]]

{color:#d04437}Platform C++ (Windows x86){color} [[tests 4 TIMEOUT , Out Of Memory Error , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1942747]]
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionExp - 6,0% fails in last 100 master runs.
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionFloor - 6,0% fails in last 100 master runs.
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionLog - 6,0% fails in last 100 master runs.
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionDegrees - 5,0% fails in last 100 master runs.

{color:#d04437}PDS (Direct IO) 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1942756]]
* IgnitePdsNativeIoTestSuite: IgnitePdsDestroyCacheTest.testDestroyCachesAbruptly - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1942804&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~dpavlov], [~DmitriyGovorukhin],

In general, I don't think that it's possible to get clear TC Bot visa on such PRs. I've noticed that if TC agents are under the pressure we will get failure suites more often.

But, test {{IgnitePdsDestroyCacheTest.testDestroyCachesAbruptly}} *definitely failed due to my changes*. It's flaky - [the next PDS (Direct IO) 1|https://ci.ignite.apache.org/viewLog.html?buildId=1942756] is OK here. Probable cause – we remove cache configuration from the store before writing checkpoint end marker, so on binary restore, we will get an exception with missing cache descriptor and it's not happened at the master branch due to getting cache descriptors after joining node to the cluster. 

I need some time to investigate the original cause.

[PDS (Direct IO) 1 - #3660 (26 Sep 18 09:37)|https://ci.ignite.apache.org/viewLog.html?buildId=1945365&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_PdsDirectIo1] -- all tests passed

Folks,

I've found the cause. The main problem with `flakiness` is that even `waitForCheckpoint` completes unsuccessfully (e.g. InterruptedException occurs) we only log this exception and delete cache group descriptor anyway. That's why at the restore binary state on node startup we've got {{testDestroyCachesAbruptly}} failure. I think we should restore only that caches we have at node start. PR fixed according to this assumption.

{code:java|title=GridCacheProcessor:2333}
            try {
                sharedCtx.database().waitForCheckpoint("caches stop");
            }
            catch (IgniteCheckedException e) {
                U.error(log, "Failed to wait for checkpoint finish during cache stop.", e);
            }
{code}

I've merged PR with the latest changes of master branch and resolve all conflicts. Suppose, the IGNITE-9419 issue affects my branch and I've got some tests to hang at the moment of exchange future done.

I need to investigate this case, sorry. I'll back to you soon.

[~mcherkas]

Are we expecting this change to be included in 2.8 release? 
I would like to include this change in the 2.7 release and I will do everything possible for it.

I think we almost did this change, no reason to move it to 2.8. Am I missing something?

Folks,

I've found problem commit. With reverting IGNITE-8559 in my local PR all tests start to pass.
I will investigate it.

Hello,

I've had the private discussion with Dmitry G. and we've agreed that the {{MemoryRecoveryRecord}} not used anymore. 
I will deprecate it for future releases. The whole code simplified according to this assumption.

Re-run TC.

[~Mmuzaf] are any updates here?

[~zstan]

Yes, I'm working on fixing .NET tests. Changes will be ready within the next day or two.

https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_PlatformNet&branch_IgniteTests24Java8=pull%2F4520%2Fhead&tab=buildTypeStatusDiv

Folks,

I've had flaky `JVM crashed` on my PR branch on TC. Can't reproduce it locally.
I will fix it and back to you soon, hopefully before code freeze.

||Result||Changes||Started||
|Tests failed: 1 (1 new), passed: 1765, ignored: 35, muted: 2|No changes|07 Oct 18 18:33|
|JVM crashed; tests passed: 679, ignored: 9, muted: 2|No changes|07 Oct 18 18:18|
|JVM crashed (new); tests passed: 679, ignored: 9, muted: 2|No changes|07 Oct 18 18:09|
|Tests passed: 1766, ignored: 35, muted: 2|No changes|07 Oct 18 18:09|
|Tests failed: 1 (1 new), passed: 1765, ignored: 35, muted: 2|Maxim Muzafarov (2)|07 Oct 18 17:46|

Please check if it is not the same problem as in [IGNITE-5555]. If it is same tests affected, probably there is nothing to worry about.

Sorry, folks.

I  have to move the issue to 2.8 release. I can't find the cause of JVM crash happened after merge lates changes with the master branch in .NET test {{TestBaselineTopology}}. I will spend all my time to fix this issue.

Folks,

I've found the cause of JVM crash. I will prepare the final TC-run review by myself.
Probably, the changes will be ready tomorrow.

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Hadoop{color} [[tests 0 Out Of Memory Error , Exit Code , [Artifacts publishing failed] |https://ci.ignite.apache.org/viewLog.html?buildId=2095530]]
* HadoopMapReduceErrorResilienceTest.testRecoveryAfterAnError0_Error (last started)

{color:#d04437}_Javadoc_{color} [[tests 0 Exit Code , BuildFailureOnMessage |https://ci.ignite.apache.org/viewLog.html?buildId=2095534]]

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2090960&amp;buildTypeId=IgniteTests24Java8_RunAll]

Folks,

The TC build looks good. Both of these suites constantly failing in the master branch.

[~DmitriyGovorukhin], [~Jokser]

Can you review my changes, please?

[~Mmuzaf] [~DmitriyGovorukhin] Changes look good to me. Ready to merge.

Folks,

I've resolved conflicts with the master branch. I've added new test -- we have to reset {{lastAbsArchivedIdx}} on BLT changed.

Folks,

I've resolved conflicts again due to new commits in the master branch.
Re-run TC.

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Inspections (AOP){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2125157]]

{color:#d04437}Inspections (Core){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2125284]]

{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2125286]]
* IgniteSqlSplitterSelfTest.testIndexSegmentationPartitionedReplicated (last started)

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2122988&amp;buildTypeId=IgniteTests24Java8_RunAll]

I've merged the latest changes from the master branch.

It seems to me that everything is OK. The blockers mentioned by TCBot visa currently fail in the master branch too.

Guys,

We've got another conflict with the master branch. I've merged the changes but need to recheck the whole tests. It will take some time.

[~Mmuzaf] Thanks, I try to help you with failed tests.

{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2164249&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~Mmuzaf] Thanks for great work, merged changes to master.

Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4520


