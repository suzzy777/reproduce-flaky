See also [IMPALA-6914]

So far this is what i have found:
every query either unregisters or is canceled. If it unregisters, a log line is printed and since it also calls CancelInternal, a cancel log line is also printed with the same query_id. The test fails in teardown where it initiates an explicit cancel, and the only way that query id does not exist is for that query to already be canceled or unregistered. The only query_id that had 2 log lines of Cancel() and one of Unregister() was 244ae481c70793b2:b5400e5300000000. Looking at the impalad Logs we find :
{noformat}
03:08:07.553206 23756 impala-server.cc:1142] UnregisterQuery(): query_id=244ae481c70793b2:b5400e5300000000
03:08:07.553220 23756 impala-server.cc:1249] Cancel(): query_id=244ae481c70793b2:b5400e5300000000
03:08:07.556561 29104 impala-server.cc:1249] Cancel(): query_id=244ae481c70793b2:b5400e5300000000
{noformat}
This means the second cancel was called very close to the first = 3341 microseconds. Now looking at how the test is written the thread that ran this query periodically checks if the admission phase is passed, and it sleeps for 50000 microseconds before trying again. Also, the test log shows that it never passed client.wait_for_admission_control(self.query_handle), this means the thread never got a chance to wake up and finish handling the query, so it should already be holding the thread lock. However, at the same time teardown() somehow got hold of that thread's lock and tried canceling the query. Not sure how this is possible unless python has some bug in its thread sync primitives.

Commit 75ec9336e04d0fce0ac30963108c967dfeec771f in impala's branch refs/heads/master from Bikramjeet Vig
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=75ec933 ]

IMPALA-8202: Add more logging to TestAdmissionControllerStress

This change adds some logging and fixes a bug where the string
match that identified a timeout was wrong. The added logging
would provide more information about the state to help diagnose
root cause for IMPALA-8202.

Change-Id: Ib62cefac0dc53da0a9f26fdd959975deafc70c8f
Reviewed-on: http://gerrit.cloudera.org:8080/12829
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Commit 75ec9336e04d0fce0ac30963108c967dfeec771f in impala's branch refs/heads/master from Bikramjeet Vig
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=75ec933 ]

IMPALA-8202: Add more logging to TestAdmissionControllerStress

This change adds some logging and fixes a bug where the string
match that identified a timeout was wrong. The added logging
would provide more information about the state to help diagnose
root cause for IMPALA-8202.

Change-Id: Ib62cefac0dc53da0a9f26fdd959975deafc70c8f
Reviewed-on: http://gerrit.cloudera.org:8080/12829
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Saw teardown() fails with "Invalid or unknown query handle" in TestAdmissionControllerStress.test_admission_controller_with_configs in a recent broken build impala-cdpd-master-exhaustive-release

Error Message
test setup failure

Stacktrace
{code:java}
custom_cluster/test_admission_controller.py:1436: in teardown
    client.cancel(thread.query_handle)
common/impala_connection.py:215: in cancel
    return self.__beeswax_client.cancel_query(operation_handle.get_handle())
beeswax/impala_beeswax.py:368: in cancel_query
    return self.__do_rpc(lambda: self.imp_service.Cancel(query_id))
beeswax/impala_beeswax.py:519: in __do_rpc
    raise ImpalaBeeswaxException(self.__build_error_message(b), b)
E   ImpalaBeeswaxException: ImpalaBeeswaxException:
E    INNER EXCEPTION: <class 'beeswaxd.ttypes.BeeswaxException'>
E    MESSAGE: Invalid or unknown query handle
{code}


[~bikramjeet.vig]it looks like this is still happening every few months. Should we do anything further?

Commit b97c9e796689dc114fd8f1ceaf037f1364242ce3 in impala's branch refs/heads/master from Bikramjeet Vig
[ https://gitbox.apache.org/repos/asf?p=impala.git;h=b97c9e7 ]

IMPALA-8202: Extend query timeout for test_mem_limit

With the current timeout set to 1 sec, we saw flaky failure where
the query timed out due to client inactivity. This can happen if
the thread keeping it alive fails to execute a fetch within the
query timeout period. This patch attempts to fix this flakiness
by increasing the timeout period.

Testing:
Looped the test locally.

Change-Id: Ic02f73bea528af12053043e0a57b4158532833b4
Reviewed-on: http://gerrit.cloudera.org:8080/16774
Reviewed-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>
Tested-by: Impala Public Jenkins <impala-public-jenkins@cloudera.com>


Seen it again in a new exhaustive release build.

*Error details*

test setup failure

*Stack trace*

custom_cluster/test_admission_controller.py:1425: in teardown
 client.cancel(thread.query_handle)
common/impala_connection.py:215: in cancel
 return self.__beeswax_client.cancel_query(operation_handle.get_handle())
beeswax/impala_beeswax.py:369: in cancel_query
 return self.__do_rpc(lambda: self.imp_service.Cancel(query_id))
beeswax/impala_beeswax.py:520: in __do_rpc
 raise ImpalaBeeswaxException(self.__build_error_message(b), b)
E ImpalaBeeswaxException: ImpalaBeeswaxException:
E INNER EXCEPTION: <class 'beeswaxd.ttypes.BeeswaxException'>
E MESSAGE: Invalid or unknown query handle: 2b42814779219000:4e9b82ce00000000.

This seems happen quite consistently in exhaustive-release tests after IMPALA-9856 gets in.

 
{code:java}
custom_cluster/test_admission_controller.py:1435: in teardown
    client.cancel(thread.query_handle)
common/impala_connection.py:215: in cancel
    return self.__beeswax_client.cancel_query(operation_handle.get_handle())
beeswax/impala_beeswax.py:369: in cancel_query
    return self.__do_rpc(lambda: self.imp_service.Cancel(query_id))
beeswax/impala_beeswax.py:520: in __do_rpc
    raise ImpalaBeeswaxException(self.__build_error_message(b), b)
E   ImpalaBeeswaxException: ImpalaBeeswaxException:
E    INNER EXCEPTION: <class 'beeswaxd.ttypes.BeeswaxException'>
E    MESSAGE: Invalid or unknown query handle: c5464af33310daea:09cdca9800000000.
{code}
 

 

[~rizaon] may help me solve two questions：

[https://issues.apache.org/jira/projects/IMPALA/issues/IMPALA-10567?filter=allopenissues]

https://issues.apache.org/jira/browse/IMPALA-10575

 

The recent re-opening of this issue is due a separate problem which is tracked in IMPALA-10596 

