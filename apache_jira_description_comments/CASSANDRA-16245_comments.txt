[~zvo], I'll write up the Gherkin files with the test scenarios so that you can implement the test steps.
As agreed upon, we can work in a separate repo for initial devs and integrate the code into the Cassandra repo once we have something to show.

 

Dev repo was created here for anyone interested: https://github.com/riptano/cassandra-rtest

Hi [~zvo], 

Awesome stuff so far!

I've pushed a GitHub Actions workflow which spins up/tears down a 3 node cluster in AWS using m5ad.xlarge instances (4 vCPUs, 16G RAM and 150GB of direct attached storage).
They provide a 140GB SSD drive which is mounted as {{/var/lib/cassandra}} by tlp-cluster.
Let's start with a dataset of 100GB per node for our testing, which should be good enough for now.

The test suite needs to be adjusted to target the "real" cluster instead of a ccm one, and tlp-cluster provides environment variables with each node's public IP in the {{env.sh}} file ({{source env.sh}} sets the variables along with the other tlp-cluster aliases).

Could you rename the branch you're working on to {{CASSANDRA-16245}}?

Let me know if you have what you need to move this forward.

Status update:

The test scenarios described in this ticket were implemented and are now scheduled for [nightly runs in CircleCI|https://app.circleci.com/pipelines/github/riptano/cassandra-rtest?branch=trunk] against trunk.

We had to reduce the density per node to 20GB for now as the tests take a while to run already. We may generate additional data without adding more entropy to see how that impacts the execution times.

[One last PR|https://github.com/riptano/cassandra-rtest/pull/4] is waiting to be merged to fix the code style and use the Cassandra code conventions, and also complement the push triggered CI runs with the CCM based test scenarios which are used for development purposes.

[~vinaykumarcse], are you still willing to do a review on the code? I guess it can wait until we get a consensus on whether we integrate this repair test to the Cassandra repo or not, but I'd be happy to get your feedback already.

 

This is great! [~adejanovski] I see that the last PR mentioned above has been merged.

Is there anything left on this ticket?

Thanks [~cscotta]!

We're done with this ticket.
There was some instability in the CI runs lately due to CASSANDRA-16478 which was fixed with CASSANDRA-16480 and it seems like it's passing nicely since then.

Does this need a reviewer as stated in the weekly progress report or it is ready to be closed? 

[~e.dimitrova], this work hasn't been formally reviewed.

There's some flakiness [in the CI runs|https://app.circleci.com/pipelines/github/riptano/cassandra-rtest?branch=trunk] which is due to Medusa and S3 transient failures in downloads. This is being addressed in Medusa itself and should be fixed shortly [with this PR|https://github.com/thelastpickle/cassandra-medusa/pull/295].

It would be good to have someone validate that the test scenarios were implemented according to the description in order to close this ticket.

Then we'll work on having this work integrated into Cassandra (or as a subproject) post-4.0.

Thank you for your quick response and all the work [~adejanovski].

Then we will find a reviewer soon. 

