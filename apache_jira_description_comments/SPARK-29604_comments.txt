I've figured out the root cause and have a patch. Will submit a patch soon. I may need some more time to craft a relevant test.

This is resolved via https://github.com/apache/spark/pull/26258

This lands at `branch-2.4` via https://github.com/apache/spark/pull/26316 .

BTW, [~kabhwan]. Could you check the old version (at least `2.3.x`) and update `Affects Version/s:`, too?

I think it doesn't apply to branch-2.3 as the root issue is more alike lazy initialization of streaming query listeners and there's no configuration for registering streaming query listeners in Spark 2.3. (only API)

Thank you so much for confirming, [~kabhwan]!

The newly added test case seems to be flaky in `SBT Hadoop 3.2` build. Could you check that?

- https://amplab.cs.berkeley.edu/jenkins/view/Spark%20QA%20Test%20(Dashboard)/job/spark-master-test-sbt-hadoop-3.2/676/testReport/org.apache.spark.sql.hive.thriftserver/SparkSQLEnvSuite/SPARK_29604_external_listeners_should_be_initialized_with_Spark_classloader/history/

[~dongjoon]
Do we have any annotation/trait to "isolate" running test suite? I'm suspecting session, or listeners in session is being modified from other tests running concurrently.

Unfortunately, I don't know~ 

The session theory makes sense to me.

In addition to that, according to the log, if some test fails, this test suite seems to fail together.
- https://amplab.cs.berkeley.edu/jenkins/view/Spark%20QA%20Test%20(Dashboard)/job/spark-master-test-sbt-hadoop-3.2/682/testReport/junit/org.apache.spark.sql.hive.thriftserver/SparkSQLEnvSuite/SPARK_29604_external_listeners_should_be_initialized_with_Spark_classloader/history/

please see `SBT Hadoop-3.2` Jenkins job.

I've manually ran the test suite locally (single run) and it passed 3 times sequentially.

{code}
$ java -version
openjdk version "11.0.2" 2019-01-15
OpenJDK Runtime Environment 18.9 (build 11.0.2+9)
OpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)
{code}

{code}
$ build/sbt "hive-thriftserver/testOnly *.SparkSQLEnvSuite" -Phadoop-3.2 -Phive-thriftserver
...
[info] SparkSQLEnvSuite:
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/Users/jlim/WorkArea/ScalaProjects/spark/common/unsafe/target/scala-2.12/spark-unsafe_2.12-3.0.0-SNAPSHOT.jar) to constructor java.nio.DirectByteBuffer(long,int)
WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[info] - SPARK-29604 external listeners should be initialized with Spark classloader (2 minutes, 26 seconds)
[info] ScalaTest
[info] Run completed in 2 minutes, 30 seconds.
[info] Total number of tests run: 1
[info] Suites: completed 1, aborted 0
[info] Tests: succeeded 1, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.
[info] Passed: Total 1, Failed 0, Errors 0, Passed 1
[success] Total time: 319 s, completed Oct 31, 2019, 4:30:34 PM
{code}

Maybe I should add this suite to `testsWhichShouldRunInTheirOwnDedicatedJvm` - I cannot find any other way to isolate the test suite.

Thank you for keeping working on this.
Yes. It passed locally. That's the reason why I didn't revert this patch until now.
But, we are on 3.0.0-preview voting. In the worst case, we need to revert this.


