At one point it looks like the test was flaky, for example https://ci-beam.apache.org/job/beam_PostCommit_Python37/4889/ is passing, while https://ci-beam.apache.org/job/beam_PostCommit_Python37/4887/ is failing. 
Recent runs are permared.

Has been failing for almost 2 weeks now.

hey [~chamikara], do you think you could help find the owner for this? I took a quick look and couldn't see an obvious culprit.

https://pypi.org/project/google-cloud-spanner/#history had a release February 7; I am seeing failures starting Feb 17.

Failure seems to be related to the metric update call here: https://github.com/apache/beam/blob/d9d3c93c69c04c132310fe70be0ac243757460f7/sdks/python/apache_beam/io/gcp/experimental/spannerio.py#L1251

[~ningk] will you be able to check ?

Just looking at the code, the only feasible execution route to cause the error is when some bundle is empty.

 

Additionally, the [self.service_metric.call('ok')|https://github.com/apache/beam/blob/master/sdks/python/apache_beam/io/gcp/experimental/spannerio.py#L1251] is misplaced.

The batched write to spanner is batched for a database not for a table.

So to export `_table_metric`, the metric exporter needs to be built for each element of the batch and invoked for each element instead of once per batch.

 

A single `table_metric` is meaningless here since the batch write is done for the database. A good way is to build a set of table metrics for each table mutated but only count +1 for each service call since it's batched.

 

Additionally, as a context manager, the batch only commits when there is [no error|https://github.com/googleapis/python-spanner/blob/main/google/cloud/spanner_v1/batch.py#L195]. So the inner ValueError and any other potential errors would not cause a corrupted state. We shall update the count+1 for failed service call for each service_metric too.

