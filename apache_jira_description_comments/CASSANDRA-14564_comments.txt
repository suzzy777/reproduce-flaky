Looks like the behaviour your seeing is because Cassandra's running with assertions turned off (It's recommended they are left on even in production environments for C*). Because non-dense compact storage columns are implemented as static columns in the new engine, with assertions turned on you would have seen an assertionError from {{org/apache/cassandra/db/CompactTables.java:67}} when trying to add a non-static column. I've had a quick a look and haven't seen any reason why we couldn't add new static columns to such a table. Haven't had a chance to run the full test suite but here's a patch to transparently make the new column static. I figure it's ok to keep that transparent to the user rather than requiring them to add the {{static}} keyword since these columns aren't listed as static anywhere else.  
||C* 3.11||
|[PoC Patch|https://github.com/vincewhite/cassandra/commit/88d432f349fdd49517352987b587dbf1354fcdd8]|

[~VincentWhite] as mentioned in CASSANDRA-13920 we do not allow adding columns to other type of COMPACT tables. It makes more sense to me to go for the solution sugested in CASSANDRA-13920 which is to reject the statement as invalid, specially considering that COMPACT tables are now deprecated.
Are you interested in providing a patch for it?

As I did not get any feedback. I will remove the assigned an mark the ticket as LHF for newcomers to pick it up if they are interested. 

Hi [~blerer],

Vincent is not longer with us in the company so I guess he is not going to deliver this anytime soon.

I have fixed it here: [https://github.com/apache/cassandra/pull/1145] (I ll test that afterwards)

Would you like to take a look?

One question I have, that case starts with "if it is dense then ..." with an exception message which is actually more suitable for this situation we are trying to solve, is that some kind of a legacy?

Next, this description of the solution in the descripion of this ticket confused me a little bit:

... attempts to add a regular column to a a COMPACT TABLE without clustering columns ....

if I did if (meta.isCompactTable && meta.clusteringColumns().isEmpty) throw ...

on the model example it has not worked so I guess just mere checking on meta.isCompactTable() should be enough ...

[https://github.com/instaclustr/cassandra/tree/CASSANDRA-14564]

[https://github.com/instaclustr/cassandra/tree/CASSANDRA-14564-3.11]

[https://github.com/instaclustr/cassandra/tree/CASSANDRA-14564-4.0]

[https://github.com/instaclustr/cassandra/tree/CASSANDRA-14564-trunk]

Hi [~stefan.miklosovic], 

Thanks for taking over the patch and sorry for the delay of my response. A {{dense}} table is a compact table without clustering columns (see  [here|https://github.com/instaclustr/cassandra/blob/ce7b54a37a2aca7fe2da2f04a425a5c282574443/src/java/org/apache/cassandra/cql3/statements/CreateTableStatement.java#L277]). By consequence, you can simply replace {{if (meta.isDense()) by {{if (meta.isCompactTable())}}. 

Thanks Benjamin, that is easy to fix. I will get back to you rather shortly.

[~blerer] work is in same 4 branches as above
CI builds (in progress as of now)
3.11 https://ci-cassandra.apache.org/view/patches/job/Cassandra-devbranch/1048/
4.0 https://ci-cassandra.apache.org/view/patches/job/Cassandra-devbranch/1049/
trunk https://ci-cassandra.apache.org/view/patches/job/Cassandra-devbranch/1050/
3.0 https://ci-cassandra.apache.org/view/patches/job/Cassandra-devbranch/1051/

Thanks Stefan, the patches look good. Feel free to commit if the CI results are good.  

I am not completely sure about the test results, I ll try to debug it more. I am not sure if it is just flaky or I introduced some regression.

