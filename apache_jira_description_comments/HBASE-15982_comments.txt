Here's what happens if you move {{guava.version}} up to 14.0.1, for example:

hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityReplicationEndpoint.java:42,7 error: VisibilityReplicationEndpoint is not abstract and does not override abstract method addListener(Listener,Executor) in Service

hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityReplicationEndpoint.java:42,7 error: VisibilityReplicationEndpoint is not abstract and does not override abstract method failureCause() in Service

(0.98.20)

Representative of the problem every replication endpoint plugin will face, repeatedly, as we shift Guava versions around.

We've done the RE as a guava service, because our {{Service}} class is half-finished: 
{code}
// This is a WIP. We have Services throughout hbase. Either have all implement what is here or
// just remove this as an experiment that did not work out.
// TODO: Move on to guava Service after we update our guava version; later guava has nicer
// Service implmentation.
// TODO: Move all Services on to this one Interface.
@InterfaceAudience.Private
public interface Service {
{code}

I still want to use Guava as our long term Service interface, because the interface it pretty well defined. However, maybe we can wrap it so that RE is not exposed to it directly. 

bq. maybe we can wrap it so that RE is not exposed to it directly.

This would work

How tolerant are we of a one time change in the inheritance hierarchy of LP(coproc) interface ReplicationEndpoint ?

No problem to commit to branch-1 and master. For 1.3 it's possible, depends if [~mantonov] is still accepting latecomers. For 0.98 we can also do it as each 0.98.x is a minor release. Branches 1.2 ([~busbey]) and 1.1 ([~ndimiduk]) would be out, I presume. 

Yeah, I would be opposed to such a change on branch-1.1.

At this point I'd say- let's just not make it on 1.3. 

New good changes come in every day, but just at some point we have to draw the line in the sand and say that from now on - sorry, let's make no changes before the RC but critical fixes plus patches needed to stabilize the branch (test fixes, broken/flaky tests etc).

Since it's only LP interface I suppose it doesn't justify it to be critical, but please correct me if I'm missing something.

Ok, then the current set of fix versions is good

Here's a new wrinkle. Now that we've banned jsr305, some versions of Guava cannot be used because they cause a compilation failure at ReplicationEndpoint:
{noformat}
[ERROR] .m2/repository/com/google/guava/guava/14.0.1/guava-14.0.1.jar
    (com/google/common/util/concurrent/AbstractService.class): warning:
    Cannot find annotation method 'value()' in type 'GuardedBy': class
    file for javax.annotation.concurrent.GuardedBy not found
{noformat}


bq. I still want to use Guava as our long term Service interface, because the interface it pretty well defined. However, maybe we can wrap it so that RE is not exposed to it directly.

It might be difficult indeed to use Guava as the basis for our Service interface if it embeds a requirement for a Category X dependency.

We harmonize on Guava 14 for internal builds after finding something that works across HDFS, HBase, Hive, Spark, and others. It's easy to revert the jsr305-findbugs ban on an internal build but that won't be a workable solution upstream. 

bq. However, maybe we can wrap it so that RE is not exposed to it directly.

It doesn't look like we can 'wrap it' because Guava Service methods return Guava State enums and Guava Service; can't intercept and return our 'State' enum instead in an Interface; ditto Service.

Copy/paste Guava Service 0.12 into RE and undoing the extend Service is awkward because the old Guava Service depends on other Guava classes throwing Exceptions that are from Guava util/concurrent and returning Guava ListenableFuture.

So, it looks like 2.0.0 has to break RE if we are to undo Guava types from its API (in fact its already 'broke' since our move to relocated hbase-thirdparty guava).

Regards our internal half-done Service, it is a poor shadow of Guava Service, even of Service 0.12, nvm the current 0.22. 0.22 is nicely contained though compared to 0.12 with its dependence on other classes.

Internally for 'Services', we could use our relocated 0.22 guava Service. Would be fine presuming all implementations @private/internal.

RE is LimitedPrivate. It needs some form of 'Service' that can be used semi-publicly. The 0.22 Guava Service is nice but the Listener support is OTT for our needs. Let me just copy/paste it as our internal Service.

RE is broke unless we stay on Guava 0.12 until the end of time. We can't stay on Guava 0.12 because others on our CLASSPATH won't abide. The Guavas will clash. I can't copy the 0.12 Guava classes to our codebase (we actually expose Guavas AbstractService implementation in BaseReplicationEndpoint so there'd be a bunch), and they'd be in a different package so implementations are broke. RE is broke in 2.0.

Let me take advantage of the breakage to redo RE Interface. Let me try and dredge up what folks wanted of our RE.

Meantime .001 is a proposal, a first cut. It adds minimum methods from Guava Service; start/stop/isRunning/wait. It also takes BaseReplicationEndpoint Private when it was LimitedPrivate in branch-1; BRE is an implementation that extends Guava AbstractService exposing it as part of our API. Implementators might want do implementation otherwise. They don't need AbstractService given the limited subset of methods carried over from Service to RE. I probably need to bring stuff from BRE back to RE.

Attempts at keeping the hierarchy where RE implemented a 'Service' that tried to proxy to Guava Service I couldn't make work; our RE implementations use Guava AbstractService and making the types agree failed (States, Guava's Service vs our Service). In our RE we have isRunning, etc., but start/stop instead of startAsync/stopAsync as it is in Guava; semantic is same but names had to be different so could proxy calls to the backing Guava implementations.

Regards our own half-done o.a.h.h.Service, lets just remove it and use Guava Service internally.





| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  4m  1s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 52s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 17s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 32s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 35m 37s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}114m 22s{color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 16s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}167m 16s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.io.asyncfs.TestSaslFanOutOneBlockAsyncDFSOutput |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-15982 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12880842/HBASE-15982.master.001.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 86efd8a5548f 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 0339068 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC3 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/7980/artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/7980/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/7980/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



+1

.003 is cleanup. More convinced that this the way to go going forward; i.e. no fancy Service stuff in ReplicationEndpoint, just simple start/stop stuff. Let me look see at Replication Interface changes wanted elsewhere to see if can integrate as part of this breaking change before 2.0.

HBASE-10504 is the replication redo JIRA. It is an oldie that has stalled. Its a big job. Trying to revive it. Might be best to just commit this as is and attack HBASE-10504 separately.

| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 26s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 57s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 47s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 15s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 28s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 30s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 33m  5s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}151m 19s{color} | {color:red} hbase-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 17s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}202m  8s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.security.visibility.TestVisibilityLabelsReplication |
|   | hadoop.hbase.security.access.TestCoprocessorWhitelistMasterObserver |
|   | hadoop.hbase.security.visibility.TestVisibilityLabelReplicationWithExpAsString |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.03.0-ce Server=17.03.0-ce Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-15982 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12883193/HBASE-15982.master.003.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 8b404cc5012a 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 51d4588 |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC3 |
| unit | https://builds.apache.org/job/PreCommit-HBASE-Build/8244/artifact/patchprocess/patch-unit-hbase-server.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8244/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8244/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



.004 fixes unit test failings.

| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 16s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} hbaseanti {color} | {color:green}  0m  0s{color} | {color:green} Patch does not have any anti-patterns. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 54s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 47s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 51s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 19s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 12s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 33s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} hadoopcheck {color} | {color:green} 34m 21s{color} | {color:green} Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}104m 43s{color} | {color:green} hbase-server in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 16s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}155m 37s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-15982 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12883496/HBASE-15982.master.004.patch |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux d3d43d71fa4f 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 25ee5f7 |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC3 |
|  Test Results | https://builds.apache.org/job/PreCommit-HBASE-Build/8280/testReport/ |
| modules | C: hbase-server U: hbase-server |
| Console output | https://builds.apache.org/job/PreCommit-HBASE-Build/8280/console |
| Powered by | Apache Yetus 0.4.0   http://yetus.apache.org |


This message was automatically generated.



Pushed to branch-2 and master. Thanks for reviews lads.

FAILURE: Integrated in Jenkins build HBase-2.0 #389 (See [https://builds.apache.org/job/HBase-2.0/389/])
HBASE-15982 Interface ReplicationEndpoint extends Guava's Service (stack: rev ec7bca1769dcd825289e485c331e716df8ee33a1)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ReplicationEndpoint.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationEndpoint.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/BaseReplicationEndpoint.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityReplicationEndpoint.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/client/replication/TestReplicationAdminWithClusters.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationSource.java


FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #3590 (See [https://builds.apache.org/job/HBase-Trunk_matrix/3590/])
HBASE-15982 Interface ReplicationEndpoint extends Guava's Service (stack: rev 6e7baa07f0b1f5841379545acaf23d36f50de2c2)
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/BaseReplicationEndpoint.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ReplicationEndpoint.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationEndpoint.java
* (edit) hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityReplicationEndpoint.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/client/replication/TestReplicationAdminWithClusters.java
* (edit) hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationSource.java


