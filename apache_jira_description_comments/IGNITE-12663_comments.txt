[~ilyak] From my point this restriction will lead to:
- many unexpected failed and frozen tests
- starvations
- impossibility to detect some races

I really don't like this idea.

You always can cut off thread dumps from the log (at least partially).

"You always can cut off thread dumps from the log (at least partially)." - this is very non-trivial to do since JVM will output e.g. epoll() as RUNNABLE [~agura]

I'm not sure why our tests should run with different configuration depending on the machine it is running on. If 3 is bad value, let's discuss it. I still think it should be fixed.

[~ilyak] 3 is pretty good number. But we don;t talk about numbers )

There are many tools that simplify thread dump analysis. E.g. Idea collapse similar threads into groups. If scrolling is problem for you just use quick navigation with patterns. I believe grep, sed and thread dump analysis tools will help you. There is no need to change code for it.

[~agura] Actually, Idea is very awful at presenting thread dumps. You can't search threads by name, and it keeps resetting your select to first thread. And the default JVM thread dump just dumps them all to console, without any filtering. In Idea you can't even save program output to file. It's unusable currently. 

I have faced the rebalance thread pool issue - it's 4 by default, and system pool has to be bigger. This makes the change almost useless, but I will still take a look where we can get it to.

{panel:title=Branch: [pull/7429/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5050920&amp;buildTypeId=IgniteTests24Java8_RunAll]

[~ilyak] we need i.e. some kind of starvations in common tests coverage, does this fix not a simple masquerade of such a problems?

[~zstan] I'm not sure I understand your question. If we need some additional tests, let's write them.

This commit fixes no tests, it just makes our test runs more predictable.

{panel:title=Branch: [pull/7429/head] Base: [refs/heads/master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All (Nightly)* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5060542&amp;buildTypeId=IgniteTests24Java8_RunAllNightly]

my point is to not have predictable but real life scenario here.

I think that having 5 size thread pools + 8 size striped pools is a realistic scenario. What do you think?

[~ilyak]

"system pool has to be bigger" - it looks like a bug. This validation check can be safely removed.

I think this change is of questionable value. Running tests with various thread pool sizes adds more possibilities to detect races.

[~ascherbakov] I think that we should add explicit tests for varying thread pool sizes, if you think that's important.

I don't see any value if test will be flaky depending on the hardware configuration. It would doubtfully lead to any fixes, but may lead to false negatives - ignored failures in flaky suites.

[~ilyak]

I would left all as it is. Lowering a number of threads can hide existing flaky tests.

Will also make development much more pleasant. Currently, sifting through all the threads on thread dump is a nuisance (and Idea's grouping does not help at all).

