Looks like the flake happens when the entire input is re-read.
We inject 4 elements to Kafka before the first run, and 2 more before the second. When all is well, printing the number of elements read by SparkUnboundedSource's {{readUnboundedStream}} JavaDStream says 4 (sometimes 1 followed by 3) in the first run, and 2 in the second, but in failures, it reads 6 in the second.
This would happen if the checkpoint of the readers are not persisted for some reason causing the KafkaIO to use the default "earliest" and so read everything.
This happens even though checkpoint interval is batch interval. I will check if there's a way to guarantee/block on checkpointing.

Could be related to SPARK-14701 and/or SPARK-14930 so that the {{CheckpointMark}} is not properly checkpointed.
If for some reason the runtime environment was so slow it failed to start execution until timeout was hit, graceful stop would force to at least finish the first batch, and if this first batch included the read from Kafka on one hand, while failing to checkpoint the {{Reader}} mark on the other, resuming from checkpoint would read all the Kafka back log again causing the failures we see.

I'll have a look at failed tests execution time to figure out if that seems to be the case, and if so I will simply move this test to post commit because This issue in Spark was only resolved for v2.0

GitHub user amitsela opened a pull request:

    https://github.com/apache/beam/pull/2159

    [BEAM-1582, BEAM-1562] Stop streaming tests on EOT Watermark.

    Be sure to do all of the following to help us incorporate your contribution
    quickly and easily:
    
     - [ ] Make sure the PR title is formatted like:
       `[BEAM-<Jira issue #>] Description of pull request`
     - [ ] Make sure tests pass via `mvn clean verify`. (Even better, enable
           Travis-CI on your fork and ensure the whole test matrix passes).
     - [ ] Replace `<Jira issue #>` in the title with the actual Jira issue
           number, if there is one.
     - [ ] If this contribution is large, please file an Apache
           [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.txt).
    
    ---


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/amitsela/beam stop-streaming-tests

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/beam/pull/2159.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2159
    
----
commit 2faeb449d727ccfdc0aeabc9fc78cbeee5ff0dc3
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:04:02Z

    Test runner to stop on EOT watermark, or timeout.

commit 18fa962cf3d5fb676bb8f94adecf02a5086d6cfb
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:05:25Z

    Remove timeout since it is already a pipeline option.

commit c7f4c2c3c0cddf8c357fb202dfedddb0bf9f6335
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:07:16Z

    Advance to infinity at the end of pipelines.

commit 0c57773985f8610dd3df2eec00e3dba5f32b00c3
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:07:59Z

    Add EOT watermark and expected assertions test options.

commit 5d6c3688f0840bc1a17272b078ba128a71233553
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:09:38Z

    SparkPipelineResult should avoid returning null, and handle exceptions better.

commit eb841f01bab6ead2ba68f866591a85995989943b
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:11:36Z

    Make ResumeFromCheckpointStreamingTest use TestSparkRunner and stop on EOT watermark.

commit 71dfaf3bf916dc704328d6e9ea64c33cc3464bec
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T20:08:05Z

    fixup! post-rebase import order.

----


Github user amitsela closed the pull request at:

    https://github.com/apache/beam/pull/2159


GitHub user amitsela opened a pull request:

    https://github.com/apache/beam/pull/2168

    [BEAM-1582, BEAM-1562] Stop streaming tests on EOT Watermark.

    Be sure to do all of the following to help us incorporate your contribution
    quickly and easily:
    
     - [ ] Make sure the PR title is formatted like:
       `[BEAM-<Jira issue #>] Description of pull request`
     - [ ] Make sure tests pass via `mvn clean verify`. (Even better, enable
           Travis-CI on your fork and ensure the whole test matrix passes).
     - [ ] Replace `<Jira issue #>` in the title with the actual Jira issue
           number, if there is one.
     - [ ] If this contribution is large, please file an Apache
           [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.txt).
    
    ---


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/amitsela/beam stop-streaming-tests

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/beam/pull/2168.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2168
    
----
commit 7d171bf5a69e6eb3f7ae58343a06c4a48865feaf
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:04:02Z

    Test runner to stop on EOT watermark, or timeout.

commit 899021fa4bf969c93288379bf847dd7c06ec5f09
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:05:25Z

    Remove timeout since it is already a pipeline option.

commit 6b8a37f66cd4a0ca29d5343f3dffbd95202ecb6f
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:07:16Z

    Advance to infinity at the end of pipelines.

commit 909201ae2f1bca762fcdd56c0db3bb1841965b54
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:07:59Z

    Add EOT watermark and expected assertions test options.

commit e4f66dfb13feea93b0b4c797620c3fa9080652f0
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:09:38Z

    SparkPipelineResult should avoid returning null, and handle exceptions better.

commit 73cfebd770fd4b5c6566051172b3e31faaf2c4e9
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T19:11:36Z

    Make ResumeFromCheckpointStreamingTest use TestSparkRunner and stop on EOT watermark.

commit d71207a75ef38dcdbf893fa032753db2875e4d3b
Author: Sela <ansela@paypal.com>
Date:   2017-03-04T20:08:05Z

    fixup! post-rebase import order.

commit 4d1222f2cc653d31bc4cfa5e516af08b5e5e53a6
Author: Sela <ansela@paypal.com>
Date:   2017-03-05T10:52:58Z

    Stop the context and update the state BEFORE throwing the exception.

----


Github user asfgit closed the pull request at:

    https://github.com/apache/beam/pull/2168


This test keeps flaking so I'll leave it open until we resolve it, or move to PostCommit and accept the fact that it flakes at times.

Still happening and failing precommits quite often.

Moved tests that use checkpoint recovery to post-commit. Keeping open since the problem is still there.

Hey [~amitsela] any updates on this one? (cc: [~aviemzur])

AFAIK there is no current solution for this in sight for the near future. [~amitsela] can probably elaborate.
The current workaround was to annotate this test with {{@ValidatesRunner}}.

Is there something we can do here to reduce the impact of the flake?

I'm not quite sure how @ValidatesRunner annotation would help. If we cannot make this one work, perhaps we should disable the test for a little bit.

I don't think we should disable this test as it is a very important one.

In the last 30 builds that Jenkins saves the history for this test has not failed once: https://builds.apache.org/view/Beam/job/beam_PostCommit_Java_ValidatesRunner_Spark/ so I'm not sure why this is such an issue? 

Removing this from 'First Stable Release' for now, if anyone objects please let us know.

(P.S. The {{@ValidatesRunner}} suggestion was so this would run in PostCommit rather than PreCommit so if it ever does flake it won't cause friction for contributors working on something unrelated, but I see this is already the case, this test already runs in PostCommit only using a different annotation {{@UsesCheckpointRecovery}})

+1 -- this makes total sense to me.

[~echauchot] this is a pretty old issue, but I'm triaging sickbay/flake to see what needs attention or closing. Any idea if this is still relevant?

[~kenn] I took a look at the PostCommit history. The last flake of ResumeFromCheckpointStreamingTest was 04/24/18. there was some failures by the end of April and they are all related to 
{code:java}
ERROR org.apache.zookeeper.server.ZooKeeperServer  - ZKShutdownHandler is not registered, so ZooKeeper server won't take any action on ERROR or SHUTDOWN server state changes
 {code}
 IMHO we should not close this ticket because, as [~amitsela] and [~aviemzur] said, there is no fix right now. I think that postponing this ticket as you did is the right choice as it is not a release blocker IMHO (seems related to load). We could take care of it in the future.

Removing the fix version. For 2.11.0 this issue is still open and I am guessing the previous comment still applies. (Please re-add fix version if this is not correct.)

Bumped to P1 based on https://beam.apache.org/contribute/jira-priorities/

[~echauchot] is this still a problem? I don't see any flakes in the history: https://ci-beam.apache.org/job/beam_PostCommit_Java_ValidatesRunner_Spark/lastCompletedBuild/testReport/junit/org.apache.beam.runners.spark.translation.streaming/ResumeFromCheckpointStreamingTest/history/

Hi [~bhulette]. There was a lot of changes in the runner since my last comment in January 2019. So that flake might have been fixed. I propose to close the ticket. We could still re-open it in case it comes back.

Sounds good, thanks!

