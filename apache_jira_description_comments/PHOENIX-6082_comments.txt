FYI [~yanxinyi] [~jisaac] [~tdsilva]

[~ckulkarni] The only diff b/ "ALTER TABLE/VIEW ADD/DROP <col>" and "ALTER TABLE/VIEW SET <props>" I could see was empty vs non-empty stmtProperties in addColumn() [here|https://github.com/apache/phoenix/blob/master/phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java#L3640].

Is that the only diff or I am missing some other(better) differentiator?

virajjasani opened a new pull request #982:
URL: https://github.com/apache/phoenix/pull/982


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


stoty commented on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-731776012


   :broken_heart: **-1 overall**
   
   
   
   
   
   
   | Vote | Subsystem | Runtime | Comment |
   |:----:|----------:|--------:|:--------|
   | +0 :ok: |  reexec  |   1m 18s |  Docker mode activated.  |
   ||| _ Prechecks _ |
   | +1 :green_heart: |  dupname  |   0m  0s |  No case conflicting files found.  |
   | +1 :green_heart: |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
   | +1 :green_heart: |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
   | -1 :x: |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
   ||| _ master Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |  14m 29s |  master passed  |
   | +1 :green_heart: |  compile  |   0m 59s |  master passed  |
   | +1 :green_heart: |  checkstyle  |   1m 16s |  master passed  |
   | +1 :green_heart: |  javadoc  |   0m 45s |  master passed  |
   | +0 :ok: |  spotbugs  |   3m  8s |  phoenix-core in master has 966 extant spotbugs warnings.  |
   ||| _ Patch Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |   9m 19s |  the patch passed  |
   | +1 :green_heart: |  compile  |   0m 57s |  the patch passed  |
   | +1 :green_heart: |  javac  |   0m 57s |  the patch passed  |
   | -1 :x: |  checkstyle  |   1m 15s |  phoenix-core: The patch generated 1 new + 2796 unchanged - 4 fixed = 2797 total (was 2800)  |
   | +1 :green_heart: |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
   | +1 :green_heart: |  javadoc  |   0m 46s |  the patch passed  |
   | +1 :green_heart: |  spotbugs  |   3m 20s |  the patch passed  |
   ||| _ Other Tests _ |
   | -1 :x: |  unit  | 159m 18s |  phoenix-core in the patch failed.  |
   | +1 :green_heart: |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  |
   |  |   | 199m 45s |   |
   
   
   | Subsystem | Report/Notes |
   |----------:|:-------------|
   | Docker | ClientAPI=1.40 ServerAPI=1.40 base: https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/1/artifact/yetus-general-check/output/Dockerfile |
   | GITHUB PR | https://github.com/apache/phoenix/pull/982 |
   | Optional Tests | dupname asflicense javac javadoc unit spotbugs hbaseanti checkstyle compile |
   | uname | Linux de18c8f4b1fe 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux |
   | Build tool | maven |
   | Personality | dev/phoenix-personality.sh |
   | git revision | master / f1a0860 |
   | Default Java | Private Build-1.8.0_242-8u242-b08-0ubuntu3~16.04-b08 |
   | checkstyle | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/1/artifact/yetus-general-check/output/diff-checkstyle-phoenix-core.txt |
   | unit | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/1/artifact/yetus-general-check/output/patch-unit-phoenix-core.txt |
   |  Test Results | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/1/testReport/ |
   | Max. process+thread count | 6167 (vs. ulimit of 30000) |
   | modules | C: phoenix-core U: phoenix-core |
   | Console output | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/1/console |
   | versions | git=2.7.4 maven=3.3.9 spotbugs=4.1.3 |
   | Powered by | Apache Yetus 0.12.0 https://yetus.apache.org |
   
   
   This message was automatically generated.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani opened a new pull request #983:
URL: https://github.com/apache/phoenix/pull/983


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


stoty commented on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-731849421


   :broken_heart: **-1 overall**
   
   
   
   
   
   
   | Vote | Subsystem | Runtime | Comment |
   |:----:|----------:|--------:|:--------|
   | +0 :ok: |  reexec  |   1m  8s |  Docker mode activated.  |
   ||| _ Prechecks _ |
   | +1 :green_heart: |  dupname  |   0m  0s |  No case conflicting files found.  |
   | +1 :green_heart: |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
   | +1 :green_heart: |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
   | -1 :x: |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
   ||| _ master Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |  14m 20s |  master passed  |
   | +1 :green_heart: |  compile  |   1m  2s |  master passed  |
   | +1 :green_heart: |  checkstyle  |   1m 16s |  master passed  |
   | +1 :green_heart: |  javadoc  |   0m 48s |  master passed  |
   | +0 :ok: |  spotbugs  |   3m  7s |  phoenix-core in master has 966 extant spotbugs warnings.  |
   ||| _ Patch Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |   9m  2s |  the patch passed  |
   | +1 :green_heart: |  compile  |   0m 56s |  the patch passed  |
   | +1 :green_heart: |  javac  |   0m 56s |  the patch passed  |
   | -1 :x: |  checkstyle  |   1m 15s |  phoenix-core: The patch generated 1 new + 2796 unchanged - 4 fixed = 2797 total (was 2800)  |
   | +1 :green_heart: |  whitespace  |   0m  1s |  The patch has no whitespace issues.  |
   | +1 :green_heart: |  javadoc  |   0m 46s |  the patch passed  |
   | +1 :green_heart: |  spotbugs  |   3m 21s |  the patch passed  |
   ||| _ Other Tests _ |
   | -1 :x: |  unit  | 158m 10s |  phoenix-core in the patch failed.  |
   | +1 :green_heart: |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  |
   |  |   | 198m  2s |   |
   
   
   | Reason | Tests |
   |-------:|:------|
   | Failed junit tests | phoenix.end2end.ViewTTLIT |
   
   
   | Subsystem | Report/Notes |
   |----------:|:-------------|
   | Docker | ClientAPI=1.40 ServerAPI=1.40 base: https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/2/artifact/yetus-general-check/output/Dockerfile |
   | GITHUB PR | https://github.com/apache/phoenix/pull/982 |
   | Optional Tests | dupname asflicense javac javadoc unit spotbugs hbaseanti checkstyle compile |
   | uname | Linux 82fbfb032567 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux |
   | Build tool | maven |
   | Personality | dev/phoenix-personality.sh |
   | git revision | master / f1a0860 |
   | Default Java | Private Build-1.8.0_242-8u242-b08-0ubuntu3~16.04-b08 |
   | checkstyle | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/2/artifact/yetus-general-check/output/diff-checkstyle-phoenix-core.txt |
   | unit | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/2/artifact/yetus-general-check/output/patch-unit-phoenix-core.txt |
   |  Test Results | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/2/testReport/ |
   | Max. process+thread count | 6216 (vs. ulimit of 30000) |
   | modules | C: phoenix-core U: phoenix-core |
   | Console output | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/2/console |
   | versions | git=2.7.4 maven=3.3.9 spotbugs=4.1.3 |
   | Powered by | Apache Yetus 0.12.0 https://yetus.apache.org |
   
   
   This message was automatically generated.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


stoty commented on pull request #983:
URL: https://github.com/apache/phoenix/pull/983#issuecomment-731932823


   :broken_heart: **-1 overall**
   
   
   
   
   
   
   | Vote | Subsystem | Runtime | Comment |
   |:----:|----------:|--------:|:--------|
   | +0 :ok: |  reexec  |   0m 34s |  Docker mode activated.  |
   ||| _ Prechecks _ |
   | +1 :green_heart: |  dupname  |   0m  0s |  No case conflicting files found.  |
   | +1 :green_heart: |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
   | +1 :green_heart: |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
   | -1 :x: |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
   ||| _ 4.x Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |  11m  8s |  4.x passed  |
   | +1 :green_heart: |  compile  |   0m 56s |  4.x passed  |
   | +1 :green_heart: |  checkstyle  |   1m 40s |  4.x passed  |
   | +1 :green_heart: |  javadoc  |   0m 46s |  4.x passed  |
   | +0 :ok: |  spotbugs  |   2m 55s |  phoenix-core in 4.x has 950 extant spotbugs warnings.  |
   ||| _ Patch Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |   5m 20s |  the patch passed  |
   | +1 :green_heart: |  compile  |   0m 55s |  the patch passed  |
   | +1 :green_heart: |  javac  |   0m 55s |  the patch passed  |
   | -1 :x: |  checkstyle  |   1m 42s |  phoenix-core: The patch generated 2 new + 2791 unchanged - 5 fixed = 2793 total (was 2796)  |
   | +1 :green_heart: |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
   | +1 :green_heart: |  javadoc  |   0m 42s |  the patch passed  |
   | +1 :green_heart: |  spotbugs  |   3m  3s |  the patch passed  |
   ||| _ Other Tests _ |
   | -1 :x: |  unit  | 130m  9s |  phoenix-core in the patch failed.  |
   | +1 :green_heart: |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  |
   |  |   | 163m  8s |   |
   
   
   | Subsystem | Report/Notes |
   |----------:|:-------------|
   | Docker | ClientAPI=1.40 ServerAPI=1.40 base: https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/2/artifact/yetus-general-check/output/Dockerfile |
   | GITHUB PR | https://github.com/apache/phoenix/pull/983 |
   | Optional Tests | dupname asflicense javac javadoc unit spotbugs hbaseanti checkstyle compile |
   | uname | Linux 0dcc3bedb512 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
   | Build tool | maven |
   | Personality | dev/phoenix-personality.sh |
   | git revision | 4.x / e57fcc8 |
   | Default Java | Private Build-1.8.0_242-8u242-b08-0ubuntu3~16.04-b08 |
   | checkstyle | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/2/artifact/yetus-general-check/output/diff-checkstyle-phoenix-core.txt |
   | unit | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/2/artifact/yetus-general-check/output/patch-unit-phoenix-core.txt |
   |  Test Results | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/2/testReport/ |
   | Max. process+thread count | 6612 (vs. ulimit of 30000) |
   | modules | C: phoenix-core U: phoenix-core |
   | Console output | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/2/console |
   | versions | git=2.7.4 maven=3.3.9 spotbugs=4.1.3 |
   | Powered by | Apache Yetus 0.12.0 https://yetus.apache.org |
   
   
   This message was automatically generated.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani commented on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-731958159


   Test failure with `ViewTTLIT.testDeleteFromMultipleGlobalIndexes()` is not relevant, confirmed locally.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani commented on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-732165439


   @ChinmaySKulkarni @yanxinyi could you please take a look?
   Thanks


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


ChinmaySKulkarni commented on a change in pull request #982:
URL: https://github.com/apache/phoenix/pull/982#discussion_r530584372



##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -104,10 +111,30 @@ public void testUpdateCacheForNeverUpdatedTable() throws Exception {
         String tableName = generateUniqueName();
         String fullTableName = INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + tableName;
         Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
+        AtomicBoolean isSysMutexEmpty = new AtomicBoolean(true);
+        ExecutorService executorService = Executors.newFixedThreadPool(5,
+            new ThreadFactoryBuilder().setDaemon(true)
+                .setNameFormat("check-sys-mutex-count-%d").build());
+        Connection connForMutex = DriverManager.getConnection(getUrl(), props);
+        for (int i = 0; i < 5; i++) {
+            executorService.submit(new SystemMutexCaller(isSysMutexEmpty,

Review comment:
       Not a good idea to use the same phoenix connection across multiple threads since it is not thread-safe. 

##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -104,10 +111,30 @@ public void testUpdateCacheForNeverUpdatedTable() throws Exception {
         String tableName = generateUniqueName();
         String fullTableName = INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + tableName;
         Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
+        AtomicBoolean isSysMutexEmpty = new AtomicBoolean(true);
+        ExecutorService executorService = Executors.newFixedThreadPool(5,
+            new ThreadFactoryBuilder().setDaemon(true)
+                .setNameFormat("check-sys-mutex-count-%d").build());
+        Connection connForMutex = DriverManager.getConnection(getUrl(), props);
+        for (int i = 0; i < 5; i++) {
+            executorService.submit(new SystemMutexCaller(isSysMutexEmpty,
+                connForMutex));
+        }
+        Thread.sleep(500);

Review comment:
       What is the sleep for?

##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -269,4 +317,49 @@ public void testInvalidConnUpdateCacheFrequencyShouldThrow() throws Exception {
             }
         }
     }
+
+    /**
+     * Helper Runnable impl class that continuously keeps checking
+     * if SYSTEM.MUTEX contains any record until either interrupted or
+     * provided connection is closed
+     */
+    private static class SystemMutexCaller implements Runnable {
+
+        private final AtomicBoolean isSysMutexEmpty;
+        private final Connection conn;
+
+        public SystemMutexCaller(final AtomicBoolean isSysMutexEmpty,
+                final Connection conn) {
+            this.isSysMutexEmpty = isSysMutexEmpty;
+            this.conn = conn;
+        }
+
+        @Override
+        public void run() {
+            try {
+                while (!Thread.interrupted() && !conn.isClosed()) {
+                    try {
+                        ResultSet resultSet = conn.createStatement().executeQuery(
+                            "SELECT * FROM " + PhoenixDatabaseMetaData.SYSTEM_MUTEX_NAME);

Review comment:
       In case we _do_ end up going this route then, just to be safe, can we query the exact expected row in SYSTEM.MUTEX instead of this query? If this gets run in parallel with any of the upgrade tests (where we acquire an upgrade mutex), your test will fail.

##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -269,4 +317,49 @@ public void testInvalidConnUpdateCacheFrequencyShouldThrow() throws Exception {
             }
         }
     }
+
+    /**
+     * Helper Runnable impl class that continuously keeps checking
+     * if SYSTEM.MUTEX contains any record until either interrupted or
+     * provided connection is closed
+     */
+    private static class SystemMutexCaller implements Runnable {
+
+        private final AtomicBoolean isSysMutexEmpty;
+        private final Connection conn;
+
+        public SystemMutexCaller(final AtomicBoolean isSysMutexEmpty,
+                final Connection conn) {
+            this.isSysMutexEmpty = isSysMutexEmpty;
+            this.conn = conn;
+        }
+
+        @Override
+        public void run() {
+            try {
+                while (!Thread.interrupted() && !conn.isClosed()) {
+                    try {
+                        ResultSet resultSet = conn.createStatement().executeQuery(
+                            "SELECT * FROM " + PhoenixDatabaseMetaData.SYSTEM_MUTEX_NAME);
+                        if (resultSet.next()) {
+                            isSysMutexEmpty.getAndSet(false);

Review comment:
       this can be a simple `set()` since you're not using the returned value right?

##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -269,4 +317,49 @@ public void testInvalidConnUpdateCacheFrequencyShouldThrow() throws Exception {
             }
         }
     }
+
+    /**
+     * Helper Runnable impl class that continuously keeps checking
+     * if SYSTEM.MUTEX contains any record until either interrupted or
+     * provided connection is closed
+     */
+    private static class SystemMutexCaller implements Runnable {

Review comment:
       Perhaps a cleaner way to test this instead of a background thread that continuously queries SYSTEM.MUTEX is to use your own TestQueryServices impl (some tests do this so you can add your code there) and override the `writeMutexCell()` method to make sure if it is called. We can rely on this method since afaik we don't do checkAndPut calls to SYSTEM.MUTEX outside of this API




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani commented on a change in pull request #982:
URL: https://github.com/apache/phoenix/pull/982#discussion_r530623628



##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -104,10 +111,30 @@ public void testUpdateCacheForNeverUpdatedTable() throws Exception {
         String tableName = generateUniqueName();
         String fullTableName = INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + tableName;
         Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
+        AtomicBoolean isSysMutexEmpty = new AtomicBoolean(true);
+        ExecutorService executorService = Executors.newFixedThreadPool(5,
+            new ThreadFactoryBuilder().setDaemon(true)
+                .setNameFormat("check-sys-mutex-count-%d").build());
+        Connection connForMutex = DriverManager.getConnection(getUrl(), props);
+        for (int i = 0; i < 5; i++) {
+            executorService.submit(new SystemMutexCaller(isSysMutexEmpty,

Review comment:
       Makes sense, addressed. Thanks for the suggestion.

##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -269,4 +317,49 @@ public void testInvalidConnUpdateCacheFrequencyShouldThrow() throws Exception {
             }
         }
     }
+
+    /**
+     * Helper Runnable impl class that continuously keeps checking
+     * if SYSTEM.MUTEX contains any record until either interrupted or
+     * provided connection is closed
+     */
+    private static class SystemMutexCaller implements Runnable {

Review comment:
       Nice, that sounds good way for sure. However, do you think keeping this test as is (select queries) might be beneficial based on
   1. Completeness of IT test
   2. If by any chance we introduce checkAndPut on SYSTEM.MUTEX outside this API maybe with some diff value or maybe by using column value in generating rowkey, this specific test that focus on rowkey (tableName+schemaName as non-null values) might not get impacted.
   
   Althought 2) looks highly unlikely, maybe for completeness of IT, we can keep this as is?
   
   However, overriding `writeMutexCell()` sounds really nice one and less complex. Let me explore tomorrow and get back, but somehow I feel completeness with select query with specific where clause (as per your review comment, updated select query with where clause to focus on specific row rather than generic select query which would not work if this test is run in parallel with other tests) might be better test.
   
   Thanks

##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -104,10 +111,30 @@ public void testUpdateCacheForNeverUpdatedTable() throws Exception {
         String tableName = generateUniqueName();
         String fullTableName = INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + tableName;
         Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
+        AtomicBoolean isSysMutexEmpty = new AtomicBoolean(true);
+        ExecutorService executorService = Executors.newFixedThreadPool(5,
+            new ThreadFactoryBuilder().setDaemon(true)
+                .setNameFormat("check-sys-mutex-count-%d").build());
+        Connection connForMutex = DriverManager.getConnection(getUrl(), props);
+        for (int i = 0; i < 5; i++) {
+            executorService.submit(new SystemMutexCaller(isSysMutexEmpty,
+                connForMutex));
+        }
+        Thread.sleep(500);

Review comment:
       Sort of warm up for threads to start executing select query :)
   But yes, since we are not achieving anything major here, let me remove it if you are strong about it?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


stoty commented on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-733999359


   :broken_heart: **-1 overall**
   
   
   
   
   
   
   | Vote | Subsystem | Runtime | Comment |
   |:----:|----------:|--------:|:--------|
   | +0 :ok: |  reexec  |   1m  6s |  Docker mode activated.  |
   ||| _ Prechecks _ |
   | +1 :green_heart: |  dupname  |   0m  0s |  No case conflicting files found.  |
   | +1 :green_heart: |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
   | +1 :green_heart: |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
   | -1 :x: |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
   ||| _ master Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |  12m 33s |  master passed  |
   | +1 :green_heart: |  compile  |   0m 59s |  master passed  |
   | +1 :green_heart: |  checkstyle  |   1m 37s |  master passed  |
   | +1 :green_heart: |  javadoc  |   0m 44s |  master passed  |
   | +0 :ok: |  spotbugs  |   2m 55s |  phoenix-core in master has 966 extant spotbugs warnings.  |
   ||| _ Patch Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |   7m 37s |  the patch passed  |
   | +1 :green_heart: |  compile  |   0m 50s |  the patch passed  |
   | +1 :green_heart: |  javac  |   0m 50s |  the patch passed  |
   | -1 :x: |  checkstyle  |   1m 41s |  phoenix-core: The patch generated 1 new + 2796 unchanged - 4 fixed = 2797 total (was 2800)  |
   | +1 :green_heart: |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
   | +1 :green_heart: |  javadoc  |   0m 42s |  the patch passed  |
   | +1 :green_heart: |  spotbugs  |   3m  3s |  the patch passed  |
   ||| _ Other Tests _ |
   | -1 :x: |  unit  | 188m 29s |  phoenix-core in the patch failed.  |
   | +1 :green_heart: |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  |
   |  |   | 225m 25s |   |
   
   
   | Subsystem | Report/Notes |
   |----------:|:-------------|
   | Docker | ClientAPI=1.40 ServerAPI=1.40 base: https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/3/artifact/yetus-general-check/output/Dockerfile |
   | GITHUB PR | https://github.com/apache/phoenix/pull/982 |
   | Optional Tests | dupname asflicense javac javadoc unit spotbugs hbaseanti checkstyle compile |
   | uname | Linux a59c248be7c6 4.15.0-65-generic #74-Ubuntu SMP Tue Sep 17 17:06:04 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
   | Build tool | maven |
   | Personality | dev/phoenix-personality.sh |
   | git revision | master / 457a67c |
   | Default Java | Private Build-1.8.0_242-8u242-b08-0ubuntu3~16.04-b08 |
   | checkstyle | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/3/artifact/yetus-general-check/output/diff-checkstyle-phoenix-core.txt |
   | unit | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/3/artifact/yetus-general-check/output/patch-unit-phoenix-core.txt |
   |  Test Results | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/3/testReport/ |
   | Max. process+thread count | 6649 (vs. ulimit of 30000) |
   | modules | C: phoenix-core U: phoenix-core |
   | Console output | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-982/3/console |
   | versions | git=2.7.4 maven=3.3.9 spotbugs=4.1.3 |
   | Powered by | Apache Yetus 0.12.0 https://yetus.apache.org |
   
   
   This message was automatically generated.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani commented on a change in pull request #982:
URL: https://github.com/apache/phoenix/pull/982#discussion_r530918621



##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -269,4 +317,49 @@ public void testInvalidConnUpdateCacheFrequencyShouldThrow() throws Exception {
             }
         }
     }
+
+    /**
+     * Helper Runnable impl class that continuously keeps checking
+     * if SYSTEM.MUTEX contains any record until either interrupted or
+     * provided connection is closed
+     */
+    private static class SystemMutexCaller implements Runnable {

Review comment:
       @ChinmaySKulkarni We can use `DelegateConnectionQueryServices` and override `writeMutexCell()`, sounds good, but I still feel from completeness of IT test viewpoint, current one (threads scanning SYSTEM.MUTEX with specific rowkey) could be better test. Thought?
   
   Moreover, it is also confirmed that this same test fails 100% of times without source changes in this PR. Tested in multiple runs.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani commented on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-734405590


   > Can you please confirm this patch locally by scanning SYSTEM.MUTEX via HBase shell?
   
   Sure, confirmed by scanning SYSTEM.MUTEX on local cluster with and without this patch.
   
   Initially, updated SYSTEM.MUTEX with KEEP_DELETED_CELLS => 'TRUE' because while executing ALTER TABLE query, Mutex cell is going to be deleted soon (finally block), hence it appears only momentarily.
   
   <img width="1784" alt="Screenshot 2020-11-26 at 10 26 59 PM" src="https://user-images.githubusercontent.com/34790606/100377021-86a10980-3036-11eb-8929-4c0ef2cd3453.png">
   
   
   With patch, no records were found while scanning SYSTEM.MUTEX:
   
   <img width="616" alt="Screenshot 2020-11-26 at 10 10 42 PM" src="https://user-images.githubusercontent.com/34790606/100376799-24480900-3036-11eb-99fe-6c9d5a39b05e.png">
   
   
   Without patch, executed ALTER TABLE query twice and found two deleted rows:
   
   <img width="986" alt="Screenshot 2020-11-26 at 10 09 44 PM" src="https://user-images.githubusercontent.com/34790606/100376930-5f4a3c80-3036-11eb-93f9-2017aa679579.png">
   
   
   ALTER TABLE query used for testing:
   
   <img width="594" alt="Screenshot 2020-11-26 at 10 27 51 PM" src="https://user-images.githubusercontent.com/34790606/100377137-b6501180-3036-11eb-913f-189edf7ce599.png">
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani edited a comment on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-734405590


   > Can you please confirm this patch locally by scanning SYSTEM.MUTEX via HBase shell?
   
   Sure, confirmed by scanning SYSTEM.MUTEX on local cluster with and without this patch.
   
   Initially, updated SYSTEM.MUTEX with KEEP_DELETED_CELLS => 'TRUE' because while executing ALTER TABLE query, Mutex cell is going to be deleted soon (finally block), hence it appears only momentarily.
   
   <img width="1784" alt="Screenshot 2020-11-26 at 10 26 59 PM" src="https://user-images.githubusercontent.com/34790606/100377021-86a10980-3036-11eb-8929-4c0ef2cd3453.png">
   
   
   With patch, no records were found while scanning SYSTEM.MUTEX:
   
   <img width="616" alt="Screenshot 2020-11-26 at 10 10 42 PM" src="https://user-images.githubusercontent.com/34790606/100376799-24480900-3036-11eb-99fe-6c9d5a39b05e.png">
   
   
   Without patch, executed ALTER TABLE query twice and found two deleted rows (first scan result after first execution of ALTER query, and second scan result after second execution of ALTER query) :
   
   <img width="1019" alt="Screenshot 2020-11-26 at 10 35 41 PM" src="https://user-images.githubusercontent.com/34790606/100377718-c3b9cb80-3037-11eb-88e9-ddc9d1ad6c04.png">
   
   
   ALTER TABLE query used for testing:
   
   <img width="594" alt="Screenshot 2020-11-26 at 10 27 51 PM" src="https://user-images.githubusercontent.com/34790606/100377137-b6501180-3036-11eb-913f-189edf7ce599.png">
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani edited a comment on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-734405590


   > Can you please confirm this patch locally by scanning SYSTEM.MUTEX via HBase shell?
   
   Sure, confirmed by scanning SYSTEM.MUTEX on local cluster with and without this patch.
   
   Initially, updated SYSTEM.MUTEX with KEEP_DELETED_CELLS => 'TRUE' because while executing ALTER TABLE query, Mutex cell is going to be deleted soon (finally block), hence it appears only momentarily.
   
   <img width="1784" alt="Screenshot 2020-11-26 at 10 26 59 PM" src="https://user-images.githubusercontent.com/34790606/100377021-86a10980-3036-11eb-8929-4c0ef2cd3453.png">
   
   
   With patch, no records were found while scanning SYSTEM.MUTEX:
   
   <img width="616" alt="Screenshot 2020-11-26 at 10 10 42 PM" src="https://user-images.githubusercontent.com/34790606/100376799-24480900-3036-11eb-99fe-6c9d5a39b05e.png">
   
   
   Without patch, executed ALTER TABLE query twice and found two deleted rows (first scan result after first execution of ALTER query, and second scan result after second execution of ALTER query) :
   
   <img width="1019" alt="Screenshot 2020-11-26 at 10 35 41 PM" src="https://user-images.githubusercontent.com/34790606/100377718-c3b9cb80-3037-11eb-88e9-ddc9d1ad6c04.png">
   
   
   ALTER TABLE query used for testing:
   
   <img width="501" alt="Screenshot 2020-11-26 at 10 38 18 PM" src="https://user-images.githubusercontent.com/34790606/100377864-20b58180-3038-11eb-9b1b-fde03da0a379.png">
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani edited a comment on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-734405590


   > Can you please confirm this patch locally by scanning SYSTEM.MUTEX via HBase shell?
   
   Sure, confirmed by scanning SYSTEM.MUTEX on local cluster with and without this patch.
   
   Initially, updated SYSTEM.MUTEX with KEEP_DELETED_CELLS => 'TRUE' because while executing ALTER TABLE query, Mutex cell is going to be deleted soon (finally block), hence it appears only momentarily.
   
   <img width="1784" alt="Screenshot 2020-11-26 at 10 26 59 PM" src="https://user-images.githubusercontent.com/34790606/100377021-86a10980-3036-11eb-8929-4c0ef2cd3453.png">
   
   
   -----------------------------------------------------------------------------------------------------------------------
   With patch, no records were found while scanning SYSTEM.MUTEX:
   
   <img width="616" alt="Screenshot 2020-11-26 at 10 10 42 PM" src="https://user-images.githubusercontent.com/34790606/100376799-24480900-3036-11eb-99fe-6c9d5a39b05e.png">
   
   
   -----------------------------------------------------------------------------------------------------------------------
   Without patch, executed ALTER TABLE query twice and found two deleted rows (first scan result after first execution of ALTER query, and second scan result after second execution of ALTER query) :
   
   <img width="1019" alt="Screenshot 2020-11-26 at 10 35 41 PM" src="https://user-images.githubusercontent.com/34790606/100377718-c3b9cb80-3037-11eb-88e9-ddc9d1ad6c04.png">
   
   
   -----------------------------------------------------------------------------------------------------------------------
   ALTER TABLE query used for testing:
   
   <img width="501" alt="Screenshot 2020-11-26 at 10 38 18 PM" src="https://user-images.githubusercontent.com/34790606/100377864-20b58180-3038-11eb-9b1b-fde03da0a379.png">
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


stoty commented on pull request #983:
URL: https://github.com/apache/phoenix/pull/983#issuecomment-734496039


   :broken_heart: **-1 overall**
   
   
   
   
   
   
   | Vote | Subsystem | Runtime | Comment |
   |:----:|----------:|--------:|:--------|
   | +0 :ok: |  reexec  |   0m 30s |  Docker mode activated.  |
   ||| _ Prechecks _ |
   | +1 :green_heart: |  dupname  |   0m  0s |  No case conflicting files found.  |
   | +1 :green_heart: |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
   | +1 :green_heart: |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
   | -1 :x: |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
   ||| _ 4.x Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |  11m  5s |  4.x passed  |
   | +1 :green_heart: |  compile  |   0m 53s |  4.x passed  |
   | +1 :green_heart: |  checkstyle  |   1m 40s |  4.x passed  |
   | +1 :green_heart: |  javadoc  |   0m 46s |  4.x passed  |
   | +0 :ok: |  spotbugs  |   2m 54s |  phoenix-core in 4.x has 950 extant spotbugs warnings.  |
   ||| _ Patch Compile Tests _ |
   | +1 :green_heart: |  mvninstall  |   5m 21s |  the patch passed  |
   | +1 :green_heart: |  compile  |   0m 55s |  the patch passed  |
   | +1 :green_heart: |  javac  |   0m 55s |  the patch passed  |
   | -1 :x: |  checkstyle  |   1m 41s |  phoenix-core: The patch generated 2 new + 2791 unchanged - 5 fixed = 2793 total (was 2796)  |
   | +1 :green_heart: |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
   | +1 :green_heart: |  javadoc  |   0m 46s |  the patch passed  |
   | +1 :green_heart: |  spotbugs  |   3m  2s |  the patch passed  |
   ||| _ Other Tests _ |
   | -1 :x: |  unit  | 137m 14s |  phoenix-core in the patch failed.  |
   | +1 :green_heart: |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  |
   |  |   | 170m 11s |   |
   
   
   | Reason | Tests |
   |-------:|:------|
   | Failed junit tests | phoenix.end2end.QueryIT |
   |   | phoenix.end2end.DropIndexedColsIT |
   |   | phoenix.end2end.index.GlobalMutableNonTxIndexIT |
   |   | phoenix.end2end.index.DropColumnIT |
   
   
   | Subsystem | Report/Notes |
   |----------:|:-------------|
   | Docker | ClientAPI=1.40 ServerAPI=1.40 base: https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/4/artifact/yetus-general-check/output/Dockerfile |
   | GITHUB PR | https://github.com/apache/phoenix/pull/983 |
   | Optional Tests | dupname asflicense javac javadoc unit spotbugs hbaseanti checkstyle compile |
   | uname | Linux b4ebd698d985 4.15.0-60-generic #67-Ubuntu SMP Thu Aug 22 16:55:30 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux |
   | Build tool | maven |
   | Personality | dev/phoenix-personality.sh |
   | git revision | 4.x / 7ac4dff |
   | Default Java | Private Build-1.8.0_242-8u242-b08-0ubuntu3~16.04-b08 |
   | checkstyle | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/4/artifact/yetus-general-check/output/diff-checkstyle-phoenix-core.txt |
   | unit | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/4/artifact/yetus-general-check/output/patch-unit-phoenix-core.txt |
   |  Test Results | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/4/testReport/ |
   | Max. process+thread count | 6455 (vs. ulimit of 30000) |
   | modules | C: phoenix-core U: phoenix-core |
   | Console output | https://ci-hadoop.apache.org/job/Phoenix/job/Phoenix-PreCommit-GitHub-PR/job/PR-983/4/console |
   | versions | git=2.7.4 maven=3.3.9 spotbugs=4.1.3 |
   | Powered by | Apache Yetus 0.12.0 https://yetus.apache.org |
   
   
   This message was automatically generated.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


ChinmaySKulkarni commented on a change in pull request #982:
URL: https://github.com/apache/phoenix/pull/982#discussion_r534422398



##########
File path: phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java
##########
@@ -269,4 +317,49 @@ public void testInvalidConnUpdateCacheFrequencyShouldThrow() throws Exception {
             }
         }
     }
+
+    /**
+     * Helper Runnable impl class that continuously keeps checking
+     * if SYSTEM.MUTEX contains any record until either interrupted or
+     * provided connection is closed
+     */
+    private static class SystemMutexCaller implements Runnable {

Review comment:
       I see you have modified the sys.mutex query to be more selective, so this should be fine.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani commented on pull request #983:
URL: https://github.com/apache/phoenix/pull/983#issuecomment-738118344


   Sure @ChinmaySKulkarni , sounds good. Let me try to collect some of these flaky tests results and create Jira accordingly.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


Thanks for the patch [~vjasani]!

virajjasani closed pull request #983:
URL: https://github.com/apache/phoenix/pull/983


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani closed pull request #982:
URL: https://github.com/apache/phoenix/pull/982


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


virajjasani commented on pull request #982:
URL: https://github.com/apache/phoenix/pull/982#issuecomment-739714324


   Thanks for the reviews @ChinmaySKulkarni @yanxinyi 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org


