[~bmahler] Can you look into this as its been pretty flaky? Looks like you wrote the test. The expectation on executor shutdown in the test seems wrong because we are not waiting for it to happen before exiting the test.

```
  // Now spoof an executor re-registration, it should be ignored
  // and the agent should not respond.
  EXPECT_NO_FUTURE_PROTOBUFS(ExecutorReregisteredMessage(), _, _);

  Future<Nothing> executorShutdown;
  EXPECT_CALL(exec, shutdown(_))
    .WillOnce(FutureSatisfy(&executorShutdown));

  UPID executorPid = registerExecutorMessage->from;
  UPID agentPid = registerExecutorMessage->to;

  ReregisterExecutorMessage reregisterExecutorMessage;
  reregisterExecutorMessage.mutable_executor_id()->CopyFrom(
      task.executor().executor_id());
  reregisterExecutorMessage.mutable_framework_id()->CopyFrom(
      frameworkId);

  process::post(executorPid, agentPid, reregisterExecutorMessage);

  Clock::settle();
  EXPECT_TRUE(executorShutdown.isPending());

  driver.stop();
  driver.join();
```

https://reviews.apache.org/r/64355/

{noformat}
commit cf27a2fcfcd7dc3c970904eff5b67aa13b5f94fb
Author: Benjamin Mahler <bmahler@apache.org>
Date:   Tue Dec 5 14:35:45 2017 -0800

    Fixed a flaky test.

    This fixes SlaveTest.IgnoreV0ExecutorIfItReregistersWithoutReconnect
    to expect the shutdown to occur at most once, since it's possible
    that when the test objects are being destructed, the executor's
    shutdown method is not called.

    Review: https://reviews.apache.org/r/64355
{noformat}

