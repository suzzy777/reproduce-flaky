There's the another effect after issued {{CREATE TABLE t1 (id DATE NOT NULL ..., PRIMARY KEY (id))}}
Try to create new table ({{CREATE TABLE t1 (id INT NOT NULL, name VARCHAR, PRIMARY KEY (id))}}) causes in sqlline hung and the node prints out exception:
{noformat}
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        at java.util.ArrayList.get(ArrayList.java:429)
        at org.apache.ignite.internal.processors.cache.CacheGroupContext.singleCacheContext(CacheGroupContext.java:385)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.<init>(GridDhtLocalPartitio
n.java:198)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.getOrCreatePartition
(GridDhtPartitionTopologyImpl.java:812)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.initPartitions(GridD
htPartitionTopologyImpl.java:368)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.beforeExchange(GridD
htPartitionTopologyImpl.java:543)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.distrib
utedExchange(GridDhtPartitionsExchangeFuture.java:1141)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(Gr
idDhtPartitionsExchangeFuture.java:712)
        at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body0(GridCacheP
artitionExchangeManager.java:2419)
        at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePa
rtitionExchangeManager.java:2299)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:745)
{noformat}

GitHub user SGrimstad opened a pull request:

    https://github.com/apache/ignite/pull/4692

    IGNITE-8552 implemented

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-8552

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4692.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4692
    
----
commit 15261b5f56a9e3a2ddd4dcf6c0573cdea2c66541
Author: SGrimstad <sgrimstad@...>
Date:   2018-09-06T09:41:56Z

    IGNITE-8552 implemented

----


tests: [https://ci.ignite.apache.org/viewLog.html?buildId=1805803&]

failed tests are flaky and non-reproducible locally

[~SGrimstad], my comments:
| Codestyle | # Please fix empty lines at {{CreateTableWithDateKeySelfTest}}
# {{CreateTableWithDateKeySelfTest.Tab}} is unused |
| Documentation | not required |
| Binary compatibility | OK |
| Tests | OK | 
| Comments | - Does make sense similar changes for TIME and TIMESTAMP types? Please fix there or create separate issues. |

fixed. Added tests for TIME and TIMESTAMP - not failing like Date before.

[~SGrimstad], the patch is OK with me.

[~SGrimstad], [~tledkov-gridgain], 

Please not the following:
 # Missing Apache header in new test class. This implies that there were no successfull run of "Run All SQL" suite
 # Tests are insufficient. We only test happy path with no updates. What about put/remove from cache API? What about DML INSERT/DELETE?

Extended tests added Apache header

[~SGrimstad], please review my minor changes and re-run TC tests

reviewed, re-run

https://ci.ignite.apache.org/viewLog.html?buildId=1859127&buildTypeId=IgniteTests24Java8_RunAllSql&tab=buildResultsDiv

Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4692


Folks,

This test began constantly fail – {{IgniteOptimizationDateFuncSpec.Supported optimized date functions - FORMATDATETIME}} at the master branch.
 [https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&testNameId=-5031414754271757301&branch=%3Cdefault%3E&tab=testDetails]

Can we check it?

{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1920141]]
* GridOrderedMessageCancelSelfTest.testTaskException (last started)

{color:#d04437}Cache 6{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1920205]]
* IgniteCache150ClientsTest.test150Clients (last started)

{color:#d04437}Cache 2{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1920218]]
* GridCacheDhtPreloadMultiThreadedSelfTest.testConcurrentNodesStartStop (last started)

{color:#d04437}Platform .NET{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1920186]]
* exe: DataStorageMetricsTest.TestDataStorageMetrics - 0,0% fails in last 100 master runs.

{color:#d04437}SPI{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=1920173]]
* IgniteSpiTestSuite: TcpDiscoveryClientSuspensionSelfTest.testOneServer - 0,0% fails in last 100 master runs.

{color:#d04437}PDS (Direct IO) 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1920193]]
* IgnitePdsNativeIoTestSuite2: IgnitePersistentStoreDataStructuresTest.testSet - 0,0% fails in last 100 master runs.

{color:#d04437}Binary Objects (Simple Mapper Basic){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1920137]]
* IgniteBinarySimpleNameMapperBasicTestSuite: BPlusTreeReuseSelfTest.testMassiveRemove2_true - 0,0% fails in last 100 master runs.

{color:#d04437}PDS 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1920197]]
* IgnitePdsTestSuite2: IgnitePersistentStoreDataStructuresTest.testSet - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1920237&amp;buildTypeId=IgniteTests24Java8_RunAll]

submitted tests prove that tables working correct with keys of DATE/TIME/TIMESTAMP

Now it works only for WRAP_VALUE=false parameter. In case key is wrapped then it doesn't work. 

Folks, 

any updates? Does this issue is still actual?

Moved fix to next versions.

Hi, [~Pavlukhin]  Just checked seems in 2.14 version still has this problem.
{code:java}
Error: class org.apache.ignite.IgniteCheckedException: Failed to complete exchange process. (state=50000,code=1) {code}
Any plan about fixing this?

