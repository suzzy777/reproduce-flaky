In most part of these tests, we have a conflict with transaction 0188b8a2-1fd4-0005-0000-00005e7b0eac. I think the transaction got stuck and affect the rest of the tests.

As I see, we do not rollback transaction in case when _ReadWriteScanRetrieveBatchReplicaRequest_Â failed:
{panel:title=grep by 0188b8a2-1fd4-0005-0000-00005e7b0eac from log}
2023-06-14 09:40:12:812 +0300 [WARNING][%itst_n_1%scan-query-executor--0][ReplicaManager] Failed to process replica request [request=ReadWriteScanRetrieveBatchReplicaRequestImpl [batchSize=1000, columnsToInclude=null, exactKey=null, flags=0, groupId=1_part_0, indexToUse=3, lowerBoundPrefix=null, scanId=81581, term=1, timestampLong=110541197332316160, transactionId=0188b8a2-1fd4-0005-0000-00005e7b0eac, upperBoundPrefix=null]]
java.util.concurrent.CompletionException: org.apache.ignite.internal.tx.LockException: IGN-TX-4 TraceId:7df614cc-180f-4b8d-b290-507453105729 Failed to acquire a lock due to a conflict [txId=0188b8a2-1fd4-0005-0000-00005e7b0eac, conflictingWaiter=WaiterImpl [txId=0188b8a2-1fd4-0004-0000-00005e7b0eac, intendedLockMode=null, lockMode=IX, ex=null, isDone=true]]
{panel}

[~v.pyatkov] LGTM, thanks!

Merged 2c2537540ef63ba835be3f8aaf756353a5085f6f

Really, the root cause of the issue was in only one test, but failed too many.
The reason by which several test may fail after a bug in one, is pending transactions. In most methods in KV API we rollback transaction automatically when a transaction exception happens (look at InternalTableImpl#postEnlist).
But specific scans methods which are used in SQL do nothing when some exception happened or closing cursor (look at parameter value onClose for PartitionScanPublisher). Due to this, behavior the transaction which is failed (by lock conflict reason, for example) can fail the transaction (hence, the corresponding test) in next tests.


