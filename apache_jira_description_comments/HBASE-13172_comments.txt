Seems the logic is right. We failed to assign a region(possible f3a9bc396ddd2bb1fcd1bdbc436eac36) to asf906.gq1.ygridcore.net,59366, so try to reassign it. The region is in PENDING_OPEN state so we enter isServerReachable. 

{noformat}
2015-03-06 04:06:19,414 INFO  [MASTER_SERVER_OPERATIONS-asf906:36657-0] master.GeneralBulkAssigner(194): Failed assigning 1 regions to server asf906.gq1.ygridcore.net,59366,1425614770146, reassigning them
2015-03-06 04:06:19,417 DEBUG [AM.-pool300-t1] master.AssignmentManager(1935): Force region state offline {f3a9bc396ddd2bb1fcd1bdbc436eac36 state=PENDING_OPEN, ts=1425614779402, server=asf906.gq1.ygridcore.net,59366,1425614770146}
2015-03-06 04:06:19,421 DEBUG [AM.-pool300-t1] master.AssignmentManager(1858): Offline table,l\x9B\xC4/\xEA,1425614773116.f3a9bc396ddd2bb1fcd1bdbc436eac36., it's not any more on asf906.gq1.ygridcore.net,59366,1425614770146
org.apache.hadoop.hbase.regionserver.RegionServerStoppedException: org.apache.hadoop.hbase.regionserver.RegionServerStoppedException: Server asf906.gq1.ygridcore.net,59366,1425614770146 not running, aborting
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.checkOpen(RSRpcServices.java:902)
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.closeRegion(RSRpcServices.java:988)
	at org.apache.hadoop.hbase.protobuf.generated.AdminProtos$AdminService$2.callBlockingMethod(AdminProtos.java:21082)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2032)
	at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:107)
	at org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
	at java.lang.Thread.run(Thread.java:744)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106)
	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:95)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRemoteException(ProtobufUtil.java:314)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.closeRegion(ProtobufUtil.java:1729)
	at org.apache.hadoop.hbase.master.ServerManager.sendRegionClose(ServerManager.java:771)
	at org.apache.hadoop.hbase.master.AssignmentManager.unassign(AssignmentManager.java:1834)
	at org.apache.hadoop.hbase.master.AssignmentManager.forceRegionStateToOffline(AssignmentManager.java:1951)
	at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:1576)
	at org.apache.hadoop.hbase.master.AssignCallable.call(AssignCallable.java:48)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.hadoop.hbase.ipc.RemoteWithExtrasException(org.apache.hadoop.hbase.regionserver.RegionServerStoppedException): org.apache.hadoop.hbase.regionserver.RegionServerStoppedException: Server asf906.gq1.ygridcore.net,59366,1425614770146 not running, aborting
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.checkOpen(RSRpcServices.java:902)
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.closeRegion(RSRpcServices.java:988)
	at org.apache.hadoop.hbase.protobuf.generated.AdminProtos$AdminService$2.callBlockingMethod(AdminProtos.java:21082)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2032)
	at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:107)
	at org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
	at java.lang.Thread.run(Thread.java:744)

	at org.apache.hadoop.hbase.ipc.RpcClientImpl.call(RpcClientImpl.java:1190)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod(AbstractRpcClient.java:213)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(AbstractRpcClient.java:287)
	at org.apache.hadoop.hbase.protobuf.generated.AdminProtos$AdminService$BlockingStub.closeRegion(AdminProtos.java:21935)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.closeRegion(ProtobufUtil.java:1726)
	... 9 more
2015-03-06 04:06:19,425 INFO  [AM.-pool300-t1] master.RegionStates(1112): Transition {f3a9bc396ddd2bb1fcd1bdbc436eac36 state=PENDING_OPEN, ts=1425614779402, server=asf906.gq1.ygridcore.net,59366,1425614770146} to {f3a9bc396ddd2bb1fcd1bdbc436eac36 state=OFFLINE, ts=1425614779425, server=asf906.gq1.ygridcore.net,59366,1425614770146}
2015-03-06 04:06:19,430 DEBUG [AM.-pool300-t1] master.ServerManager(855): Couldn't reach asf906.gq1.ygridcore.net,59366,1425614770146, try=0 of 10
org.apache.hadoop.hbase.regionserver.RegionServerStoppedException: org.apache.hadoop.hbase.regionserver.RegionServerStoppedException: Server asf906.gq1.ygridcore.net,59366,1425614770146 not running, aborting
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.checkOpen(RSRpcServices.java:902)
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.getServerInfo(RSRpcServices.java:1181)
	at org.apache.hadoop.hbase.protobuf.generated.AdminProtos$AdminService$2.callBlockingMethod(AdminProtos.java:21098)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2032)
	at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:107)
	at org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
	at java.lang.Thread.run(Thread.java:744)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106)
	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:95)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRemoteException(ProtobufUtil.java:314)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getServerInfo(ProtobufUtil.java:1800)
	at org.apache.hadoop.hbase.master.ServerManager.isServerReachable(ServerManager.java:850)
	at org.apache.hadoop.hbase.master.RegionStates.isServerDeadAndNotProcessed(RegionStates.java:843)
	at org.apache.hadoop.hbase.master.AssignmentManager.forceRegionStateToOffline(AssignmentManager.java:1969)
	at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:1576)
	at org.apache.hadoop.hbase.master.AssignCallable.call(AssignCallable.java:48)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.hadoop.hbase.ipc.RemoteWithExtrasException(org.apache.hadoop.hbase.regionserver.RegionServerStoppedException): org.apache.hadoop.hbase.regionserver.RegionServerStoppedException: Server asf906.gq1.ygridcore.net,59366,1425614770146 not running, aborting
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.checkOpen(RSRpcServices.java:902)
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.getServerInfo(RSRpcServices.java:1181)
	at org.apache.hadoop.hbase.protobuf.generated.AdminProtos$AdminService$2.callBlockingMethod(AdminProtos.java:21098)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2032)
	at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:107)
	at org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
	at java.lang.Thread.run(Thread.java:744)

	at org.apache.hadoop.hbase.ipc.RpcClientImpl.call(RpcClientImpl.java:1190)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod(AbstractRpcClient.java:213)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(AbstractRpcClient.java:287)
	at org.apache.hadoop.hbase.protobuf.generated.AdminProtos$AdminService$BlockingStub.getServerInfo(AdminProtos.java:22031)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getServerInfo(ProtobufUtil.java:1797)
	... 9 more
{noformat}

Here is the code on branch-1.
{code:title=AssignmentManager.java}
  private RegionState forceRegionStateToOffline(
      final HRegionInfo region, final boolean forceNewPlan) {
    ...
    case OFFLINE:
      // This region could have been open on this server
      // for a while. If the server is dead and not processed
      // yet, we can move on only if the meta shows the
      // region is not on this server actually, or on a server
      // not dead, or dead and processed already.
      // In case not using ZK, we don't need this check because
      // we have the latest info in memory, and the caller
      // will do another round checking any way.
      if (useZKForAssignment
          && regionStates.isServerDeadAndNotProcessed(sn)
          && wasRegionOnDeadServerByMeta(region, sn)) {
        if (!regionStates.isRegionInTransition(region)) {
          LOG.info("Updating the state to " + State.OFFLINE + " to allow to be reassigned by SSH");
          regionStates.updateRegionState(region, State.OFFLINE);
        }
        LOG.info("Skip assigning " + region.getRegionNameAsString()
            + ", it is on a dead but not processed yet server: " + sn);
        return null;
      }
    ...
  }
{code}
And the logic is totally removed on master so master does not have the same problem.
So this is only a testcase issue I think? Just make isServerReachable return quickly is enough?  I assume we do not test region assignment here.

Thanks. [~jxiang] [~jeffreyz]

Some tests at branch-1 are more flaky than in master because we may kill RS holding meta which takes longer to recover.  In master, there is no such issue since meta is on master all the time. This also means it is usually a bug if some assignment related test is flaky in master. For branch-1, it is a little complicated.

You are right this test is not meant to test region assignment. If we can assure the 3 RS killed don't hold meta, the test may not be that flaky. We can have another test for meta handling if there is not such a testcase already.

I just skimmed through the thread. It seems the test was stucked in isServerReachable(). 

[~Apache9] In order to make the test case stable you can set config "hbase.master.maximum.ping.server.attempts" to 3(by default it's 10). For isServerReachable() call, inside IOException catch block, we should check following conditions and return false immediately when any of them is true.
1) if current server is put in deadServer already
2) If current IOException is one of RegionServerStoppedException or ServerNotRunningYetException

[~jxiang] The following code inside RegionStates seems unnecessary and should just return false(because the result of isServerReachable call may still return false positive info after retries) . In addition, should we expire the server instead directly put it in deadServers? Thanks.

{code}
        if (serverManager.isServerReachable(server)) {
          return false;
        }
        // The size of deadServers won't grow unbounded.
        deadServers.put(hostAndPort, Long.valueOf(startCode));
{code}

OK, let me prepare a patch to make the test stable.

Patch for branch-1 according to [~jeffreyz]'s suggestion.

And I think the optimization for isServerReachable should be applied to all branches?

Thanks.

{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12703399/HBASE-13172-branch-1.patch
  against branch-1 branch at commit 0fba20471e66b8cc1b1152a6ae5965e09ebbe6ce.
  ATTACHMENT ID: 12703399

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified tests.

    {color:green}+1 hadoop versions{color}. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 checkstyle{color}.  The applied patch does not increase the total number of checkstyle errors

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 lineLengths{color}.  The patch does not introduce lines longer than 100

  {color:green}+1 site{color}.  The mvn site goal succeeds with this patch.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html
Checkstyle Errors: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//artifact/patchprocess/checkstyle-aggregate.html

  Console output: https://builds.apache.org/job/PreCommit-HBASE-Build/13142//console

This message is automatically generated.

lgtm

Patch makes sense to me. Asking [~jxiang] for input.


+1. Looks good to me. As to the issue [~jeffreyz] pointed out, that part is needed.  It is preferred that a RS dies naturally (means per ZK) instead of marked dead by AM. Call isServerReachable should not return false info after retries since we check the start code, if the retries take longer the ZK session time-out time.

Thanks for all the expert input lads ([~jeffreyz] and [~jxiang]). Thanks for patch [~Apache9]  Pushed to 0.98-branch-1.

FAILURE: Integrated in HBase-1.0 #793 (See [https://builds.apache.org/job/HBase-1.0/793/])
HBASE-13172 TestDistributedLogSplitting.testThreeRSAbort fails several times on branch-1 (stack: rev 5af7bf149f297af3c132993eab6de5e1f78de41a)
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


SUCCESS: Integrated in HBase-1.1 #263 (See [https://builds.apache.org/job/HBase-1.1/263/])
HBASE-13172 TestDistributedLogSplitting.testThreeRSAbort fails several times on branch-1 (stack: rev c40d880a3e199d04c632212a1e51abca9973a4be)
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


FAILURE: Integrated in HBase-0.98 #887 (See [https://builds.apache.org/job/HBase-0.98/887/])
HBASE-13172 TestDistributedLogSplitting.testThreeRSAbort fails several times on branch-1 (stack: rev ed44ae29e33b297f61cf110eda80a6bf32f23554)
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #844 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/844/])
HBASE-13172 TestDistributedLogSplitting.testThreeRSAbort fails several times on branch-1 (stack: rev ed44ae29e33b297f61cf110eda80a6bf32f23554)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java
* hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java


Seems there are other bugs in code. Just log here. Will create new issue if I found something.

https://builds.apache.org/job/HBase-1.1/292/testReport/junit/org.apache.hadoop.hbase.master/TestDistributedLogSplitting/testThreeRSAbort/

This time we kill the regionserver which hosts the hbase:meta region. See lots of logs like this
{noformat}
2015-03-16 07:59:03,944 DEBUG [RS_LOG_REPLAY_OPS-asf910:36209-0-Writer-0] client.ClientSmallReversedScanner(92): Finished with small scan at {ENCODED => 1588230740, NAME => 'hbase:meta,,1', STARTKEY => '', ENDKEY => ''}
2015-03-16 07:59:03,944 INFO  [RS_LOG_REPLAY_OPS-asf910:36209-0-Writer-0] wal.WALSplitter$LogReplayOutputSink(1773): Table table doesn't exist. Skip log replay for region e6a96723177987ca26766b069da9e08e
2015-03-16 07:59:03,945 DEBUG [RS_LOG_REPLAY_OPS-asf910:36209-0-Writer-1] client.ClientSmallReversedScanner(92): Finished with small scan at {ENCODED => 1588230740, NAME => 'hbase:meta,,1', STARTKEY => '', ENDKEY => ''}
2015-03-16 07:59:03,945 INFO  [RS_LOG_REPLAY_OPS-asf910:36209-0-Writer-1] wal.WALSplitter$LogReplayOutputSink(1773): Table table doesn't exist. Skip log replay for region beb028a9935e4e21a2b5b1d11bdd6703
{noformat}

But 'table' is the test table name in this unit test, so I think there must be something wrong?

Thanks. [~jxiang] [~jeffreyz]

Closing this issue after 1.0.1 release.

FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #988 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/988/])
HBASE-13937 Partially revert HBASE-13172 (enis: rev 13773d8e27104df45dbaf536f8ddf9399337ad21)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


FAILURE: Integrated in HBase-1.3 #12 (See [https://builds.apache.org/job/HBase-1.3/12/])
HBASE-13937 Partially revert HBASE-13172 (enis: rev 0271afc1b7558c85c293675b25ff77d405f39a37)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


SUCCESS: Integrated in HBase-1.1 #553 (See [https://builds.apache.org/job/HBase-1.1/553/])
HBASE-13937 Partially revert HBASE-13172 (enis: rev c88804cc7cc503a8cafc1d7b1f0b51f2349c3c3f)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


SUCCESS: Integrated in HBase-1.2-IT #18 (See [https://builds.apache.org/job/HBase-1.2-IT/18/])
HBASE-13937 Partially revert HBASE-13172 (enis: rev 582099424dad2644e99a8c7588616e3f50e9b00c)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


FAILURE: Integrated in HBase-1.2 #26 (See [https://builds.apache.org/job/HBase-1.2/26/])
HBASE-13937 Partially revert HBASE-13172 (enis: rev 582099424dad2644e99a8c7588616e3f50e9b00c)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


SUCCESS: Integrated in HBase-1.3-IT #3 (See [https://builds.apache.org/job/HBase-1.3-IT/3/])
HBASE-13937 Partially revert HBASE-13172 (enis: rev 0271afc1b7558c85c293675b25ff77d405f39a37)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


SUCCESS: Integrated in HBase-0.98 #1035 (See [https://builds.apache.org/job/HBase-0.98/1035/])
HBASE-13937 Partially revert HBASE-13172 (enis: rev 13773d8e27104df45dbaf536f8ddf9399337ad21)
* hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java


