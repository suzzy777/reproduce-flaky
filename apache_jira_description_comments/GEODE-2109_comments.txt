GitHub user deepakddixit opened a pull request:

    https://github.com/apache/incubator-geode/pull/296

    GEODE-2109 : Calling submit on ExecutionService can cause exceptions to be lost

    Replaced submit call with execute.
    Refactored GIITask calls from DiskStoreImpl. Async task like Creating KRF's through disk store are replaced with execute. The other call is kept with submit as we later check for whether delayed write is completed or not.
    Added RejectedExecutionException to IgnoredException list as from these tests it may get occasionally thrown and as we moved to execute method of ExecutorService they will be logged.
    
    All precheckin tests are passing except one org.apache.geode.management.internal.cli.commands.IndexCommandsDUnitTest.testCreateDestroyUpdatesSharedConfig which is marked as Flaky.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/deepakddixit/incubator-geode bugfix/GEODE-2109

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/incubator-geode/pull/296.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #296
    
----
commit 8c4aeaae23d242b9a4edfe328bd4046e5626914d
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-23T16:03:14Z

    GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call.
    This will help in logging exceptions those come in the thread.

commit db213bb1d0982db12ffc5e8d2649cec8f69147c6
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-24T06:27:58Z

     GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call for DiskStoreTask.
    
    Refactored DiskStore task for delayed writes, we cannot replace expensive writes tasks submit call with execute as later we check if write call is completed or not.
     Replaced submit call by execute in case of DiskStore tasks like compactions, creating KRF's.

commit 478a714979ace2f187ebf336c0d5121a0a5c8940
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-24T12:21:54Z

     GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call for DiskStoreTask.
    
    Replaced submit call for GIITask and RemoveMember tasks. GIITask is used when adding member or starting managing activity when node becomes managing node. While adding member we can make the ExecutorService.execute call. Not changed call for GIITask when invoked from managing activity as possible exception is handled.

commit b501654a3718f3e15cc45b9bd757bfb558f664a1
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-24T16:27:38Z

     GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call for DiskStoreTask.
    Ignoring rejectedException as this can be thrown in case pool is shutting down.

commit 9e56037ac21768adde9c35c97bc8e0cb463042b7
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-24T17:17:53Z

     GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call for DiskStoreTask.
    Changing way creating GIITask when node becomes managing node.

commit 3b8273b7746f5b4af329c92c92fac07e6571cf05
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-25T05:15:26Z

     GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call for DiskStoreTask.
    Adding ignoredException for MemoryThresholdsDUnitTest.

commit 5cf0aac229c595b91436c4d327d43444120698b5
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-25T08:05:39Z

     GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call for DiskStoreTask.
    Adding ignoredException for EvictionStatsDUnitTest.

commit ed24011d0b1456b0247bd0254af252cae351eb07
Author: Deepak Dixit <deepak@ampool.io>
Date:   2016-11-26T04:02:26Z

     GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call for DiskStoreTask.
    Applying spotless checks.

----


Github user upthewaterspout commented on a diff in the pull request:

    https://github.com/apache/incubator-geode/pull/296#discussion_r90118721
  
    --- Diff: geode-core/src/main/java/org/apache/geode/management/internal/FederatingManager.java ---
    @@ -386,7 +398,7 @@ public void startManagingActivity() throws Exception {
        * 
        */
     
    -  private class GIITask implements Callable<DistributedMember> {
    +  private class GIITask implements Callable {
    --- End diff --
    
    Why did you remove <DistributedMember> from this class declaration?


Github user deepakddixit commented on the issue:

    https://github.com/apache/incubator-geode/pull/296
  
    @upthewaterspout Thanks for the review. The class declaration is mistakenly changed. I have corrected it. All tests are passing from precheckin after this.


Github user kirklund commented on the issue:

    https://github.com/apache/incubator-geode/pull/296
  
    We've been requiring unit tests or integration tests for all bug fixes. 
    
    At a minimum, I would recommend adding a new test that fails due to at least of the conditions reported by GEODE-2109 and then passes with your changes. Example:
    `
    import static org.assertj.core.api.Assertions.assertThat; 
    
    import org.apache.geode.test.junit.categories.UnitTest;
    import org.junit.Rule;
    import org.junit.Test;
    import org.junit.contrib.java.lang.system.SystemErrRule;
    import org.junit.experimental.categories.Category;
    
    @Category(UnitTest.class)
    public class FederatingManagerSubmitTaskWithFailureTest {
    
      private FederatingManager manager;
    
      @Rule
      public SystemErrRule systemErrRule = new SystemErrRule().enableLog();
    
      @Test
      public void submittedTaskShouldLogFailure() throws Exception {
        manager.submitTask(() -> {throw new Exception("error message");});
        assertThat(systemErrRule.getLog()).contains(Exception.class.getName()).contains("error message");
      }
    }
    `
    The above test would require a couple things:
    1) some sort of @Before method which instantiates manager
    2) change FederatingManager.submitTask(...) to package scope so the unit test can call it (right now FederatingManager is not a test-friendly class)



Github user deepakddixit commented on the issue:

    https://github.com/apache/incubator-geode/pull/296
  
    @kirklund I have added a test as suggested with SingleHopTestExecutor. Kindly review.


Github user kirklund commented on the issue:

    https://github.com/apache/geode/pull/296
  
    I think this is ready to commit. I'll check with @upthewaterspout. Thanks!


Github user upthewaterspout commented on the issue:

    https://github.com/apache/geode/pull/296
  
    +1 looks good to me.


Github user upthewaterspout commented on the issue:

    https://github.com/apache/geode/pull/296
  
    I looking at pulling this, and I see what one of the unit tests failed for me. It's failing intermittently in the IDE:
        SingleHopClientExecutorSubmitTaskWithExceptionTest.submittedTaskShouldLogFailure
    
        java.lang.RuntimeException: I am expecting this to be logged
    	at  org.apache.geode.cache.client.internal.SingleHopClientExecutorSubmitTaskWithExceptionTest$1.run(SingleHopClientExecutorSubmitTaskWithExceptionTest.java:52)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    	at java.lang.Thread.run(Thread.java:745)


Github user deepakddixit commented on the issue:

    https://github.com/apache/geode/pull/296
  
    @upthewaterspout It looks like from IDE when we run all tests under UnitTest category above test fails. But when we run either :geode-core:test target or complete precheckin I never observed such failure. I have observed that in IDE, SystemErrRule.getLog is not populated from thrown exception. 


Github user upthewaterspout commented on the issue:

    https://github.com/apache/geode/pull/296
  
    @deepakddixit I was running ./gradlew test when it failed. What's weird to me is that we're not seeing the stack trace from the test for what actually failed the test, but I think there's definitely something doing wrong here. Maybe it is a bug in SystemErrRule.


Github user deepakddixit commented on the issue:

    https://github.com/apache/geode/pull/296
  
    Precheckin and ./gradlew test passed on my machine.  @upthewaterspout Kindly have a look over updated PR.


Github user deepakddixit commented on the issue:

    https://github.com/apache/geode/pull/296
  
    @upthewaterspout Do changes look good? 


Github user upthewaterspout commented on the issue:

    https://github.com/apache/geode/pull/296
  
    Hi @deepakddixit 
    
    Sorry for the slow response. I'm a little concerned that with your changes to the test in ef4d38d, the test is no longer actually testing what happens if the runnable passed to the executor throws an exception.
    
    I think those changes *do* show that the problem is not with SystemErrRule, since with your change the test passes consistently. What that means is that there might be a product issue.
    
    I did a little bit of investigation, and I found that if I set an uncaught exception handler in the product, your original test passes consistently. I'm not quite sure why the default uncaught exception handler was not consistently working, but I think it's better to send the error to the log anyway.
    
    I stuck my changes up as a pull request to your branch if want to look at them. Let me know what you think, if this looks good to you I can merge this stuff:
    
    https://github.com/deepakddixit/incubator-geode/pull/1


Github user deepakddixit commented on the issue:

    https://github.com/apache/geode/pull/296
  
    @upthewaterspout Thanks for the detailed review. I agree with you, SingleHopClientExecutor was not having uncaught exception handler which is causing exceptions not handled and ultimately not logged. Setting an uncaughtExceptionHandler would help in logging uncaught exceptions. 
    Only change I would like to suggest is instead of adding uncaughtExceptionHandler can we set LoggingThreadGroup? The other pooled executors are using LoggingThreadGroup which handles uncauhtExceptions. I have changed code a bit and added LoggingThreadGroup, unit tests are passing. Let me know your view on using LoggingThreadGroup. 


Github user upthewaterspout commented on the issue:

    https://github.com/apache/geode/pull/296
  
    @deepakddixit - I think using LoggingThreadGroup is definitely a better fix. The changes look good to me now, I'll merge them. Thanks!


Commit eba189bb134dc6f00629492b4a5c00b392b9aa45 in geode's branch refs/heads/develop from [~deepak]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=eba189b ]

GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call.

This will allow exceptions from those threads to be logged.

Refactored DiskStore task for delayed writes, we cannot replace
expensive writes tasks submit call with execute as later we check if
write call is completed or not.  Replaced submit call by execute in case
of DiskStore tasks like compactions, creating KRF's.

Replaced submit call for GIITask and RemoveMember tasks. GIITask is used
when adding member or starting managing activity when node becomes
managing node. While adding member we can make the
ExecutorService.execute call. Did not change the call for GIITask when
invoked from managing activity as possible exception is handled.

Added LoggingThreadGroup for SingleHopClientExecutor

This closes #296


Github user asfgit closed the pull request at:

    https://github.com/apache/geode/pull/296


I think this is for [~deepakddixit]  not for [~deepak] :)

Github user deepakddixit commented on the issue:

    https://github.com/apache/geode/pull/296
  
    Thanks @upthewaterspout for your assistance in resolving it.


Pull request has been merged, marking this as fixed.

Commit bb3d20f41d8b9f4e663d6ae7ddbd83ad8de01e77 in geode's branch refs/heads/feature/GEODE-2231 from [~deepak]
[ https://git-wip-us.apache.org/repos/asf?p=geode.git;h=bb3d20f ]

GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call.

This will allow exceptions from those threads to be logged.

Refactored DiskStore task for delayed writes, we cannot replace
expensive writes tasks submit call with execute as later we check if
write call is completed or not.  Replaced submit call by execute in case
of DiskStore tasks like compactions, creating KRF's.

Replaced submit call for GIITask and RemoveMember tasks. GIITask is used
when adding member or starting managing activity when node becomes
managing node. While adding member we can make the
ExecutorService.execute call. Did not change the call for GIITask when
invoked from managing activity as possible exception is handled.

Added LoggingThreadGroup for SingleHopClientExecutor

This closes #296


I found some additional calls to "submit" in HeapEvictor and will be changing them to "execute" as part of the fix for GEODE-2811

