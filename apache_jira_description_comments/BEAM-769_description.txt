https://builds.apache.org/job/beam_PostCommit_MavenVerify/1586/
https://builds.apache.org/job/beam_PostCommit_MavenVerify/1587/
https://builds.apache.org/job/beam_PostCommit_MavenVerify/1588/

{code}
org.apache.beam.runners.spark.translation.streaming.FlattenStreamingTest.testFlattenUnbounded
org.apache.beam.runners.spark.translation.streaming.KafkaStreamingTest.testRun
org.apache.beam.runners.spark.translation.streaming.SimpleStreamingWordCountTest.testFixedWindows
{code}

The above tests use a hard-timeout (ungraceful stop) so if the runtime env. is slow enough so that the batch is not done, it'll stop anyway and assert and rightfully fail.
It's difficult to create locally because I never had trouble on my laptop.

Since Jenkins will be slow from time to time, it is reasonable enough to have a more robust solution here :
# don't use checkpoint (Spark) if not necessary - only really necessary for one test in {{KafkaStreamingTest}} and {{ResumeFromCheckpointStreamingTest}} I think.
#  allow for graceful stop - will take longer for each test, but should allow the test to finish even if runtime env. is slow.