Before HIVE-12371, the Hive JDBC Driver uses DriverManager#loginTimeout as both connectTimeout and socketTimeout, which usually cause socket timeout exceptions for users who use Hive JDBC Driver in Spring Boot project, because Spring Boot will setLoginTimeout to 30s (default values).

HIVE-12371 introduced a new parameter socketTimeout, and does not care about DriverManager#loginTimeout anymore, I think it's not a correct solution.

I think theÂ for loginTimeout, prefer to use loginTimeout (in milliseconds) from jdbc connection url, and fallback to use DriverManger#getLoginTimeout (in seconds).
For socketTimeout, use socketTimeout (in milliseconds) from jdbc connection url if present.