https://reviews.apache.org/r/19162/

commit 653462ccdf771cac0ee41c5377fb64e005a9fc19
Author: Dominic Hamon <dhamon@twopensource.com>
Date:   Wed Apr 2 15:06:05 2014 -0700

    Added optional environment map to subprocess.
    
    Review: https://reviews.apache.org/r/19162


It seem to break unit tests, osTest and ProcTest. Let me know if I should upload verbose log output, if it isn't obvious.

{code}
$ make check -j3
.
.
[ RUN      ] ProcTest.MultipleThreads
../../../../3rdparty/libprocess/3rdparty/stout/tests/proc_tests.cpp:181: Failure
Value of: (procThreads).get()
  Actual: { 10050, 10053 }
Expected: childThreads
Which is: { 0 }
[  FAILED  ] ProcTest.MultipleThreads (2 ms)
.
.
[ RUN      ] OsTest.children
../../../../3rdparty/libprocess/3rdparty/stout/tests/os_tests.cpp:361: Failure
Value of: children.get().size()
  Actual: 1
Expected: 0u
Which is: 0
../../../../3rdparty/libprocess/3rdparty/stout/tests/os_tests.cpp:379: Failure
Value of: children.get().size()
  Actual: 2
Expected: 1u
Which is: 1
[  FAILED  ] OsTest.children (31 ms)
[ RUN      ] OsTest.process
[       OK ] OsTest.process (0 ms)
[ RUN      ] OsTest.processes
[       OK ] OsTest.processes (11 ms)
[ RUN      ] OsTest.killtree
[       OK ] OsTest.killtree (64 ms)
[ RUN      ] OsTest.pstree
../../../../3rdparty/libprocess/3rdparty/stout/tests/os_tests.cpp:604: Failure
Value of: tree.get().children.size()
  Actual: 1
Expected: 0u
Which is: 0
-+- 10048 ./stout-tests 
 \--- 10050 ()
[  FAILED  ] OsTest.pstree (21 ms)
.
.
[----------] Global test environment tear-down
[==========] 118 tests from 24 test cases ran. (480 ms total)
[  PASSED  ] 115 tests.
[  FAILED  ] 3 tests, listed below:
[  FAILED  ] ProcTest.MultipleThreads
[  FAILED  ] OsTest.children
[  FAILED  ] OsTest.pstree
{code}

Nevermind. I'm unable to reproduce this failure. I'll report back if it is reproducible.

The review-bot just saw this problem on one of my patches (https://reviews.apache.org/r/19259/). I feel confident that this is not connected to my patch as that one does not change any stout-related code.
So we might indeed have a flaky test here.


Ow and I also feel confident that this is entirely unrelated to the changes in subprocess as a whole. Hence we should open a new ticket.

Filed MESOS-1191 to track fix for flaky tests ...

