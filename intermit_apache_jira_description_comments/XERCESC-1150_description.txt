XMLStringPool is used in the interface of multiple abstract base classes in 
Xerces-C.  However, it is a concrete class, which is a very bad design.

Even more, it is not amenable to derivation, since none of its data members 
are protected (except, strangely, its fCurId member).  Anyone wishing to 
implement their own string pool must provide their own implementation, but 
still have the baggage of the base class implementation.

My suggestion would be to make XMLStringPool and abstract base class, call the 
current class XMLStringPoolImpl, and make all of its data members protected.  
That would give implementors the best of both possible worlds.